开始评估推理过程（版本2.0）...
日志文件: ./evaluation_log/evaluation_results.LoG_6.deepseek-reasoner.json
LLM调试模式: False
找到 100 条记录
检测到input_file: ./generated_data/LoG_6.jsonl
从 ./generated_data/LoG_6.jsonl 加载了 100 个例子的图数据

处理前 50 条记录（总共 100 条）...

================================================================================
处理记录 1/50
================================================================================
记录索引: 0
问题状态: correct
📁 从缓存加载提取结果: evaluation_results.LoG_6.deepseek-reasoner_record_0.json
✅ 使用缓存结果:
   - 句子数: 127
   - 提取的语句数: 154
   - 初始条件数: 20

=== Statement提取完成 ===
总句子数: 127
成功提取: 126
失败提取: 1
总statements数: 154

=== 开始清洗Statement格式 ===
原始statements数: 154
清洗后statements数: 133
过滤掉的statements数: 21
清洗后的statements:
  1. [planning] x is babgpus
  2. [planning] x is babrpus
  3. [planning] x is babspus
  4. [actual] tupnpus is babspus
  5. [planning] x is A and B
  6. [actual] x is nawnpus
  7. [actual] nawnpus is haztpus and sovwpus
  8. [actual] nawnpus is haztpus and sovwpus
  9. [actual] haztpus is cedzpus and riyqpus
  10. [actual] cedzpus is hasmpus
  11. [actual] hasmpus is fipdpus
  12. [actual] fipdpus is mowdpus and wadmpus
  13. [actual] wadmpus is hasspus
  14. [actual] hasspus is pinmpus
  15. [actual] pinmpus is wecnpus
  16. [actual] fipdpus is mowdpus
  17. [actual] mowdpus is tikhpus
  18. [actual] tikhpus is biqnpus and bejfpus
  19. [actual] biqnpus is cukfpus
  20. [actual] cukfpus is serlpus and kifhpus
  21. [actual] serlpus is tekypus and vumcpus
  22. [actual] tekypus is pofdpus and bosppus
  23. [actual] pofdpus is mepzpus
  24. [actual] mepzpus is qifjpus
  25. [actual] qifjpus is tupnpus
  26. [actual] tupnpus is babspus
  27. [planning] x is babspus
  28. [planning] x is the others
  29. [actual] x is nawnpus
  30. [actual] nawnpus is haztpus and sovwpus
  31. [actual] haztpus is cedzpus and riyqpus
  32. [actual] cedzpus is hasmpus
  33. [actual] hasmpus is fipdpus
  34. [actual] fipdpus is mowdpus
  35. [actual] fipdpus is wadmpus
  36. [planning] tupnpus is babspus
  37. [actual] mowdpus is tikhpus
  38. [actual] tikhpus is tupnpus
  39. [actual] haztpus is cedzpus
  40. [actual] cedzpus is hasmpus
  41. [actual] hasmpus is fipdpus
  42. [actual] fipdpus is mowdpus
  43. [actual] fipdpus is mowdpus
  44. [actual] mowdpus is tikhpus
  45. [actual] tikhpus is biqnpus and bejfpus
  46. [actual] biqnpus is cukfpus
  47. [actual] cukfpus is serlpus and kifhpus
  48. [actual] serlpus is tekypus and vumcpus
  49. [actual] tekypus is pofdpus and bosppus
  50. [actual] pofdpus is mepzpus
  51. [actual] mepzpus is qifjpus
  52. [actual] qifjpus is tupnpus
  53. [actual] tupnpus is babspus
  54. [actual] nawnpus is haztpus
  55. [actual] haztpus is cedzpus
  56. [actual] cedzpus is hasmpus
  57. [planning] nawnpus is babspus
  58. [actual] nawnpus is haztpus
  59. [actual] haztpus is cedzpus
  60. [actual] haztpus is a subset of cedzpus
  61. [planning] nawnpus is haztpus
  62. [planning] haztpus is cedzpus
  63. [planning] haztpus is a subset of cedzpus
  64. [actual] nawnpus is haztpus and sovwpus
  65. [actual] nawnpus is haztpus
  66. [actual] haztpus is cedzpus
  67. [planning] haztpus is cedzpus
  68. [planning] haztpus is cedzpus
  69. [actual] haztpus is cedzpus
  70. [actual] haztpus is contained within cedzpus
  71. [actual] nawnpus is haztpus
  72. [actual] haztpus is cedzpus
  73. [actual] nawnpus is cedzpus
  74. [actual] nawnpus is haztpus
  75. [actual] nawnpus is haztpus and sovwpus
  76. [actual] haztpus is cedzpus
  77. [actual] haztpus is cedzpus
  78. [actual] haztpus is riyqpus
  79. [planning] babspus is cedzpus
  80. [planning] nawnpus is babspus
  81. [actual] cedzpus is hasmpus
  82. [actual] cedzpus is hasmpus
  83. [actual] hasmpus is fipdpus
  84. [actual] hasmpus is fipdpus
  85. [actual] fipdpus is mowdpus
  86. [actual] fipdpus is mowdpus
  87. [actual] mowdpus is tikhpus
  88. [actual] mowdpus is tikhpus
  89. [actual] tikhpus is biqnpus
  90. [actual] tikhpus is biqnpus and bejfpus
  91. [actual] biqnpus is cukfpus
  92. [actual] biqnpus is cukfpus
  93. [actual] cukfpus is serlpus
  94. [actual] cukfpus is serlpus and kifhpus
  95. [actual] serlpus is tekypus
  96. [actual] serlpus is tekypus and vumcpus
  97. [actual] tekypus is pofdpus
  98. [actual] tekypus is pofdpus and bosppus
  99. [actual] pofdpus is mepzpus
  100. [actual] pofdpus is mepzpus
  101. [actual] mepzpus is qifjpus
  102. [actual] mepzpus is qifjpus
  103. [actual] qifjpus is tupnpus
  104. [actual] qifjpus is tupnpus
  105. [actual] tupnpus is babspus
  106. [actual] tupnpus is babspus
  107. [actual] nawnpus is haztpus
  108. [actual] haztpus is cedzpus
  109. [actual] haztpus is hasmpus
  110. [actual] haztpus is fipdpus
  111. [actual] haztpus is mowdpus
  112. [actual] haztpus is tikhpus
  113. [actual] haztpus is biqnpus
  114. [actual] haztpus is cukfpus
  115. [actual] haztpus is serlpus
  116. [actual] haztpus is tekypus
  117. [actual] haztpus is pofdpus
  118. [actual] haztpus is mepzpus
  119. [actual] haztpus is qifjpus
  120. [actual] haztpus is tupnpus
  121. [actual] nawnpus is babspus
  122. [actual] x is nawnpus
  123. [actual] x is babspus
  124. [planning] x is babgpus
  125. [planning] x is babrpus
  126. [planning] x is babspus
  127. [actual] x is babspus
  128. [actual] x is babspus
  129. [actual] x is one of them
  130. [planning] x is babgpus or babrpus or babspus
  131. [actual] nawnpus is sovwpus
  132. [actual] x is babspus
  133. [actual] x is babspus

=== 开始标准化和解析节点 ===
清洗后statements数: 133
标准化后节点数: 127
过滤掉的无效实体数: 6
标准化后的节点:
  1. [planning] x → babgpus (原始: x is babgpus)
  2. [planning] x → babrpus (原始: x is babrpus)
  3. [planning] x → babspus (原始: x is babspus)
  4. [actual] tupnpus → babspus (原始: tupnpus is babspus)
  5. [actual] x → nawnpus (原始: x is nawnpus)
  6. [actual] nawnpus → haztpus and sovwpus (原始: nawnpus is haztpus and sovwpus)
  7. [actual] nawnpus → haztpus and sovwpus (原始: nawnpus is haztpus and sovwpus)
  8. [actual] haztpus → cedzpus and riyqpus (原始: haztpus is cedzpus and riyqpus)
  9. [actual] cedzpus → hasmpus (原始: cedzpus is hasmpus)
  10. [actual] hasmpus → fipdpus (原始: hasmpus is fipdpus)
  11. [actual] fipdpus → mowdpus and wadmpus (原始: fipdpus is mowdpus and wadmpus)
  12. [actual] wadmpus → hasspus (原始: wadmpus is hasspus)
  13. [actual] hasspus → pinmpus (原始: hasspus is pinmpus)
  14. [actual] pinmpus → wecnpus (原始: pinmpus is wecnpus)
  15. [actual] fipdpus → mowdpus (原始: fipdpus is mowdpus)
  16. [actual] mowdpus → tikhpus (原始: mowdpus is tikhpus)
  17. [actual] tikhpus → biqnpus and bejfpus (原始: tikhpus is biqnpus and bejfpus)
  18. [actual] biqnpus → cukfpus (原始: biqnpus is cukfpus)
  19. [actual] cukfpus → serlpus and kifhpus (原始: cukfpus is serlpus and kifhpus)
  20. [actual] serlpus → tekypus and vumcpus (原始: serlpus is tekypus and vumcpus)
  21. [actual] tekypus → pofdpus and bosppus (原始: tekypus is pofdpus and bosppus)
  22. [actual] pofdpus → mepzpus (原始: pofdpus is mepzpus)
  23. [actual] mepzpus → qifjpus (原始: mepzpus is qifjpus)
  24. [actual] qifjpus → tupnpus (原始: qifjpus is tupnpus)
  25. [actual] tupnpus → babspus (原始: tupnpus is babspus)
  26. [planning] x → babspus (原始: x is babspus)
  27. [actual] x → nawnpus (原始: x is nawnpus)
  28. [actual] nawnpus → haztpus and sovwpus (原始: nawnpus is haztpus and sovwpus)
  29. [actual] haztpus → cedzpus and riyqpus (原始: haztpus is cedzpus and riyqpus)
  30. [actual] cedzpus → hasmpus (原始: cedzpus is hasmpus)
  31. [actual] hasmpus → fipdpus (原始: hasmpus is fipdpus)
  32. [actual] fipdpus → mowdpus (原始: fipdpus is mowdpus)
  33. [actual] fipdpus → wadmpus (原始: fipdpus is wadmpus)
  34. [planning] tupnpus → babspus (原始: tupnpus is babspus)
  35. [actual] mowdpus → tikhpus (原始: mowdpus is tikhpus)
  36. [actual] tikhpus → tupnpus (原始: tikhpus is tupnpus)
  37. [actual] haztpus → cedzpus (原始: haztpus is cedzpus)
  38. [actual] cedzpus → hasmpus (原始: cedzpus is hasmpus)
  39. [actual] hasmpus → fipdpus (原始: hasmpus is fipdpus)
  40. [actual] fipdpus → mowdpus (原始: fipdpus is mowdpus)
  41. [actual] fipdpus → mowdpus (原始: fipdpus is mowdpus)
  42. [actual] mowdpus → tikhpus (原始: mowdpus is tikhpus)
  43. [actual] tikhpus → biqnpus and bejfpus (原始: tikhpus is biqnpus and bejfpus)
  44. [actual] biqnpus → cukfpus (原始: biqnpus is cukfpus)
  45. [actual] cukfpus → serlpus and kifhpus (原始: cukfpus is serlpus and kifhpus)
  46. [actual] serlpus → tekypus and vumcpus (原始: serlpus is tekypus and vumcpus)
  47. [actual] tekypus → pofdpus and bosppus (原始: tekypus is pofdpus and bosppus)
  48. [actual] pofdpus → mepzpus (原始: pofdpus is mepzpus)
  49. [actual] mepzpus → qifjpus (原始: mepzpus is qifjpus)
  50. [actual] qifjpus → tupnpus (原始: qifjpus is tupnpus)
  51. [actual] tupnpus → babspus (原始: tupnpus is babspus)
  52. [actual] nawnpus → haztpus (原始: nawnpus is haztpus)
  53. [actual] haztpus → cedzpus (原始: haztpus is cedzpus)
  54. [actual] cedzpus → hasmpus (原始: cedzpus is hasmpus)
  55. [planning] nawnpus → babspus (原始: nawnpus is babspus)
  56. [actual] nawnpus → haztpus (原始: nawnpus is haztpus)
  57. [actual] haztpus → cedzpus (原始: haztpus is cedzpus)
  58. [planning] nawnpus → haztpus (原始: nawnpus is haztpus)
  59. [planning] haztpus → cedzpus (原始: haztpus is cedzpus)
  60. [actual] nawnpus → haztpus and sovwpus (原始: nawnpus is haztpus and sovwpus)
  61. [actual] nawnpus → haztpus (原始: nawnpus is haztpus)
  62. [actual] haztpus → cedzpus (原始: haztpus is cedzpus)
  63. [planning] haztpus → cedzpus (原始: haztpus is cedzpus)
  64. [planning] haztpus → cedzpus (原始: haztpus is cedzpus)
  65. [actual] haztpus → cedzpus (原始: haztpus is cedzpus)
  66. [actual] nawnpus → haztpus (原始: nawnpus is haztpus)
  67. [actual] haztpus → cedzpus (原始: haztpus is cedzpus)
  68. [actual] nawnpus → cedzpus (原始: nawnpus is cedzpus)
  69. [actual] nawnpus → haztpus (原始: nawnpus is haztpus)
  70. [actual] nawnpus → haztpus and sovwpus (原始: nawnpus is haztpus and sovwpus)
  71. [actual] haztpus → cedzpus (原始: haztpus is cedzpus)
  72. [actual] haztpus → cedzpus (原始: haztpus is cedzpus)
  73. [actual] haztpus → riyqpus (原始: haztpus is riyqpus)
  74. [planning] babspus → cedzpus (原始: babspus is cedzpus)
  75. [planning] nawnpus → babspus (原始: nawnpus is babspus)
  76. [actual] cedzpus → hasmpus (原始: cedzpus is hasmpus)
  77. [actual] cedzpus → hasmpus (原始: cedzpus is hasmpus)
  78. [actual] hasmpus → fipdpus (原始: hasmpus is fipdpus)
  79. [actual] hasmpus → fipdpus (原始: hasmpus is fipdpus)
  80. [actual] fipdpus → mowdpus (原始: fipdpus is mowdpus)
  81. [actual] fipdpus → mowdpus (原始: fipdpus is mowdpus)
  82. [actual] mowdpus → tikhpus (原始: mowdpus is tikhpus)
  83. [actual] mowdpus → tikhpus (原始: mowdpus is tikhpus)
  84. [actual] tikhpus → biqnpus (原始: tikhpus is biqnpus)
  85. [actual] tikhpus → biqnpus and bejfpus (原始: tikhpus is biqnpus and bejfpus)
  86. [actual] biqnpus → cukfpus (原始: biqnpus is cukfpus)
  87. [actual] biqnpus → cukfpus (原始: biqnpus is cukfpus)
  88. [actual] cukfpus → serlpus (原始: cukfpus is serlpus)
  89. [actual] cukfpus → serlpus and kifhpus (原始: cukfpus is serlpus and kifhpus)
  90. [actual] serlpus → tekypus (原始: serlpus is tekypus)
  91. [actual] serlpus → tekypus and vumcpus (原始: serlpus is tekypus and vumcpus)
  92. [actual] tekypus → pofdpus (原始: tekypus is pofdpus)
  93. [actual] tekypus → pofdpus and bosppus (原始: tekypus is pofdpus and bosppus)
  94. [actual] pofdpus → mepzpus (原始: pofdpus is mepzpus)
  95. [actual] pofdpus → mepzpus (原始: pofdpus is mepzpus)
  96. [actual] mepzpus → qifjpus (原始: mepzpus is qifjpus)
  97. [actual] mepzpus → qifjpus (原始: mepzpus is qifjpus)
  98. [actual] qifjpus → tupnpus (原始: qifjpus is tupnpus)
  99. [actual] qifjpus → tupnpus (原始: qifjpus is tupnpus)
  100. [actual] tupnpus → babspus (原始: tupnpus is babspus)
  101. [actual] tupnpus → babspus (原始: tupnpus is babspus)
  102. [actual] nawnpus → haztpus (原始: nawnpus is haztpus)
  103. [actual] haztpus → cedzpus (原始: haztpus is cedzpus)
  104. [actual] haztpus → hasmpus (原始: haztpus is hasmpus)
  105. [actual] haztpus → fipdpus (原始: haztpus is fipdpus)
  106. [actual] haztpus → mowdpus (原始: haztpus is mowdpus)
  107. [actual] haztpus → tikhpus (原始: haztpus is tikhpus)
  108. [actual] haztpus → biqnpus (原始: haztpus is biqnpus)
  109. [actual] haztpus → cukfpus (原始: haztpus is cukfpus)
  110. [actual] haztpus → serlpus (原始: haztpus is serlpus)
  111. [actual] haztpus → tekypus (原始: haztpus is tekypus)
  112. [actual] haztpus → pofdpus (原始: haztpus is pofdpus)
  113. [actual] haztpus → mepzpus (原始: haztpus is mepzpus)
  114. [actual] haztpus → qifjpus (原始: haztpus is qifjpus)
  115. [actual] haztpus → tupnpus (原始: haztpus is tupnpus)
  116. [actual] nawnpus → babspus (原始: nawnpus is babspus)
  117. [actual] x → nawnpus (原始: x is nawnpus)
  118. [actual] x → babspus (原始: x is babspus)
  119. [planning] x → babgpus (原始: x is babgpus)
  120. [planning] x → babrpus (原始: x is babrpus)
  121. [planning] x → babspus (原始: x is babspus)
  122. [actual] x → babspus (原始: x is babspus)
  123. [actual] x → babspus (原始: x is babspus)
  124. [planning] x → babgpus or babrpus or babspus (原始: x is babgpus or babrpus or babspus)
  125. [actual] nawnpus → sovwpus (原始: nawnpus is sovwpus)
  126. [actual] x → babspus (原始: x is babspus)
  127. [actual] x → babspus (原始: x is babspus)

开始新的后处理...
[后处理] 从LoG数据文件中获取到图数据，节点数: 28
[后处理] 加载LoG图，包含 28 个节点
  LoG节点 0: x is babgpus or babrpus or babspus (规则: MP, 深度: 1)
  LoG节点 1: x is biqnpus (规则: CE, 深度: 2)
  LoG节点 2: biqnpus is babgpus or babrpus or babspus (规则: DI, 深度: 2)
  LoG节点 3: x is biqnpus and wecnpus (规则: MP, 深度: 3)
  LoG节点 4: biqnpus is babrpus or babspus (规则: MP, 深度: 3)
  LoG节点 5: x is fipdpus (规则: MP, 深度: 4)
  LoG节点 6: fipdpus is biqnpus and wecnpus (规则: CI, 深度: 4)
  LoG节点 7: biqnpus is pofdpus (规则: MP, 深度: 4)
  LoG节点 8: pofdpus is babrpus or babspus (规则: DI, 深度: 4)
  LoG节点 9: x is haztpus (规则: CE, 深度: 5)
  LoG节点 10: haztpus is fipdpus (规则: MP, 深度: 5)
  LoG节点 11: fipdpus is biqnpus (规则: MP, 深度: 5)
  LoG节点 12: fipdpus is wecnpus (规则: MP, 深度: 5)
  LoG节点 13: biqnpus is serlpus (规则: CE, 深度: 5)
  LoG节点 14: serlpus is pofdpus (规则: MP, 深度: 5)
  LoG节点 15: pofdpus is babspus (规则: MP, 深度: 5)
  LoG节点 16: x is haztpus and sovwpus (规则: MP, 深度: 6)
  LoG节点 17: haztpus is cedzpus (规则: CE, 深度: 6)
  LoG节点 18: cedzpus is fipdpus (规则: MP, 深度: 6)
  LoG节点 19: fipdpus is tikhpus (规则: MP, 深度: 6)
  LoG节点 20: tikhpus is biqnpus (规则: CE, 深度: 6)
  LoG节点 21: fipdpus is hasspus (规则: MP, 深度: 6)
  LoG节点 22: hasspus is wecnpus (规则: MP, 深度: 6)
  LoG节点 23: biqnpus is serlpus and kifhpus (规则: MP, 深度: 6)
  LoG节点 24: serlpus is tekypus (规则: CE, 深度: 6)
  LoG节点 25: tekypus is pofdpus (规则: CE, 深度: 6)
  LoG节点 26: pofdpus is qifjpus (规则: MP, 深度: 6)
  LoG节点 27: qifjpus is babspus (规则: MP, 深度: 6)

============================================================
[后处理] 开始处理节点
============================================================
📊 初始状态:
   - 标准化节点数: 127
   - 初始条件数: 20
   - LoG图节点数: 28

📋 初始条件列表:
    1. fipdpus is mowdpus
    2. hasspus is pinmpus
    3. nawnpus is haztpus and sovwpus
    4. pofdpus is mepzpus
    5. hasmpus is fipdpus
    6. fipdpus is wadmpus
    7. biqnpus is cukfpus
    8. mepzpus is qifjpus
    9. cedzpus is hasmpus
   10. haztpus is cedzpus and riyqpus
   11. x is nawnpus
   12. tupnpus is babspus
   13. qifjpus is tupnpus
   14. wadmpus is hasspus
   15. serlpus is tekypus and vumcpus
   16. mowdpus is tikhpus
   17. cukfpus is serlpus and kifhpus
   18. pinmpus is wecnpus
   19. tikhpus is biqnpus and bejfpus
   20. tekypus is pofdpus and bosppus

🔧 构建初始Statement列表...
✅ 初始Statement列表构建完成，包含 20 个前提节点

🔍 开始处理actual节点...

   节点 1: tupnpus is babspus
      ↻ 重复节点，计数: 2

   节点 2: x is nawnpus
      ↻ 重复节点，计数: 2

   节点 3: nawnpus is haztpus and sovwpus
      ↻ 重复节点，计数: 2

   节点 4: nawnpus is haztpus and sovwpus
      ↻ 重复节点，计数: 3

   节点 5: haztpus is cedzpus and riyqpus
      ↻ 重复节点，计数: 2

   节点 6: cedzpus is hasmpus
      ↻ 重复节点，计数: 2

   节点 7: hasmpus is fipdpus
      ↻ 重复节点，计数: 2

   节点 8: fipdpus is mowdpus and wadmpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CI
      📋 推理路径: CI规则: fipdpus is mowdpus → fipdpus is wadmpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: fipdpus is mowdpus
  - 前提: fipdpus is wadmpus

   节点 9: wadmpus is hasspus
      ↻ 重复节点，计数: 2

   节点 10: hasspus is pinmpus
      ↻ 重复节点，计数: 2

   节点 11: pinmpus is wecnpus
      ↻ 重复节点，计数: 2

   节点 12: fipdpus is mowdpus
      ↻ 重复节点，计数: 2

   节点 13: mowdpus is tikhpus
      ↻ 重复节点，计数: 2

   节点 14: tikhpus is biqnpus and bejfpus
      ↻ 重复节点，计数: 2

   节点 15: biqnpus is cukfpus
      ↻ 重复节点，计数: 2

   节点 16: cukfpus is serlpus and kifhpus
      ↻ 重复节点，计数: 2

   节点 17: serlpus is tekypus and vumcpus
      ↻ 重复节点，计数: 2

   节点 18: tekypus is pofdpus and bosppus
      ↻ 重复节点，计数: 2

   节点 19: pofdpus is mepzpus
      ↻ 重复节点，计数: 2

   节点 20: mepzpus is qifjpus
      ↻ 重复节点，计数: 2

   节点 21: qifjpus is tupnpus
      ↻ 重复节点，计数: 2

   节点 22: tupnpus is babspus
      ↻ 重复节点，计数: 3

   节点 23: x is nawnpus
      ↻ 重复节点，计数: 3

   节点 24: nawnpus is haztpus and sovwpus
      ↻ 重复节点，计数: 4

   节点 25: haztpus is cedzpus and riyqpus
      ↻ 重复节点，计数: 3

   节点 26: cedzpus is hasmpus
      ↻ 重复节点，计数: 3

   节点 27: hasmpus is fipdpus
      ↻ 重复节点，计数: 3

   节点 28: fipdpus is mowdpus
      ↻ 重复节点，计数: 3

   节点 29: fipdpus is wadmpus
      ↻ 重复节点，计数: 2

   节点 30: mowdpus is tikhpus
      ↻ 重复节点，计数: 3

   节点 31: tikhpus is tupnpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP+CE
      📋 推理路径: MP+CE规则: tikhpus is biqnpus → biqnpus is tupnpus
[后处理] 基于推理轨迹点亮节点，使用了 8 个前提条件:
  - 前提: tikhpus is biqnpus and bejfpus
  - 前提: biqnpus is cukfpus
  - 前提: cukfpus is serlpus and kifhpus
  - 前提: serlpus is tekypus and vumcpus
  - 前提: tekypus is pofdpus and bosppus
  - 前提: pofdpus is mepzpus
  - 前提: mepzpus is qifjpus
  - 前提: qifjpus is tupnpus
  ✓ 点亮LoG节点: biqnpus is pofdpus
[子树点亮]     └─ 点亮依赖节点: biqnpus is serlpus (深度5)
[子树点亮]     └─ 点亮依赖节点: serlpus is pofdpus (深度5)
[子树点亮]     └─ 点亮依赖节点: biqnpus is serlpus and kifhpus (深度6)
[子树点亮]     └─ 点亮依赖节点: serlpus is tekypus (深度6)
[子树点亮]     └─ 点亮依赖节点: tekypus is pofdpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 5 个节点
  ✓ 点亮LoG节点: tikhpus is biqnpus
  ✓ 点亮LoG节点: pofdpus is qifjpus
[后处理] 通过推理轨迹额外点亮了 3 个LoG节点

   节点 32: haztpus is cedzpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: haztpus is cedzpus
      ✅ 验证成功 + LoG匹配

   节点 33: cedzpus is hasmpus
      ↻ 重复节点，计数: 4

   节点 34: hasmpus is fipdpus
      ↻ 重复节点，计数: 4

   节点 35: fipdpus is mowdpus
      ↻ 重复节点，计数: 4

   节点 36: fipdpus is mowdpus
      ↻ 重复节点，计数: 5

   节点 37: mowdpus is tikhpus
      ↻ 重复节点，计数: 4

   节点 38: tikhpus is biqnpus and bejfpus
      ↻ 重复节点，计数: 3

   节点 39: biqnpus is cukfpus
      ↻ 重复节点，计数: 3

   节点 40: cukfpus is serlpus and kifhpus
      ↻ 重复节点，计数: 3

   节点 41: serlpus is tekypus and vumcpus
      ↻ 重复节点，计数: 3

   节点 42: tekypus is pofdpus and bosppus
      ↻ 重复节点，计数: 3

   节点 43: pofdpus is mepzpus
      ↻ 重复节点，计数: 3

   节点 44: mepzpus is qifjpus
      ↻ 重复节点，计数: 3

   节点 45: qifjpus is tupnpus
      ↻ 重复节点，计数: 3

   节点 46: tupnpus is babspus
      ↻ 重复节点，计数: 4

   节点 47: nawnpus is haztpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: nawnpus is haztpus and sovwpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: nawnpus is haztpus and sovwpus

   节点 48: haztpus is cedzpus
      ↻ 重复节点，计数: 2

   节点 49: cedzpus is hasmpus
      ↻ 重复节点，计数: 5

   节点 50: nawnpus is haztpus
      ↻ 重复节点，计数: 2

   节点 51: haztpus is cedzpus
      ↻ 重复节点，计数: 3

   节点 52: nawnpus is haztpus and sovwpus
      ↻ 重复节点，计数: 5

   节点 53: nawnpus is haztpus
      ↻ 重复节点，计数: 3

   节点 54: haztpus is cedzpus
      ↻ 重复节点，计数: 4

   节点 55: haztpus is cedzpus
      ↻ 重复节点，计数: 5

   节点 56: nawnpus is haztpus
      ↻ 重复节点，计数: 4

   节点 57: haztpus is cedzpus
      ↻ 重复节点，计数: 6

   节点 58: nawnpus is cedzpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: nawnpus is haztpus → haztpus is cedzpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: nawnpus is haztpus
  - 前提: haztpus is cedzpus

   节点 59: nawnpus is haztpus
      ↻ 重复节点，计数: 5

   节点 60: nawnpus is haztpus and sovwpus
      ↻ 重复节点，计数: 6

   节点 61: haztpus is cedzpus
      ↻ 重复节点，计数: 7

   节点 62: haztpus is cedzpus
      ↻ 重复节点，计数: 8

   节点 63: haztpus is riyqpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: haztpus is cedzpus and riyqpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: haztpus is cedzpus and riyqpus

   节点 64: cedzpus is hasmpus
      ↻ 重复节点，计数: 6

   节点 65: cedzpus is hasmpus
      ↻ 重复节点，计数: 7

   节点 66: hasmpus is fipdpus
      ↻ 重复节点，计数: 5

   节点 67: hasmpus is fipdpus
      ↻ 重复节点，计数: 6

   节点 68: fipdpus is mowdpus
      ↻ 重复节点，计数: 6

   节点 69: fipdpus is mowdpus
      ↻ 重复节点，计数: 7

   节点 70: mowdpus is tikhpus
      ↻ 重复节点，计数: 5

   节点 71: mowdpus is tikhpus
      ↻ 重复节点，计数: 6

   节点 72: tikhpus is biqnpus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 73: tikhpus is biqnpus and bejfpus
      ↻ 重复节点，计数: 4

   节点 74: biqnpus is cukfpus
      ↻ 重复节点，计数: 4

   节点 75: biqnpus is cukfpus
      ↻ 重复节点，计数: 5

   节点 76: cukfpus is serlpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: cukfpus is serlpus and kifhpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: cukfpus is serlpus and kifhpus

   节点 77: cukfpus is serlpus and kifhpus
      ↻ 重复节点，计数: 4

   节点 78: serlpus is tekypus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 79: serlpus is tekypus and vumcpus
      ↻ 重复节点，计数: 4

   节点 80: tekypus is pofdpus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 81: tekypus is pofdpus and bosppus
      ↻ 重复节点，计数: 4

   节点 82: pofdpus is mepzpus
      ↻ 重复节点，计数: 4

   节点 83: pofdpus is mepzpus
      ↻ 重复节点，计数: 5

   节点 84: mepzpus is qifjpus
      ↻ 重复节点，计数: 4

   节点 85: mepzpus is qifjpus
      ↻ 重复节点，计数: 5

   节点 86: qifjpus is tupnpus
      ↻ 重复节点，计数: 4

   节点 87: qifjpus is tupnpus
      ↻ 重复节点，计数: 5

   节点 88: tupnpus is babspus
      ↻ 重复节点，计数: 5

   节点 89: tupnpus is babspus
      ↻ 重复节点，计数: 6

   节点 90: nawnpus is haztpus
      ↻ 重复节点，计数: 6

   节点 91: haztpus is cedzpus
      ↻ 重复节点，计数: 9

   节点 92: haztpus is hasmpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: haztpus is cedzpus → cedzpus is hasmpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: haztpus is cedzpus
  - 前提: cedzpus is hasmpus

   节点 93: haztpus is fipdpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: haztpus is fipdpus
[子树点亮]     └─ 点亮依赖节点: cedzpus is fipdpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 1 个节点
      ✅ 验证成功 + LoG匹配

   节点 94: haztpus is mowdpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: haztpus is cedzpus → cedzpus is mowdpus
[后处理] 基于推理轨迹点亮节点，使用了 4 个前提条件:
  - 前提: haztpus is cedzpus
  - 前提: cedzpus is hasmpus
  - 前提: hasmpus is fipdpus
  - 前提: fipdpus is mowdpus

   节点 95: haztpus is tikhpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: haztpus is cedzpus → cedzpus is tikhpus
[后处理] 基于推理轨迹点亮节点，使用了 5 个前提条件:
  - 前提: haztpus is cedzpus
  - 前提: cedzpus is hasmpus
  - 前提: hasmpus is fipdpus
  - 前提: fipdpus is mowdpus
  - 前提: mowdpus is tikhpus
  ✓ 点亮LoG节点: fipdpus is tikhpus
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 96: haztpus is biqnpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: haztpus is cedzpus → cedzpus is biqnpus
[后处理] 基于推理轨迹点亮节点，使用了 6 个前提条件:
  - 前提: haztpus is cedzpus
  - 前提: cedzpus is hasmpus
  - 前提: hasmpus is fipdpus
  - 前提: fipdpus is mowdpus
  - 前提: mowdpus is tikhpus
  - 前提: tikhpus is biqnpus
  ✓ 点亮LoG节点: fipdpus is biqnpus
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 97: haztpus is cukfpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: haztpus is cedzpus → cedzpus is cukfpus
[后处理] 基于推理轨迹点亮节点，使用了 7 个前提条件:
  - 前提: haztpus is cedzpus
  - 前提: cedzpus is hasmpus
  - 前提: hasmpus is fipdpus
  - 前提: fipdpus is mowdpus
  - 前提: mowdpus is tikhpus
  - 前提: tikhpus is biqnpus
  - 前提: biqnpus is cukfpus

   节点 98: haztpus is serlpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: haztpus is cedzpus → cedzpus is serlpus
[后处理] 基于推理轨迹点亮节点，使用了 8 个前提条件:
  - 前提: haztpus is cedzpus
  - 前提: cedzpus is hasmpus
  - 前提: hasmpus is fipdpus
  - 前提: fipdpus is mowdpus
  - 前提: mowdpus is tikhpus
  - 前提: tikhpus is biqnpus
  - 前提: biqnpus is cukfpus
  - 前提: cukfpus is serlpus

   节点 99: haztpus is tekypus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: haztpus is cedzpus → cedzpus is tekypus
[后处理] 基于推理轨迹点亮节点，使用了 9 个前提条件:
  - 前提: haztpus is cedzpus
  - 前提: cedzpus is hasmpus
  - 前提: hasmpus is fipdpus
  - 前提: fipdpus is mowdpus
  - 前提: mowdpus is tikhpus
  - 前提: tikhpus is biqnpus
  - 前提: biqnpus is cukfpus
  - 前提: cukfpus is serlpus
  - 前提: serlpus is tekypus

   节点 100: haztpus is pofdpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: haztpus is cedzpus → cedzpus is pofdpus
[后处理] 基于推理轨迹点亮节点，使用了 10 个前提条件:
  - 前提: haztpus is cedzpus
  - 前提: cedzpus is hasmpus
  - 前提: hasmpus is fipdpus
  - 前提: fipdpus is mowdpus
  - 前提: mowdpus is tikhpus
  - 前提: tikhpus is biqnpus
  - 前提: biqnpus is cukfpus
  - 前提: cukfpus is serlpus
  - 前提: serlpus is tekypus
  - 前提: tekypus is pofdpus

   节点 101: haztpus is mepzpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: haztpus is cedzpus → cedzpus is mepzpus
[后处理] 基于推理轨迹点亮节点，使用了 11 个前提条件:
  - 前提: haztpus is cedzpus
  - 前提: cedzpus is hasmpus
  - 前提: hasmpus is fipdpus
  - 前提: fipdpus is mowdpus
  - 前提: mowdpus is tikhpus
  - 前提: tikhpus is biqnpus
  - 前提: biqnpus is cukfpus
  - 前提: cukfpus is serlpus
  - 前提: serlpus is tekypus
  - 前提: tekypus is pofdpus
  - 前提: pofdpus is mepzpus

   节点 102: haztpus is qifjpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: haztpus is cedzpus → cedzpus is qifjpus
[后处理] 基于推理轨迹点亮节点，使用了 12 个前提条件:
  - 前提: haztpus is cedzpus
  - 前提: cedzpus is hasmpus
  - 前提: hasmpus is fipdpus
  - 前提: fipdpus is mowdpus
  - 前提: mowdpus is tikhpus
  - 前提: tikhpus is biqnpus
  - 前提: biqnpus is cukfpus
  - 前提: cukfpus is serlpus
  - 前提: serlpus is tekypus
  - 前提: tekypus is pofdpus
  - 前提: pofdpus is mepzpus
  - 前提: mepzpus is qifjpus

   节点 103: haztpus is tupnpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: haztpus is cedzpus → cedzpus is tupnpus
[后处理] 基于推理轨迹点亮节点，使用了 6 个前提条件:
  - 前提: haztpus is cedzpus
  - 前提: cedzpus is hasmpus
  - 前提: hasmpus is fipdpus
  - 前提: fipdpus is mowdpus
  - 前提: mowdpus is tikhpus
  - 前提: tikhpus is tupnpus

   节点 104: nawnpus is babspus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: nawnpus is haztpus → haztpus is babspus
[后处理] 基于推理轨迹点亮节点，使用了 8 个前提条件:
  - 前提: nawnpus is haztpus
  - 前提: haztpus is cedzpus
  - 前提: cedzpus is hasmpus
  - 前提: hasmpus is fipdpus
  - 前提: fipdpus is mowdpus
  - 前提: mowdpus is tikhpus
  - 前提: tikhpus is tupnpus
  - 前提: tupnpus is babspus

   节点 105: x is nawnpus
      ↻ 重复节点，计数: 4

   节点 106: x is babspus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is nawnpus → nawnpus is babspus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: x is nawnpus
  - 前提: nawnpus is babspus
  ✓ 点亮LoG节点: x is babgpus or babrpus or babspus
[子树点亮]     └─ 点亮依赖节点: x is biqnpus (深度2)
[子树点亮]     └─ 点亮依赖节点: biqnpus is babgpus or babrpus or babspus (深度2)
[子树点亮]     └─ 点亮依赖节点: x is biqnpus and wecnpus (深度3)
[子树点亮]     └─ 点亮依赖节点: biqnpus is babrpus or babspus (深度3)
[子树点亮]     └─ 点亮依赖节点: x is fipdpus (深度4)
[子树点亮]     └─ 点亮依赖节点: fipdpus is biqnpus and wecnpus (深度4)
[子树点亮]     └─ 点亮依赖节点: pofdpus is babrpus or babspus (深度4)
[子树点亮]     └─ 点亮依赖节点: x is haztpus (深度5)
[子树点亮]     └─ 点亮依赖节点: fipdpus is wecnpus (深度5)
[子树点亮]     └─ 点亮依赖节点: pofdpus is babspus (深度5)
[子树点亮]     └─ 点亮依赖节点: x is haztpus and sovwpus (深度6)
[子树点亮]     └─ 点亮依赖节点: fipdpus is hasspus (深度6)
[子树点亮]     └─ 点亮依赖节点: hasspus is wecnpus (深度6)
[子树点亮]     └─ 点亮依赖节点: qifjpus is babspus (深度6)
[后处理]   └─ 自动点亮依赖子树: 14 个节点
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 107: x is babspus
      ↻ 重复节点，计数: 2

   节点 108: x is babspus
      ↻ 重复节点，计数: 3

   节点 109: nawnpus is sovwpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: nawnpus is haztpus and sovwpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: nawnpus is haztpus and sovwpus

   节点 110: x is babspus
      ↻ 重复节点，计数: 4

   节点 111: x is babspus
      ↻ 重复节点，计数: 5

🔍 分析推理路径完整性...

============================================================
[后处理] 处理完成
============================================================
📈 处理统计:
   - 处理的actual节点: 111
   - 新增节点: 25
   - 更新已存在节点: 86
   - 点亮的LoG节点: 28

🎯 推理质量统计:
   - 完美推理: 25 (节点正确 + 路径正确)
   - 部分推理: 0 (节点正确 + 路径部分错误)
   - 无效推理: 0 (节点错误或路径完全错误)
[LoG分析] LoG图: 28节点, 20前提, 复杂度1-20

📊 === Statement列表分析 ===
📈 节点统计:
   - 总节点数: 45
   - 前提节点: 20
   - 推理节点: 25
   - 幻觉节点: 0
   - 点亮LoG节点: 28

✅ 推理节点详情:
   🟢 fipdpus is mowdpus and wadmpus (出现1次, 质量:perfect)
   🟢 tikhpus is tupnpus (出现1次, 质量:perfect)
   🟢 haztpus is cedzpus (出现9次, 质量:perfect)
   🟢 nawnpus is haztpus (出现6次, 质量:perfect)
   🟢 nawnpus is cedzpus (出现1次, 质量:perfect)
   🟢 haztpus is riyqpus (出现1次, 质量:perfect)
   🟢 tikhpus is biqnpus (出现1次, 质量:perfect)
   🟢 cukfpus is serlpus (出现1次, 质量:perfect)
   🟢 serlpus is tekypus (出现1次, 质量:perfect)
   🟢 tekypus is pofdpus (出现1次, 质量:perfect)
   🟢 haztpus is hasmpus (出现1次, 质量:perfect)
   🟢 haztpus is fipdpus (出现1次, 质量:perfect)
   🟢 haztpus is mowdpus (出现1次, 质量:perfect)
   🟢 haztpus is tikhpus (出现1次, 质量:perfect)
   🟢 haztpus is biqnpus (出现1次, 质量:perfect)
   🟢 haztpus is cukfpus (出现1次, 质量:perfect)
   🟢 haztpus is serlpus (出现1次, 质量:perfect)
   🟢 haztpus is tekypus (出现1次, 质量:perfect)
   🟢 haztpus is pofdpus (出现1次, 质量:perfect)
   🟢 haztpus is mepzpus (出现1次, 质量:perfect)
   🟢 haztpus is qifjpus (出现1次, 质量:perfect)
   🟢 haztpus is tupnpus (出现1次, 质量:perfect)
   🟢 nawnpus is babspus (出现1次, 质量:perfect)
   🟢 x is babspus (出现5次, 质量:perfect)
   🟢 nawnpus is sovwpus (出现1次, 质量:perfect)

🔥 点亮的LoG节点:
   - x is haztpus and sovwpus
   - biqnpus is babrpus or babspus
   - biqnpus is babgpus or babrpus or babspus
   - fipdpus is biqnpus
   - qifjpus is babspus
   - cedzpus is fipdpus
   - fipdpus is tikhpus
   - x is biqnpus
   - haztpus is fipdpus
   - pofdpus is qifjpus
   - x is biqnpus and wecnpus
   - x is fipdpus
   - biqnpus is serlpus and kifhpus
   - fipdpus is hasspus
   - fipdpus is wecnpus
   - serlpus is tekypus
   - tikhpus is biqnpus
   - x is babgpus or babrpus or babspus
   - haztpus is cedzpus
   - pofdpus is babrpus or babspus
   - tekypus is pofdpus
   - pofdpus is babspus
   - serlpus is pofdpus
   - x is haztpus
   - fipdpus is biqnpus and wecnpus
   - hasspus is wecnpus
   - biqnpus is serlpus
   - biqnpus is pofdpus

============================================================
📊 计算评估指标
============================================================

🎯 计算Coverage指标...
   深度Coverage: 6/6 = 100.00%
   最深点亮节点: x is babgpus or babrpus or babspus (第6层)
   节点Coverage: 28/28 = 100.00%
   前提条件Coverage: 20/20 = 100.00%
   各推理层点亮比例:
     第1层: 12/12 = 100.00%
     第2层: 7/7 = 100.00%
     第3层: 4/4 = 100.00%
     第4层: 2/2 = 100.00%
     第5层: 2/2 = 100.00%
     第6层: 1/1 = 100.00%

🎯 计算Precision指标...
   Error Rate: 0/25 = 0.00%
   可推导节点: 25/25
   Strict Error Rate: 0/25 = 0.00%
   严格有效节点: 25/25

   详细分析:
     完美推理: 25 (100.00%)
     部分推理: 0 (0.00%)
     无效推理: 0 (0.00%)

================================================================================
处理记录 2/50
================================================================================
记录索引: 1
问题状态: correct
📁 从缓存加载提取结果: evaluation_results.LoG_6.deepseek-reasoner_record_1.json
✅ 使用缓存结果:
   - 句子数: 201
   - 提取的语句数: 157
   - 初始条件数: 34

=== Statement提取完成 ===
总句子数: 201
成功提取: 201
失败提取: 0
总statements数: 157

=== 开始清洗Statement格式 ===
原始statements数: 157
清洗后statements数: 157
过滤掉的statements数: 0

=== 开始标准化和解析节点 ===
清洗后statements数: 157
标准化后节点数: 157
过滤掉的无效实体数: 0
标准化后的节点:
  1. [planning] x → babgpus (原始: x is babgpus)
  2. [planning] x → babrpus (原始: x is babrpus)
  3. [planning] x → babspus (原始: x is babspus)
  4. [actual] x → mumppus and hobmpus (原始: x is mumppus and hobmpus)
  5. [actual] x → mumppus and hobmpus (原始: x is mumppus and hobmpus)
  6. [actual] x → nurhpus (原始: x is nurhpus)
  7. [actual] x → nurhpus (原始: x is nurhpus)
  8. [actual] x → liwvpus and novtpus (原始: x is liwvpus and novtpus)
  9. [actual] x → liwvpus and novtpus (原始: x is liwvpus and novtpus)
  10. [planning] x → babgpus (原始: x is babgpus)
  11. [planning] x → babrpus (原始: x is babrpus)
  12. [planning] x → babspus (原始: x is babspus)
  13. [actual] roftpus → juxypus and pevfpus (原始: roftpus is juxypus and pevfpus)
  14. [actual] savlpus → tulspus (原始: savlpus is tulspus)
  15. [actual] bibjpus → babrpus and bunzpus and docfpus (原始: bibjpus is babrpus and bunzpus and docfpus)
  16. [actual] mabwpus → savlpus and xoycpus (原始: mabwpus is savlpus and xoycpus)
  17. [actual] liwvpus → fahjpus (原始: liwvpus is fahjpus)
  18. [actual] x → mumppus and hobmpus (原始: x is mumppus and hobmpus)
  19. [actual] pijypus → fozxpus (原始: pijypus is fozxpus)
  20. [actual] qaztpus → muzzpus and nephpus (原始: qaztpus is muzzpus and nephpus)
  21. [actual] xaxdpus → roftpus and jikypus (原始: xaxdpus is roftpus and jikypus)
  22. [actual] jacjpus → qaztpus (原始: jacjpus is qaztpus)
  23. [actual] fesbpus → xaxkpus (原始: fesbpus is xaxkpus)
  24. [actual] nugqpus → babgpus and migxpus and durlpus (原始: nugqpus is babgpus and migxpus and durlpus)
  25. [actual] fahjpus → ciqrpus (原始: fahjpus is ciqrpus)
  26. [actual] pitkpus → bancpus (原始: pitkpus is bancpus)
  27. [actual] yiqjpus → hurspus (原始: yiqjpus is hurspus)
  28. [actual] lesrpus → nugqpus (原始: lesrpus is nugqpus)
  29. [actual] ciqrpus → pijypus and muhvpus (原始: ciqrpus is pijypus and muhvpus)
  30. [actual] x → nurhpus (原始: x is nurhpus)
  31. [actual] xafppus → yiqjpus (原始: xafppus is yiqjpus)
  32. [actual] juxypus → bibjpus (原始: juxypus is bibjpus)
  33. [actual] vidcpus → babspus and gemhpus and doctpus (原始: vidcpus is babspus and gemhpus and doctpus)
  34. [actual] tulspus → vidcpus (原始: tulspus is vidcpus)
  35. [actual] dofnpus → xafppus (原始: dofnpus is xafppus)
  36. [actual] wuxrpus → mabwpus (原始: wuxrpus is mabwpus)
  37. [actual] bancpus → xaxdpus and kupnpus and jibjpus (原始: bancpus is xaxdpus and kupnpus and jibjpus)
  38. [actual] pinhpus → lesrpus (原始: pinhpus is lesrpus)
  39. [actual] x → liwvpus and novtpus (原始: x is liwvpus and novtpus)
  40. [actual] mumppus → jacjpus and kivtpus and qipmpus (原始: mumppus is jacjpus and kivtpus and qipmpus)
  41. [actual] hurspus → viywpus (原始: hurspus is viywpus)
  42. [actual] muzzpus → dofnpus (原始: muzzpus is dofnpus)
  43. [actual] nurhpus → pitkpus and rodhpus (原始: nurhpus is pitkpus and rodhpus)
  44. [actual] viywpus → wuxrpus (原始: viywpus is wuxrpus)
  45. [actual] xaxkpus → pinhpus and comypus (原始: xaxkpus is pinhpus and comypus)
  46. [actual] fozxpus → fesbpus (原始: fozxpus is fesbpus)
  47. [actual] x → mumppus (原始: x is mumppus)
  48. [actual] x → hobmpus (原始: x is hobmpus)
  49. [actual] x → nurhpus (原始: x is nurhpus)
  50. [actual] x → liwvpus (原始: x is liwvpus)
  51. [actual] x → novtpus (原始: x is novtpus)
  52. [planning] x → babgpus (原始: x is babgpus)
  53. [planning] x → babrpus (原始: x is babrpus)
  54. [planning] x → babspus (原始: x is babspus)
  55. [actual] bibjpus → babrpus (原始: bibjpus is babrpus)
  56. [actual] juxypus → bibjpus (原始: juxypus is bibjpus)
  57. [actual] roftpus → juxypus (原始: roftpus is juxypus)
  58. [actual] xaxdpus → roftpus (原始: xaxdpus is roftpus)
  59. [actual] bancpus → xaxdpus (原始: bancpus is xaxdpus)
  60. [actual] pitkpus → bancpus (原始: pitkpus is bancpus)
  61. [actual] nurhpus → pitkpus and rodhpus (原始: nurhpus is pitkpus and rodhpus)
  62. [actual] x → nurhpus (原始: x is nurhpus)
  63. [actual] x → nurhpus (原始: x is nurhpus)
  64. [actual] nurhpus → pitkpus (原始: nurhpus is pitkpus)
  65. [actual] pitkpus → bancpus (原始: pitkpus is bancpus)
  66. [actual] bancpus → xaxdpus (原始: bancpus is xaxdpus)
  67. [actual] xaxdpus → roftpus (原始: xaxdpus is roftpus)
  68. [actual] roftpus → juxypus (原始: roftpus is juxypus)
  69. [actual] juxypus → bibjpus (原始: juxypus is bibjpus)
  70. [actual] bibjpus → babrpus (原始: bibjpus is babrpus)
  71. [actual] x → babrpus (原始: x is babrpus)
  72. [actual] x → nurhpus (原始: x is nurhpus)
  73. [actual] nurhpus → pitkpus (原始: nurhpus is pitkpus)
  74. [actual] pitkpus → bancpus (原始: pitkpus is bancpus)
  75. [actual] bancpus → xaxdpus (原始: bancpus is xaxdpus)
  76. [actual] xaxdpus → roftpus (原始: xaxdpus is roftpus)
  77. [actual] roftpus → juxypus (原始: roftpus is juxypus)
  78. [actual] juxypus → bibjpus (原始: juxypus is bibjpus)
  79. [actual] bibjpus → babrpus (原始: bibjpus is babrpus)
  80. [actual] x → babrpus (原始: x is babrpus)
  81. [actual] vidcpus → babspus (原始: vidcpus is babspus)
  82. [actual] tulspus → vidcpus (原始: tulspus is vidcpus)
  83. [actual] savlpus → tulspus (原始: savlpus is tulspus)
  84. [actual] mabwpus → savlpus and xoycpus (原始: mabwpus is savlpus and xoycpus)
  85. [actual] wuxrpus → mabwpus (原始: wuxrpus is mabwpus)
  86. [actual] viywpus → wuxrpus (原始: viywpus is wuxrpus)
  87. [actual] hurspus → viywpus (原始: hurspus is viywpus)
  88. [actual] yiqjpus → hurspus (原始: yiqjpus is hurspus)
  89. [actual] xafppus → yiqjpus (原始: xafppus is yiqjpus)
  90. [actual] muzzpus → dofnpus (原始: muzzpus is dofnpus)
  91. [planning] dofnpus → xafppus (原始: dofnpus is xafppus)
  92. [planning] dofnpus → xafppus (原始: dofnpus is xafppus)
  93. [actual] dofnpus → xafppus (原始: dofnpus is xafppus)
  94. [actual] xafppus → yiqjpus (原始: xafppus is yiqjpus)
  95. [actual] dofnpus → xafppus (原始: dofnpus is xafppus)
  96. [actual] xafppus → yiqjpus (原始: xafppus is yiqjpus)
  97. [actual] dofnpus → yiqjpus (原始: dofnpus is yiqjpus)
  98. [actual] mumppus → jacjpus and kivtpus and qipmpus (原始: mumppus is jacjpus and kivtpus and qipmpus)
  99. [actual] jacjpus → qaztpus (原始: jacjpus is qaztpus)
  100. [actual] qaztpus → muzzpus and nephpus (原始: qaztpus is muzzpus and nephpus)
  101. [actual] muzzpus → dofnpus (原始: muzzpus is dofnpus)
  102. [actual] x → mumppus (原始: x is mumppus)
  103. [actual] mumppus → jacjpus (原始: mumppus is jacjpus)
  104. [actual] jacjpus → qaztpus (原始: jacjpus is qaztpus)
  105. [actual] qaztpus → muzzpus (原始: qaztpus is muzzpus)
  106. [actual] muzzpus → dofnpus (原始: muzzpus is dofnpus)
  107. [actual] dofnpus → xafppus (原始: dofnpus is xafppus)
  108. [actual] xfaqppus → yiqjpus (原始: xfaqppus is yiqjpus)
  109. [actual] yiqjpus → hurspus (原始: yiqjpus is hurspus)
  110. [actual] hurspus → viywpus (原始: hurspus is viywpus)
  111. [actual] viywpus → wuxrpus (原始: viywpus is wuxrpus)
  112. [actual] wuxrpus → mabwpus (原始: wuxrpus is mabwpus)
  113. [actual] mabwpus → savlpus (原始: mabwpus is savlpus)
  114. [actual] savlpus → tulspus (原始: savlpus is tulspus)
  115. [actual] tulspus → vidcpus (原始: tulspus is vidcpus)
  116. [actual] vidcpus → babspus (原始: vidcpus is babspus)
  117. [actual] x → mumppus (原始: x is mumppus)
  118. [actual] mumppus → jacjpus (原始: mumppus is jacjpus)
  119. [actual] jacjpus → qaztpus (原始: jacjpus is qaztpus)
  120. [actual] qaztpus → muzzpus (原始: qaztpus is muzzpus)
  121. [actual] muzzpus → dofnpus (原始: muzzpus is dofnpus)
  122. [actual] dofnpus → xafppus (原始: dofnpus is xafppus)
  123. [actual] xafppus → yiqjpus (原始: xafppus is yiqjpus)
  124. [actual] yiqjpus → hurspus (原始: yiqjpus is hurspus)
  125. [actual] hurspus → viywpus (原始: hurspus is viywpus)
  126. [actual] viywpus → wuxrpus (原始: viywpus is wuxrpus)
  127. [actual] wuxrpus → mabwpus (原始: wuxrpus is mabwpus)
  128. [actual] mabwpus → savlpus (原始: mabwpus is savlpus)
  129. [actual] savlpus → tulspus (原始: savlpus is tulspus)
  130. [actual] tulspus → vidcpus (原始: tulspus is vidcpus)
  131. [actual] vidcpus → babspus (原始: vidcpus is babspus)
  132. [actual] x → babspus (原始: x is babspus)
  133. [actual] x → babrpus and babspus (原始: x is babrpus and babspus)
  134. [actual] nugqpus → babgpus and migxpus and durlpus (原始: nugqpus is babgpus and migxpus and durlpus)
  135. [actual] lesrpus → nugqpus (原始: lesrpus is nugqpus)
  136. [actual] pinhpus → lesrpus (原始: pinhpus is lesrpus)
  137. [actual] xaxkpus → pinhpus and comypus (原始: xaxkpus is pinhpus and comypus)
  138. [actual] fesbpus → xaxkpus (原始: fesbpus is xaxkpus)
  139. [actual] fozxpus → fesbpus (原始: fozxpus is fesbpus)
  140. [actual] pijypus → fozxpus (原始: pijypus is fozxpus)
  141. [actual] ciqrpus → pijypus and muhvpus (原始: ciqrpus is pijypus and muhvpus)
  142. [actual] fahjpus → ciqrpus (原始: fahjpus is ciqrpus)
  143. [actual] liwvpus → fahjpus (原始: liwvpus is fahjpus)
  144. [actual] x → liwvpus (原始: x is liwvpus)
  145. [actual] x → liwvpus (原始: x is liwvpus)
  146. [actual] liwvpus → fahjpus (原始: liwvpus is fahjpus)
  147. [actual] fahjpus → ciqrpus (原始: fahjpus is ciqrpus)
  148. [actual] ciqrpus → pijypus (原始: ciqrpus is pijypus)
  149. [actual] pijypus → fozxpus (原始: pijypus is fozxpus)
  150. [actual] fozxpus → fesbpus (原始: fozxpus is fesbpus)
  151. [actual] fesbpus → xaxkpus (原始: fesbpus is xaxkpus)
  152. [actual] xaxkpus → pinhpus (原始: xaxkpus is pinhpus)
  153. [actual] pinhpus → lesrpus (原始: pinhpus is lesrpus)
  154. [actual] lesrpus → nugqpus (原始: lesrpus is nugqpus)
  155. [actual] nugqpus → babgpus (原始: nugqpus is babgpus)
  156. [actual] x → babgpus (原始: x is babgpus)
  157. [actual] x → babgpus and babrpus and babspus (原始: x is babgpus and babrpus and babspus)

开始新的后处理...
[后处理] 从LoG数据文件中获取到图数据，节点数: 51
[后处理] 加载LoG图，包含 51 个节点
  LoG节点 0: x is babgpus and babrpus and babspus (规则: CI, 深度: 1)
  LoG节点 1: x is babgpus (规则: CE, 深度: 2)
  LoG节点 2: x is babrpus (规则: MP, 深度: 2)
  LoG节点 3: x is babspus (规则: MP, 深度: 2)
  LoG节点 4: x is babgpus and migxpus (规则: MP, 深度: 3)
  LoG节点 5: x is xaxdpus (规则: CE, 深度: 3)
  LoG节点 6: xaxdpus is babrpus (规则: CE, 深度: 3)
  LoG节点 7: x is hurspus (规则: MP, 深度: 3)
  LoG节点 8: hurspus is babspus (规则: MP, 深度: 3)
  LoG节点 9: x is fesbpus (规则: MP, 深度: 4)
  LoG节点 10: fesbpus is babgpus and migxpus (规则: MP, 深度: 4)
  LoG节点 11: x is xaxdpus and kupnpus (规则: MP, 深度: 4)
  LoG节点 12: xaxdpus is babrpus and bunzpus (规则: MP, 深度: 4)
  LoG节点 13: x is jacjpus (规则: CE, 深度: 4)
  LoG节点 14: jacjpus is hurspus (规则: MP, 深度: 4)
  LoG节点 15: hurspus is savlpus (规则: CE, 深度: 4)
  LoG节点 16: savlpus is babspus (规则: CE, 深度: 4)
  LoG节点 17: x is ciqrpus (规则: MP, 深度: 5)
  LoG节点 18: ciqrpus is fesbpus (规则: MP, 深度: 5)
  LoG节点 19: fesbpus is pinhpus (规则: CE, 深度: 5)
  LoG节点 20: pinhpus is babgpus and migxpus (规则: MP, 深度: 5)
  LoG节点 21: x is pitkpus (规则: CE, 深度: 5)
  LoG节点 22: pitkpus is xaxdpus and kupnpus (规则: CE, 深度: 5)
  LoG节点 23: xaxdpus is juxypus (规则: MP, 深度: 5)
  LoG节点 24: juxypus is babrpus and bunzpus (规则: CE, 深度: 5)
  LoG节点 25: x is jacjpus and kivtpus (规则: MP, 深度: 5)
  LoG节点 26: jacjpus is muzzpus (规则: CE, 深度: 5)
  LoG节点 27: muzzpus is hurspus (规则: MP, 深度: 5)
  LoG节点 28: hurspus is savlpus and xoycpus (规则: MP, 深度: 5)
  LoG节点 29: savlpus is babspus and gemhpus (规则: MP, 深度: 5)
  LoG节点 30: x is liwvpus (规则: CE, 深度: 6)
  LoG节点 31: liwvpus is ciqrpus (规则: MP, 深度: 6)
  LoG节点 32: ciqrpus is pijypus (规则: CE, 深度: 6)
  LoG节点 33: pijypus is fesbpus (规则: MP, 深度: 6)
  LoG节点 34: fesbpus is pinhpus and comypus (规则: MP, 深度: 6)
  LoG节点 35: pinhpus is nugqpus (规则: MP, 深度: 6)
  LoG节点 36: nugqpus is babgpus and migxpus (规则: CE, 深度: 6)
  LoG节点 37: x is pitkpus and rodhpus (规则: MP, 深度: 6)
  LoG节点 38: pitkpus is xaxdpus and kupnpus and jibjpus (规则: MP, 深度: 6)
  LoG节点 39: xaxdpus is roftpus (规则: CE, 深度: 6)
  LoG节点 40: roftpus is juxypus (规则: CE, 深度: 6)
  LoG节点 41: juxypus is babrpus and bunzpus and docfpus (规则: MP, 深度: 6)
  LoG节点 42: x is mumppus (规则: CE, 深度: 6)
  LoG节点 43: mumppus is jacjpus and kivtpus (规则: CE, 深度: 6)
  LoG节点 44: jacjpus is muzzpus and nephpus (规则: MP, 深度: 6)
  LoG节点 45: muzzpus is xafppus (规则: MP, 深度: 6)
  LoG节点 46: xafppus is hurspus (规则: MP, 深度: 6)
  LoG节点 47: hurspus is wuxrpus (规则: MP, 深度: 6)
  LoG节点 48: wuxrpus is savlpus and xoycpus (规则: MP, 深度: 6)
  LoG节点 49: savlpus is vidcpus (规则: MP, 深度: 6)
  LoG节点 50: vidcpus is babspus and gemhpus (规则: CE, 深度: 6)

============================================================
[后处理] 开始处理节点
============================================================
📊 初始状态:
   - 标准化节点数: 157
   - 初始条件数: 34
   - LoG图节点数: 51

📋 初始条件列表:
    1. roftpus is juxypus and pevfpus
    2. savlpus is tulspus
    3. bibjpus is babrpus and bunzpus and docfpus
    4. mabwpus is savlpus and xoycpus
    5. liwvpus is fahjpus
    6. x is mumppus and hobmpus
    7. pijypus is fozxpus
    8. qaztpus is muzzpus and nephpus
    9. xaxdpus is roftpus and jikypus
   10. jacjpus is qaztpus
   11. fesbpus is xaxkpus
   12. nugqpus is babgpus and migxpus and durlpus
   13. fahjpus is ciqrpus
   14. pitkpus is bancpus
   15. yiqjpus is hurspus
   16. lesrpus is nugqpus
   17. ciqrpus is pijypus and muhvpus
   18. x is nurhpus
   19. xafppus is yiqjpus
   20. juxypus is bibjpus
   21. vidcpus is babspus and gemhpus and doctpus
   22. tulspus is vidcpus
   23. dofnpus is xafppus
   24. wuxrpus is mabwpus
   25. bancpus is xaxdpus and kupnpus and jibjpus
   26. pinhpus is lesrpus
   27. x is liwvpus and novtpus
   28. mumppus is jacjpus and kivtpus and qipmpus
   29. hurspus is viywpus
   30. muzzpus is dofnpus
   31. nurhpus is pitkpus and rodhpus
   32. viywpus is wuxrpus
   33. xaxkpus is pinhpus and comypus
   34. fozxpus is fesbpus

🔧 构建初始Statement列表...
✅ 初始Statement列表构建完成，包含 34 个前提节点

🔍 开始处理actual节点...

   节点 1: x is mumppus and hobmpus
      ↻ 重复节点，计数: 2

   节点 2: x is mumppus and hobmpus
      ↻ 重复节点，计数: 3

   节点 3: x is nurhpus
      ↻ 重复节点，计数: 2

   节点 4: x is nurhpus
      ↻ 重复节点，计数: 3

   节点 5: x is liwvpus and novtpus
      ↻ 重复节点，计数: 2

   节点 6: x is liwvpus and novtpus
      ↻ 重复节点，计数: 3

   节点 7: roftpus is juxypus and pevfpus
      ↻ 重复节点，计数: 2

   节点 8: savlpus is tulspus
      ↻ 重复节点，计数: 2

   节点 9: bibjpus is babrpus and bunzpus and docfpus
      ↻ 重复节点，计数: 2

   节点 10: mabwpus is savlpus and xoycpus
      ↻ 重复节点，计数: 2

   节点 11: liwvpus is fahjpus
      ↻ 重复节点，计数: 2

   节点 12: x is mumppus and hobmpus
      ↻ 重复节点，计数: 4

   节点 13: pijypus is fozxpus
      ↻ 重复节点，计数: 2

   节点 14: qaztpus is muzzpus and nephpus
      ↻ 重复节点，计数: 2

   节点 15: xaxdpus is roftpus and jikypus
      ↻ 重复节点，计数: 2

   节点 16: jacjpus is qaztpus
      ↻ 重复节点，计数: 2

   节点 17: fesbpus is xaxkpus
      ↻ 重复节点，计数: 2

   节点 18: nugqpus is babgpus and migxpus and durlpus
      ↻ 重复节点，计数: 2

   节点 19: fahjpus is ciqrpus
      ↻ 重复节点，计数: 2

   节点 20: pitkpus is bancpus
      ↻ 重复节点，计数: 2

   节点 21: yiqjpus is hurspus
      ↻ 重复节点，计数: 2

   节点 22: lesrpus is nugqpus
      ↻ 重复节点，计数: 2

   节点 23: ciqrpus is pijypus and muhvpus
      ↻ 重复节点，计数: 2

   节点 24: x is nurhpus
      ↻ 重复节点，计数: 4

   节点 25: xafppus is yiqjpus
      ↻ 重复节点，计数: 2

   节点 26: juxypus is bibjpus
      ↻ 重复节点，计数: 2

   节点 27: vidcpus is babspus and gemhpus and doctpus
      ↻ 重复节点，计数: 2

   节点 28: tulspus is vidcpus
      ↻ 重复节点，计数: 2

   节点 29: dofnpus is xafppus
      ↻ 重复节点，计数: 2

   节点 30: wuxrpus is mabwpus
      ↻ 重复节点，计数: 2

   节点 31: bancpus is xaxdpus and kupnpus and jibjpus
      ↻ 重复节点，计数: 2

   节点 32: pinhpus is lesrpus
      ↻ 重复节点，计数: 2

   节点 33: x is liwvpus and novtpus
      ↻ 重复节点，计数: 4

   节点 34: mumppus is jacjpus and kivtpus and qipmpus
      ↻ 重复节点，计数: 2

   节点 35: hurspus is viywpus
      ↻ 重复节点，计数: 2

   节点 36: muzzpus is dofnpus
      ↻ 重复节点，计数: 2

   节点 37: nurhpus is pitkpus and rodhpus
      ↻ 重复节点，计数: 2

   节点 38: viywpus is wuxrpus
      ↻ 重复节点，计数: 2

   节点 39: xaxkpus is pinhpus and comypus
      ↻ 重复节点，计数: 2

   节点 40: fozxpus is fesbpus
      ↻ 重复节点，计数: 2

   节点 41: x is mumppus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is mumppus
      ✅ 验证成功 + LoG匹配

   节点 42: x is hobmpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: x is mumppus and hobmpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: x is mumppus and hobmpus

   节点 43: x is nurhpus
      ↻ 重复节点，计数: 5

   节点 44: x is liwvpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is liwvpus
      ✅ 验证成功 + LoG匹配

   节点 45: x is novtpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: x is liwvpus and novtpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: x is liwvpus and novtpus

   节点 46: bibjpus is babrpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: bibjpus is babrpus and bunzpus and docfpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: bibjpus is babrpus and bunzpus and docfpus

   节点 47: juxypus is bibjpus
      ↻ 重复节点，计数: 3

   节点 48: roftpus is juxypus
      🔍 验证新节点...
[后处理] 点亮LoG节点: roftpus is juxypus
      ✅ 验证成功 + LoG匹配

   节点 49: xaxdpus is roftpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: xaxdpus is roftpus
      ✅ 验证成功 + LoG匹配

   节点 50: bancpus is xaxdpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: bancpus is xaxdpus and kupnpus and jibjpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: bancpus is xaxdpus and kupnpus and jibjpus

   节点 51: pitkpus is bancpus
      ↻ 重复节点，计数: 3

   节点 52: nurhpus is pitkpus and rodhpus
      ↻ 重复节点，计数: 3

   节点 53: x is nurhpus
      ↻ 重复节点，计数: 6

   节点 54: x is nurhpus
      ↻ 重复节点，计数: 7

   节点 55: nurhpus is pitkpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: nurhpus is pitkpus and rodhpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: nurhpus is pitkpus and rodhpus

   节点 56: pitkpus is bancpus
      ↻ 重复节点，计数: 4

   节点 57: bancpus is xaxdpus
      ↻ 重复节点，计数: 2

   节点 58: xaxdpus is roftpus
      ↻ 重复节点，计数: 2

   节点 59: roftpus is juxypus
      ↻ 重复节点，计数: 2

   节点 60: juxypus is bibjpus
      ↻ 重复节点，计数: 4

   节点 61: bibjpus is babrpus
      ↻ 重复节点，计数: 2

   节点 62: x is babrpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is babrpus
[子树点亮]     └─ 点亮依赖节点: x is xaxdpus (深度3)
[子树点亮]     └─ 点亮依赖节点: xaxdpus is babrpus (深度3)
[子树点亮]     └─ 点亮依赖节点: x is xaxdpus and kupnpus (深度4)
[子树点亮]     └─ 点亮依赖节点: xaxdpus is babrpus and bunzpus (深度4)
[子树点亮]     └─ 点亮依赖节点: x is pitkpus (深度5)
[子树点亮]     └─ 点亮依赖节点: pitkpus is xaxdpus and kupnpus (深度5)
[子树点亮]     └─ 点亮依赖节点: xaxdpus is juxypus (深度5)
[子树点亮]     └─ 点亮依赖节点: juxypus is babrpus and bunzpus (深度5)
[子树点亮]     └─ 点亮依赖节点: x is pitkpus and rodhpus (深度6)
[子树点亮]     └─ 点亮依赖节点: pitkpus is xaxdpus and kupnpus and jibjpus (深度6)
[子树点亮]     └─ 点亮依赖节点: juxypus is babrpus and bunzpus and docfpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 11 个节点
      ✅ 验证成功 + LoG匹配

   节点 63: x is nurhpus
      ↻ 重复节点，计数: 8

   节点 64: nurhpus is pitkpus
      ↻ 重复节点，计数: 2

   节点 65: pitkpus is bancpus
      ↻ 重复节点，计数: 5

   节点 66: bancpus is xaxdpus
      ↻ 重复节点，计数: 3

   节点 67: xaxdpus is roftpus
      ↻ 重复节点，计数: 3

   节点 68: roftpus is juxypus
      ↻ 重复节点，计数: 3

   节点 69: juxypus is bibjpus
      ↻ 重复节点，计数: 5

   节点 70: bibjpus is babrpus
      ↻ 重复节点，计数: 3

   节点 71: x is babrpus
      ↻ 重复节点，计数: 2

   节点 72: vidcpus is babspus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: vidcpus is babspus and gemhpus and doctpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: vidcpus is babspus and gemhpus and doctpus
  ✓ 点亮LoG节点: vidcpus is babspus and gemhpus
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 73: tulspus is vidcpus
      ↻ 重复节点，计数: 3

   节点 74: savlpus is tulspus
      ↻ 重复节点，计数: 3

   节点 75: mabwpus is savlpus and xoycpus
      ↻ 重复节点，计数: 3

   节点 76: wuxrpus is mabwpus
      ↻ 重复节点，计数: 3

   节点 77: viywpus is wuxrpus
      ↻ 重复节点，计数: 3

   节点 78: hurspus is viywpus
      ↻ 重复节点，计数: 3

   节点 79: yiqjpus is hurspus
      ↻ 重复节点，计数: 3

   节点 80: xafppus is yiqjpus
      ↻ 重复节点，计数: 3

   节点 81: muzzpus is dofnpus
      ↻ 重复节点，计数: 3

   节点 82: dofnpus is xafppus
      ↻ 重复节点，计数: 3

   节点 83: xafppus is yiqjpus
      ↻ 重复节点，计数: 4

   节点 84: dofnpus is xafppus
      ↻ 重复节点，计数: 4

   节点 85: xafppus is yiqjpus
      ↻ 重复节点，计数: 5

   节点 86: dofnpus is yiqjpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: dofnpus is xafppus → xafppus is yiqjpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: dofnpus is xafppus
  - 前提: xafppus is yiqjpus

   节点 87: mumppus is jacjpus and kivtpus and qipmpus
      ↻ 重复节点，计数: 3

   节点 88: jacjpus is qaztpus
      ↻ 重复节点，计数: 3

   节点 89: qaztpus is muzzpus and nephpus
      ↻ 重复节点，计数: 3

   节点 90: muzzpus is dofnpus
      ↻ 重复节点，计数: 4

   节点 91: x is mumppus
      ↻ 重复节点，计数: 2

   节点 92: mumppus is jacjpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: mumppus is jacjpus and kivtpus and qipmpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: mumppus is jacjpus and kivtpus and qipmpus
  ✓ 点亮LoG节点: mumppus is jacjpus and kivtpus
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 93: jacjpus is qaztpus
      ↻ 重复节点，计数: 4

   节点 94: qaztpus is muzzpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: qaztpus is muzzpus and nephpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: qaztpus is muzzpus and nephpus

   节点 95: muzzpus is dofnpus
      ↻ 重复节点，计数: 5

   节点 96: dofnpus is xafppus
      ↻ 重复节点，计数: 5

   节点 97: xfaqppus is yiqjpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 98: yiqjpus is hurspus
      ↻ 重复节点，计数: 4

   节点 99: hurspus is viywpus
      ↻ 重复节点，计数: 4

   节点 100: viywpus is wuxrpus
      ↻ 重复节点，计数: 4

   节点 101: wuxrpus is mabwpus
      ↻ 重复节点，计数: 4

   节点 102: mabwpus is savlpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: mabwpus is savlpus and xoycpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: mabwpus is savlpus and xoycpus

   节点 103: savlpus is tulspus
      ↻ 重复节点，计数: 4

   节点 104: tulspus is vidcpus
      ↻ 重复节点，计数: 4

   节点 105: vidcpus is babspus
      ↻ 重复节点，计数: 2

   节点 106: x is mumppus
      ↻ 重复节点，计数: 3

   节点 107: mumppus is jacjpus
      ↻ 重复节点，计数: 2

   节点 108: jacjpus is qaztpus
      ↻ 重复节点，计数: 5

   节点 109: qaztpus is muzzpus
      ↻ 重复节点，计数: 2

   节点 110: muzzpus is dofnpus
      ↻ 重复节点，计数: 6

   节点 111: dofnpus is xafppus
      ↻ 重复节点，计数: 6

   节点 112: xafppus is yiqjpus
      ↻ 重复节点，计数: 6

   节点 113: yiqjpus is hurspus
      ↻ 重复节点，计数: 5

   节点 114: hurspus is viywpus
      ↻ 重复节点，计数: 5

   节点 115: viywpus is wuxrpus
      ↻ 重复节点，计数: 5

   节点 116: wuxrpus is mabwpus
      ↻ 重复节点，计数: 5

   节点 117: mabwpus is savlpus
      ↻ 重复节点，计数: 2

   节点 118: savlpus is tulspus
      ↻ 重复节点，计数: 5

   节点 119: tulspus is vidcpus
      ↻ 重复节点，计数: 5

   节点 120: vidcpus is babspus
      ↻ 重复节点，计数: 3

   节点 121: x is babspus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is babspus
[子树点亮]     └─ 点亮依赖节点: x is hurspus (深度3)
[子树点亮]     └─ 点亮依赖节点: hurspus is babspus (深度3)
[子树点亮]     └─ 点亮依赖节点: x is jacjpus (深度4)
[子树点亮]     └─ 点亮依赖节点: jacjpus is hurspus (深度4)
[子树点亮]     └─ 点亮依赖节点: hurspus is savlpus (深度4)
[子树点亮]     └─ 点亮依赖节点: savlpus is babspus (深度4)
[子树点亮]     └─ 点亮依赖节点: x is jacjpus and kivtpus (深度5)
[子树点亮]     └─ 点亮依赖节点: jacjpus is muzzpus (深度5)
[子树点亮]     └─ 点亮依赖节点: muzzpus is hurspus (深度5)
[子树点亮]     └─ 点亮依赖节点: hurspus is savlpus and xoycpus (深度5)
[子树点亮]     └─ 点亮依赖节点: savlpus is babspus and gemhpus (深度5)
[子树点亮]     └─ 点亮依赖节点: jacjpus is muzzpus and nephpus (深度6)
[子树点亮]     └─ 点亮依赖节点: muzzpus is xafppus (深度6)
[子树点亮]     └─ 点亮依赖节点: xafppus is hurspus (深度6)
[子树点亮]     └─ 点亮依赖节点: hurspus is wuxrpus (深度6)
[子树点亮]     └─ 点亮依赖节点: wuxrpus is savlpus and xoycpus (深度6)
[子树点亮]     └─ 点亮依赖节点: savlpus is vidcpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 17 个节点
      ✅ 验证成功 + LoG匹配

   节点 122: x is babrpus and babspus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CI
      📋 推理路径: CI规则: x is babrpus → x is babspus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: x is babrpus
  - 前提: x is babspus

   节点 123: nugqpus is babgpus and migxpus and durlpus
      ↻ 重复节点，计数: 3

   节点 124: lesrpus is nugqpus
      ↻ 重复节点，计数: 3

   节点 125: pinhpus is lesrpus
      ↻ 重复节点，计数: 3

   节点 126: xaxkpus is pinhpus and comypus
      ↻ 重复节点，计数: 3

   节点 127: fesbpus is xaxkpus
      ↻ 重复节点，计数: 3

   节点 128: fozxpus is fesbpus
      ↻ 重复节点，计数: 3

   节点 129: pijypus is fozxpus
      ↻ 重复节点，计数: 3

   节点 130: ciqrpus is pijypus and muhvpus
      ↻ 重复节点，计数: 3

   节点 131: fahjpus is ciqrpus
      ↻ 重复节点，计数: 3

   节点 132: liwvpus is fahjpus
      ↻ 重复节点，计数: 3

   节点 133: x is liwvpus
      ↻ 重复节点，计数: 2

   节点 134: x is liwvpus
      ↻ 重复节点，计数: 3

   节点 135: liwvpus is fahjpus
      ↻ 重复节点，计数: 4

   节点 136: fahjpus is ciqrpus
      ↻ 重复节点，计数: 4

   节点 137: ciqrpus is pijypus
      🔍 验证新节点...
[后处理] 点亮LoG节点: ciqrpus is pijypus
      ✅ 验证成功 + LoG匹配

   节点 138: pijypus is fozxpus
      ↻ 重复节点，计数: 4

   节点 139: fozxpus is fesbpus
      ↻ 重复节点，计数: 4

   节点 140: fesbpus is xaxkpus
      ↻ 重复节点，计数: 4

   节点 141: xaxkpus is pinhpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: xaxkpus is pinhpus and comypus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: xaxkpus is pinhpus and comypus

   节点 142: pinhpus is lesrpus
      ↻ 重复节点，计数: 4

   节点 143: lesrpus is nugqpus
      ↻ 重复节点，计数: 4

   节点 144: nugqpus is babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: nugqpus is babgpus and migxpus and durlpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: nugqpus is babgpus and migxpus and durlpus
  ✓ 点亮LoG节点: nugqpus is babgpus and migxpus
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 145: x is babgpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is babgpus
[子树点亮]     └─ 点亮依赖节点: x is babgpus and migxpus (深度3)
[子树点亮]     └─ 点亮依赖节点: x is fesbpus (深度4)
[子树点亮]     └─ 点亮依赖节点: fesbpus is babgpus and migxpus (深度4)
[子树点亮]     └─ 点亮依赖节点: x is ciqrpus (深度5)
[子树点亮]     └─ 点亮依赖节点: ciqrpus is fesbpus (深度5)
[子树点亮]     └─ 点亮依赖节点: fesbpus is pinhpus (深度5)
[子树点亮]     └─ 点亮依赖节点: pinhpus is babgpus and migxpus (深度5)
[子树点亮]     └─ 点亮依赖节点: liwvpus is ciqrpus (深度6)
[子树点亮]     └─ 点亮依赖节点: pijypus is fesbpus (深度6)
[子树点亮]     └─ 点亮依赖节点: fesbpus is pinhpus and comypus (深度6)
[子树点亮]     └─ 点亮依赖节点: pinhpus is nugqpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 11 个节点
      ✅ 验证成功 + LoG匹配

   节点 146: x is babgpus and babrpus and babspus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is babgpus and babrpus and babspus
      ✅ 验证成功 + LoG匹配

🔍 分析推理路径完整性...

============================================================
[后处理] 处理完成
============================================================
📈 处理统计:
   - 处理的actual节点: 146
   - 新增节点: 23
   - 更新已存在节点: 123
   - 点亮的LoG节点: 51

🎯 推理质量统计:
   - 完美推理: 22 (节点正确 + 路径正确)
   - 部分推理: 1 (节点正确 + 路径部分错误)
   - 无效推理: 0 (节点错误或路径完全错误)
[LoG分析] LoG图: 51节点, 34前提, 复杂度1-34

📊 === Statement列表分析 ===
📈 节点统计:
   - 总节点数: 57
   - 前提节点: 34
   - 推理节点: 22
   - 幻觉节点: 1
   - 点亮LoG节点: 51

❌ 幻觉节点详情:
   - xfaqppus is yiqjpus (出现1次)

✅ 推理节点详情:
   🟢 x is mumppus (出现3次, 质量:perfect)
   🟢 x is hobmpus (出现1次, 质量:perfect)
   🟢 x is liwvpus (出现3次, 质量:perfect)
   🟢 x is novtpus (出现1次, 质量:perfect)
   🟢 bibjpus is babrpus (出现3次, 质量:perfect)
   🟢 roftpus is juxypus (出现3次, 质量:perfect)
   🟢 xaxdpus is roftpus (出现3次, 质量:perfect)
   🟢 bancpus is xaxdpus (出现3次, 质量:perfect)
   🟢 nurhpus is pitkpus (出现2次, 质量:perfect)
   🟢 x is babrpus (出现2次, 质量:perfect)
   🟢 vidcpus is babspus (出现3次, 质量:perfect)
   🟡 dofnpus is yiqjpus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['xfaqppus is yiqjpus']
   🟢 mumppus is jacjpus (出现2次, 质量:perfect)
   🟢 qaztpus is muzzpus (出现2次, 质量:perfect)
   🟢 mabwpus is savlpus (出现2次, 质量:perfect)
   🟢 x is babspus (出现1次, 质量:perfect)
   🟢 x is babrpus and babspus (出现1次, 质量:perfect)
   🟢 ciqrpus is pijypus (出现1次, 质量:perfect)
   🟢 xaxkpus is pinhpus (出现1次, 质量:perfect)
   🟢 nugqpus is babgpus (出现1次, 质量:perfect)
   🟢 x is babgpus (出现1次, 质量:perfect)
   🟢 x is babgpus and babrpus and babspus (出现1次, 质量:perfect)

🔥 点亮的LoG节点:
   - x is babspus
   - x is mumppus
   - x is liwvpus
   - mumppus is jacjpus and kivtpus
   - jacjpus is hurspus
   - fesbpus is pinhpus and comypus
   - x is ciqrpus
   - liwvpus is ciqrpus
   - pijypus is fesbpus
   - fesbpus is pinhpus
   - xaxdpus is roftpus
   - pitkpus is xaxdpus and kupnpus and jibjpus
   - x is pitkpus and rodhpus
   - x is jacjpus and kivtpus
   - hurspus is wuxrpus
   - juxypus is babrpus and bunzpus and docfpus
   - fesbpus is babgpus and migxpus
   - ciqrpus is pijypus
   - savlpus is babspus
   - muzzpus is hurspus
   - x is babrpus
   - x is hurspus
   - roftpus is juxypus
   - x is babgpus
   - x is babgpus and migxpus
   - juxypus is babrpus and bunzpus
   - ciqrpus is fesbpus
   - savlpus is vidcpus
   - pitkpus is xaxdpus and kupnpus
   - hurspus is savlpus and xoycpus
   - wuxrpus is savlpus and xoycpus
   - x is jacjpus
   - x is babgpus and babrpus and babspus
   - savlpus is babspus and gemhpus
   - x is pitkpus
   - jacjpus is muzzpus
   - xaxdpus is babrpus and bunzpus
   - jacjpus is muzzpus and nephpus
   - hurspus is savlpus
   - vidcpus is babspus and gemhpus
   - x is xaxdpus
   - xaxdpus is juxypus
   - muzzpus is xafppus
   - pinhpus is babgpus and migxpus
   - xaxdpus is babrpus
   - nugqpus is babgpus and migxpus
   - xafppus is hurspus
   - pinhpus is nugqpus
   - x is xaxdpus and kupnpus
   - hurspus is babspus
   - x is fesbpus

============================================================
📊 计算评估指标
============================================================

🎯 计算Coverage指标...
   深度Coverage: 6/6 = 100.00%
   最深点亮节点: x is babgpus and babrpus and babspus (第6层)
   节点Coverage: 51/51 = 100.00%
   前提条件Coverage: 34/34 = 100.00%
   各推理层点亮比例:
     第1层: 21/21 = 100.00%
     第2层: 13/13 = 100.00%
     第3层: 8/8 = 100.00%
     第4层: 5/5 = 100.00%
     第5层: 3/3 = 100.00%
     第6层: 1/1 = 100.00%

🎯 计算Precision指标...
   Error Rate: 1/23 = 4.35%
   可推导节点: 22/23
   Strict Error Rate: 2/23 = 8.70%
   严格有效节点: 21/23

   详细分析:
     完美推理: 22 (95.65%)
     部分推理: 1 (4.35%)
     无效推理: 0 (0.00%)

================================================================================
处理记录 3/50
================================================================================
记录索引: 2
问题状态: correct
📁 从缓存加载提取结果: evaluation_results.LoG_6.deepseek-reasoner_record_2.json
✅ 使用缓存结果:
   - 句子数: 147
   - 提取的语句数: 140
   - 初始条件数: 30

=== Statement提取完成 ===
总句子数: 147
成功提取: 147
失败提取: 0
总statements数: 140

=== 开始清洗Statement格式 ===
原始statements数: 140
清洗后statements数: 137
过滤掉的statements数: 3
清洗后的statements:
  1. [planning] x is babgpus
  2. [planning] x is babrpus
  3. [planning] x is babspus
  4. [planning] x is A
  5. [actual] x is ragypus
  6. [actual] x is suywpus
  7. [actual] x is cungpus and buhppus
  8. [planning] x is A
  9. [planning] x is B
  10. [planning] x is C
  11. [planning] x is multiple things
  12. [actual] lewppus is bimxpus
  13. [actual] sudfpus is qindpus
  14. [actual] jerhpus is cedjpus
  15. [actual] ravdpus is vuhlpus
  16. [actual] duggpus is jerhpus
  17. [actual] xujfpus is vutwpus and zepppus
  18. [actual] pugfpus is babgpus and zirlpus and feknpus
  19. [actual] yevmpus is sefkpus
  20. [actual] cungpus is duggpus and vagvpus
  21. [actual] waxspus is beytpus
  22. [actual] beytpus is weyypus
  23. [actual] sefkpus is hipspus
  24. [actual] sepnpus is sudfpus and rikkpus
  25. [actual] bimxpus is xujfpus
  26. [actual] pumrpus is babrpus and kapdpus and duyfpus
  27. [actual] hipspus is namxpus and funzpus
  28. [actual] fentpus is babspus and lizhpus and puzdpus
  29. [actual] vutwpus is fentpus
  30. [actual] konnpus is lewppus
  31. [actual] qindpus is waxspus
  32. [actual] vuhlpus is pumrpus
  33. [actual] weyypus is pugfpus
  34. [actual] suywpus is sepnpus and teqvpus
  35. [actual] ponlpus is ravdpus
  36. [actual] ragypus is yevmpus
  37. [actual] x is ragypus
  38. [actual] namxpus is konnpus
  39. [actual] x is suywpus
  40. [actual] cedjpus is ponlpus and vasxpus
  41. [actual] x is cungpus and buhppus
  42. [planning] x is babgpus
  43. [planning] x is babrpus
  44. [planning] x is babspus
  45. [actual] pugfpus is babgpus and zirlpus and feknpus
  46. [actual] pugfpus is babgpus
  47. [actual] babrpus is pumrpus and kapdpus and duyfpus
  48. [actual] pumrpus is babrpus
  49. [actual] babspus is babspus and lizhpus and puzdpus
  50. [actual] fentpus is babspus
  51. [planning] x is pugfpus
  52. [planning] x is pumrpus
  53. [planning] x is fentpus
  54. [actual] x is ragypus
  55. [actual] ragypus is yevmpus
  56. [actual] yevmpus is sefkpus
  57. [actual] sefkpus is hipspus
  58. [actual] hipspus is namxpus and funzpus
  59. [actual] namxpus is konnpus
  60. [actual] konnpus is lewppus
  61. [actual] lewppus is bimxpus
  62. [actual] bimxpus is xujfpus
  63. [actual] xujfpus is vutwpus and zepppus
  64. [actual] vutwpus is fentpus
  65. [actual] fentpus is babspus and lizhpus and puzdpus
  66. [actual] x is ragypus->yevmpus->sefkpus->hipspus->namxpus->konnpus->lewppus->bimxpus->xujfpus->vutwpus->fentpus->babspus
  67. [planning] x is babspus
  68. [actual] fentpus is babspus
  69. [planning] x is directly babspus
  70. [planning] x is categories that include babspus
  71. [actual] x is fentpus
  72. [actual] fentpus is babspus
  73. [actual] x is babspus
  74. [planning] x is fentpus
  75. [planning] x is fentpus
  76. [actual] ragypus is yevmpus
  77. [planning] ragypus is yevmpus category
  78. [actual] yevmpus is sefkpus
  79. [actual] yevmpus is sefkpus category
  80. [actual] sefkpus is hipspus
  81. [actual] hipspus is namxpus and funzpus
  82. [actual] namxpus is konnpus
  83. [actual] namxpus is konnpus
  84. [actual] konnpus is lewppus
  85. [planning] konnpus is lewppus
  86. [actual] lewppus is bimxpus
  87. [planning] lewppus is bimxpus
  88. [actual] bimxpus is xujfpus
  89. [actual] bimxpus is xujfpus
  90. [actual] xujfpus is vutwpus and zepppus
  91. [actual] xujfpus is vutwpus and zepppus
  92. [actual] vutwpus is fentpus
  93. [actual] vutwpus is fentpus
  94. [actual] x is ragypus
  95. [actual] ragypus is yevmpus
  96. [actual] yevmpus is sefkpus
  97. [actual] ragypus is fentpus
  98. [actual] ragypus is a category
  99. [actual] x is ragypus
  100. [actual] x is ragypus category
  101. [actual] ragypus is yevmpus
  102. [planning] x is yevmpus
  103. [planning] x is fentpus
  104. [actual] fentpus is babspus
  105. [planning] x is babspus
  106. [actual] x is babspus
  107. [actual] suywpus is sepnpus and teqvpus
  108. [actual] sepnpus is sudfpus and rikkpus
  109. [actual] sudfpus is qindpus
  110. [actual] qindpus is waxspus
  111. [actual] waxspus is beytpus
  112. [actual] beytpus is weyypus
  113. [actual] weyypus is pugfpus
  114. [actual] pugfpus is babgpus and zirlpus and feknpus
  115. [actual] x is suywpus->sepnpus->sudfpus->qindpus->waxspus->beytpus->weyypus->pugfpus->babgpus
  116. [actual] x is babgpus
  117. [actual] x is babgpus
  118. [planning] x is pumrpus
  119. [actual] pumrpus is babrpus
  120. [actual] x is cungpus
  121. [actual] cungpus is duggpus and vagvpus
  122. [actual] duggpus is jerhpus
  123. [actual] jerhpus is cedjpus
  124. [actual] cedjpus is ponlpus and vasxpus
  125. [actual] ponlpus is ravdpus
  126. [actual] ravdpus is vuhlpus
  127. [actual] vuhlpus is pumrpus
  128. [actual] pumrpus is babrpus and kapdpus and duyfpus
  129. [actual] x is babrpus
  130. [actual] x is babgpus and babrpus and babspus
  131. [actual] x is babgpus and babrpus and babspus
  132. [actual] x is ragypus
  133. [actual] x is suywpus
  134. [actual] x is cungpus
  135. [actual] x is bab categories
  136. [actual] x is ragypus
  137. [actual] ragypus is fentpus

=== 开始标准化和解析节点 ===
清洗后statements数: 137
标准化后节点数: 125
过滤掉的无效实体数: 12
标准化后的节点:
  1. [planning] x → babgpus (原始: x is babgpus)
  2. [planning] x → babrpus (原始: x is babrpus)
  3. [planning] x → babspus (原始: x is babspus)
  4. [actual] x → ragypus (原始: x is ragypus)
  5. [actual] x → suywpus (原始: x is suywpus)
  6. [actual] x → cungpus and buhppus (原始: x is cungpus and buhppus)
  7. [actual] lewppus → bimxpus (原始: lewppus is bimxpus)
  8. [actual] sudfpus → qindpus (原始: sudfpus is qindpus)
  9. [actual] jerhpus → cedjpus (原始: jerhpus is cedjpus)
  10. [actual] ravdpus → vuhlpus (原始: ravdpus is vuhlpus)
  11. [actual] duggpus → jerhpus (原始: duggpus is jerhpus)
  12. [actual] xujfpus → vutwpus and zepppus (原始: xujfpus is vutwpus and zepppus)
  13. [actual] pugfpus → babgpus and zirlpus and feknpus (原始: pugfpus is babgpus and zirlpus and feknpus)
  14. [actual] yevmpus → sefkpus (原始: yevmpus is sefkpus)
  15. [actual] cungpus → duggpus and vagvpus (原始: cungpus is duggpus and vagvpus)
  16. [actual] waxspus → beytpus (原始: waxspus is beytpus)
  17. [actual] beytpus → weyypus (原始: beytpus is weyypus)
  18. [actual] sefkpus → hipspus (原始: sefkpus is hipspus)
  19. [actual] sepnpus → sudfpus and rikkpus (原始: sepnpus is sudfpus and rikkpus)
  20. [actual] bimxpus → xujfpus (原始: bimxpus is xujfpus)
  21. [actual] pumrpus → babrpus and kapdpus and duyfpus (原始: pumrpus is babrpus and kapdpus and duyfpus)
  22. [actual] hipspus → namxpus and funzpus (原始: hipspus is namxpus and funzpus)
  23. [actual] fentpus → babspus and lizhpus and puzdpus (原始: fentpus is babspus and lizhpus and puzdpus)
  24. [actual] vutwpus → fentpus (原始: vutwpus is fentpus)
  25. [actual] konnpus → lewppus (原始: konnpus is lewppus)
  26. [actual] qindpus → waxspus (原始: qindpus is waxspus)
  27. [actual] vuhlpus → pumrpus (原始: vuhlpus is pumrpus)
  28. [actual] weyypus → pugfpus (原始: weyypus is pugfpus)
  29. [actual] suywpus → sepnpus and teqvpus (原始: suywpus is sepnpus and teqvpus)
  30. [actual] ponlpus → ravdpus (原始: ponlpus is ravdpus)
  31. [actual] ragypus → yevmpus (原始: ragypus is yevmpus)
  32. [actual] x → ragypus (原始: x is ragypus)
  33. [actual] namxpus → konnpus (原始: namxpus is konnpus)
  34. [actual] x → suywpus (原始: x is suywpus)
  35. [actual] cedjpus → ponlpus and vasxpus (原始: cedjpus is ponlpus and vasxpus)
  36. [actual] x → cungpus and buhppus (原始: x is cungpus and buhppus)
  37. [planning] x → babgpus (原始: x is babgpus)
  38. [planning] x → babrpus (原始: x is babrpus)
  39. [planning] x → babspus (原始: x is babspus)
  40. [actual] pugfpus → babgpus and zirlpus and feknpus (原始: pugfpus is babgpus and zirlpus and feknpus)
  41. [actual] pugfpus → babgpus (原始: pugfpus is babgpus)
  42. [actual] babrpus → pumrpus and kapdpus and duyfpus (原始: babrpus is pumrpus and kapdpus and duyfpus)
  43. [actual] pumrpus → babrpus (原始: pumrpus is babrpus)
  44. [actual] babspus → babspus and lizhpus and puzdpus (原始: babspus is babspus and lizhpus and puzdpus)
  45. [actual] fentpus → babspus (原始: fentpus is babspus)
  46. [planning] x → pugfpus (原始: x is pugfpus)
  47. [planning] x → pumrpus (原始: x is pumrpus)
  48. [planning] x → fentpus (原始: x is fentpus)
  49. [actual] x → ragypus (原始: x is ragypus)
  50. [actual] ragypus → yevmpus (原始: ragypus is yevmpus)
  51. [actual] yevmpus → sefkpus (原始: yevmpus is sefkpus)
  52. [actual] sefkpus → hipspus (原始: sefkpus is hipspus)
  53. [actual] hipspus → namxpus and funzpus (原始: hipspus is namxpus and funzpus)
  54. [actual] namxpus → konnpus (原始: namxpus is konnpus)
  55. [actual] konnpus → lewppus (原始: konnpus is lewppus)
  56. [actual] lewppus → bimxpus (原始: lewppus is bimxpus)
  57. [actual] bimxpus → xujfpus (原始: bimxpus is xujfpus)
  58. [actual] xujfpus → vutwpus and zepppus (原始: xujfpus is vutwpus and zepppus)
  59. [actual] vutwpus → fentpus (原始: vutwpus is fentpus)
  60. [actual] fentpus → babspus and lizhpus and puzdpus (原始: fentpus is babspus and lizhpus and puzdpus)
  61. [actual] x → ragypus->yevmpus->sefkpus->hipspus->namxpus->konnpus->lewppus->bimxpus->xujfpus->vutwpus->fentpus->babspus (原始: x is ragypus->yevmpus->sefkpus->hipspus->namxpus->konnpus->lewppus->bimxpus->xujfpus->vutwpus->fentpus->babspus)
  62. [planning] x → babspus (原始: x is babspus)
  63. [actual] fentpus → babspus (原始: fentpus is babspus)
  64. [actual] x → fentpus (原始: x is fentpus)
  65. [actual] fentpus → babspus (原始: fentpus is babspus)
  66. [actual] x → babspus (原始: x is babspus)
  67. [planning] x → fentpus (原始: x is fentpus)
  68. [planning] x → fentpus (原始: x is fentpus)
  69. [actual] ragypus → yevmpus (原始: ragypus is yevmpus)
  70. [actual] yevmpus → sefkpus (原始: yevmpus is sefkpus)
  71. [actual] sefkpus → hipspus (原始: sefkpus is hipspus)
  72. [actual] hipspus → namxpus and funzpus (原始: hipspus is namxpus and funzpus)
  73. [actual] namxpus → konnpus (原始: namxpus is konnpus)
  74. [actual] namxpus → konnpus (原始: namxpus is konnpus)
  75. [actual] konnpus → lewppus (原始: konnpus is lewppus)
  76. [planning] konnpus → lewppus (原始: konnpus is lewppus)
  77. [actual] lewppus → bimxpus (原始: lewppus is bimxpus)
  78. [planning] lewppus → bimxpus (原始: lewppus is bimxpus)
  79. [actual] bimxpus → xujfpus (原始: bimxpus is xujfpus)
  80. [actual] bimxpus → xujfpus (原始: bimxpus is xujfpus)
  81. [actual] xujfpus → vutwpus and zepppus (原始: xujfpus is vutwpus and zepppus)
  82. [actual] xujfpus → vutwpus and zepppus (原始: xujfpus is vutwpus and zepppus)
  83. [actual] vutwpus → fentpus (原始: vutwpus is fentpus)
  84. [actual] vutwpus → fentpus (原始: vutwpus is fentpus)
  85. [actual] x → ragypus (原始: x is ragypus)
  86. [actual] ragypus → yevmpus (原始: ragypus is yevmpus)
  87. [actual] yevmpus → sefkpus (原始: yevmpus is sefkpus)
  88. [actual] ragypus → fentpus (原始: ragypus is fentpus)
  89. [actual] x → ragypus (原始: x is ragypus)
  90. [actual] ragypus → yevmpus (原始: ragypus is yevmpus)
  91. [planning] x → yevmpus (原始: x is yevmpus)
  92. [planning] x → fentpus (原始: x is fentpus)
  93. [actual] fentpus → babspus (原始: fentpus is babspus)
  94. [planning] x → babspus (原始: x is babspus)
  95. [actual] x → babspus (原始: x is babspus)
  96. [actual] suywpus → sepnpus and teqvpus (原始: suywpus is sepnpus and teqvpus)
  97. [actual] sepnpus → sudfpus and rikkpus (原始: sepnpus is sudfpus and rikkpus)
  98. [actual] sudfpus → qindpus (原始: sudfpus is qindpus)
  99. [actual] qindpus → waxspus (原始: qindpus is waxspus)
  100. [actual] waxspus → beytpus (原始: waxspus is beytpus)
  101. [actual] beytpus → weyypus (原始: beytpus is weyypus)
  102. [actual] weyypus → pugfpus (原始: weyypus is pugfpus)
  103. [actual] pugfpus → babgpus and zirlpus and feknpus (原始: pugfpus is babgpus and zirlpus and feknpus)
  104. [actual] x → suywpus->sepnpus->sudfpus->qindpus->waxspus->beytpus->weyypus->pugfpus->babgpus (原始: x is suywpus->sepnpus->sudfpus->qindpus->waxspus->beytpus->weyypus->pugfpus->babgpus)
  105. [actual] x → babgpus (原始: x is babgpus)
  106. [actual] x → babgpus (原始: x is babgpus)
  107. [planning] x → pumrpus (原始: x is pumrpus)
  108. [actual] pumrpus → babrpus (原始: pumrpus is babrpus)
  109. [actual] x → cungpus (原始: x is cungpus)
  110. [actual] cungpus → duggpus and vagvpus (原始: cungpus is duggpus and vagvpus)
  111. [actual] duggpus → jerhpus (原始: duggpus is jerhpus)
  112. [actual] jerhpus → cedjpus (原始: jerhpus is cedjpus)
  113. [actual] cedjpus → ponlpus and vasxpus (原始: cedjpus is ponlpus and vasxpus)
  114. [actual] ponlpus → ravdpus (原始: ponlpus is ravdpus)
  115. [actual] ravdpus → vuhlpus (原始: ravdpus is vuhlpus)
  116. [actual] vuhlpus → pumrpus (原始: vuhlpus is pumrpus)
  117. [actual] pumrpus → babrpus and kapdpus and duyfpus (原始: pumrpus is babrpus and kapdpus and duyfpus)
  118. [actual] x → babrpus (原始: x is babrpus)
  119. [actual] x → babgpus and babrpus and babspus (原始: x is babgpus and babrpus and babspus)
  120. [actual] x → babgpus and babrpus and babspus (原始: x is babgpus and babrpus and babspus)
  121. [actual] x → ragypus (原始: x is ragypus)
  122. [actual] x → suywpus (原始: x is suywpus)
  123. [actual] x → cungpus (原始: x is cungpus)
  124. [actual] x → ragypus (原始: x is ragypus)
  125. [actual] ragypus → fentpus (原始: ragypus is fentpus)

开始新的后处理...
[后处理] 从LoG数据文件中获取到图数据，节点数: 41
[后处理] 加载LoG图，包含 41 个节点
  LoG节点 0: x is babgpus and babrpus and babspus (规则: CI, 深度: 1)
  LoG节点 1: x is babgpus (规则: CE, 深度: 2)
  LoG节点 2: x is babrpus (规则: CE, 深度: 2)
  LoG节点 3: x is babspus (规则: CE, 深度: 2)
  LoG节点 4: x is babgpus and zirlpus (规则: MP, 深度: 3)
  LoG节点 5: x is babrpus and kapdpus (规则: MP, 深度: 3)
  LoG节点 6: x is babspus and lizhpus (规则: MP, 深度: 3)
  LoG节点 7: x is waxspus (规则: MP, 深度: 4)
  LoG节点 8: waxspus is babgpus and zirlpus (规则: CE, 深度: 4)
  LoG节点 9: x is ponlpus (规则: MP, 深度: 4)
  LoG节点 10: ponlpus is babrpus and kapdpus (规则: CE, 深度: 4)
  LoG节点 11: x is lewppus (规则: MP, 深度: 4)
  LoG节点 12: lewppus is babspus and lizhpus (规则: MP, 深度: 4)
  LoG节点 13: x is sepnpus (规则: CE, 深度: 5)
  LoG节点 14: sepnpus is waxspus (规则: MP, 深度: 5)
  LoG节点 15: waxspus is babgpus and zirlpus and feknpus (规则: MP, 深度: 5)
  LoG节点 16: x is duggpus (规则: MP, 深度: 5)
  LoG节点 17: duggpus is ponlpus (规则: MP, 深度: 5)
  LoG节点 18: ponlpus is babrpus and kapdpus and duyfpus (规则: MP, 深度: 5)
  LoG节点 19: x is hipspus (规则: MP, 深度: 5)
  LoG节点 20: hipspus is lewppus (规则: MP, 深度: 5)
  LoG节点 21: lewppus is vutwpus (规则: MP, 深度: 5)
  LoG节点 22: vutwpus is babspus and lizhpus (规则: CE, 深度: 5)
  LoG节点 23: x is sepnpus and teqvpus (规则: MP, 深度: 6)
  LoG节点 24: sepnpus is sudfpus (规则: CE, 深度: 6)
  LoG节点 25: sudfpus is waxspus (规则: MP, 深度: 6)
  LoG节点 26: waxspus is weyypus (规则: MP, 深度: 6)
  LoG节点 27: weyypus is babgpus and zirlpus and feknpus (规则: MP, 深度: 6)
  LoG节点 28: x is cungpus (规则: CE, 深度: 6)
  LoG节点 29: cungpus is duggpus (规则: CE, 深度: 6)
  LoG节点 30: duggpus is cedjpus (规则: MP, 深度: 6)
  LoG节点 31: cedjpus is ponlpus (规则: CE, 深度: 6)
  LoG节点 32: ponlpus is vuhlpus (规则: MP, 深度: 6)
  LoG节点 33: vuhlpus is babrpus and kapdpus and duyfpus (规则: MP, 深度: 6)
  LoG节点 34: x is yevmpus (规则: MP, 深度: 6)
  LoG节点 35: yevmpus is hipspus (规则: MP, 深度: 6)
  LoG节点 36: hipspus is namxpus (规则: CE, 深度: 6)
  LoG节点 37: namxpus is lewppus (规则: MP, 深度: 6)
  LoG节点 38: lewppus is xujfpus (规则: MP, 深度: 6)
  LoG节点 39: xujfpus is vutwpus (规则: CE, 深度: 6)
  LoG节点 40: vutwpus is babspus and lizhpus and puzdpus (规则: MP, 深度: 6)

============================================================
[后处理] 开始处理节点
============================================================
📊 初始状态:
   - 标准化节点数: 125
   - 初始条件数: 30
   - LoG图节点数: 41

📋 初始条件列表:
    1. lewppus is bimxpus
    2. sudfpus is qindpus
    3. jerhpus is cedjpus
    4. ravdpus is vuhlpus
    5. duggpus is jerhpus
    6. xujfpus is vutwpus and zepppus
    7. pugfpus is babgpus and zirlpus and feknpus
    8. yevmpus is sefkpus
    9. cungpus is duggpus and vagvpus
   10. waxspus is beytpus
   11. beytpus is weyypus
   12. sefkpus is hipspus
   13. sepnpus is sudfpus and rikkpus
   14. bimxpus is xujfpus
   15. pumrpus is babrpus and kapdpus and duyfpus
   16. hipspus is namxpus and funzpus
   17. fentpus is babspus and lizhpus and puzdpus
   18. vutwpus is fentpus
   19. konnpus is lewppus
   20. qindpus is waxspus
   21. vuhlpus is pumrpus
   22. weyypus is pugfpus
   23. suywpus is sepnpus and teqvpus
   24. ponlpus is ravdpus
   25. ragypus is yevmpus
   26. x is ragypus
   27. namxpus is konnpus
   28. x is suywpus
   29. cedjpus is ponlpus and vasxpus
   30. x is cungpus and buhppus

🔧 构建初始Statement列表...
✅ 初始Statement列表构建完成，包含 30 个前提节点

🔍 开始处理actual节点...

   节点 1: x is ragypus
      ↻ 重复节点，计数: 2

   节点 2: x is suywpus
      ↻ 重复节点，计数: 2

   节点 3: x is cungpus and buhppus
      ↻ 重复节点，计数: 2

   节点 4: lewppus is bimxpus
      ↻ 重复节点，计数: 2

   节点 5: sudfpus is qindpus
      ↻ 重复节点，计数: 2

   节点 6: jerhpus is cedjpus
      ↻ 重复节点，计数: 2

   节点 7: ravdpus is vuhlpus
      ↻ 重复节点，计数: 2

   节点 8: duggpus is jerhpus
      ↻ 重复节点，计数: 2

   节点 9: xujfpus is vutwpus and zepppus
      ↻ 重复节点，计数: 2

   节点 10: pugfpus is babgpus and zirlpus and feknpus
      ↻ 重复节点，计数: 2

   节点 11: yevmpus is sefkpus
      ↻ 重复节点，计数: 2

   节点 12: cungpus is duggpus and vagvpus
      ↻ 重复节点，计数: 2

   节点 13: waxspus is beytpus
      ↻ 重复节点，计数: 2

   节点 14: beytpus is weyypus
      ↻ 重复节点，计数: 2

   节点 15: sefkpus is hipspus
      ↻ 重复节点，计数: 2

   节点 16: sepnpus is sudfpus and rikkpus
      ↻ 重复节点，计数: 2

   节点 17: bimxpus is xujfpus
      ↻ 重复节点，计数: 2

   节点 18: pumrpus is babrpus and kapdpus and duyfpus
      ↻ 重复节点，计数: 2

   节点 19: hipspus is namxpus and funzpus
      ↻ 重复节点，计数: 2

   节点 20: fentpus is babspus and lizhpus and puzdpus
      ↻ 重复节点，计数: 2

   节点 21: vutwpus is fentpus
      ↻ 重复节点，计数: 2

   节点 22: konnpus is lewppus
      ↻ 重复节点，计数: 2

   节点 23: qindpus is waxspus
      ↻ 重复节点，计数: 2

   节点 24: vuhlpus is pumrpus
      ↻ 重复节点，计数: 2

   节点 25: weyypus is pugfpus
      ↻ 重复节点，计数: 2

   节点 26: suywpus is sepnpus and teqvpus
      ↻ 重复节点，计数: 2

   节点 27: ponlpus is ravdpus
      ↻ 重复节点，计数: 2

   节点 28: ragypus is yevmpus
      ↻ 重复节点，计数: 2

   节点 29: x is ragypus
      ↻ 重复节点，计数: 3

   节点 30: namxpus is konnpus
      ↻ 重复节点，计数: 2

   节点 31: x is suywpus
      ↻ 重复节点，计数: 3

   节点 32: cedjpus is ponlpus and vasxpus
      ↻ 重复节点，计数: 2

   节点 33: x is cungpus and buhppus
      ↻ 重复节点，计数: 3

   节点 34: pugfpus is babgpus and zirlpus and feknpus
      ↻ 重复节点，计数: 3

   节点 35: pugfpus is babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: pugfpus is babgpus and zirlpus and feknpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: pugfpus is babgpus and zirlpus and feknpus

   节点 36: babrpus is pumrpus and kapdpus and duyfpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 37: pumrpus is babrpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: pumrpus is babrpus and kapdpus and duyfpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: pumrpus is babrpus and kapdpus and duyfpus

   节点 38: babspus is babspus and lizhpus and puzdpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 39: fentpus is babspus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: fentpus is babspus and lizhpus and puzdpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: fentpus is babspus and lizhpus and puzdpus

   节点 40: x is ragypus
      ↻ 重复节点，计数: 4

   节点 41: ragypus is yevmpus
      ↻ 重复节点，计数: 3

   节点 42: yevmpus is sefkpus
      ↻ 重复节点，计数: 3

   节点 43: sefkpus is hipspus
      ↻ 重复节点，计数: 3

   节点 44: hipspus is namxpus and funzpus
      ↻ 重复节点，计数: 3

   节点 45: namxpus is konnpus
      ↻ 重复节点，计数: 3

   节点 46: konnpus is lewppus
      ↻ 重复节点，计数: 3

   节点 47: lewppus is bimxpus
      ↻ 重复节点，计数: 3

   节点 48: bimxpus is xujfpus
      ↻ 重复节点，计数: 3

   节点 49: xujfpus is vutwpus and zepppus
      ↻ 重复节点，计数: 3

   节点 50: vutwpus is fentpus
      ↻ 重复节点，计数: 3

   节点 51: fentpus is babspus and lizhpus and puzdpus
      ↻ 重复节点，计数: 3

   节点 52: x is ragypus->yevmpus->sefkpus->hipspus->namxpus->konnpus->lewppus->bimxpus->xujfpus->vutwpus->fentpus->babspus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 53: fentpus is babspus
      ↻ 重复节点，计数: 2

   节点 54: x is fentpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is ragypus → ragypus is fentpus
[后处理] 基于推理轨迹点亮节点，使用了 11 个前提条件:
  - 前提: x is ragypus
  - 前提: ragypus is yevmpus
  - 前提: yevmpus is sefkpus
  - 前提: sefkpus is hipspus
  - 前提: hipspus is namxpus and funzpus
  - 前提: namxpus is konnpus
  - 前提: konnpus is lewppus
  - 前提: lewppus is bimxpus
  - 前提: bimxpus is xujfpus
  - 前提: xujfpus is vutwpus and zepppus
  - 前提: vutwpus is fentpus
  ✓ 点亮LoG节点: x is lewppus
[子树点亮]     └─ 点亮依赖节点: x is hipspus (深度5)
[子树点亮]     └─ 点亮依赖节点: hipspus is lewppus (深度5)
[子树点亮]     └─ 点亮依赖节点: x is yevmpus (深度6)
[子树点亮]     └─ 点亮依赖节点: yevmpus is hipspus (深度6)
[子树点亮]     └─ 点亮依赖节点: hipspus is namxpus (深度6)
[子树点亮]     └─ 点亮依赖节点: namxpus is lewppus (深度6)
[后处理]   └─ 自动点亮依赖子树: 6 个节点
  ✓ 点亮LoG节点: lewppus is vutwpus
[子树点亮]     └─ 点亮依赖节点: lewppus is xujfpus (深度6)
[子树点亮]     └─ 点亮依赖节点: xujfpus is vutwpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 2 个节点
[后处理] 通过推理轨迹额外点亮了 2 个LoG节点

   节点 55: fentpus is babspus
      ↻ 重复节点，计数: 3

   节点 56: x is babspus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is babspus
[子树点亮]     └─ 点亮依赖节点: x is babspus and lizhpus (深度3)
[子树点亮]     └─ 点亮依赖节点: lewppus is babspus and lizhpus (深度4)
[子树点亮]     └─ 点亮依赖节点: vutwpus is babspus and lizhpus (深度5)
[子树点亮]     └─ 点亮依赖节点: vutwpus is babspus and lizhpus and puzdpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 4 个节点
      ✅ 验证成功 + LoG匹配

   节点 57: ragypus is yevmpus
      ↻ 重复节点，计数: 4

   节点 58: yevmpus is sefkpus
      ↻ 重复节点，计数: 4

   节点 59: sefkpus is hipspus
      ↻ 重复节点，计数: 4

   节点 60: hipspus is namxpus and funzpus
      ↻ 重复节点，计数: 4

   节点 61: namxpus is konnpus
      ↻ 重复节点，计数: 4

   节点 62: namxpus is konnpus
      ↻ 重复节点，计数: 5

   节点 63: konnpus is lewppus
      ↻ 重复节点，计数: 4

   节点 64: lewppus is bimxpus
      ↻ 重复节点，计数: 4

   节点 65: bimxpus is xujfpus
      ↻ 重复节点，计数: 4

   节点 66: bimxpus is xujfpus
      ↻ 重复节点，计数: 5

   节点 67: xujfpus is vutwpus and zepppus
      ↻ 重复节点，计数: 4

   节点 68: xujfpus is vutwpus and zepppus
      ↻ 重复节点，计数: 5

   节点 69: vutwpus is fentpus
      ↻ 重复节点，计数: 4

   节点 70: vutwpus is fentpus
      ↻ 重复节点，计数: 5

   节点 71: x is ragypus
      ↻ 重复节点，计数: 5

   节点 72: ragypus is yevmpus
      ↻ 重复节点，计数: 5

   节点 73: yevmpus is sefkpus
      ↻ 重复节点，计数: 5

   节点 74: ragypus is fentpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: ragypus is yevmpus → yevmpus is fentpus
[后处理] 基于推理轨迹点亮节点，使用了 10 个前提条件:
  - 前提: ragypus is yevmpus
  - 前提: yevmpus is sefkpus
  - 前提: sefkpus is hipspus
  - 前提: hipspus is namxpus and funzpus
  - 前提: namxpus is konnpus
  - 前提: konnpus is lewppus
  - 前提: lewppus is bimxpus
  - 前提: bimxpus is xujfpus
  - 前提: xujfpus is vutwpus and zepppus
  - 前提: vutwpus is fentpus

   节点 75: x is ragypus
      ↻ 重复节点，计数: 6

   节点 76: ragypus is yevmpus
      ↻ 重复节点，计数: 6

   节点 77: fentpus is babspus
      ↻ 重复节点，计数: 4

   节点 78: x is babspus
      ↻ 重复节点，计数: 2

   节点 79: suywpus is sepnpus and teqvpus
      ↻ 重复节点，计数: 3

   节点 80: sepnpus is sudfpus and rikkpus
      ↻ 重复节点，计数: 3

   节点 81: sudfpus is qindpus
      ↻ 重复节点，计数: 3

   节点 82: qindpus is waxspus
      ↻ 重复节点，计数: 3

   节点 83: waxspus is beytpus
      ↻ 重复节点，计数: 3

   节点 84: beytpus is weyypus
      ↻ 重复节点，计数: 3

   节点 85: weyypus is pugfpus
      ↻ 重复节点，计数: 3

   节点 86: pugfpus is babgpus and zirlpus and feknpus
      ↻ 重复节点，计数: 4

   节点 87: x is suywpus->sepnpus->sudfpus->qindpus->waxspus->beytpus->weyypus->pugfpus->babgpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 88: x is babgpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is babgpus
[子树点亮]     └─ 点亮依赖节点: x is babgpus and zirlpus (深度3)
[子树点亮]     └─ 点亮依赖节点: x is waxspus (深度4)
[子树点亮]     └─ 点亮依赖节点: waxspus is babgpus and zirlpus (深度4)
[子树点亮]     └─ 点亮依赖节点: x is sepnpus (深度5)
[子树点亮]     └─ 点亮依赖节点: sepnpus is waxspus (深度5)
[子树点亮]     └─ 点亮依赖节点: waxspus is babgpus and zirlpus and feknpus (深度5)
[子树点亮]     └─ 点亮依赖节点: x is sepnpus and teqvpus (深度6)
[子树点亮]     └─ 点亮依赖节点: sepnpus is sudfpus (深度6)
[子树点亮]     └─ 点亮依赖节点: sudfpus is waxspus (深度6)
[子树点亮]     └─ 点亮依赖节点: waxspus is weyypus (深度6)
[子树点亮]     └─ 点亮依赖节点: weyypus is babgpus and zirlpus and feknpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 11 个节点
      ✅ 验证成功 + LoG匹配

   节点 89: x is babgpus
      ↻ 重复节点，计数: 2

   节点 90: pumrpus is babrpus
      ↻ 重复节点，计数: 2

   节点 91: x is cungpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is cungpus
      ✅ 验证成功 + LoG匹配

   节点 92: cungpus is duggpus and vagvpus
      ↻ 重复节点，计数: 3

   节点 93: duggpus is jerhpus
      ↻ 重复节点，计数: 3

   节点 94: jerhpus is cedjpus
      ↻ 重复节点，计数: 3

   节点 95: cedjpus is ponlpus and vasxpus
      ↻ 重复节点，计数: 3

   节点 96: ponlpus is ravdpus
      ↻ 重复节点，计数: 3

   节点 97: ravdpus is vuhlpus
      ↻ 重复节点，计数: 3

   节点 98: vuhlpus is pumrpus
      ↻ 重复节点，计数: 3

   节点 99: pumrpus is babrpus and kapdpus and duyfpus
      ↻ 重复节点，计数: 3

   节点 100: x is babrpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is babrpus
[子树点亮]     └─ 点亮依赖节点: x is babrpus and kapdpus (深度3)
[子树点亮]     └─ 点亮依赖节点: x is ponlpus (深度4)
[子树点亮]     └─ 点亮依赖节点: ponlpus is babrpus and kapdpus (深度4)
[子树点亮]     └─ 点亮依赖节点: x is duggpus (深度5)
[子树点亮]     └─ 点亮依赖节点: duggpus is ponlpus (深度5)
[子树点亮]     └─ 点亮依赖节点: ponlpus is babrpus and kapdpus and duyfpus (深度5)
[子树点亮]     └─ 点亮依赖节点: cungpus is duggpus (深度6)
[子树点亮]     └─ 点亮依赖节点: duggpus is cedjpus (深度6)
[子树点亮]     └─ 点亮依赖节点: cedjpus is ponlpus (深度6)
[子树点亮]     └─ 点亮依赖节点: ponlpus is vuhlpus (深度6)
[子树点亮]     └─ 点亮依赖节点: vuhlpus is babrpus and kapdpus and duyfpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 11 个节点
      ✅ 验证成功 + LoG匹配

   节点 101: x is babgpus and babrpus and babspus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is babgpus and babrpus and babspus
      ✅ 验证成功 + LoG匹配

   节点 102: x is babgpus and babrpus and babspus
      ↻ 重复节点，计数: 2

   节点 103: x is ragypus
      ↻ 重复节点，计数: 7

   节点 104: x is suywpus
      ↻ 重复节点，计数: 4

   节点 105: x is cungpus
      ↻ 重复节点，计数: 2

   节点 106: x is ragypus
      ↻ 重复节点，计数: 8

   节点 107: ragypus is fentpus
      ↻ 重复节点，计数: 2

🔍 分析推理路径完整性...

============================================================
[后处理] 处理完成
============================================================
📈 处理统计:
   - 处理的actual节点: 107
   - 新增节点: 14
   - 更新已存在节点: 93
   - 点亮的LoG节点: 41

🎯 推理质量统计:
   - 完美推理: 6 (节点正确 + 路径正确)
   - 部分推理: 8 (节点正确 + 路径部分错误)
   - 无效推理: 0 (节点错误或路径完全错误)
[LoG分析] LoG图: 41节点, 30前提, 复杂度1-30

📊 === Statement列表分析 ===
📈 节点统计:
   - 总节点数: 44
   - 前提节点: 30
   - 推理节点: 10
   - 幻觉节点: 4
   - 点亮LoG节点: 41

❌ 幻觉节点详情:
   - babrpus is pumrpus and kapdpus and duyfpus (出现1次)
   - babspus is babspus and lizhpus and puzdpus (出现1次)
   - x is ragypus->yevmpus->sefkpus->hipspus->namxpus->konnpus->lewppus->bimxpus->xujfpus->vutwpus->fentpus->babspus (出现1次)
   - x is suywpus->sepnpus->sudfpus->qindpus->waxspus->beytpus->weyypus->pugfpus->babgpus (出现1次)

✅ 推理节点详情:
   🟢 pugfpus is babgpus (出现1次, 质量:perfect)
   🟢 pumrpus is babrpus (出现2次, 质量:perfect)
   🟢 fentpus is babspus (出现4次, 质量:perfect)
   🟡 x is fentpus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['x is ragypus->yevmpus->sefkpus->hipspus->namxpus->konnpus->lewppus->bimxpus->xujfpus->vutwpus->fentpus->babspus', 'x is suywpus->sepnpus->sudfpus->qindpus->waxspus->beytpus->weyypus->pugfpus->babgpus']
   🟡 x is babspus (出现2次, 质量:partial)
      ⚠️  无效依赖: ['x is ragypus->yevmpus->sefkpus->hipspus->namxpus->konnpus->lewppus->bimxpus->xujfpus->vutwpus->fentpus->babspus', 'x is suywpus->sepnpus->sudfpus->qindpus->waxspus->beytpus->weyypus->pugfpus->babgpus']
   🟢 ragypus is fentpus (出现2次, 质量:perfect)
   🟡 x is babgpus (出现2次, 质量:partial)
      ⚠️  无效依赖: ['x is ragypus->yevmpus->sefkpus->hipspus->namxpus->konnpus->lewppus->bimxpus->xujfpus->vutwpus->fentpus->babspus', 'x is suywpus->sepnpus->sudfpus->qindpus->waxspus->beytpus->weyypus->pugfpus->babgpus']
   🟡 x is cungpus (出现2次, 质量:partial)
      ⚠️  无效依赖: ['x is ragypus->yevmpus->sefkpus->hipspus->namxpus->konnpus->lewppus->bimxpus->xujfpus->vutwpus->fentpus->babspus', 'x is suywpus->sepnpus->sudfpus->qindpus->waxspus->beytpus->weyypus->pugfpus->babgpus']
   🟡 x is babrpus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['x is ragypus->yevmpus->sefkpus->hipspus->namxpus->konnpus->lewppus->bimxpus->xujfpus->vutwpus->fentpus->babspus', 'x is suywpus->sepnpus->sudfpus->qindpus->waxspus->beytpus->weyypus->pugfpus->babgpus']
   🟡 x is babgpus and babrpus and babspus (出现2次, 质量:partial)
      ⚠️  无效依赖: ['x is ragypus->yevmpus->sefkpus->hipspus->namxpus->konnpus->lewppus->bimxpus->xujfpus->vutwpus->fentpus->babspus', 'x is suywpus->sepnpus->sudfpus->qindpus->waxspus->beytpus->weyypus->pugfpus->babgpus']

🔥 点亮的LoG节点:
   - hipspus is namxpus
   - x is babgpus and zirlpus
   - x is yevmpus
   - x is babspus
   - waxspus is babgpus and zirlpus
   - ponlpus is vuhlpus
   - ponlpus is babrpus and kapdpus
   - x is lewppus
   - sepnpus is waxspus
   - x is cungpus
   - duggpus is cedjpus
   - hipspus is lewppus
   - x is sepnpus
   - sudfpus is waxspus
   - namxpus is lewppus
   - x is babrpus
   - x is babgpus
   - weyypus is babgpus and zirlpus and feknpus
   - lewppus is babspus and lizhpus
   - x is sepnpus and teqvpus
   - duggpus is ponlpus
   - ponlpus is babrpus and kapdpus and duyfpus
   - x is hipspus
   - x is babrpus and kapdpus
   - waxspus is weyypus
   - x is duggpus
   - cedjpus is ponlpus
   - x is babgpus and babrpus and babspus
   - vutwpus is babspus and lizhpus and puzdpus
   - lewppus is xujfpus
   - yevmpus is hipspus
   - x is ponlpus
   - cungpus is duggpus
   - lewppus is vutwpus
   - xujfpus is vutwpus
   - x is babspus and lizhpus
   - vutwpus is babspus and lizhpus
   - vuhlpus is babrpus and kapdpus and duyfpus
   - waxspus is babgpus and zirlpus and feknpus
   - x is waxspus
   - sepnpus is sudfpus

============================================================
📊 计算评估指标
============================================================

🎯 计算Coverage指标...
   深度Coverage: 6/6 = 100.00%
   最深点亮节点: x is babgpus and babrpus and babspus (第6层)
   节点Coverage: 41/41 = 100.00%
   前提条件Coverage: 30/30 = 100.00%
   各推理层点亮比例:
     第1层: 18/18 = 100.00%
     第2层: 10/10 = 100.00%
     第3层: 6/6 = 100.00%
     第4层: 3/3 = 100.00%
     第5层: 3/3 = 100.00%
     第6层: 1/1 = 100.00%

🎯 计算Precision指标...
   Error Rate: 4/14 = 28.57%
   可推导节点: 10/14
   Strict Error Rate: 10/14 = 71.43%
   严格有效节点: 4/14

   详细分析:
     完美推理: 6 (42.86%)
     部分推理: 8 (57.14%)
     无效推理: 0 (0.00%)

================================================================================
处理记录 4/50
================================================================================
记录索引: 3
问题状态: correct
📁 从缓存加载提取结果: evaluation_results.LoG_6.deepseek-reasoner_record_3.json
✅ 使用缓存结果:
   - 句子数: 129
   - 提取的语句数: 163
   - 初始条件数: 9

=== Statement提取完成 ===
总句子数: 129
成功提取: 129
失败提取: 0
总statements数: 163

=== 开始清洗Statement格式 ===
原始statements数: 163
清洗后statements数: 144
过滤掉的statements数: 19
清洗后的statements:
  1. [actual] savspus is komhpus
  2. [actual] komhpus is kerlpus and nayjpus
  3. [actual] komhpus is kerlpus and nayjpus
  4. [actual] komhpus is kerlpus and nayjpus
  5. [planning] komhpus is kerlpus
  6. [planning] komhpus is nayjpus
  7. [actual] x is babgpus
  8. [actual] lerwpus is yexbpus
  9. [actual] yexbpus is lerwpus and pazjpus
  10. [planning] x is babgpus and babkpus and babmpus?
  11. [actual] savspus is komhpus
  12. [actual] komhpus is kerlpus and nayjpus
  13. [actual] kadypus is savspus and becmpus and jepmpus
  14. [actual] buxnpus is keyfpus
  15. [actual] sarhpus is kadypus and qowvpus
  16. [actual] vasxpus is babgpus and hobxpus and hommpus
  17. [actual] buxnpus is sarhpus
  18. [actual] x is buxnpus and wohwpus
  19. [actual] kerlpus is vasxpus
  20. [planning] x is babgpus
  21. [planning] x is babrpus
  22. [planning] x is babgpus
  23. [planning] x is babrpus
  24. [actual] x is buxnpus and wohwpus
  25. [actual] x is buxnpus and wohwpus
  26. [planning] x is babgpus
  27. [planning] x is babrpus
  28. [actual] babgpus is mentioned in
  29. [actual] vasxpus is babgpus and hobxpus and hommpus
  30. [planning] vasxpus is babgpus
  31. [planning] vasxpus is a type of babgpus
  32. [actual] vasxpus is babgpus
  33. [actual] vasxpus is a subset of babgpus
  34. [actual] vasxpus is a member of babgpus
  35. [planning] x is vasxpus
  36. [planning] x is babgpus
  37. [actual] x is buxnpus
  38. [planning] buxnpus is keyfpus
  39. [planning] buxnpus is keyfpus
  40. [actual] buxnpus is keyfpus
  41. [actual] buxnpus is sarhpus
  42. [actual] buxnpus is keyfpus
  43. [actual] buxnpus is keyfpus
  44. [actual] buxnpus is sarhpus
  45. [actual] buxnpus is sarhpus
  46. [actual] x is buxnpus
  47. [actual] x is a member of buxnpus
  48. [actual] buxxnpus is keyfpus
  49. [planning] x is keyfpus
  50. [planning] x is sarhpus
  51. [actual] x is buxnpus
  52. [actual] buxnpus is sarhpus
  53. [actual] buxnpus is sarhpus
  54. [actual] buxnpus is keyfpus
  55. [actual] sarhpus is kadypus and qowvpus
  56. [actual] sarhpus is kadypus
  57. [actual] sarhpus is qowvpus
  58. [actual] buxnpus is sarhpus
  59. [actual] sarhpus is kadypus
  60. [actual] buxnpus is kadypus
  61. [planning] buxnpus is kadypus
  62. [actual] buxnpus is qowvpus
  63. [actual] kadypus is savspus and becmpus and jepmpus
  64. [actual] kadypus is savspus and becmpus and jepmpus
  65. [actual] buxnpus is kadypus
  66. [actual] buxnpus is savspus
  67. [actual] kerlpus is vasxpus
  68. [actual] kerlpus is vasxpus
  69. [actual] vasxpus is babgpus and hobxpus and hommpus
  70. [actual] vasxpus is babgpus
  71. [planning] vasxpus is babgpus
  72. [actual] vasxpus is babgpus
  73. [actual] vasxpus is a subset of babgpus
  74. [planning] x is vasxpus
  75. [planning] x is vasxpus
  76. [actual] komhpus is kerlpus
  77. [actual] komhpus is nayjpus
  78. [actual] kerlpus is vasxpus
  79. [actual] komhpus is kerlpus
  80. [actual] kerlpus is vasxpus
  81. [actual] komhpus is vasxpus
  82. [actual] savspus is komhpus
  83. [actual] komhpus is vasxpus
  84. [actual] savspus is vasxpus
  85. [actual] kadypus is savspus
  86. [actual] savspus is vasxpus
  87. [actual] kadypus is vasxpus
  88. [actual] sarhpus is kadypus
  89. [actual] kadypus is vasxpus
  90. [actual] sarhpus is vasxpus
  91. [actual] buxnpus is sarhpus
  92. [actual] buxnpus is vasxpus
  93. [actual] x is buxnpus
  94. [actual] buxnpus is vasxpus
  95. [actual] x is vasxpus
  96. [actual] vasxpus is babgpus
  97. [actual] x is babgpus
  98. [actual] x is babgpus
  99. [planning] x is babgpus or babrpus
  100. [actual] x is babgpus
  101. [actual] x is babgpus or babrpus
  102. [actual] x is babgpus
  103. [actual] x is babgpus or babrpus
  104. [actual] kerlpus is vasxpus
  105. [actual] komhpus is kerlpus
  106. [actual] komhpus is kerlpus and nayjpus
  107. [actual] komhpus is kerlpus
  108. [actual] komhpus is vasxpus
  109. [actual] komhpus is kerlpus
  110. [actual] kerlpus is vasxpus
  111. [actual] savspus is komhpus
  112. [actual] savspus is vasxpus
  113. [actual] savspus is komhpus
  114. [actual] komhpus is vasxpus
  115. [actual] kadypus is savspus
  116. [actual] kadypus is savspus and becmpus and jepmpus
  117. [actual] kadypus is vasxpus
  118. [actual] kadypus is savspus
  119. [actual] savspus is vasxpus
  120. [actual] sarhpus is kadypus
  121. [actual] sarhpus is kadypus and qowvpus
  122. [actual] sarhpus is vasxpus
  123. [actual] sarhpus is kadypus
  124. [actual] kadypus is vasxpus
  125. [actual] buxnpus is sarhpus
  126. [actual] buxnpus is vasxpus
  127. [actual] buxnpus is sarhpus
  128. [actual] sarhpus is vasxpus
  129. [actual] x is buxnpus
  130. [actual] x is buxnpus and wohwpus
  131. [actual] x is vasxpus
  132. [actual] x is buxnpus
  133. [actual] buxnpus is vasxpus
  134. [actual] vasxpus is babgpus
  135. [actual] vasxpus is babgpus and hobxpus and hommpus
  136. [actual] x is babgpus
  137. [actual] x is vasxpus
  138. [actual] vasxpus is babgpus
  139. [actual] x is babgpus
  140. [actual] x is babgpus
  141. [planning] x is babgpus
  142. [planning] x is babrpus
  143. [actual] x is wohwpus
  144. [actual] x is babgpus

=== 开始标准化和解析节点 ===
清洗后statements数: 144
标准化后节点数: 137
过滤掉的无效实体数: 7
标准化后的节点:
  1. [actual] savspus → komhpus (原始: savspus is komhpus)
  2. [actual] komhpus → kerlpus and nayjpus (原始: komhpus is kerlpus and nayjpus)
  3. [actual] komhpus → kerlpus and nayjpus (原始: komhpus is kerlpus and nayjpus)
  4. [actual] komhpus → kerlpus and nayjpus (原始: komhpus is kerlpus and nayjpus)
  5. [planning] komhpus → kerlpus (原始: komhpus is kerlpus)
  6. [planning] komhpus → nayjpus (原始: komhpus is nayjpus)
  7. [actual] x → babgpus (原始: x is babgpus)
  8. [actual] lerwpus → yexbpus (原始: lerwpus is yexbpus)
  9. [actual] yexbpus → lerwpus and pazjpus (原始: yexbpus is lerwpus and pazjpus)
  10. [actual] savspus → komhpus (原始: savspus is komhpus)
  11. [actual] komhpus → kerlpus and nayjpus (原始: komhpus is kerlpus and nayjpus)
  12. [actual] kadypus → savspus and becmpus and jepmpus (原始: kadypus is savspus and becmpus and jepmpus)
  13. [actual] buxnpus → keyfpus (原始: buxnpus is keyfpus)
  14. [actual] sarhpus → kadypus and qowvpus (原始: sarhpus is kadypus and qowvpus)
  15. [actual] vasxpus → babgpus and hobxpus and hommpus (原始: vasxpus is babgpus and hobxpus and hommpus)
  16. [actual] buxnpus → sarhpus (原始: buxnpus is sarhpus)
  17. [actual] x → buxnpus and wohwpus (原始: x is buxnpus and wohwpus)
  18. [actual] kerlpus → vasxpus (原始: kerlpus is vasxpus)
  19. [planning] x → babgpus (原始: x is babgpus)
  20. [planning] x → babrpus (原始: x is babrpus)
  21. [planning] x → babgpus (原始: x is babgpus)
  22. [planning] x → babrpus (原始: x is babrpus)
  23. [actual] x → buxnpus and wohwpus (原始: x is buxnpus and wohwpus)
  24. [actual] x → buxnpus and wohwpus (原始: x is buxnpus and wohwpus)
  25. [planning] x → babgpus (原始: x is babgpus)
  26. [planning] x → babrpus (原始: x is babrpus)
  27. [actual] vasxpus → babgpus and hobxpus and hommpus (原始: vasxpus is babgpus and hobxpus and hommpus)
  28. [planning] vasxpus → babgpus (原始: vasxpus is babgpus)
  29. [actual] vasxpus → babgpus (原始: vasxpus is babgpus)
  30. [planning] x → vasxpus (原始: x is vasxpus)
  31. [planning] x → babgpus (原始: x is babgpus)
  32. [actual] x → buxnpus (原始: x is buxnpus)
  33. [planning] buxnpus → keyfpus (原始: buxnpus is keyfpus)
  34. [planning] buxnpus → keyfpus (原始: buxnpus is keyfpus)
  35. [actual] buxnpus → keyfpus (原始: buxnpus is keyfpus)
  36. [actual] buxnpus → sarhpus (原始: buxnpus is sarhpus)
  37. [actual] buxnpus → keyfpus (原始: buxnpus is keyfpus)
  38. [actual] buxnpus → keyfpus (原始: buxnpus is keyfpus)
  39. [actual] buxnpus → sarhpus (原始: buxnpus is sarhpus)
  40. [actual] buxnpus → sarhpus (原始: buxnpus is sarhpus)
  41. [actual] x → buxnpus (原始: x is buxnpus)
  42. [actual] buxxnpus → keyfpus (原始: buxxnpus is keyfpus)
  43. [planning] x → keyfpus (原始: x is keyfpus)
  44. [planning] x → sarhpus (原始: x is sarhpus)
  45. [actual] x → buxnpus (原始: x is buxnpus)
  46. [actual] buxnpus → sarhpus (原始: buxnpus is sarhpus)
  47. [actual] buxnpus → sarhpus (原始: buxnpus is sarhpus)
  48. [actual] buxnpus → keyfpus (原始: buxnpus is keyfpus)
  49. [actual] sarhpus → kadypus and qowvpus (原始: sarhpus is kadypus and qowvpus)
  50. [actual] sarhpus → kadypus (原始: sarhpus is kadypus)
  51. [actual] sarhpus → qowvpus (原始: sarhpus is qowvpus)
  52. [actual] buxnpus → sarhpus (原始: buxnpus is sarhpus)
  53. [actual] sarhpus → kadypus (原始: sarhpus is kadypus)
  54. [actual] buxnpus → kadypus (原始: buxnpus is kadypus)
  55. [planning] buxnpus → kadypus (原始: buxnpus is kadypus)
  56. [actual] buxnpus → qowvpus (原始: buxnpus is qowvpus)
  57. [actual] kadypus → savspus and becmpus and jepmpus (原始: kadypus is savspus and becmpus and jepmpus)
  58. [actual] kadypus → savspus and becmpus and jepmpus (原始: kadypus is savspus and becmpus and jepmpus)
  59. [actual] buxnpus → kadypus (原始: buxnpus is kadypus)
  60. [actual] buxnpus → savspus (原始: buxnpus is savspus)
  61. [actual] kerlpus → vasxpus (原始: kerlpus is vasxpus)
  62. [actual] kerlpus → vasxpus (原始: kerlpus is vasxpus)
  63. [actual] vasxpus → babgpus and hobxpus and hommpus (原始: vasxpus is babgpus and hobxpus and hommpus)
  64. [actual] vasxpus → babgpus (原始: vasxpus is babgpus)
  65. [planning] vasxpus → babgpus (原始: vasxpus is babgpus)
  66. [actual] vasxpus → babgpus (原始: vasxpus is babgpus)
  67. [planning] x → vasxpus (原始: x is vasxpus)
  68. [planning] x → vasxpus (原始: x is vasxpus)
  69. [actual] komhpus → kerlpus (原始: komhpus is kerlpus)
  70. [actual] komhpus → nayjpus (原始: komhpus is nayjpus)
  71. [actual] kerlpus → vasxpus (原始: kerlpus is vasxpus)
  72. [actual] komhpus → kerlpus (原始: komhpus is kerlpus)
  73. [actual] kerlpus → vasxpus (原始: kerlpus is vasxpus)
  74. [actual] komhpus → vasxpus (原始: komhpus is vasxpus)
  75. [actual] savspus → komhpus (原始: savspus is komhpus)
  76. [actual] komhpus → vasxpus (原始: komhpus is vasxpus)
  77. [actual] savspus → vasxpus (原始: savspus is vasxpus)
  78. [actual] kadypus → savspus (原始: kadypus is savspus)
  79. [actual] savspus → vasxpus (原始: savspus is vasxpus)
  80. [actual] kadypus → vasxpus (原始: kadypus is vasxpus)
  81. [actual] sarhpus → kadypus (原始: sarhpus is kadypus)
  82. [actual] kadypus → vasxpus (原始: kadypus is vasxpus)
  83. [actual] sarhpus → vasxpus (原始: sarhpus is vasxpus)
  84. [actual] buxnpus → sarhpus (原始: buxnpus is sarhpus)
  85. [actual] buxnpus → vasxpus (原始: buxnpus is vasxpus)
  86. [actual] x → buxnpus (原始: x is buxnpus)
  87. [actual] buxnpus → vasxpus (原始: buxnpus is vasxpus)
  88. [actual] x → vasxpus (原始: x is vasxpus)
  89. [actual] vasxpus → babgpus (原始: vasxpus is babgpus)
  90. [actual] x → babgpus (原始: x is babgpus)
  91. [actual] x → babgpus (原始: x is babgpus)
  92. [planning] x → babgpus or babrpus (原始: x is babgpus or babrpus)
  93. [actual] x → babgpus (原始: x is babgpus)
  94. [actual] x → babgpus or babrpus (原始: x is babgpus or babrpus)
  95. [actual] x → babgpus (原始: x is babgpus)
  96. [actual] x → babgpus or babrpus (原始: x is babgpus or babrpus)
  97. [actual] kerlpus → vasxpus (原始: kerlpus is vasxpus)
  98. [actual] komhpus → kerlpus (原始: komhpus is kerlpus)
  99. [actual] komhpus → kerlpus and nayjpus (原始: komhpus is kerlpus and nayjpus)
  100. [actual] komhpus → kerlpus (原始: komhpus is kerlpus)
  101. [actual] komhpus → vasxpus (原始: komhpus is vasxpus)
  102. [actual] komhpus → kerlpus (原始: komhpus is kerlpus)
  103. [actual] kerlpus → vasxpus (原始: kerlpus is vasxpus)
  104. [actual] savspus → komhpus (原始: savspus is komhpus)
  105. [actual] savspus → vasxpus (原始: savspus is vasxpus)
  106. [actual] savspus → komhpus (原始: savspus is komhpus)
  107. [actual] komhpus → vasxpus (原始: komhpus is vasxpus)
  108. [actual] kadypus → savspus (原始: kadypus is savspus)
  109. [actual] kadypus → savspus and becmpus and jepmpus (原始: kadypus is savspus and becmpus and jepmpus)
  110. [actual] kadypus → vasxpus (原始: kadypus is vasxpus)
  111. [actual] kadypus → savspus (原始: kadypus is savspus)
  112. [actual] savspus → vasxpus (原始: savspus is vasxpus)
  113. [actual] sarhpus → kadypus (原始: sarhpus is kadypus)
  114. [actual] sarhpus → kadypus and qowvpus (原始: sarhpus is kadypus and qowvpus)
  115. [actual] sarhpus → vasxpus (原始: sarhpus is vasxpus)
  116. [actual] sarhpus → kadypus (原始: sarhpus is kadypus)
  117. [actual] kadypus → vasxpus (原始: kadypus is vasxpus)
  118. [actual] buxnpus → sarhpus (原始: buxnpus is sarhpus)
  119. [actual] buxnpus → vasxpus (原始: buxnpus is vasxpus)
  120. [actual] buxnpus → sarhpus (原始: buxnpus is sarhpus)
  121. [actual] sarhpus → vasxpus (原始: sarhpus is vasxpus)
  122. [actual] x → buxnpus (原始: x is buxnpus)
  123. [actual] x → buxnpus and wohwpus (原始: x is buxnpus and wohwpus)
  124. [actual] x → vasxpus (原始: x is vasxpus)
  125. [actual] x → buxnpus (原始: x is buxnpus)
  126. [actual] buxnpus → vasxpus (原始: buxnpus is vasxpus)
  127. [actual] vasxpus → babgpus (原始: vasxpus is babgpus)
  128. [actual] vasxpus → babgpus and hobxpus and hommpus (原始: vasxpus is babgpus and hobxpus and hommpus)
  129. [actual] x → babgpus (原始: x is babgpus)
  130. [actual] x → vasxpus (原始: x is vasxpus)
  131. [actual] vasxpus → babgpus (原始: vasxpus is babgpus)
  132. [actual] x → babgpus (原始: x is babgpus)
  133. [actual] x → babgpus (原始: x is babgpus)
  134. [planning] x → babgpus (原始: x is babgpus)
  135. [planning] x → babrpus (原始: x is babrpus)
  136. [actual] x → wohwpus (原始: x is wohwpus)
  137. [actual] x → babgpus (原始: x is babgpus)

开始新的后处理...
[后处理] 从LoG数据文件中获取到图数据，节点数: 17
[后处理] 加载LoG图，包含 17 个节点
  LoG节点 0: x is babgpus or babrpus (规则: DI, 深度: 1)
  LoG节点 1: x is babgpus (规则: MP, 深度: 2)
  LoG节点 2: x is savspus (规则: MP, 深度: 3)
  LoG节点 3: savspus is babgpus (规则: CE, 深度: 3)
  LoG节点 4: x is sarhpus (规则: CE, 深度: 4)
  LoG节点 5: sarhpus is savspus (规则: CE, 深度: 4)
  LoG节点 6: savspus is babgpus and hobxpus (规则: MP, 深度: 4)
  LoG节点 7: x is sarhpus and keyfpus (规则: MP, 深度: 5)
  LoG节点 8: sarhpus is savspus and becmpus (规则: MP, 深度: 5)
  LoG节点 9: savspus is kerlpus (规则: CE, 深度: 5)
  LoG节点 10: kerlpus is babgpus and hobxpus (规则: CE, 深度: 5)
  LoG节点 11: x is buxnpus (规则: CE, 深度: 6)
  LoG节点 12: buxnpus is sarhpus and keyfpus (规则: CI, 深度: 6)
  LoG节点 13: sarhpus is kadypus (规则: CE, 深度: 6)
  LoG节点 14: kadypus is savspus and becmpus (规则: CE, 深度: 6)
  LoG节点 15: savspus is kerlpus and nayjpus (规则: MP, 深度: 6)
  LoG节点 16: kerlpus is babgpus and hobxpus and hommpus (规则: MP, 深度: 6)

============================================================
[后处理] 开始处理节点
============================================================
📊 初始状态:
   - 标准化节点数: 137
   - 初始条件数: 9
   - LoG图节点数: 17

📋 初始条件列表:
    1. savspus is komhpus
    2. komhpus is kerlpus and nayjpus
    3. kadypus is savspus and becmpus and jepmpus
    4. buxnpus is keyfpus
    5. sarhpus is kadypus and qowvpus
    6. vasxpus is babgpus and hobxpus and hommpus
    7. buxnpus is sarhpus
    8. x is buxnpus and wohwpus
    9. kerlpus is vasxpus

🔧 构建初始Statement列表...
✅ 初始Statement列表构建完成，包含 9 个前提节点

🔍 开始处理actual节点...

   节点 1: savspus is komhpus
      ↻ 重复节点，计数: 2

   节点 2: komhpus is kerlpus and nayjpus
      ↻ 重复节点，计数: 2

   节点 3: komhpus is kerlpus and nayjpus
      ↻ 重复节点，计数: 3

   节点 4: komhpus is kerlpus and nayjpus
      ↻ 重复节点，计数: 4

   节点 5: x is babgpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is babgpus
[子树点亮]     └─ 点亮依赖节点: x is savspus (深度3)
[子树点亮]     └─ 点亮依赖节点: savspus is babgpus (深度3)
[子树点亮]     └─ 点亮依赖节点: x is sarhpus (深度4)
[子树点亮]     └─ 点亮依赖节点: sarhpus is savspus (深度4)
[子树点亮]     └─ 点亮依赖节点: savspus is babgpus and hobxpus (深度4)
[子树点亮]     └─ 点亮依赖节点: x is sarhpus and keyfpus (深度5)
[子树点亮]     └─ 点亮依赖节点: sarhpus is savspus and becmpus (深度5)
[子树点亮]     └─ 点亮依赖节点: savspus is kerlpus (深度5)
[子树点亮]     └─ 点亮依赖节点: kerlpus is babgpus and hobxpus (深度5)
[子树点亮]     └─ 点亮依赖节点: x is buxnpus (深度6)
[子树点亮]     └─ 点亮依赖节点: buxnpus is sarhpus and keyfpus (深度6)
[子树点亮]     └─ 点亮依赖节点: sarhpus is kadypus (深度6)
[子树点亮]     └─ 点亮依赖节点: kadypus is savspus and becmpus (深度6)
[子树点亮]     └─ 点亮依赖节点: savspus is kerlpus and nayjpus (深度6)
[子树点亮]     └─ 点亮依赖节点: kerlpus is babgpus and hobxpus and hommpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 15 个节点
      ✅ 验证成功 + LoG匹配

   节点 6: lerwpus is yexbpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 7: yexbpus is lerwpus and pazjpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 8: savspus is komhpus
      ↻ 重复节点，计数: 3

   节点 9: komhpus is kerlpus and nayjpus
      ↻ 重复节点，计数: 5

   节点 10: kadypus is savspus and becmpus and jepmpus
      ↻ 重复节点，计数: 2

   节点 11: buxnpus is keyfpus
      ↻ 重复节点，计数: 2

   节点 12: sarhpus is kadypus and qowvpus
      ↻ 重复节点，计数: 2

   节点 13: vasxpus is babgpus and hobxpus and hommpus
      ↻ 重复节点，计数: 2

   节点 14: buxnpus is sarhpus
      ↻ 重复节点，计数: 2

   节点 15: x is buxnpus and wohwpus
      ↻ 重复节点，计数: 2

   节点 16: kerlpus is vasxpus
      ↻ 重复节点，计数: 2

   节点 17: x is buxnpus and wohwpus
      ↻ 重复节点，计数: 3

   节点 18: x is buxnpus and wohwpus
      ↻ 重复节点，计数: 4

   节点 19: vasxpus is babgpus and hobxpus and hommpus
      ↻ 重复节点，计数: 3

   节点 20: vasxpus is babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: vasxpus is babgpus and hobxpus and hommpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: vasxpus is babgpus and hobxpus and hommpus

   节点 21: x is buxnpus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 22: buxnpus is keyfpus
      ↻ 重复节点，计数: 3

   节点 23: buxnpus is sarhpus
      ↻ 重复节点，计数: 3

   节点 24: buxnpus is keyfpus
      ↻ 重复节点，计数: 4

   节点 25: buxnpus is keyfpus
      ↻ 重复节点，计数: 5

   节点 26: buxnpus is sarhpus
      ↻ 重复节点，计数: 4

   节点 27: buxnpus is sarhpus
      ↻ 重复节点，计数: 5

   节点 28: x is buxnpus
      ↻ 重复节点，计数: 2

   节点 29: buxxnpus is keyfpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 30: x is buxnpus
      ↻ 重复节点，计数: 3

   节点 31: buxnpus is sarhpus
      ↻ 重复节点，计数: 6

   节点 32: buxnpus is sarhpus
      ↻ 重复节点，计数: 7

   节点 33: buxnpus is keyfpus
      ↻ 重复节点，计数: 6

   节点 34: sarhpus is kadypus and qowvpus
      ↻ 重复节点，计数: 3

   节点 35: sarhpus is kadypus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 36: sarhpus is qowvpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: sarhpus is kadypus and qowvpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: sarhpus is kadypus and qowvpus

   节点 37: buxnpus is sarhpus
      ↻ 重复节点，计数: 8

   节点 38: sarhpus is kadypus
      ↻ 重复节点，计数: 2

   节点 39: buxnpus is kadypus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: buxnpus is sarhpus → sarhpus is kadypus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: buxnpus is sarhpus
  - 前提: sarhpus is kadypus

   节点 40: buxnpus is qowvpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: buxnpus is sarhpus → sarhpus is qowvpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: buxnpus is sarhpus
  - 前提: sarhpus is qowvpus

   节点 41: kadypus is savspus and becmpus and jepmpus
      ↻ 重复节点，计数: 3

   节点 42: kadypus is savspus and becmpus and jepmpus
      ↻ 重复节点，计数: 4

   节点 43: buxnpus is kadypus
      ↻ 重复节点，计数: 2

   节点 44: buxnpus is savspus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: buxnpus is sarhpus → sarhpus is savspus
[后处理] 基于推理轨迹点亮节点，使用了 3 个前提条件:
  - 前提: buxnpus is sarhpus
  - 前提: sarhpus is kadypus
  - 前提: kadypus is savspus and becmpus and jepmpus

   节点 45: kerlpus is vasxpus
      ↻ 重复节点，计数: 3

   节点 46: kerlpus is vasxpus
      ↻ 重复节点，计数: 4

   节点 47: vasxpus is babgpus and hobxpus and hommpus
      ↻ 重复节点，计数: 4

   节点 48: vasxpus is babgpus
      ↻ 重复节点，计数: 2

   节点 49: vasxpus is babgpus
      ↻ 重复节点，计数: 3

   节点 50: komhpus is kerlpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: komhpus is kerlpus and nayjpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: komhpus is kerlpus and nayjpus

   节点 51: komhpus is nayjpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: komhpus is kerlpus and nayjpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: komhpus is kerlpus and nayjpus

   节点 52: kerlpus is vasxpus
      ↻ 重复节点，计数: 5

   节点 53: komhpus is kerlpus
      ↻ 重复节点，计数: 2

   节点 54: kerlpus is vasxpus
      ↻ 重复节点，计数: 6

   节点 55: komhpus is vasxpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: komhpus is kerlpus → kerlpus is vasxpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: komhpus is kerlpus
  - 前提: kerlpus is vasxpus

   节点 56: savspus is komhpus
      ↻ 重复节点，计数: 4

   节点 57: komhpus is vasxpus
      ↻ 重复节点，计数: 2

   节点 58: savspus is vasxpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: savspus is komhpus → komhpus is vasxpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: savspus is komhpus
  - 前提: komhpus is vasxpus

   节点 59: kadypus is savspus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: kadypus is savspus and becmpus and jepmpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: kadypus is savspus and becmpus and jepmpus

   节点 60: savspus is vasxpus
      ↻ 重复节点，计数: 2

   节点 61: kadypus is vasxpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: kadypus is savspus → savspus is vasxpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: kadypus is savspus
  - 前提: savspus is vasxpus

   节点 62: sarhpus is kadypus
      ↻ 重复节点，计数: 3

   节点 63: kadypus is vasxpus
      ↻ 重复节点，计数: 2

   节点 64: sarhpus is vasxpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: sarhpus is kadypus → kadypus is vasxpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: sarhpus is kadypus
  - 前提: kadypus is vasxpus

   节点 65: buxnpus is sarhpus
      ↻ 重复节点，计数: 9

   节点 66: buxnpus is vasxpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: buxnpus is sarhpus → sarhpus is vasxpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: buxnpus is sarhpus
  - 前提: sarhpus is vasxpus

   节点 67: x is buxnpus
      ↻ 重复节点，计数: 4

   节点 68: buxnpus is vasxpus
      ↻ 重复节点，计数: 2

   节点 69: x is vasxpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is buxnpus → buxnpus is vasxpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: x is buxnpus
  - 前提: buxnpus is vasxpus

   节点 70: vasxpus is babgpus
      ↻ 重复节点，计数: 4

   节点 71: x is babgpus
      ↻ 重复节点，计数: 2

   节点 72: x is babgpus
      ↻ 重复节点，计数: 3

   节点 73: x is babgpus
      ↻ 重复节点，计数: 4

   节点 74: x is babgpus or babrpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is babgpus or babrpus
      ✅ 验证成功 + LoG匹配

   节点 75: x is babgpus
      ↻ 重复节点，计数: 5

   节点 76: x is babgpus or babrpus
      ↻ 重复节点，计数: 2

   节点 77: kerlpus is vasxpus
      ↻ 重复节点，计数: 7

   节点 78: komhpus is kerlpus
      ↻ 重复节点，计数: 3

   节点 79: komhpus is kerlpus and nayjpus
      ↻ 重复节点，计数: 6

   节点 80: komhpus is kerlpus
      ↻ 重复节点，计数: 4

   节点 81: komhpus is vasxpus
      ↻ 重复节点，计数: 3

   节点 82: komhpus is kerlpus
      ↻ 重复节点，计数: 5

   节点 83: kerlpus is vasxpus
      ↻ 重复节点，计数: 8

   节点 84: savspus is komhpus
      ↻ 重复节点，计数: 5

   节点 85: savspus is vasxpus
      ↻ 重复节点，计数: 3

   节点 86: savspus is komhpus
      ↻ 重复节点，计数: 6

   节点 87: komhpus is vasxpus
      ↻ 重复节点，计数: 4

   节点 88: kadypus is savspus
      ↻ 重复节点，计数: 2

   节点 89: kadypus is savspus and becmpus and jepmpus
      ↻ 重复节点，计数: 5

   节点 90: kadypus is vasxpus
      ↻ 重复节点，计数: 3

   节点 91: kadypus is savspus
      ↻ 重复节点，计数: 3

   节点 92: savspus is vasxpus
      ↻ 重复节点，计数: 4

   节点 93: sarhpus is kadypus
      ↻ 重复节点，计数: 4

   节点 94: sarhpus is kadypus and qowvpus
      ↻ 重复节点，计数: 4

   节点 95: sarhpus is vasxpus
      ↻ 重复节点，计数: 2

   节点 96: sarhpus is kadypus
      ↻ 重复节点，计数: 5

   节点 97: kadypus is vasxpus
      ↻ 重复节点，计数: 4

   节点 98: buxnpus is sarhpus
      ↻ 重复节点，计数: 10

   节点 99: buxnpus is vasxpus
      ↻ 重复节点，计数: 3

   节点 100: buxnpus is sarhpus
      ↻ 重复节点，计数: 11

   节点 101: sarhpus is vasxpus
      ↻ 重复节点，计数: 3

   节点 102: x is buxnpus
      ↻ 重复节点，计数: 5

   节点 103: x is buxnpus and wohwpus
      ↻ 重复节点，计数: 5

   节点 104: x is vasxpus
      ↻ 重复节点，计数: 2

   节点 105: x is buxnpus
      ↻ 重复节点，计数: 6

   节点 106: buxnpus is vasxpus
      ↻ 重复节点，计数: 4

   节点 107: vasxpus is babgpus
      ↻ 重复节点，计数: 5

   节点 108: vasxpus is babgpus and hobxpus and hommpus
      ↻ 重复节点，计数: 5

   节点 109: x is babgpus
      ↻ 重复节点，计数: 6

   节点 110: x is vasxpus
      ↻ 重复节点，计数: 3

   节点 111: vasxpus is babgpus
      ↻ 重复节点，计数: 6

   节点 112: x is babgpus
      ↻ 重复节点，计数: 7

   节点 113: x is babgpus
      ↻ 重复节点，计数: 8

   节点 114: x is wohwpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: x is buxnpus and wohwpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: x is buxnpus and wohwpus

   节点 115: x is babgpus
      ↻ 重复节点，计数: 9

🔍 分析推理路径完整性...

============================================================
[后处理] 处理完成
============================================================
📈 处理统计:
   - 处理的actual节点: 115
   - 新增节点: 22
   - 更新已存在节点: 93
   - 点亮的LoG节点: 17

🎯 推理质量统计:
   - 完美推理: 22 (节点正确 + 路径正确)
   - 部分推理: 0 (节点正确 + 路径部分错误)
   - 无效推理: 0 (节点错误或路径完全错误)
[LoG分析] LoG图: 17节点, 9前提, 复杂度1-9

📊 === Statement列表分析 ===
📈 节点统计:
   - 总节点数: 31
   - 前提节点: 9
   - 推理节点: 19
   - 幻觉节点: 3
   - 点亮LoG节点: 17

❌ 幻觉节点详情:
   - lerwpus is yexbpus (出现1次)
   - yexbpus is lerwpus and pazjpus (出现1次)
   - buxxnpus is keyfpus (出现1次)

✅ 推理节点详情:
   🟢 x is babgpus (出现9次, 质量:perfect)
   🟢 vasxpus is babgpus (出现6次, 质量:perfect)
   🟢 x is buxnpus (出现6次, 质量:perfect)
   🟢 sarhpus is kadypus (出现5次, 质量:perfect)
   🟢 sarhpus is qowvpus (出现1次, 质量:perfect)
   🟢 buxnpus is kadypus (出现2次, 质量:perfect)
   🟢 buxnpus is qowvpus (出现1次, 质量:perfect)
   🟢 buxnpus is savspus (出现1次, 质量:perfect)
   🟢 komhpus is kerlpus (出现5次, 质量:perfect)
   🟢 komhpus is nayjpus (出现1次, 质量:perfect)
   🟢 komhpus is vasxpus (出现4次, 质量:perfect)
   🟢 savspus is vasxpus (出现4次, 质量:perfect)
   🟢 kadypus is savspus (出现3次, 质量:perfect)
   🟢 kadypus is vasxpus (出现4次, 质量:perfect)
   🟢 sarhpus is vasxpus (出现3次, 质量:perfect)
   🟢 buxnpus is vasxpus (出现4次, 质量:perfect)
   🟢 x is vasxpus (出现3次, 质量:perfect)
   🟢 x is babgpus or babrpus (出现2次, 质量:perfect)
   🟢 x is wohwpus (出现1次, 质量:perfect)

🔥 点亮的LoG节点:
   - x is sarhpus
   - kerlpus is babgpus and hobxpus and hommpus
   - kerlpus is babgpus and hobxpus
   - savspus is kerlpus
   - kadypus is savspus and becmpus
   - x is babgpus
   - savspus is kerlpus and nayjpus
   - sarhpus is savspus
   - x is savspus
   - savspus is babgpus
   - savspus is babgpus and hobxpus
   - x is sarhpus and keyfpus
   - sarhpus is savspus and becmpus
   - x is buxnpus
   - buxnpus is sarhpus and keyfpus
   - sarhpus is kadypus
   - x is babgpus or babrpus

============================================================
📊 计算评估指标
============================================================

🎯 计算Coverage指标...
   深度Coverage: 6/6 = 100.00%
   最深点亮节点: x is babgpus or babrpus (第6层)
   节点Coverage: 17/17 = 100.00%
   前提条件Coverage: 9/9 = 100.00%
   各推理层点亮比例:
     第1层: 6/6 = 100.00%
     第2层: 4/4 = 100.00%
     第3层: 3/3 = 100.00%
     第4层: 2/2 = 100.00%
     第5层: 1/1 = 100.00%
     第6层: 1/1 = 100.00%

🎯 计算Precision指标...
   Error Rate: 3/22 = 13.64%
   可推导节点: 19/22
   Strict Error Rate: 3/22 = 13.64%
   严格有效节点: 19/22

   详细分析:
     完美推理: 22 (100.00%)
     部分推理: 0 (0.00%)
     无效推理: 0 (0.00%)

================================================================================
处理记录 5/50
================================================================================
记录索引: 4
问题状态: correct
📁 从缓存加载提取结果: evaluation_results.LoG_6.deepseek-reasoner_record_4.json
✅ 使用缓存结果:
   - 句子数: 156
   - 提取的语句数: 173
   - 初始条件数: 15

=== Statement提取完成 ===
总句子数: 156
成功提取: 156
失败提取: 0
总statements数: 173

=== 开始清洗Statement格式 ===
原始statements数: 173
清洗后statements数: 125
过滤掉的statements数: 48
清洗后的statements:
  1. [planning] x is babgpus
  2. [planning] x is babrpus
  3. [actual] qultpus is babrpus
  4. [actual] x is cakqpus
  5. [actual] x is cakqpus
  6. [planning] cakqpus is babrpus or babgpus
  7. [actual] cakqpus is qurkpus and yazcpus
  8. [actual] killpus is cazgpus
  9. [actual] qurkpus is kuvgpus and newzpus
  10. [actual] kidlpus is caklpus and kuqjpus
  11. [actual] zemhpus is sovwpus
  12. [actual] x is cakqpus
  13. [actual] qurkpus is duhypus and tifvpus
  14. [actual] sovwpus is killpus and qogypus
  15. [actual] qultpus is babrpus
  16. [actual] jewnpus is zemhpus and qaccpus and ketxpus
  17. [actual] cazgpus is tiftpus and datvpus
  18. [actual] kidlpus is qultpus
  19. [actual] tiftpus is yamppus
  20. [actual] yamppus is kidlpus and socwpus
  21. [actual] kuvgpus is jewnpus and bimxpus
  22. [planning] x is babrpus
  23. [actual] x is cakqpus
  24. [planning] cakqpus is babrpus
  25. [planning] cakqpus is related to babrpus
  26. [actual] babrpus is qultpus
  27. [actual] babrpus is qultpus
  28. [planning] cakqpus is qultpus or babrpus
  29. [actual] cakqpus is qurkpus and yazcpus
  30. [actual] cakqpus is qurkpus
  31. [actual] qurkpus is kuvgpus and newzpus
  32. [actual] qurkpus is kuvgpus
  33. [actual] kuvgpus is jewnpus and bimxpus
  34. [actual] kuvgpus is jewnpus
  35. [actual] jewnpus is zemhpus and qaccpus and ketxpus
  36. [actual] jewnpus is zemhpus
  37. [actual] zemhpus is sovwpus
  38. [actual] zemhpus is sovwpus
  39. [actual] sovwpus is killpus and qogypus
  40. [actual] sovwpus is killpus
  41. [actual] killpus is cazgpus
  42. [actual] killpus is cazgpus
  43. [actual] cazgpus is tiftpus and datvpus
  44. [actual] cazgpus is tiftpus
  45. [actual] tiftpus is yamppus
  46. [actual] tiftpus is yamppus
  47. [actual] yamppus is kidlpus and socwpus
  48. [actual] yamppus is kidlpus
  49. [actual] kidlpus is caklpus and kuqjpus
  50. [actual] kidlpus is qultpus
  51. [actual] kidlpus is qultpus
  52. [actual] qultpus is babrpus
  53. [actual] qultpus is babrpus
  54. [actual] kidlpus is qultpus
  55. [actual] qultpus is babrpus
  56. [planning] kidlpus is babrpus
  57. [actual] kidlpus is qultpus
  58. [actual] kidlpus is qultpus
  59. [actual] qultpus is babrpus
  60. [actual] kidlpus is qultpus
  61. [actual] qultpus is babrpus
  62. [planning] kidlpus is babrpus
  63. [actual] kidlpus is qultpus
  64. [actual] qultpus is babrpus
  65. [actual] kidlpus is babrpus
  66. [actual] kidlpus is babrpus
  67. [actual] x is cakqpus
  68. [planning] cakqpus is babrpus
  69. [actual] yamppus is kidlpus
  70. [actual] yamppus is kidlpus and socwpus
  71. [planning] yamppus is kidlpus
  72. [actual] tiftpus is yamppus
  73. [actual] cazgpus is tiftpus
  74. [actual] cazgpus is tiftpus
  75. [actual] yamppus is kidlpus
  76. [actual] kidlpus is a category that contains yamppus
  77. [actual] kidlpus is caklpus and kuqjpus
  78. [planning] kidlpus is caklpus and kuqjpus
  79. [actual] kidlpus is caklpus and kuqjpus
  80. [planning] kidlpus is caklpus and kuqjpus
  81. [planning] kidlpus is caklpus and kuqjpus
  82. [actual] kidlpus is caklpus and kuqjpus
  83. [planning] kidlpus is caklpus
  84. [planning] kidlpus is kuqjpus
  85. [planning] kidlpus is caklpus
  86. [planning] kidlpus is kuqjpus
  87. [planning] kidlpus is caklpus and kuqjpus
  88. [actual] cakqpus is qurkpus and yazcpus
  89. [actual] kidlpus is caklpus and kuqjpus
  90. [actual] kidlpus is qultpus
  91. [actual] qultpus is babrpus
  92. [actual] kidlpus is qultpus
  93. [actual] qultpus is babrpus
  94. [actual] kidlpus is babrpus
  95. [planning] kidlpus is babrpus
  96. [actual] kidlpus is babrpus
  97. [planning] kidlpus is babrpus
  98. [planning] x is babrpus
  99. [actual] x is cakqpus
  100. [planning] cakqpus is babrpus
  101. [actual] cakqpus is qurkpus
  102. [actual] qurkpus is kuvgpus
  103. [actual] kuvgpus is jewnpus
  104. [actual] jewnpus is zemhpus
  105. [actual] zemhpus is sovwpus
  106. [actual] sovwpus is killpus
  107. [actual] killpus is cazgpus
  108. [actual] cazgpus is tiftpus
  109. [actual] tiftpus is yamppus
  110. [actual] yamppus is kidlpus
  111. [actual] yamppus is kidlpus and socwpus
  112. [actual] yamppus is kidlpus
  113. [actual] kidlpus is qultpus
  114. [actual] qultpus is babrpus
  115. [actual] cakqpus is babrpus
  116. [planning] x is babrpus
  117. [planning] x is babgpus or babrpus
  118. [actual] x is babrpus
  119. [actual] x is babrpus
  120. [planning] x is babgpus
  121. [planning] x is babrpus
  122. [actual] x is babrpus
  123. [planning] x is babgpus
  124. [actual] x is babrpus
  125. [actual] qurkpus is duhypus and tifvpus

=== 开始标准化和解析节点 ===
清洗后statements数: 125
标准化后节点数: 123
过滤掉的无效实体数: 2
标准化后的节点:
  1. [planning] x → babgpus (原始: x is babgpus)
  2. [planning] x → babrpus (原始: x is babrpus)
  3. [actual] qultpus → babrpus (原始: qultpus is babrpus)
  4. [actual] x → cakqpus (原始: x is cakqpus)
  5. [actual] x → cakqpus (原始: x is cakqpus)
  6. [planning] cakqpus → babrpus or babgpus (原始: cakqpus is babrpus or babgpus)
  7. [actual] cakqpus → qurkpus and yazcpus (原始: cakqpus is qurkpus and yazcpus)
  8. [actual] killpus → cazgpus (原始: killpus is cazgpus)
  9. [actual] qurkpus → kuvgpus and newzpus (原始: qurkpus is kuvgpus and newzpus)
  10. [actual] kidlpus → caklpus and kuqjpus (原始: kidlpus is caklpus and kuqjpus)
  11. [actual] zemhpus → sovwpus (原始: zemhpus is sovwpus)
  12. [actual] x → cakqpus (原始: x is cakqpus)
  13. [actual] qurkpus → duhypus and tifvpus (原始: qurkpus is duhypus and tifvpus)
  14. [actual] sovwpus → killpus and qogypus (原始: sovwpus is killpus and qogypus)
  15. [actual] qultpus → babrpus (原始: qultpus is babrpus)
  16. [actual] jewnpus → zemhpus and qaccpus and ketxpus (原始: jewnpus is zemhpus and qaccpus and ketxpus)
  17. [actual] cazgpus → tiftpus and datvpus (原始: cazgpus is tiftpus and datvpus)
  18. [actual] kidlpus → qultpus (原始: kidlpus is qultpus)
  19. [actual] tiftpus → yamppus (原始: tiftpus is yamppus)
  20. [actual] yamppus → kidlpus and socwpus (原始: yamppus is kidlpus and socwpus)
  21. [actual] kuvgpus → jewnpus and bimxpus (原始: kuvgpus is jewnpus and bimxpus)
  22. [planning] x → babrpus (原始: x is babrpus)
  23. [actual] x → cakqpus (原始: x is cakqpus)
  24. [planning] cakqpus → babrpus (原始: cakqpus is babrpus)
  25. [actual] babrpus → qultpus (原始: babrpus is qultpus)
  26. [actual] babrpus → qultpus (原始: babrpus is qultpus)
  27. [planning] cakqpus → qultpus or babrpus (原始: cakqpus is qultpus or babrpus)
  28. [actual] cakqpus → qurkpus and yazcpus (原始: cakqpus is qurkpus and yazcpus)
  29. [actual] cakqpus → qurkpus (原始: cakqpus is qurkpus)
  30. [actual] qurkpus → kuvgpus and newzpus (原始: qurkpus is kuvgpus and newzpus)
  31. [actual] qurkpus → kuvgpus (原始: qurkpus is kuvgpus)
  32. [actual] kuvgpus → jewnpus and bimxpus (原始: kuvgpus is jewnpus and bimxpus)
  33. [actual] kuvgpus → jewnpus (原始: kuvgpus is jewnpus)
  34. [actual] jewnpus → zemhpus and qaccpus and ketxpus (原始: jewnpus is zemhpus and qaccpus and ketxpus)
  35. [actual] jewnpus → zemhpus (原始: jewnpus is zemhpus)
  36. [actual] zemhpus → sovwpus (原始: zemhpus is sovwpus)
  37. [actual] zemhpus → sovwpus (原始: zemhpus is sovwpus)
  38. [actual] sovwpus → killpus and qogypus (原始: sovwpus is killpus and qogypus)
  39. [actual] sovwpus → killpus (原始: sovwpus is killpus)
  40. [actual] killpus → cazgpus (原始: killpus is cazgpus)
  41. [actual] killpus → cazgpus (原始: killpus is cazgpus)
  42. [actual] cazgpus → tiftpus and datvpus (原始: cazgpus is tiftpus and datvpus)
  43. [actual] cazgpus → tiftpus (原始: cazgpus is tiftpus)
  44. [actual] tiftpus → yamppus (原始: tiftpus is yamppus)
  45. [actual] tiftpus → yamppus (原始: tiftpus is yamppus)
  46. [actual] yamppus → kidlpus and socwpus (原始: yamppus is kidlpus and socwpus)
  47. [actual] yamppus → kidlpus (原始: yamppus is kidlpus)
  48. [actual] kidlpus → caklpus and kuqjpus (原始: kidlpus is caklpus and kuqjpus)
  49. [actual] kidlpus → qultpus (原始: kidlpus is qultpus)
  50. [actual] kidlpus → qultpus (原始: kidlpus is qultpus)
  51. [actual] qultpus → babrpus (原始: qultpus is babrpus)
  52. [actual] qultpus → babrpus (原始: qultpus is babrpus)
  53. [actual] kidlpus → qultpus (原始: kidlpus is qultpus)
  54. [actual] qultpus → babrpus (原始: qultpus is babrpus)
  55. [planning] kidlpus → babrpus (原始: kidlpus is babrpus)
  56. [actual] kidlpus → qultpus (原始: kidlpus is qultpus)
  57. [actual] kidlpus → qultpus (原始: kidlpus is qultpus)
  58. [actual] qultpus → babrpus (原始: qultpus is babrpus)
  59. [actual] kidlpus → qultpus (原始: kidlpus is qultpus)
  60. [actual] qultpus → babrpus (原始: qultpus is babrpus)
  61. [planning] kidlpus → babrpus (原始: kidlpus is babrpus)
  62. [actual] kidlpus → qultpus (原始: kidlpus is qultpus)
  63. [actual] qultpus → babrpus (原始: qultpus is babrpus)
  64. [actual] kidlpus → babrpus (原始: kidlpus is babrpus)
  65. [actual] kidlpus → babrpus (原始: kidlpus is babrpus)
  66. [actual] x → cakqpus (原始: x is cakqpus)
  67. [planning] cakqpus → babrpus (原始: cakqpus is babrpus)
  68. [actual] yamppus → kidlpus (原始: yamppus is kidlpus)
  69. [actual] yamppus → kidlpus and socwpus (原始: yamppus is kidlpus and socwpus)
  70. [planning] yamppus → kidlpus (原始: yamppus is kidlpus)
  71. [actual] tiftpus → yamppus (原始: tiftpus is yamppus)
  72. [actual] cazgpus → tiftpus (原始: cazgpus is tiftpus)
  73. [actual] cazgpus → tiftpus (原始: cazgpus is tiftpus)
  74. [actual] yamppus → kidlpus (原始: yamppus is kidlpus)
  75. [actual] kidlpus → caklpus and kuqjpus (原始: kidlpus is caklpus and kuqjpus)
  76. [planning] kidlpus → caklpus and kuqjpus (原始: kidlpus is caklpus and kuqjpus)
  77. [actual] kidlpus → caklpus and kuqjpus (原始: kidlpus is caklpus and kuqjpus)
  78. [planning] kidlpus → caklpus and kuqjpus (原始: kidlpus is caklpus and kuqjpus)
  79. [planning] kidlpus → caklpus and kuqjpus (原始: kidlpus is caklpus and kuqjpus)
  80. [actual] kidlpus → caklpus and kuqjpus (原始: kidlpus is caklpus and kuqjpus)
  81. [planning] kidlpus → caklpus (原始: kidlpus is caklpus)
  82. [planning] kidlpus → kuqjpus (原始: kidlpus is kuqjpus)
  83. [planning] kidlpus → caklpus (原始: kidlpus is caklpus)
  84. [planning] kidlpus → kuqjpus (原始: kidlpus is kuqjpus)
  85. [planning] kidlpus → caklpus and kuqjpus (原始: kidlpus is caklpus and kuqjpus)
  86. [actual] cakqpus → qurkpus and yazcpus (原始: cakqpus is qurkpus and yazcpus)
  87. [actual] kidlpus → caklpus and kuqjpus (原始: kidlpus is caklpus and kuqjpus)
  88. [actual] kidlpus → qultpus (原始: kidlpus is qultpus)
  89. [actual] qultpus → babrpus (原始: qultpus is babrpus)
  90. [actual] kidlpus → qultpus (原始: kidlpus is qultpus)
  91. [actual] qultpus → babrpus (原始: qultpus is babrpus)
  92. [actual] kidlpus → babrpus (原始: kidlpus is babrpus)
  93. [planning] kidlpus → babrpus (原始: kidlpus is babrpus)
  94. [actual] kidlpus → babrpus (原始: kidlpus is babrpus)
  95. [planning] kidlpus → babrpus (原始: kidlpus is babrpus)
  96. [planning] x → babrpus (原始: x is babrpus)
  97. [actual] x → cakqpus (原始: x is cakqpus)
  98. [planning] cakqpus → babrpus (原始: cakqpus is babrpus)
  99. [actual] cakqpus → qurkpus (原始: cakqpus is qurkpus)
  100. [actual] qurkpus → kuvgpus (原始: qurkpus is kuvgpus)
  101. [actual] kuvgpus → jewnpus (原始: kuvgpus is jewnpus)
  102. [actual] jewnpus → zemhpus (原始: jewnpus is zemhpus)
  103. [actual] zemhpus → sovwpus (原始: zemhpus is sovwpus)
  104. [actual] sovwpus → killpus (原始: sovwpus is killpus)
  105. [actual] killpus → cazgpus (原始: killpus is cazgpus)
  106. [actual] cazgpus → tiftpus (原始: cazgpus is tiftpus)
  107. [actual] tiftpus → yamppus (原始: tiftpus is yamppus)
  108. [actual] yamppus → kidlpus (原始: yamppus is kidlpus)
  109. [actual] yamppus → kidlpus and socwpus (原始: yamppus is kidlpus and socwpus)
  110. [actual] yamppus → kidlpus (原始: yamppus is kidlpus)
  111. [actual] kidlpus → qultpus (原始: kidlpus is qultpus)
  112. [actual] qultpus → babrpus (原始: qultpus is babrpus)
  113. [actual] cakqpus → babrpus (原始: cakqpus is babrpus)
  114. [planning] x → babrpus (原始: x is babrpus)
  115. [planning] x → babgpus or babrpus (原始: x is babgpus or babrpus)
  116. [actual] x → babrpus (原始: x is babrpus)
  117. [actual] x → babrpus (原始: x is babrpus)
  118. [planning] x → babgpus (原始: x is babgpus)
  119. [planning] x → babrpus (原始: x is babrpus)
  120. [actual] x → babrpus (原始: x is babrpus)
  121. [planning] x → babgpus (原始: x is babgpus)
  122. [actual] x → babrpus (原始: x is babrpus)
  123. [actual] qurkpus → duhypus and tifvpus (原始: qurkpus is duhypus and tifvpus)

开始新的后处理...
[后处理] 从LoG数据文件中获取到图数据，节点数: 27
[后处理] 加载LoG图，包含 27 个节点
  LoG节点 0: x is babgpus or babrpus (规则: MP, 深度: 1)
  LoG节点 1: x is tiftpus (规则: MP, 深度: 2)
  LoG节点 2: tiftpus is babgpus or babrpus (规则: DI, 深度: 2)
  LoG节点 3: x is kuvgpus (规则: CE, 深度: 3)
  LoG节点 4: kuvgpus is tiftpus (规则: MP, 深度: 3)
  LoG节点 5: tiftpus is babrpus (规则: CE, 深度: 3)
  LoG节点 6: x is kuvgpus and duhypus (规则: MP, 深度: 4)
  LoG节点 7: kuvgpus is zemhpus (规则: CE, 深度: 4)
  LoG节点 8: zemhpus is tiftpus (规则: MP, 深度: 4)
  LoG节点 9: tiftpus is babrpus and caklpus (规则: MP, 深度: 4)
  LoG节点 10: x is qurkpus (规则: CE, 深度: 5)
  LoG节点 11: qurkpus is kuvgpus and duhypus (规则: CI, 深度: 5)
  LoG节点 12: kuvgpus is zemhpus and qaccpus (规则: MP, 深度: 5)
  LoG节点 13: zemhpus is killpus (规则: CE, 深度: 5)
  LoG节点 14: killpus is tiftpus (规则: CE, 深度: 5)
  LoG节点 15: tiftpus is kidlpus (规则: CE, 深度: 5)
  LoG节点 16: kidlpus is babrpus and caklpus (规则: CI, 深度: 5)
  LoG节点 17: x is qurkpus and yazcpus (规则: MP, 深度: 6)
  LoG节点 18: qurkpus is kuvgpus (规则: CE, 深度: 6)
  LoG节点 19: qurkpus is duhypus (规则: CE, 深度: 6)
  LoG节点 20: kuvgpus is jewnpus (规则: CE, 深度: 6)
  LoG节点 21: jewnpus is zemhpus and qaccpus (规则: CE, 深度: 6)
  LoG节点 22: zemhpus is killpus and qogypus (规则: MP, 深度: 6)
  LoG节点 23: killpus is tiftpus and datvpus (规则: MP, 深度: 6)
  LoG节点 24: tiftpus is kidlpus and socwpus (规则: MP, 深度: 6)
  LoG节点 25: kidlpus is babrpus (规则: MP, 深度: 6)
  LoG节点 26: kidlpus is caklpus (规则: CE, 深度: 6)

============================================================
[后处理] 开始处理节点
============================================================
📊 初始状态:
   - 标准化节点数: 123
   - 初始条件数: 15
   - LoG图节点数: 27

📋 初始条件列表:
    1. cakqpus is qurkpus and yazcpus
    2. killpus is cazgpus
    3. qurkpus is kuvgpus and newzpus
    4. kidlpus is caklpus and kuqjpus
    5. zemhpus is sovwpus
    6. x is cakqpus
    7. qurkpus is duhypus and tifvpus
    8. sovwpus is killpus and qogypus
    9. qultpus is babrpus
   10. jewnpus is zemhpus and qaccpus and ketxpus
   11. cazgpus is tiftpus and datvpus
   12. kidlpus is qultpus
   13. tiftpus is yamppus
   14. yamppus is kidlpus and socwpus
   15. kuvgpus is jewnpus and bimxpus

🔧 构建初始Statement列表...
✅ 初始Statement列表构建完成，包含 15 个前提节点

🔍 开始处理actual节点...

   节点 1: qultpus is babrpus
      ↻ 重复节点，计数: 2

   节点 2: x is cakqpus
      ↻ 重复节点，计数: 2

   节点 3: x is cakqpus
      ↻ 重复节点，计数: 3

   节点 4: cakqpus is qurkpus and yazcpus
      ↻ 重复节点，计数: 2

   节点 5: killpus is cazgpus
      ↻ 重复节点，计数: 2

   节点 6: qurkpus is kuvgpus and newzpus
      ↻ 重复节点，计数: 2

   节点 7: kidlpus is caklpus and kuqjpus
      ↻ 重复节点，计数: 2

   节点 8: zemhpus is sovwpus
      ↻ 重复节点，计数: 2

   节点 9: x is cakqpus
      ↻ 重复节点，计数: 4

   节点 10: qurkpus is duhypus and tifvpus
      ↻ 重复节点，计数: 2

   节点 11: sovwpus is killpus and qogypus
      ↻ 重复节点，计数: 2

   节点 12: qultpus is babrpus
      ↻ 重复节点，计数: 3

   节点 13: jewnpus is zemhpus and qaccpus and ketxpus
      ↻ 重复节点，计数: 2

   节点 14: cazgpus is tiftpus and datvpus
      ↻ 重复节点，计数: 2

   节点 15: kidlpus is qultpus
      ↻ 重复节点，计数: 2

   节点 16: tiftpus is yamppus
      ↻ 重复节点，计数: 2

   节点 17: yamppus is kidlpus and socwpus
      ↻ 重复节点，计数: 2

   节点 18: kuvgpus is jewnpus and bimxpus
      ↻ 重复节点，计数: 2

   节点 19: x is cakqpus
      ↻ 重复节点，计数: 5

   节点 20: babrpus is qultpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 21: babrpus is qultpus
      ↻ 重复节点，计数: 2

   节点 22: cakqpus is qurkpus and yazcpus
      ↻ 重复节点，计数: 3

   节点 23: cakqpus is qurkpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: cakqpus is qurkpus and yazcpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: cakqpus is qurkpus and yazcpus

   节点 24: qurkpus is kuvgpus and newzpus
      ↻ 重复节点，计数: 3

   节点 25: qurkpus is kuvgpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: qurkpus is kuvgpus
      ✅ 验证成功 + LoG匹配

   节点 26: kuvgpus is jewnpus and bimxpus
      ↻ 重复节点，计数: 3

   节点 27: kuvgpus is jewnpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: kuvgpus is jewnpus
      ✅ 验证成功 + LoG匹配

   节点 28: jewnpus is zemhpus and qaccpus and ketxpus
      ↻ 重复节点，计数: 3

   节点 29: jewnpus is zemhpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: jewnpus is zemhpus and qaccpus and ketxpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: jewnpus is zemhpus and qaccpus and ketxpus
  ✓ 点亮LoG节点: jewnpus is zemhpus and qaccpus
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 30: zemhpus is sovwpus
      ↻ 重复节点，计数: 3

   节点 31: zemhpus is sovwpus
      ↻ 重复节点，计数: 4

   节点 32: sovwpus is killpus and qogypus
      ↻ 重复节点，计数: 3

   节点 33: sovwpus is killpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: sovwpus is killpus and qogypus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: sovwpus is killpus and qogypus

   节点 34: killpus is cazgpus
      ↻ 重复节点，计数: 3

   节点 35: killpus is cazgpus
      ↻ 重复节点，计数: 4

   节点 36: cazgpus is tiftpus and datvpus
      ↻ 重复节点，计数: 3

   节点 37: cazgpus is tiftpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: cazgpus is tiftpus and datvpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: cazgpus is tiftpus and datvpus

   节点 38: tiftpus is yamppus
      ↻ 重复节点，计数: 3

   节点 39: tiftpus is yamppus
      ↻ 重复节点，计数: 4

   节点 40: yamppus is kidlpus and socwpus
      ↻ 重复节点，计数: 3

   节点 41: yamppus is kidlpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: yamppus is kidlpus and socwpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: yamppus is kidlpus and socwpus

   节点 42: kidlpus is caklpus and kuqjpus
      ↻ 重复节点，计数: 3

   节点 43: kidlpus is qultpus
      ↻ 重复节点，计数: 3

   节点 44: kidlpus is qultpus
      ↻ 重复节点，计数: 4

   节点 45: qultpus is babrpus
      ↻ 重复节点，计数: 4

   节点 46: qultpus is babrpus
      ↻ 重复节点，计数: 5

   节点 47: kidlpus is qultpus
      ↻ 重复节点，计数: 5

   节点 48: qultpus is babrpus
      ↻ 重复节点，计数: 6

   节点 49: kidlpus is qultpus
      ↻ 重复节点，计数: 6

   节点 50: kidlpus is qultpus
      ↻ 重复节点，计数: 7

   节点 51: qultpus is babrpus
      ↻ 重复节点，计数: 7

   节点 52: kidlpus is qultpus
      ↻ 重复节点，计数: 8

   节点 53: qultpus is babrpus
      ↻ 重复节点，计数: 8

   节点 54: kidlpus is qultpus
      ↻ 重复节点，计数: 9

   节点 55: qultpus is babrpus
      ↻ 重复节点，计数: 9

   节点 56: kidlpus is babrpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: kidlpus is babrpus
      ✅ 验证成功 + LoG匹配

   节点 57: kidlpus is babrpus
      ↻ 重复节点，计数: 2

   节点 58: x is cakqpus
      ↻ 重复节点，计数: 6

   节点 59: yamppus is kidlpus
      ↻ 重复节点，计数: 2

   节点 60: yamppus is kidlpus and socwpus
      ↻ 重复节点，计数: 4

   节点 61: tiftpus is yamppus
      ↻ 重复节点，计数: 5

   节点 62: cazgpus is tiftpus
      ↻ 重复节点，计数: 2

   节点 63: cazgpus is tiftpus
      ↻ 重复节点，计数: 3

   节点 64: yamppus is kidlpus
      ↻ 重复节点，计数: 3

   节点 65: kidlpus is caklpus and kuqjpus
      ↻ 重复节点，计数: 4

   节点 66: kidlpus is caklpus and kuqjpus
      ↻ 重复节点，计数: 5

   节点 67: kidlpus is caklpus and kuqjpus
      ↻ 重复节点，计数: 6

   节点 68: cakqpus is qurkpus and yazcpus
      ↻ 重复节点，计数: 4

   节点 69: kidlpus is caklpus and kuqjpus
      ↻ 重复节点，计数: 7

   节点 70: kidlpus is qultpus
      ↻ 重复节点，计数: 10

   节点 71: qultpus is babrpus
      ↻ 重复节点，计数: 10

   节点 72: kidlpus is qultpus
      ↻ 重复节点，计数: 11

   节点 73: qultpus is babrpus
      ↻ 重复节点，计数: 11

   节点 74: kidlpus is babrpus
      ↻ 重复节点，计数: 3

   节点 75: kidlpus is babrpus
      ↻ 重复节点，计数: 4

   节点 76: x is cakqpus
      ↻ 重复节点，计数: 7

   节点 77: cakqpus is qurkpus
      ↻ 重复节点，计数: 2

   节点 78: qurkpus is kuvgpus
      ↻ 重复节点，计数: 2

   节点 79: kuvgpus is jewnpus
      ↻ 重复节点，计数: 2

   节点 80: jewnpus is zemhpus
      ↻ 重复节点，计数: 2

   节点 81: zemhpus is sovwpus
      ↻ 重复节点，计数: 5

   节点 82: sovwpus is killpus
      ↻ 重复节点，计数: 2

   节点 83: killpus is cazgpus
      ↻ 重复节点，计数: 5

   节点 84: cazgpus is tiftpus
      ↻ 重复节点，计数: 4

   节点 85: tiftpus is yamppus
      ↻ 重复节点，计数: 6

   节点 86: yamppus is kidlpus
      ↻ 重复节点，计数: 4

   节点 87: yamppus is kidlpus and socwpus
      ↻ 重复节点，计数: 5

   节点 88: yamppus is kidlpus
      ↻ 重复节点，计数: 5

   节点 89: kidlpus is qultpus
      ↻ 重复节点，计数: 12

   节点 90: qultpus is babrpus
      ↻ 重复节点，计数: 12

   节点 91: cakqpus is babrpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: cakqpus is qurkpus → qurkpus is babrpus
[后处理] 基于推理轨迹点亮节点，使用了 11 个前提条件:
  - 前提: cakqpus is qurkpus
  - 前提: qurkpus is kuvgpus
  - 前提: kuvgpus is jewnpus
  - 前提: jewnpus is zemhpus
  - 前提: zemhpus is sovwpus
  - 前提: sovwpus is killpus
  - 前提: killpus is cazgpus
  - 前提: cazgpus is tiftpus
  - 前提: tiftpus is yamppus
  - 前提: yamppus is kidlpus
  - 前提: kidlpus is babrpus
  ✓ 点亮LoG节点: tiftpus is babgpus or babrpus
[子树点亮]     └─ 点亮依赖节点: tiftpus is babrpus (深度3)
[子树点亮]     └─ 点亮依赖节点: tiftpus is babrpus and caklpus (深度4)
[子树点亮]     └─ 点亮依赖节点: tiftpus is kidlpus (深度5)
[子树点亮]     └─ 点亮依赖节点: kidlpus is babrpus and caklpus (深度5)
[子树点亮]     └─ 点亮依赖节点: tiftpus is kidlpus and socwpus (深度6)
[子树点亮]     └─ 点亮依赖节点: kidlpus is caklpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 6 个节点
  ✓ 点亮LoG节点: kuvgpus is tiftpus
[子树点亮]     └─ 点亮依赖节点: kuvgpus is zemhpus (深度4)
[子树点亮]     └─ 点亮依赖节点: zemhpus is tiftpus (深度4)
[子树点亮]     └─ 点亮依赖节点: kuvgpus is zemhpus and qaccpus (深度5)
[子树点亮]     └─ 点亮依赖节点: zemhpus is killpus (深度5)
[子树点亮]     └─ 点亮依赖节点: killpus is tiftpus (深度5)
[子树点亮]     └─ 点亮依赖节点: zemhpus is killpus and qogypus (深度6)
[子树点亮]     └─ 点亮依赖节点: killpus is tiftpus and datvpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 7 个节点
[后处理] 通过推理轨迹额外点亮了 2 个LoG节点

   节点 92: x is babrpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is cakqpus → cakqpus is babrpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: x is cakqpus
  - 前提: cakqpus is babrpus
  ✓ 点亮LoG节点: x is babgpus or babrpus
[子树点亮]     └─ 点亮依赖节点: x is tiftpus (深度2)
[子树点亮]     └─ 点亮依赖节点: x is kuvgpus (深度3)
[子树点亮]     └─ 点亮依赖节点: x is kuvgpus and duhypus (深度4)
[子树点亮]     └─ 点亮依赖节点: x is qurkpus (深度5)
[子树点亮]     └─ 点亮依赖节点: qurkpus is kuvgpus and duhypus (深度5)
[子树点亮]     └─ 点亮依赖节点: x is qurkpus and yazcpus (深度6)
[子树点亮]     └─ 点亮依赖节点: qurkpus is duhypus (深度6)
[后处理]   └─ 自动点亮依赖子树: 7 个节点
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 93: x is babrpus
      ↻ 重复节点，计数: 2

   节点 94: x is babrpus
      ↻ 重复节点，计数: 3

   节点 95: x is babrpus
      ↻ 重复节点，计数: 4

   节点 96: qurkpus is duhypus and tifvpus
      ↻ 重复节点，计数: 3

🔍 分析推理路径完整性...

============================================================
[后处理] 处理完成
============================================================
📈 处理统计:
   - 处理的actual节点: 96
   - 新增节点: 11
   - 更新已存在节点: 85
   - 点亮的LoG节点: 27

🎯 推理质量统计:
   - 完美推理: 11 (节点正确 + 路径正确)
   - 部分推理: 0 (节点正确 + 路径部分错误)
   - 无效推理: 0 (节点错误或路径完全错误)
[LoG分析] LoG图: 27节点, 15前提, 复杂度1-15

📊 === Statement列表分析 ===
📈 节点统计:
   - 总节点数: 26
   - 前提节点: 15
   - 推理节点: 10
   - 幻觉节点: 1
   - 点亮LoG节点: 27

❌ 幻觉节点详情:
   - babrpus is qultpus (出现2次)

✅ 推理节点详情:
   🟢 cakqpus is qurkpus (出现2次, 质量:perfect)
   🟢 qurkpus is kuvgpus (出现2次, 质量:perfect)
   🟢 kuvgpus is jewnpus (出现2次, 质量:perfect)
   🟢 jewnpus is zemhpus (出现2次, 质量:perfect)
   🟢 sovwpus is killpus (出现2次, 质量:perfect)
   🟢 cazgpus is tiftpus (出现4次, 质量:perfect)
   🟢 yamppus is kidlpus (出现5次, 质量:perfect)
   🟢 kidlpus is babrpus (出现4次, 质量:perfect)
   🟢 cakqpus is babrpus (出现1次, 质量:perfect)
   🟢 x is babrpus (出现4次, 质量:perfect)

🔥 点亮的LoG节点:
   - tiftpus is kidlpus and socwpus
   - x is qurkpus
   - kidlpus is babrpus
   - kuvgpus is zemhpus and qaccpus
   - x is tiftpus
   - x is kuvgpus
   - tiftpus is kidlpus
   - tiftpus is babgpus or babrpus
   - kuvgpus is jewnpus
   - kidlpus is babrpus and caklpus
   - zemhpus is tiftpus
   - kuvgpus is tiftpus
   - zemhpus is killpus
   - tiftpus is babrpus
   - qurkpus is duhypus
   - x is babgpus or babrpus
   - tiftpus is babrpus and caklpus
   - kuvgpus is zemhpus
   - zemhpus is killpus and qogypus
   - x is qurkpus and yazcpus
   - kidlpus is caklpus
   - qurkpus is kuvgpus
   - x is kuvgpus and duhypus
   - jewnpus is zemhpus and qaccpus
   - killpus is tiftpus
   - killpus is tiftpus and datvpus
   - qurkpus is kuvgpus and duhypus

============================================================
📊 计算评估指标
============================================================

🎯 计算Coverage指标...
   深度Coverage: 6/6 = 100.00%
   最深点亮节点: x is babgpus or babrpus (第6层)
   节点Coverage: 27/27 = 100.00%
   前提条件Coverage: 15/15 = 100.00%
   各推理层点亮比例:
     第1层: 10/10 = 100.00%
     第2层: 7/7 = 100.00%
     第3层: 4/4 = 100.00%
     第4层: 3/3 = 100.00%
     第5层: 2/2 = 100.00%
     第6层: 1/1 = 100.00%

🎯 计算Precision指标...
   Error Rate: 1/11 = 9.09%
   可推导节点: 10/11
   Strict Error Rate: 1/11 = 9.09%
   严格有效节点: 10/11

   详细分析:
     完美推理: 11 (100.00%)
     部分推理: 0 (0.00%)
     无效推理: 0 (0.00%)

================================================================================
处理记录 6/50
================================================================================
记录索引: 5
问题状态: correct
📁 从缓存加载提取结果: evaluation_results.LoG_6.deepseek-reasoner_record_5.json
✅ 使用缓存结果:
   - 句子数: 145
   - 提取的语句数: 173
   - 初始条件数: 18

=== Statement提取完成 ===
总句子数: 145
成功提取: 145
失败提取: 0
总statements数: 173

=== 开始清洗Statement格式 ===
原始statements数: 173
清洗后statements数: 156
过滤掉的statements数: 17
清洗后的statements:
  1. [planning] x is babgpus
  2. [actual] x is tikppus
  3. [planning] tikppus is babgpus
  4. [actual] x is tikppus
  5. [actual] tikppus is wuvjpus and fakjpus
  6. [actual] lisdpus is nidppus and lidmpus
  7. [actual] hatqpus is sahzpus and golgpus
  8. [actual] lutnpus is gagkpus
  9. [actual] nidppus is fowbpus
  10. [actual] tiltpus is lutnpus and vurrpus
  11. [actual] qowypus is watppus and fonxpus
  12. [actual] watppus is poqdpus and cuplpus
  13. [actual] pitzpus is hatqpus and juhdpus
  14. [actual] gagkpus is nepypus
  15. [actual] wuvjpus is lisdpus and revxpus
  16. [actual] fowbpus is winmpus
  17. [actual] winmpus is yuxhpus and dapfpus
  18. [actual] tikppus is wuvjpus and fakjpus
  19. [actual] nepypus is qowypus
  20. [actual] poqdpus is babgpus and poldpus and gewzpus
  21. [actual] x is tikppus
  22. [actual] yuxhpus is pitzpus and rowlpus
  23. [actual] sahzpus is tiltpus and wedlpus
  24. [planning] tikppus is babgpus
  25. [actual] babgpus is poqdpus
  26. [actual] poqdpus is babgpus and poldpus and gewzpus
  27. [planning] tikppus is poqdpus
  28. [actual] tikppus is wuvjpus and fakjpus
  29. [actual] wuvjpus is lisdpus and revxpus
  30. [actual] lisdpus is nidppus and lidmpus
  31. [actual] nidppus is fowbpus
  32. [actual] fowbpus is winmpus
  33. [actual] winmpus is yuxhpus and dapfpus
  34. [actual] yuxhpus is pitzpus and rowlpus
  35. [actual] pitzpus is hatqpus and juhdpus
  36. [actual] hatqpus is sahzpus and golgpus
  37. [actual] sahzpus is tiltpus and wedlpus
  38. [actual] tiltpus is lutnpus and vurrpus
  39. [actual] lutnpus is gagkpus
  40. [actual] gagkpus is nepypus
  41. [actual] nepypus is qowypus
  42. [actual] qowypus is watppus and fonxpus
  43. [actual] watppus is poqdpus and cuplpus
  44. [actual] poqdpus is babgpus and poldpus and gewzpus
  45. [actual] tikppus is babgpus
  46. [planning] tikppus is babgpus
  47. [actual] tikppus is fakjpus
  48. [actual] tikppus is wuvjpus and fakjpus
  49. [planning] tikppus is babgpus
  50. [planning] tikppus is wuvjpus
  51. [actual] yuxhpus is winmpus
  52. [actual] winmpus is yuxhpus and dapfpus
  53. [planning] yuxhpus is included
  54. [actual] x is tikppus
  55. [planning] tikppus is babgpus
  56. [planning] x is babgpus
  57. [actual] x is tikppus
  58. [actual] tikppus is wuvjpus
  59. [actual] wuvjpus is lisdpus
  60. [actual] lisdpus is nidppus
  61. [actual] nidppus is fowbpus
  62. [actual] fowbpus is winmpus
  63. [actual] winmpus is yuxhpus
  64. [actual] yuxhpus is pitzpus
  65. [actual] pitzpus is hatqpus
  66. [actual] hatqpus is sahzpus
  67. [actual] sahzpus is tiltpus
  68. [actual] tiltpus is lutnpus
  69. [actual] lutnpus is gagkpus
  70. [actual] gagkpus is nepypus
  71. [actual] nepypus is qowypus
  72. [actual] qowypus is watppus
  73. [actual] watppus is poqdpus
  74. [actual] poqdpus is babgpus and poldpus and gewzpus
  75. [actual] poqdpus is babgpus
  76. [actual] watppus is poqdpus
  77. [planning] watppus is babgpus
  78. [actual] watppus is poqdpus
  79. [actual] watppus is a type of poqdpus
  80. [actual] poqdpus is babgpus
  81. [actual] watppus is babgpus
  82. [planning] watppus is babgpus
  83. [planning] poqdpus is babgpus
  84. [planning] poqdpus is category babgpus
  85. [actual] poqdpus is babgpus and poldpus and gewzpus
  86. [actual] poqdpus is babgpus
  87. [actual] poqdpus is poldpus
  88. [actual] poqdpus is gewzpus
  89. [actual] poqdpus is babgpus
  90. [actual] watppus is poqdpus
  91. [actual] poqdpus is babgpus
  92. [planning] watppus is babgpus
  93. [planning] qowypus is watppus
  94. [actual] qowypus is watppus
  95. [actual] qowypus is babgpus
  96. [actual] tikppus is wuvjpus
  97. [actual] wuvjpus is lisdpus
  98. [actual] lisdpus is poqdpus
  99. [actual] poqdpus is babgpus
  100. [actual] tikppus is babgpus
  101. [actual] watppus is poqdpus
  102. [actual] watppus is poqdpus and cuplpus
  103. [planning] watppus is poqdpus
  104. [actual] qowypus is watppus and fonxpus
  105. [actual] qowypus is watppus
  106. [planning] qowypus is watppus and fonxpus
  107. [actual] nepypus is qowypus
  108. [actual] qowypus is watppus
  109. [actual] nepypus is qowypus
  110. [actual] nepypus is qowypus
  111. [actual] qowypus is watppus and fonxpus
  112. [actual] qowypus is watppus
  113. [actual] watppus is poqdpus and cuplpus
  114. [actual] watppus is poqdpus
  115. [actual] poqdpus is babgpus and poldpus and gewzpus
  116. [actual] poqdpus is babgpus
  117. [actual] nepypus is babgpus
  118. [actual] gagkpus is nepypus
  119. [actual] gagkpus is babgpus
  120. [actual] lutnpus is gagkpus
  121. [actual] lutnpus is babgpus
  122. [actual] tiltpus is lutnpus and vurrpus
  123. [actual] tiltpus is lutnpus
  124. [actual] tiltpus is babgpus
  125. [actual] sahhzpus is tiltpus and wedlpus
  126. [actual] sahhzpus is tiltpus
  127. [actual] sahhzpus is babgpus
  128. [actual] hatqpus is sahzpus and golgpus
  129. [actual] hatqpus is sahzpus
  130. [actual] hatqpus is babgpus
  131. [planning] hatqpus is babgpus
  132. [actual] pitzpus is hatqpus and juhdpus
  133. [actual] pitzpus is babgpus
  134. [actual] yuxhpus is pitzpus and rowlpus
  135. [actual] yuxhpus is babgpus
  136. [actual] winmpus is yuxhpus and dapfpus
  137. [actual] winmpus is yuxhpus
  138. [actual] winmpus is babgpus
  139. [actual] fowbpus is winmpus
  140. [actual] fowbpus is babgpus
  141. [actual] nidppus is fowbpus
  142. [actual] nidppus is babgpus
  143. [actual] lisdpus is nidppus and lidmpus
  144. [actual] lisdpus is nidppus
  145. [actual] lisdpus is babgpus
  146. [actual] wuvjpus is lisdpus and revxpus
  147. [actual] wuvjpus is lisdpus
  148. [actual] wuvjpus is babgpus
  149. [actual] tikppus is wuvjpus and fakjpus
  150. [actual] tikppus is wuvjpus
  151. [actual] tikppus is babgpus
  152. [actual] x is tikppus
  153. [actual] x is babgpus
  154. [actual] tikppus is wuvjpus
  155. [actual] wuvjpus is babgpus
  156. [actual] tikppus is babgpus

=== 开始标准化和解析节点 ===
清洗后statements数: 156
标准化后节点数: 153
过滤掉的无效实体数: 3
标准化后的节点:
  1. [planning] x → babgpus (原始: x is babgpus)
  2. [actual] x → tikppus (原始: x is tikppus)
  3. [planning] tikppus → babgpus (原始: tikppus is babgpus)
  4. [actual] x → tikppus (原始: x is tikppus)
  5. [actual] tikppus → wuvjpus and fakjpus (原始: tikppus is wuvjpus and fakjpus)
  6. [actual] lisdpus → nidppus and lidmpus (原始: lisdpus is nidppus and lidmpus)
  7. [actual] hatqpus → sahzpus and golgpus (原始: hatqpus is sahzpus and golgpus)
  8. [actual] lutnpus → gagkpus (原始: lutnpus is gagkpus)
  9. [actual] nidppus → fowbpus (原始: nidppus is fowbpus)
  10. [actual] tiltpus → lutnpus and vurrpus (原始: tiltpus is lutnpus and vurrpus)
  11. [actual] qowypus → watppus and fonxpus (原始: qowypus is watppus and fonxpus)
  12. [actual] watppus → poqdpus and cuplpus (原始: watppus is poqdpus and cuplpus)
  13. [actual] pitzpus → hatqpus and juhdpus (原始: pitzpus is hatqpus and juhdpus)
  14. [actual] gagkpus → nepypus (原始: gagkpus is nepypus)
  15. [actual] wuvjpus → lisdpus and revxpus (原始: wuvjpus is lisdpus and revxpus)
  16. [actual] fowbpus → winmpus (原始: fowbpus is winmpus)
  17. [actual] winmpus → yuxhpus and dapfpus (原始: winmpus is yuxhpus and dapfpus)
  18. [actual] tikppus → wuvjpus and fakjpus (原始: tikppus is wuvjpus and fakjpus)
  19. [actual] nepypus → qowypus (原始: nepypus is qowypus)
  20. [actual] poqdpus → babgpus and poldpus and gewzpus (原始: poqdpus is babgpus and poldpus and gewzpus)
  21. [actual] x → tikppus (原始: x is tikppus)
  22. [actual] yuxhpus → pitzpus and rowlpus (原始: yuxhpus is pitzpus and rowlpus)
  23. [actual] sahzpus → tiltpus and wedlpus (原始: sahzpus is tiltpus and wedlpus)
  24. [planning] tikppus → babgpus (原始: tikppus is babgpus)
  25. [actual] babgpus → poqdpus (原始: babgpus is poqdpus)
  26. [actual] poqdpus → babgpus and poldpus and gewzpus (原始: poqdpus is babgpus and poldpus and gewzpus)
  27. [planning] tikppus → poqdpus (原始: tikppus is poqdpus)
  28. [actual] tikppus → wuvjpus and fakjpus (原始: tikppus is wuvjpus and fakjpus)
  29. [actual] wuvjpus → lisdpus and revxpus (原始: wuvjpus is lisdpus and revxpus)
  30. [actual] lisdpus → nidppus and lidmpus (原始: lisdpus is nidppus and lidmpus)
  31. [actual] nidppus → fowbpus (原始: nidppus is fowbpus)
  32. [actual] fowbpus → winmpus (原始: fowbpus is winmpus)
  33. [actual] winmpus → yuxhpus and dapfpus (原始: winmpus is yuxhpus and dapfpus)
  34. [actual] yuxhpus → pitzpus and rowlpus (原始: yuxhpus is pitzpus and rowlpus)
  35. [actual] pitzpus → hatqpus and juhdpus (原始: pitzpus is hatqpus and juhdpus)
  36. [actual] hatqpus → sahzpus and golgpus (原始: hatqpus is sahzpus and golgpus)
  37. [actual] sahzpus → tiltpus and wedlpus (原始: sahzpus is tiltpus and wedlpus)
  38. [actual] tiltpus → lutnpus and vurrpus (原始: tiltpus is lutnpus and vurrpus)
  39. [actual] lutnpus → gagkpus (原始: lutnpus is gagkpus)
  40. [actual] gagkpus → nepypus (原始: gagkpus is nepypus)
  41. [actual] nepypus → qowypus (原始: nepypus is qowypus)
  42. [actual] qowypus → watppus and fonxpus (原始: qowypus is watppus and fonxpus)
  43. [actual] watppus → poqdpus and cuplpus (原始: watppus is poqdpus and cuplpus)
  44. [actual] poqdpus → babgpus and poldpus and gewzpus (原始: poqdpus is babgpus and poldpus and gewzpus)
  45. [actual] tikppus → babgpus (原始: tikppus is babgpus)
  46. [planning] tikppus → babgpus (原始: tikppus is babgpus)
  47. [actual] tikppus → fakjpus (原始: tikppus is fakjpus)
  48. [actual] tikppus → wuvjpus and fakjpus (原始: tikppus is wuvjpus and fakjpus)
  49. [planning] tikppus → babgpus (原始: tikppus is babgpus)
  50. [planning] tikppus → wuvjpus (原始: tikppus is wuvjpus)
  51. [actual] yuxhpus → winmpus (原始: yuxhpus is winmpus)
  52. [actual] winmpus → yuxhpus and dapfpus (原始: winmpus is yuxhpus and dapfpus)
  53. [actual] x → tikppus (原始: x is tikppus)
  54. [planning] tikppus → babgpus (原始: tikppus is babgpus)
  55. [planning] x → babgpus (原始: x is babgpus)
  56. [actual] x → tikppus (原始: x is tikppus)
  57. [actual] tikppus → wuvjpus (原始: tikppus is wuvjpus)
  58. [actual] wuvjpus → lisdpus (原始: wuvjpus is lisdpus)
  59. [actual] lisdpus → nidppus (原始: lisdpus is nidppus)
  60. [actual] nidppus → fowbpus (原始: nidppus is fowbpus)
  61. [actual] fowbpus → winmpus (原始: fowbpus is winmpus)
  62. [actual] winmpus → yuxhpus (原始: winmpus is yuxhpus)
  63. [actual] yuxhpus → pitzpus (原始: yuxhpus is pitzpus)
  64. [actual] pitzpus → hatqpus (原始: pitzpus is hatqpus)
  65. [actual] hatqpus → sahzpus (原始: hatqpus is sahzpus)
  66. [actual] sahzpus → tiltpus (原始: sahzpus is tiltpus)
  67. [actual] tiltpus → lutnpus (原始: tiltpus is lutnpus)
  68. [actual] lutnpus → gagkpus (原始: lutnpus is gagkpus)
  69. [actual] gagkpus → nepypus (原始: gagkpus is nepypus)
  70. [actual] nepypus → qowypus (原始: nepypus is qowypus)
  71. [actual] qowypus → watppus (原始: qowypus is watppus)
  72. [actual] watppus → poqdpus (原始: watppus is poqdpus)
  73. [actual] poqdpus → babgpus and poldpus and gewzpus (原始: poqdpus is babgpus and poldpus and gewzpus)
  74. [actual] poqdpus → babgpus (原始: poqdpus is babgpus)
  75. [actual] watppus → poqdpus (原始: watppus is poqdpus)
  76. [planning] watppus → babgpus (原始: watppus is babgpus)
  77. [actual] watppus → poqdpus (原始: watppus is poqdpus)
  78. [actual] poqdpus → babgpus (原始: poqdpus is babgpus)
  79. [actual] watppus → babgpus (原始: watppus is babgpus)
  80. [planning] watppus → babgpus (原始: watppus is babgpus)
  81. [planning] poqdpus → babgpus (原始: poqdpus is babgpus)
  82. [actual] poqdpus → babgpus and poldpus and gewzpus (原始: poqdpus is babgpus and poldpus and gewzpus)
  83. [actual] poqdpus → babgpus (原始: poqdpus is babgpus)
  84. [actual] poqdpus → poldpus (原始: poqdpus is poldpus)
  85. [actual] poqdpus → gewzpus (原始: poqdpus is gewzpus)
  86. [actual] poqdpus → babgpus (原始: poqdpus is babgpus)
  87. [actual] watppus → poqdpus (原始: watppus is poqdpus)
  88. [actual] poqdpus → babgpus (原始: poqdpus is babgpus)
  89. [planning] watppus → babgpus (原始: watppus is babgpus)
  90. [planning] qowypus → watppus (原始: qowypus is watppus)
  91. [actual] qowypus → watppus (原始: qowypus is watppus)
  92. [actual] qowypus → babgpus (原始: qowypus is babgpus)
  93. [actual] tikppus → wuvjpus (原始: tikppus is wuvjpus)
  94. [actual] wuvjpus → lisdpus (原始: wuvjpus is lisdpus)
  95. [actual] lisdpus → poqdpus (原始: lisdpus is poqdpus)
  96. [actual] poqdpus → babgpus (原始: poqdpus is babgpus)
  97. [actual] tikppus → babgpus (原始: tikppus is babgpus)
  98. [actual] watppus → poqdpus (原始: watppus is poqdpus)
  99. [actual] watppus → poqdpus and cuplpus (原始: watppus is poqdpus and cuplpus)
  100. [planning] watppus → poqdpus (原始: watppus is poqdpus)
  101. [actual] qowypus → watppus and fonxpus (原始: qowypus is watppus and fonxpus)
  102. [actual] qowypus → watppus (原始: qowypus is watppus)
  103. [planning] qowypus → watppus and fonxpus (原始: qowypus is watppus and fonxpus)
  104. [actual] nepypus → qowypus (原始: nepypus is qowypus)
  105. [actual] qowypus → watppus (原始: qowypus is watppus)
  106. [actual] nepypus → qowypus (原始: nepypus is qowypus)
  107. [actual] nepypus → qowypus (原始: nepypus is qowypus)
  108. [actual] qowypus → watppus and fonxpus (原始: qowypus is watppus and fonxpus)
  109. [actual] qowypus → watppus (原始: qowypus is watppus)
  110. [actual] watppus → poqdpus and cuplpus (原始: watppus is poqdpus and cuplpus)
  111. [actual] watppus → poqdpus (原始: watppus is poqdpus)
  112. [actual] poqdpus → babgpus and poldpus and gewzpus (原始: poqdpus is babgpus and poldpus and gewzpus)
  113. [actual] poqdpus → babgpus (原始: poqdpus is babgpus)
  114. [actual] nepypus → babgpus (原始: nepypus is babgpus)
  115. [actual] gagkpus → nepypus (原始: gagkpus is nepypus)
  116. [actual] gagkpus → babgpus (原始: gagkpus is babgpus)
  117. [actual] lutnpus → gagkpus (原始: lutnpus is gagkpus)
  118. [actual] lutnpus → babgpus (原始: lutnpus is babgpus)
  119. [actual] tiltpus → lutnpus and vurrpus (原始: tiltpus is lutnpus and vurrpus)
  120. [actual] tiltpus → lutnpus (原始: tiltpus is lutnpus)
  121. [actual] tiltpus → babgpus (原始: tiltpus is babgpus)
  122. [actual] sahhzpus → tiltpus and wedlpus (原始: sahhzpus is tiltpus and wedlpus)
  123. [actual] sahhzpus → tiltpus (原始: sahhzpus is tiltpus)
  124. [actual] sahhzpus → babgpus (原始: sahhzpus is babgpus)
  125. [actual] hatqpus → sahzpus and golgpus (原始: hatqpus is sahzpus and golgpus)
  126. [actual] hatqpus → sahzpus (原始: hatqpus is sahzpus)
  127. [actual] hatqpus → babgpus (原始: hatqpus is babgpus)
  128. [planning] hatqpus → babgpus (原始: hatqpus is babgpus)
  129. [actual] pitzpus → hatqpus and juhdpus (原始: pitzpus is hatqpus and juhdpus)
  130. [actual] pitzpus → babgpus (原始: pitzpus is babgpus)
  131. [actual] yuxhpus → pitzpus and rowlpus (原始: yuxhpus is pitzpus and rowlpus)
  132. [actual] yuxhpus → babgpus (原始: yuxhpus is babgpus)
  133. [actual] winmpus → yuxhpus and dapfpus (原始: winmpus is yuxhpus and dapfpus)
  134. [actual] winmpus → yuxhpus (原始: winmpus is yuxhpus)
  135. [actual] winmpus → babgpus (原始: winmpus is babgpus)
  136. [actual] fowbpus → winmpus (原始: fowbpus is winmpus)
  137. [actual] fowbpus → babgpus (原始: fowbpus is babgpus)
  138. [actual] nidppus → fowbpus (原始: nidppus is fowbpus)
  139. [actual] nidppus → babgpus (原始: nidppus is babgpus)
  140. [actual] lisdpus → nidppus and lidmpus (原始: lisdpus is nidppus and lidmpus)
  141. [actual] lisdpus → nidppus (原始: lisdpus is nidppus)
  142. [actual] lisdpus → babgpus (原始: lisdpus is babgpus)
  143. [actual] wuvjpus → lisdpus and revxpus (原始: wuvjpus is lisdpus and revxpus)
  144. [actual] wuvjpus → lisdpus (原始: wuvjpus is lisdpus)
  145. [actual] wuvjpus → babgpus (原始: wuvjpus is babgpus)
  146. [actual] tikppus → wuvjpus and fakjpus (原始: tikppus is wuvjpus and fakjpus)
  147. [actual] tikppus → wuvjpus (原始: tikppus is wuvjpus)
  148. [actual] tikppus → babgpus (原始: tikppus is babgpus)
  149. [actual] x → tikppus (原始: x is tikppus)
  150. [actual] x → babgpus (原始: x is babgpus)
  151. [actual] tikppus → wuvjpus (原始: tikppus is wuvjpus)
  152. [actual] wuvjpus → babgpus (原始: wuvjpus is babgpus)
  153. [actual] tikppus → babgpus (原始: tikppus is babgpus)

开始新的后处理...
[后处理] 从LoG数据文件中获取到图数据，节点数: 30
[后处理] 加载LoG图，包含 30 个节点
  LoG节点 0: x is babgpus (规则: CE, 深度: 1)
  LoG节点 1: x is babgpus and poldpus (规则: MP, 深度: 2)
  LoG节点 2: x is hatqpus (规则: MP, 深度: 3)
  LoG节点 3: hatqpus is babgpus and poldpus (规则: MP, 深度: 3)
  LoG节点 4: x is nidppus (规则: MP, 深度: 4)
  LoG节点 5: nidppus is hatqpus (规则: MP, 深度: 4)
  LoG节点 6: hatqpus is nepypus (规则: MP, 深度: 4)
  LoG节点 7: nepypus is babgpus and poldpus (规则: MP, 深度: 4)
  LoG节点 8: x is wuvjpus (规则: CE, 深度: 5)
  LoG节点 9: wuvjpus is nidppus (规则: MP, 深度: 5)
  LoG节点 10: nidppus is yuxhpus (规则: MP, 深度: 5)
  LoG节点 11: yuxhpus is hatqpus (规则: MP, 深度: 5)
  LoG节点 12: hatqpus is tiltpus (规则: MP, 深度: 5)
  LoG节点 13: tiltpus is nepypus (规则: MP, 深度: 5)
  LoG节点 14: nepypus is watppus (规则: CE, 深度: 5)
  LoG节点 15: watppus is babgpus and poldpus (规则: MP, 深度: 5)
  LoG节点 16: x is wuvjpus and fakjpus (规则: MP, 深度: 6)
  LoG节点 17: wuvjpus is lisdpus (规则: CE, 深度: 6)
  LoG节点 18: lisdpus is nidppus (规则: CE, 深度: 6)
  LoG节点 19: nidppus is winmpus (规则: MP, 深度: 6)
  LoG节点 20: winmpus is yuxhpus (规则: CE, 深度: 6)
  LoG节点 21: yuxhpus is pitzpus (规则: CE, 深度: 6)
  LoG节点 22: pitzpus is hatqpus (规则: CE, 深度: 6)
  LoG节点 23: hatqpus is sahzpus (规则: CE, 深度: 6)
  LoG节点 24: sahzpus is tiltpus (规则: CE, 深度: 6)
  LoG节点 25: tiltpus is lutnpus (规则: CE, 深度: 6)
  LoG节点 26: lutnpus is nepypus (规则: MP, 深度: 6)
  LoG节点 27: nepypus is watppus and fonxpus (规则: MP, 深度: 6)
  LoG节点 28: watppus is poqdpus (规则: CE, 深度: 6)
  LoG节点 29: poqdpus is babgpus and poldpus (规则: CE, 深度: 6)

============================================================
[后处理] 开始处理节点
============================================================
📊 初始状态:
   - 标准化节点数: 153
   - 初始条件数: 18
   - LoG图节点数: 30

📋 初始条件列表:
    1. lisdpus is nidppus and lidmpus
    2. hatqpus is sahzpus and golgpus
    3. lutnpus is gagkpus
    4. nidppus is fowbpus
    5. tiltpus is lutnpus and vurrpus
    6. qowypus is watppus and fonxpus
    7. watppus is poqdpus and cuplpus
    8. pitzpus is hatqpus and juhdpus
    9. gagkpus is nepypus
   10. wuvjpus is lisdpus and revxpus
   11. fowbpus is winmpus
   12. winmpus is yuxhpus and dapfpus
   13. tikppus is wuvjpus and fakjpus
   14. nepypus is qowypus
   15. poqdpus is babgpus and poldpus and gewzpus
   16. x is tikppus
   17. yuxhpus is pitzpus and rowlpus
   18. sahzpus is tiltpus and wedlpus

🔧 构建初始Statement列表...
✅ 初始Statement列表构建完成，包含 18 个前提节点

🔍 开始处理actual节点...

   节点 1: x is tikppus
      ↻ 重复节点，计数: 2

   节点 2: x is tikppus
      ↻ 重复节点，计数: 3

   节点 3: tikppus is wuvjpus and fakjpus
      ↻ 重复节点，计数: 2

   节点 4: lisdpus is nidppus and lidmpus
      ↻ 重复节点，计数: 2

   节点 5: hatqpus is sahzpus and golgpus
      ↻ 重复节点，计数: 2

   节点 6: lutnpus is gagkpus
      ↻ 重复节点，计数: 2

   节点 7: nidppus is fowbpus
      ↻ 重复节点，计数: 2

   节点 8: tiltpus is lutnpus and vurrpus
      ↻ 重复节点，计数: 2

   节点 9: qowypus is watppus and fonxpus
      ↻ 重复节点，计数: 2

   节点 10: watppus is poqdpus and cuplpus
      ↻ 重复节点，计数: 2

   节点 11: pitzpus is hatqpus and juhdpus
      ↻ 重复节点，计数: 2

   节点 12: gagkpus is nepypus
      ↻ 重复节点，计数: 2

   节点 13: wuvjpus is lisdpus and revxpus
      ↻ 重复节点，计数: 2

   节点 14: fowbpus is winmpus
      ↻ 重复节点，计数: 2

   节点 15: winmpus is yuxhpus and dapfpus
      ↻ 重复节点，计数: 2

   节点 16: tikppus is wuvjpus and fakjpus
      ↻ 重复节点，计数: 3

   节点 17: nepypus is qowypus
      ↻ 重复节点，计数: 2

   节点 18: poqdpus is babgpus and poldpus and gewzpus
      ↻ 重复节点，计数: 2

   节点 19: x is tikppus
      ↻ 重复节点，计数: 4

   节点 20: yuxhpus is pitzpus and rowlpus
      ↻ 重复节点，计数: 2

   节点 21: sahzpus is tiltpus and wedlpus
      ↻ 重复节点，计数: 2

   节点 22: babgpus is poqdpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 23: poqdpus is babgpus and poldpus and gewzpus
      ↻ 重复节点，计数: 3

   节点 24: tikppus is wuvjpus and fakjpus
      ↻ 重复节点，计数: 4

   节点 25: wuvjpus is lisdpus and revxpus
      ↻ 重复节点，计数: 3

   节点 26: lisdpus is nidppus and lidmpus
      ↻ 重复节点，计数: 3

   节点 27: nidppus is fowbpus
      ↻ 重复节点，计数: 3

   节点 28: fowbpus is winmpus
      ↻ 重复节点，计数: 3

   节点 29: winmpus is yuxhpus and dapfpus
      ↻ 重复节点，计数: 3

   节点 30: yuxhpus is pitzpus and rowlpus
      ↻ 重复节点，计数: 3

   节点 31: pitzpus is hatqpus and juhdpus
      ↻ 重复节点，计数: 3

   节点 32: hatqpus is sahzpus and golgpus
      ↻ 重复节点，计数: 3

   节点 33: sahzpus is tiltpus and wedlpus
      ↻ 重复节点，计数: 3

   节点 34: tiltpus is lutnpus and vurrpus
      ↻ 重复节点，计数: 3

   节点 35: lutnpus is gagkpus
      ↻ 重复节点，计数: 3

   节点 36: gagkpus is nepypus
      ↻ 重复节点，计数: 3

   节点 37: nepypus is qowypus
      ↻ 重复节点，计数: 3

   节点 38: qowypus is watppus and fonxpus
      ↻ 重复节点，计数: 3

   节点 39: watppus is poqdpus and cuplpus
      ↻ 重复节点，计数: 3

   节点 40: poqdpus is babgpus and poldpus and gewzpus
      ↻ 重复节点，计数: 4

   节点 41: tikppus is babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP+CE
      📋 推理路径: MP+CE规则: tikppus is wuvjpus → wuvjpus is babgpus
[后处理] 基于推理轨迹点亮节点，使用了 17 个前提条件:
  - 前提: tikppus is wuvjpus and fakjpus
  - 前提: wuvjpus is lisdpus and revxpus
  - 前提: lisdpus is nidppus and lidmpus
  - 前提: nidppus is fowbpus
  - 前提: fowbpus is winmpus
  - 前提: winmpus is yuxhpus and dapfpus
  - 前提: yuxhpus is pitzpus and rowlpus
  - 前提: pitzpus is hatqpus and juhdpus
  - 前提: hatqpus is sahzpus and golgpus
  - 前提: sahzpus is tiltpus and wedlpus
  - 前提: tiltpus is lutnpus and vurrpus
  - 前提: lutnpus is gagkpus
  - 前提: gagkpus is nepypus
  - 前提: nepypus is qowypus
  - 前提: qowypus is watppus and fonxpus
  - 前提: watppus is poqdpus and cuplpus
  - 前提: poqdpus is babgpus and poldpus and gewzpus
  ✓ 点亮LoG节点: hatqpus is babgpus and poldpus
[子树点亮]     └─ 点亮依赖节点: hatqpus is nepypus (深度4)
[子树点亮]     └─ 点亮依赖节点: nepypus is babgpus and poldpus (深度4)
[子树点亮]     └─ 点亮依赖节点: hatqpus is tiltpus (深度5)
[子树点亮]     └─ 点亮依赖节点: tiltpus is nepypus (深度5)
[子树点亮]     └─ 点亮依赖节点: nepypus is watppus (深度5)
[子树点亮]     └─ 点亮依赖节点: watppus is babgpus and poldpus (深度5)
[子树点亮]     └─ 点亮依赖节点: hatqpus is sahzpus (深度6)
[子树点亮]     └─ 点亮依赖节点: sahzpus is tiltpus (深度6)
[子树点亮]     └─ 点亮依赖节点: tiltpus is lutnpus (深度6)
[子树点亮]     └─ 点亮依赖节点: lutnpus is nepypus (深度6)
[子树点亮]     └─ 点亮依赖节点: nepypus is watppus and fonxpus (深度6)
[子树点亮]     └─ 点亮依赖节点: watppus is poqdpus (深度6)
[子树点亮]     └─ 点亮依赖节点: poqdpus is babgpus and poldpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 13 个节点
  ✓ 点亮LoG节点: nidppus is hatqpus
[子树点亮]     └─ 点亮依赖节点: nidppus is yuxhpus (深度5)
[子树点亮]     └─ 点亮依赖节点: yuxhpus is hatqpus (深度5)
[子树点亮]     └─ 点亮依赖节点: nidppus is winmpus (深度6)
[子树点亮]     └─ 点亮依赖节点: winmpus is yuxhpus (深度6)
[子树点亮]     └─ 点亮依赖节点: yuxhpus is pitzpus (深度6)
[子树点亮]     └─ 点亮依赖节点: pitzpus is hatqpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 6 个节点
  ✓ 点亮LoG节点: wuvjpus is nidppus
[子树点亮]     └─ 点亮依赖节点: wuvjpus is lisdpus (深度6)
[子树点亮]     └─ 点亮依赖节点: lisdpus is nidppus (深度6)
[后处理]   └─ 自动点亮依赖子树: 2 个节点
[后处理] 通过推理轨迹额外点亮了 3 个LoG节点

   节点 42: tikppus is fakjpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: tikppus is wuvjpus and fakjpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: tikppus is wuvjpus and fakjpus

   节点 43: tikppus is wuvjpus and fakjpus
      ↻ 重复节点，计数: 5

   节点 44: yuxhpus is winmpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 45: winmpus is yuxhpus and dapfpus
      ↻ 重复节点，计数: 4

   节点 46: x is tikppus
      ↻ 重复节点，计数: 5

   节点 47: x is tikppus
      ↻ 重复节点，计数: 6

   节点 48: tikppus is wuvjpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: tikppus is wuvjpus and fakjpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: tikppus is wuvjpus and fakjpus

   节点 49: wuvjpus is lisdpus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 50: lisdpus is nidppus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 51: nidppus is fowbpus
      ↻ 重复节点，计数: 4

   节点 52: fowbpus is winmpus
      ↻ 重复节点，计数: 4

   节点 53: winmpus is yuxhpus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 54: yuxhpus is pitzpus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 55: pitzpus is hatqpus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 56: hatqpus is sahzpus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 57: sahzpus is tiltpus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 58: tiltpus is lutnpus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 59: lutnpus is gagkpus
      ↻ 重复节点，计数: 4

   节点 60: gagkpus is nepypus
      ↻ 重复节点，计数: 4

   节点 61: nepypus is qowypus
      ↻ 重复节点，计数: 4

   节点 62: qowypus is watppus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: qowypus is watppus and fonxpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: qowypus is watppus and fonxpus

   节点 63: watppus is poqdpus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 64: poqdpus is babgpus and poldpus and gewzpus
      ↻ 重复节点，计数: 5

   节点 65: poqdpus is babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: poqdpus is babgpus and poldpus and gewzpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: poqdpus is babgpus and poldpus and gewzpus

   节点 66: watppus is poqdpus
      ↻ 重复节点，计数: 2

   节点 67: watppus is poqdpus
      ↻ 重复节点，计数: 3

   节点 68: poqdpus is babgpus
      ↻ 重复节点，计数: 2

   节点 69: watppus is babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: watppus is poqdpus → poqdpus is babgpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: watppus is poqdpus
  - 前提: poqdpus is babgpus

   节点 70: poqdpus is babgpus and poldpus and gewzpus
      ↻ 重复节点，计数: 6

   节点 71: poqdpus is babgpus
      ↻ 重复节点，计数: 3

   节点 72: poqdpus is poldpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: poqdpus is babgpus and poldpus and gewzpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: poqdpus is babgpus and poldpus and gewzpus

   节点 73: poqdpus is gewzpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: poqdpus is babgpus and poldpus and gewzpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: poqdpus is babgpus and poldpus and gewzpus

   节点 74: poqdpus is babgpus
      ↻ 重复节点，计数: 4

   节点 75: watppus is poqdpus
      ↻ 重复节点，计数: 4

   节点 76: poqdpus is babgpus
      ↻ 重复节点，计数: 5

   节点 77: qowypus is watppus
      ↻ 重复节点，计数: 2

   节点 78: qowypus is babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: qowypus is watppus → watppus is babgpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: qowypus is watppus
  - 前提: watppus is babgpus

   节点 79: tikppus is wuvjpus
      ↻ 重复节点，计数: 2

   节点 80: wuvjpus is lisdpus
      ↻ 重复节点，计数: 2

   节点 81: lisdpus is poqdpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: lisdpus is nidppus → nidppus is poqdpus
[后处理] 基于推理轨迹点亮节点，使用了 14 个前提条件:
  - 前提: lisdpus is nidppus
  - 前提: nidppus is fowbpus
  - 前提: fowbpus is winmpus
  - 前提: winmpus is yuxhpus
  - 前提: yuxhpus is pitzpus
  - 前提: pitzpus is hatqpus
  - 前提: hatqpus is sahzpus
  - 前提: sahzpus is tiltpus
  - 前提: tiltpus is lutnpus
  - 前提: lutnpus is gagkpus
  - 前提: gagkpus is nepypus
  - 前提: nepypus is qowypus
  - 前提: qowypus is watppus
  - 前提: watppus is poqdpus

   节点 82: poqdpus is babgpus
      ↻ 重复节点，计数: 6

   节点 83: tikppus is babgpus
      ↻ 重复节点，计数: 2

   节点 84: watppus is poqdpus
      ↻ 重复节点，计数: 5

   节点 85: watppus is poqdpus and cuplpus
      ↻ 重复节点，计数: 4

   节点 86: qowypus is watppus and fonxpus
      ↻ 重复节点，计数: 4

   节点 87: qowypus is watppus
      ↻ 重复节点，计数: 3

   节点 88: nepypus is qowypus
      ↻ 重复节点，计数: 5

   节点 89: qowypus is watppus
      ↻ 重复节点，计数: 4

   节点 90: nepypus is qowypus
      ↻ 重复节点，计数: 6

   节点 91: nepypus is qowypus
      ↻ 重复节点，计数: 7

   节点 92: qowypus is watppus and fonxpus
      ↻ 重复节点，计数: 5

   节点 93: qowypus is watppus
      ↻ 重复节点，计数: 5

   节点 94: watppus is poqdpus and cuplpus
      ↻ 重复节点，计数: 5

   节点 95: watppus is poqdpus
      ↻ 重复节点，计数: 6

   节点 96: poqdpus is babgpus and poldpus and gewzpus
      ↻ 重复节点，计数: 7

   节点 97: poqdpus is babgpus
      ↻ 重复节点，计数: 7

   节点 98: nepypus is babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: nepypus is qowypus → qowypus is babgpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: nepypus is qowypus
  - 前提: qowypus is babgpus

   节点 99: gagkpus is nepypus
      ↻ 重复节点，计数: 5

   节点 100: gagkpus is babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: gagkpus is nepypus → nepypus is babgpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: gagkpus is nepypus
  - 前提: nepypus is babgpus

   节点 101: lutnpus is gagkpus
      ↻ 重复节点，计数: 5

   节点 102: lutnpus is babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: lutnpus is gagkpus → gagkpus is babgpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: lutnpus is gagkpus
  - 前提: gagkpus is babgpus

   节点 103: tiltpus is lutnpus and vurrpus
      ↻ 重复节点，计数: 4

   节点 104: tiltpus is lutnpus
      ↻ 重复节点，计数: 2

   节点 105: tiltpus is babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: tiltpus is lutnpus → lutnpus is babgpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: tiltpus is lutnpus
  - 前提: lutnpus is babgpus

   节点 106: sahhzpus is tiltpus and wedlpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 107: sahhzpus is tiltpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: sahhzpus is tiltpus and wedlpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: sahhzpus is tiltpus and wedlpus

   节点 108: sahhzpus is babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: sahhzpus is tiltpus → tiltpus is babgpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: sahhzpus is tiltpus
  - 前提: tiltpus is babgpus

   节点 109: hatqpus is sahzpus and golgpus
      ↻ 重复节点，计数: 4

   节点 110: hatqpus is sahzpus
      ↻ 重复节点，计数: 2

   节点 111: hatqpus is babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: hatqpus is sahzpus → sahzpus is babgpus
[后处理] 基于推理轨迹点亮节点，使用了 3 个前提条件:
  - 前提: hatqpus is sahzpus
  - 前提: sahzpus is tiltpus
  - 前提: tiltpus is babgpus

   节点 112: pitzpus is hatqpus and juhdpus
      ↻ 重复节点，计数: 4

   节点 113: pitzpus is babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: pitzpus is hatqpus → hatqpus is babgpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: pitzpus is hatqpus
  - 前提: hatqpus is babgpus

   节点 114: yuxhpus is pitzpus and rowlpus
      ↻ 重复节点，计数: 4

   节点 115: yuxhpus is babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: yuxhpus is pitzpus → pitzpus is babgpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: yuxhpus is pitzpus
  - 前提: pitzpus is babgpus

   节点 116: winmpus is yuxhpus and dapfpus
      ↻ 重复节点，计数: 5

   节点 117: winmpus is yuxhpus
      ↻ 重复节点，计数: 2

   节点 118: winmpus is babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: winmpus is yuxhpus → yuxhpus is babgpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: winmpus is yuxhpus
  - 前提: yuxhpus is babgpus

   节点 119: fowbpus is winmpus
      ↻ 重复节点，计数: 5

   节点 120: fowbpus is babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: fowbpus is winmpus → winmpus is babgpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: fowbpus is winmpus
  - 前提: winmpus is babgpus

   节点 121: nidppus is fowbpus
      ↻ 重复节点，计数: 5

   节点 122: nidppus is babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: nidppus is fowbpus → fowbpus is babgpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: nidppus is fowbpus
  - 前提: fowbpus is babgpus

   节点 123: lisdpus is nidppus and lidmpus
      ↻ 重复节点，计数: 4

   节点 124: lisdpus is nidppus
      ↻ 重复节点，计数: 2

   节点 125: lisdpus is babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: lisdpus is nidppus → nidppus is babgpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: lisdpus is nidppus
  - 前提: nidppus is babgpus

   节点 126: wuvjpus is lisdpus and revxpus
      ↻ 重复节点，计数: 4

   节点 127: wuvjpus is lisdpus
      ↻ 重复节点，计数: 3

   节点 128: wuvjpus is babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: wuvjpus is lisdpus → lisdpus is babgpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: wuvjpus is lisdpus
  - 前提: lisdpus is babgpus

   节点 129: tikppus is wuvjpus and fakjpus
      ↻ 重复节点，计数: 6

   节点 130: tikppus is wuvjpus
      ↻ 重复节点，计数: 3

   节点 131: tikppus is babgpus
      ↻ 重复节点，计数: 3

   节点 132: x is tikppus
      ↻ 重复节点，计数: 7

   节点 133: x is babgpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is babgpus
[子树点亮]     └─ 点亮依赖节点: x is babgpus and poldpus (深度2)
[子树点亮]     └─ 点亮依赖节点: x is hatqpus (深度3)
[子树点亮]     └─ 点亮依赖节点: x is nidppus (深度4)
[子树点亮]     └─ 点亮依赖节点: x is wuvjpus (深度5)
[子树点亮]     └─ 点亮依赖节点: x is wuvjpus and fakjpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 5 个节点
      ✅ 验证成功 + LoG匹配

   节点 134: tikppus is wuvjpus
      ↻ 重复节点，计数: 4

   节点 135: wuvjpus is babgpus
      ↻ 重复节点，计数: 2

   节点 136: tikppus is babgpus
      ↻ 重复节点，计数: 4

🔍 分析推理路径完整性...

============================================================
[后处理] 处理完成
============================================================
📈 处理统计:
   - 处理的actual节点: 136
   - 新增节点: 37
   - 更新已存在节点: 99
   - 点亮的LoG节点: 30

🎯 推理质量统计:
   - 完美推理: 31 (节点正确 + 路径正确)
   - 部分推理: 6 (节点正确 + 路径部分错误)
   - 无效推理: 0 (节点错误或路径完全错误)
[LoG分析] LoG图: 30节点, 18前提, 复杂度1-18

📊 === Statement列表分析 ===
📈 节点统计:
   - 总节点数: 55
   - 前提节点: 18
   - 推理节点: 34
   - 幻觉节点: 3
   - 点亮LoG节点: 30

❌ 幻觉节点详情:
   - babgpus is poqdpus (出现1次)
   - yuxhpus is winmpus (出现1次)
   - sahhzpus is tiltpus and wedlpus (出现1次)

✅ 推理节点详情:
   🟢 tikppus is babgpus (出现4次, 质量:perfect)
   🟢 tikppus is fakjpus (出现1次, 质量:perfect)
   🟢 tikppus is wuvjpus (出现4次, 质量:perfect)
   🟢 wuvjpus is lisdpus (出现3次, 质量:perfect)
   🟢 lisdpus is nidppus (出现2次, 质量:perfect)
   🟢 winmpus is yuxhpus (出现2次, 质量:perfect)
   🟡 yuxhpus is pitzpus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['yuxhpus is winmpus']
   🟢 pitzpus is hatqpus (出现1次, 质量:perfect)
   🟢 hatqpus is sahzpus (出现2次, 质量:perfect)
   🟢 sahzpus is tiltpus (出现1次, 质量:perfect)
   🟢 tiltpus is lutnpus (出现2次, 质量:perfect)
   🟢 qowypus is watppus (出现5次, 质量:perfect)
   🟡 watppus is poqdpus (出现6次, 质量:partial)
      ⚠️  无效依赖: ['babgpus is poqdpus']
   🟢 poqdpus is babgpus (出现7次, 质量:perfect)
   🟢 watppus is babgpus (出现1次, 质量:perfect)
   🟢 poqdpus is poldpus (出现1次, 质量:perfect)
   🟢 poqdpus is gewzpus (出现1次, 质量:perfect)
   🟢 qowypus is babgpus (出现1次, 质量:perfect)
   🟡 lisdpus is poqdpus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['babgpus is poqdpus']
   🟢 nepypus is babgpus (出现1次, 质量:perfect)
   🟢 gagkpus is babgpus (出现1次, 质量:perfect)
   🟢 lutnpus is babgpus (出现1次, 质量:perfect)
   🟢 tiltpus is babgpus (出现1次, 质量:perfect)
   🟡 sahhzpus is tiltpus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['sahhzpus is tiltpus and wedlpus']
   🟡 sahhzpus is babgpus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['sahhzpus is tiltpus and wedlpus']
   🟢 hatqpus is babgpus (出现1次, 质量:perfect)
   🟢 pitzpus is babgpus (出现1次, 质量:perfect)
   🟡 yuxhpus is babgpus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['yuxhpus is winmpus']
   🟢 winmpus is babgpus (出现1次, 质量:perfect)
   🟢 fowbpus is babgpus (出现1次, 质量:perfect)
   🟢 nidppus is babgpus (出现1次, 质量:perfect)
   🟢 lisdpus is babgpus (出现1次, 质量:perfect)
   🟢 wuvjpus is babgpus (出现2次, 质量:perfect)
   🟢 x is babgpus (出现1次, 质量:perfect)

🔥 点亮的LoG节点:
   - nidppus is hatqpus
   - nidppus is yuxhpus
   - nepypus is babgpus and poldpus
   - pitzpus is hatqpus
   - nepypus is watppus
   - tiltpus is lutnpus
   - hatqpus is sahzpus
   - watppus is babgpus and poldpus
   - wuvjpus is nidppus
   - x is nidppus
   - lutnpus is nepypus
   - winmpus is yuxhpus
   - x is babgpus and poldpus
   - poqdpus is babgpus and poldpus
   - wuvjpus is lisdpus
   - x is babgpus
   - x is wuvjpus
   - watppus is poqdpus
   - yuxhpus is hatqpus
   - tiltpus is nepypus
   - nepypus is watppus and fonxpus
   - hatqpus is babgpus and poldpus
   - lisdpus is nidppus
   - yuxhpus is pitzpus
   - hatqpus is tiltpus
   - x is hatqpus
   - hatqpus is nepypus
   - x is wuvjpus and fakjpus
   - nidppus is winmpus
   - sahzpus is tiltpus

============================================================
📊 计算评估指标
============================================================

🎯 计算Coverage指标...
   深度Coverage: 6/6 = 100.00%
   最深点亮节点: x is babgpus (第6层)
   节点Coverage: 30/30 = 100.00%
   前提条件Coverage: 18/18 = 100.00%
   各推理层点亮比例:
     第1层: 14/14 = 100.00%
     第2层: 8/8 = 100.00%
     第3层: 4/4 = 100.00%
     第4层: 2/2 = 100.00%
     第5层: 1/1 = 100.00%
     第6层: 1/1 = 100.00%

🎯 计算Precision指标...
   Error Rate: 3/37 = 8.11%
   可推导节点: 34/37
   Strict Error Rate: 9/37 = 24.32%
   严格有效节点: 28/37

   详细分析:
     完美推理: 31 (83.78%)
     部分推理: 6 (16.22%)
     无效推理: 0 (0.00%)

================================================================================
处理记录 7/50
================================================================================
记录索引: 6
问题状态: correct
📁 从缓存加载提取结果: evaluation_results.LoG_6.deepseek-reasoner_record_6.json
✅ 使用缓存结果:
   - 句子数: 127
   - 提取的语句数: 166
   - 初始条件数: 30

=== Statement提取完成 ===
总句子数: 127
成功提取: 127
失败提取: 0
总statements数: 166

=== 开始清洗Statement格式 ===
原始statements数: 166
清洗后statements数: 161
过滤掉的statements数: 5
清洗后的statements:
  1. [actual] x is pukcpus
  2. [actual] pukcpus is mivlpus
  3. [actual] x is mivlpus
  4. [actual] mivlpus is bowypus
  5. [actual] x is bowypus
  6. [actual] bowypus is yawrpus
  7. [actual] x is yawrpus
  8. [actual] yawrpus is revbpus
  9. [actual] x is revbpus
  10. [actual] revbpus is hupwpus
  11. [actual] x is hupwpus
  12. [actual] hupwpus is yiklpus
  13. [actual] x is yiklpus
  14. [actual] yiklpus is serxpus
  15. [actual] x is serxpus
  16. [actual] x is tophpus
  17. [actual] tophpus is beshpus and cevspus
  18. [actual] tophpus is beshpus and cevspus
  19. [actual] x is tophpus
  20. [actual] x is beshpus
  21. [actual] x is cevspus
  22. [planning] x is both beshpus and cevspus
  23. [planning] x is babgpus
  24. [planning] x is babrpus
  25. [planning] x is babgpus
  26. [planning] x is babrpus
  27. [actual] yiklpus is serxpus
  28. [actual] revbpus is hupwpus
  29. [actual] lozmpus is rabtpus and mubvpus
  30. [actual] hupwpus is yiklpus
  31. [actual] quhtpus is poyrpus
  32. [actual] bowypus is yawrpus
  33. [actual] ruhtpus is pewbpus and foddpus
  34. [actual] wacqpus is sudmpus
  35. [actual] hofspus is cuywpus
  36. [actual] vumkpus is hibqpus and telfpus
  37. [actual] sudmpus is ruhtpus
  38. [actual] pewbpus is gobppus
  39. [actual] qofzpus is quhtpus
  40. [actual] tophpus is beshpus and cevspus
  41. [actual] mivlpus is bowypus
  42. [actual] kudtpus is hofspus and wusjpus and gerppus
  43. [actual] zidspus is lozmpus
  44. [actual] yatrpus is qofzpus
  45. [actual] gobppus is wavwpus
  46. [actual] poyrpus is babrpus and fuczpus
  47. [actual] poyrpus is babrpus
  48. [actual] poyrpus is fuczpus
  49. [actual] beshpus is qayzpus
  50. [actual] yawrpus is revbpus
  51. [actual] cuywpus is wacqpus
  52. [actual] hibqpus is kudtpus and nehwpus
  53. [actual] qayzpus is zidspus and cobppus and huwjpus
  54. [actual] rabtpus is vumkpus
  55. [actual] wavwpus is yatrpus
  56. [actual] x is pukcpus
  57. [actual] pukcpus is mivlpus
  58. [planning] x is babrpus
  59. [actual] tophpus is beshpus and cevspus
  60. [actual] beshpus is qayzpus
  61. [actual] qayzpus is zidspus and cobppus and huwjpus
  62. [actual] zidspus is lozmpus
  63. [actual] lozmpus is rabtpus and mubvpus
  64. [actual] rabtpus is vumkpus
  65. [planning] x is poyrpus
  66. [actual] poyrpus is babrpus
  67. [actual] quhtpus is poyrpus
  68. [actual] qofzpus is quhtpus
  69. [actual] yatrpus is qofzpus
  70. [actual] wavwpus is yatrpus
  71. [actual] gobppus is wavwpus
  72. [actual] pewbpus is gobppus
  73. [actual] ruhtpus is pewbpus and foddpus
  74. [actual] sudmpus is ruhtpus
  75. [actual] wacqpus is sudmpus
  76. [actual] cuywpus is wacqpus
  77. [actual] hofspus is cuywpus
  78. [actual] kudtpus is hofspus and wusjpus and gerppus
  79. [actual] hibqpus is kudtpus and nehwpus
  80. [actual] vumkpus is hibqpus and telfpus
  81. [actual] rabtpus is vumkpus
  82. [actual] lozmpus is rabtpus and mubvpus
  83. [actual] zidspus is lozmpus
  84. [actual] qayzpus is zidspus and cobppus and huwjpus
  85. [actual] beshpus is qayzpus
  86. [actual] x is tophpus
  87. [actual] beshpus is qayzpus
  88. [actual] qayzpus is zidspus
  89. [actual] zidspus is lozmpus
  90. [actual] lozmpus is rabtpus
  91. [actual] rabtpus is vumkpus
  92. [actual] vumkpus is hibqpus
  93. [actual] hibqpus is kudtpus
  94. [actual] kudtpus is hofspus
  95. [actual] hofspus is cuywpus
  96. [actual] cuywpus is wacqpus
  97. [actual] wacqpus is sudmpus
  98. [actual] sudmpus is ruhtpus
  99. [actual] ruhtpus is pewbpus
  100. [actual] pewbpus is gobppus
  101. [actual] gobppus is wavwpus
  102. [actual] wavwpus is yatrpus
  103. [actual] yatrpus is qofzpus
  104. [actual] qofzpus is quhtpus
  105. [actual] quhtpus is poyrpus
  106. [actual] poyrpus is babrpus and fuczpus
  107. [actual] x is poyrpus
  108. [actual] poyrpus is babrpus
  109. [actual] x is babrpus
  110. [actual] tophpus is beshpus
  111. [actual] x is beshpus
  112. [actual] beshpus is qayzpus
  113. [actual] x is qayzpus
  114. [actual] qayzpus is zidspus and cobppus and huwjpus
  115. [actual] x is zidspus
  116. [actual] zidspus is lozmpus
  117. [actual] x is lozmpus
  118. [actual] lozmpus is rabtpus and mubvpus
  119. [actual] x is rabtpus and mubvpus
  120. [actual] rabtpus is vumkpus
  121. [actual] x is vumkpus
  122. [actual] vumkpus is hibqpus and telfpus
  123. [actual] x is hibqpus
  124. [actual] hibqpus is kudtpus and nehwpus
  125. [actual] x is kudtpus
  126. [actual] kudtpus is hofspus and wusjpus and gerppus
  127. [actual] x is hofspus
  128. [actual] hofspus is cuywpus
  129. [actual] x is cuywpus
  130. [actual] cuywpus is wacqpus
  131. [actual] x is wacqpus
  132. [actual] wacqpus is sudmpus
  133. [actual] x is sudmpus
  134. [actual] sudmpus is ruhtpus
  135. [actual] x is ruhtpus
  136. [actual] ruhtpus is pewbpus and foddpus
  137. [actual] x is pewbpus
  138. [actual] pewbpus is gobppus
  139. [actual] x is gobppus
  140. [actual] gobppus is wavwpus
  141. [actual] x is wavwpus
  142. [actual] wavwpus is yatrpus
  143. [actual] x is yatrpus
  144. [actual] yatrpus is qofzpus
  145. [actual] x is qofzpus
  146. [actual] qofzpus is quhtpus
  147. [actual] x is quhtpus
  148. [actual] quhtpus is poyrpus
  149. [actual] x is poyrpus
  150. [actual] poyrpus is babrpus and fuczpus
  151. [actual] x is babrpus
  152. [actual] x is babrpus
  153. [planning] x is babgpus
  154. [planning] x is babrpus
  155. [actual] x is babrpus
  156. [planning] x is babgpus
  157. [planning] x is babrpus
  158. [planning] x is babgpus or babrpus
  159. [actual] x is babrpus
  160. [actual] x is babrpus
  161. [actual] x is babgpus or babrpus

=== 开始标准化和解析节点 ===
清洗后statements数: 161
标准化后节点数: 160
过滤掉的无效实体数: 1
标准化后的节点:
  1. [actual] x → pukcpus (原始: x is pukcpus)
  2. [actual] pukcpus → mivlpus (原始: pukcpus is mivlpus)
  3. [actual] x → mivlpus (原始: x is mivlpus)
  4. [actual] mivlpus → bowypus (原始: mivlpus is bowypus)
  5. [actual] x → bowypus (原始: x is bowypus)
  6. [actual] bowypus → yawrpus (原始: bowypus is yawrpus)
  7. [actual] x → yawrpus (原始: x is yawrpus)
  8. [actual] yawrpus → revbpus (原始: yawrpus is revbpus)
  9. [actual] x → revbpus (原始: x is revbpus)
  10. [actual] revbpus → hupwpus (原始: revbpus is hupwpus)
  11. [actual] x → hupwpus (原始: x is hupwpus)
  12. [actual] hupwpus → yiklpus (原始: hupwpus is yiklpus)
  13. [actual] x → yiklpus (原始: x is yiklpus)
  14. [actual] yiklpus → serxpus (原始: yiklpus is serxpus)
  15. [actual] x → serxpus (原始: x is serxpus)
  16. [actual] x → tophpus (原始: x is tophpus)
  17. [actual] tophpus → beshpus and cevspus (原始: tophpus is beshpus and cevspus)
  18. [actual] tophpus → beshpus and cevspus (原始: tophpus is beshpus and cevspus)
  19. [actual] x → tophpus (原始: x is tophpus)
  20. [actual] x → beshpus (原始: x is beshpus)
  21. [actual] x → cevspus (原始: x is cevspus)
  22. [planning] x → babgpus (原始: x is babgpus)
  23. [planning] x → babrpus (原始: x is babrpus)
  24. [planning] x → babgpus (原始: x is babgpus)
  25. [planning] x → babrpus (原始: x is babrpus)
  26. [actual] yiklpus → serxpus (原始: yiklpus is serxpus)
  27. [actual] revbpus → hupwpus (原始: revbpus is hupwpus)
  28. [actual] lozmpus → rabtpus and mubvpus (原始: lozmpus is rabtpus and mubvpus)
  29. [actual] hupwpus → yiklpus (原始: hupwpus is yiklpus)
  30. [actual] quhtpus → poyrpus (原始: quhtpus is poyrpus)
  31. [actual] bowypus → yawrpus (原始: bowypus is yawrpus)
  32. [actual] ruhtpus → pewbpus and foddpus (原始: ruhtpus is pewbpus and foddpus)
  33. [actual] wacqpus → sudmpus (原始: wacqpus is sudmpus)
  34. [actual] hofspus → cuywpus (原始: hofspus is cuywpus)
  35. [actual] vumkpus → hibqpus and telfpus (原始: vumkpus is hibqpus and telfpus)
  36. [actual] sudmpus → ruhtpus (原始: sudmpus is ruhtpus)
  37. [actual] pewbpus → gobppus (原始: pewbpus is gobppus)
  38. [actual] qofzpus → quhtpus (原始: qofzpus is quhtpus)
  39. [actual] tophpus → beshpus and cevspus (原始: tophpus is beshpus and cevspus)
  40. [actual] mivlpus → bowypus (原始: mivlpus is bowypus)
  41. [actual] kudtpus → hofspus and wusjpus and gerppus (原始: kudtpus is hofspus and wusjpus and gerppus)
  42. [actual] zidspus → lozmpus (原始: zidspus is lozmpus)
  43. [actual] yatrpus → qofzpus (原始: yatrpus is qofzpus)
  44. [actual] gobppus → wavwpus (原始: gobppus is wavwpus)
  45. [actual] poyrpus → babrpus and fuczpus (原始: poyrpus is babrpus and fuczpus)
  46. [actual] poyrpus → babrpus (原始: poyrpus is babrpus)
  47. [actual] poyrpus → fuczpus (原始: poyrpus is fuczpus)
  48. [actual] beshpus → qayzpus (原始: beshpus is qayzpus)
  49. [actual] yawrpus → revbpus (原始: yawrpus is revbpus)
  50. [actual] cuywpus → wacqpus (原始: cuywpus is wacqpus)
  51. [actual] hibqpus → kudtpus and nehwpus (原始: hibqpus is kudtpus and nehwpus)
  52. [actual] qayzpus → zidspus and cobppus and huwjpus (原始: qayzpus is zidspus and cobppus and huwjpus)
  53. [actual] rabtpus → vumkpus (原始: rabtpus is vumkpus)
  54. [actual] wavwpus → yatrpus (原始: wavwpus is yatrpus)
  55. [actual] x → pukcpus (原始: x is pukcpus)
  56. [actual] pukcpus → mivlpus (原始: pukcpus is mivlpus)
  57. [planning] x → babrpus (原始: x is babrpus)
  58. [actual] tophpus → beshpus and cevspus (原始: tophpus is beshpus and cevspus)
  59. [actual] beshpus → qayzpus (原始: beshpus is qayzpus)
  60. [actual] qayzpus → zidspus and cobppus and huwjpus (原始: qayzpus is zidspus and cobppus and huwjpus)
  61. [actual] zidspus → lozmpus (原始: zidspus is lozmpus)
  62. [actual] lozmpus → rabtpus and mubvpus (原始: lozmpus is rabtpus and mubvpus)
  63. [actual] rabtpus → vumkpus (原始: rabtpus is vumkpus)
  64. [planning] x → poyrpus (原始: x is poyrpus)
  65. [actual] poyrpus → babrpus (原始: poyrpus is babrpus)
  66. [actual] quhtpus → poyrpus (原始: quhtpus is poyrpus)
  67. [actual] qofzpus → quhtpus (原始: qofzpus is quhtpus)
  68. [actual] yatrpus → qofzpus (原始: yatrpus is qofzpus)
  69. [actual] wavwpus → yatrpus (原始: wavwpus is yatrpus)
  70. [actual] gobppus → wavwpus (原始: gobppus is wavwpus)
  71. [actual] pewbpus → gobppus (原始: pewbpus is gobppus)
  72. [actual] ruhtpus → pewbpus and foddpus (原始: ruhtpus is pewbpus and foddpus)
  73. [actual] sudmpus → ruhtpus (原始: sudmpus is ruhtpus)
  74. [actual] wacqpus → sudmpus (原始: wacqpus is sudmpus)
  75. [actual] cuywpus → wacqpus (原始: cuywpus is wacqpus)
  76. [actual] hofspus → cuywpus (原始: hofspus is cuywpus)
  77. [actual] kudtpus → hofspus and wusjpus and gerppus (原始: kudtpus is hofspus and wusjpus and gerppus)
  78. [actual] hibqpus → kudtpus and nehwpus (原始: hibqpus is kudtpus and nehwpus)
  79. [actual] vumkpus → hibqpus and telfpus (原始: vumkpus is hibqpus and telfpus)
  80. [actual] rabtpus → vumkpus (原始: rabtpus is vumkpus)
  81. [actual] lozmpus → rabtpus and mubvpus (原始: lozmpus is rabtpus and mubvpus)
  82. [actual] zidspus → lozmpus (原始: zidspus is lozmpus)
  83. [actual] qayzpus → zidspus and cobppus and huwjpus (原始: qayzpus is zidspus and cobppus and huwjpus)
  84. [actual] beshpus → qayzpus (原始: beshpus is qayzpus)
  85. [actual] x → tophpus (原始: x is tophpus)
  86. [actual] beshpus → qayzpus (原始: beshpus is qayzpus)
  87. [actual] qayzpus → zidspus (原始: qayzpus is zidspus)
  88. [actual] zidspus → lozmpus (原始: zidspus is lozmpus)
  89. [actual] lozmpus → rabtpus (原始: lozmpus is rabtpus)
  90. [actual] rabtpus → vumkpus (原始: rabtpus is vumkpus)
  91. [actual] vumkpus → hibqpus (原始: vumkpus is hibqpus)
  92. [actual] hibqpus → kudtpus (原始: hibqpus is kudtpus)
  93. [actual] kudtpus → hofspus (原始: kudtpus is hofspus)
  94. [actual] hofspus → cuywpus (原始: hofspus is cuywpus)
  95. [actual] cuywpus → wacqpus (原始: cuywpus is wacqpus)
  96. [actual] wacqpus → sudmpus (原始: wacqpus is sudmpus)
  97. [actual] sudmpus → ruhtpus (原始: sudmpus is ruhtpus)
  98. [actual] ruhtpus → pewbpus (原始: ruhtpus is pewbpus)
  99. [actual] pewbpus → gobppus (原始: pewbpus is gobppus)
  100. [actual] gobppus → wavwpus (原始: gobppus is wavwpus)
  101. [actual] wavwpus → yatrpus (原始: wavwpus is yatrpus)
  102. [actual] yatrpus → qofzpus (原始: yatrpus is qofzpus)
  103. [actual] qofzpus → quhtpus (原始: qofzpus is quhtpus)
  104. [actual] quhtpus → poyrpus (原始: quhtpus is poyrpus)
  105. [actual] poyrpus → babrpus and fuczpus (原始: poyrpus is babrpus and fuczpus)
  106. [actual] x → poyrpus (原始: x is poyrpus)
  107. [actual] poyrpus → babrpus (原始: poyrpus is babrpus)
  108. [actual] x → babrpus (原始: x is babrpus)
  109. [actual] tophpus → beshpus (原始: tophpus is beshpus)
  110. [actual] x → beshpus (原始: x is beshpus)
  111. [actual] beshpus → qayzpus (原始: beshpus is qayzpus)
  112. [actual] x → qayzpus (原始: x is qayzpus)
  113. [actual] qayzpus → zidspus and cobppus and huwjpus (原始: qayzpus is zidspus and cobppus and huwjpus)
  114. [actual] x → zidspus (原始: x is zidspus)
  115. [actual] zidspus → lozmpus (原始: zidspus is lozmpus)
  116. [actual] x → lozmpus (原始: x is lozmpus)
  117. [actual] lozmpus → rabtpus and mubvpus (原始: lozmpus is rabtpus and mubvpus)
  118. [actual] x → rabtpus and mubvpus (原始: x is rabtpus and mubvpus)
  119. [actual] rabtpus → vumkpus (原始: rabtpus is vumkpus)
  120. [actual] x → vumkpus (原始: x is vumkpus)
  121. [actual] vumkpus → hibqpus and telfpus (原始: vumkpus is hibqpus and telfpus)
  122. [actual] x → hibqpus (原始: x is hibqpus)
  123. [actual] hibqpus → kudtpus and nehwpus (原始: hibqpus is kudtpus and nehwpus)
  124. [actual] x → kudtpus (原始: x is kudtpus)
  125. [actual] kudtpus → hofspus and wusjpus and gerppus (原始: kudtpus is hofspus and wusjpus and gerppus)
  126. [actual] x → hofspus (原始: x is hofspus)
  127. [actual] hofspus → cuywpus (原始: hofspus is cuywpus)
  128. [actual] x → cuywpus (原始: x is cuywpus)
  129. [actual] cuywpus → wacqpus (原始: cuywpus is wacqpus)
  130. [actual] x → wacqpus (原始: x is wacqpus)
  131. [actual] wacqpus → sudmpus (原始: wacqpus is sudmpus)
  132. [actual] x → sudmpus (原始: x is sudmpus)
  133. [actual] sudmpus → ruhtpus (原始: sudmpus is ruhtpus)
  134. [actual] x → ruhtpus (原始: x is ruhtpus)
  135. [actual] ruhtpus → pewbpus and foddpus (原始: ruhtpus is pewbpus and foddpus)
  136. [actual] x → pewbpus (原始: x is pewbpus)
  137. [actual] pewbpus → gobppus (原始: pewbpus is gobppus)
  138. [actual] x → gobppus (原始: x is gobppus)
  139. [actual] gobppus → wavwpus (原始: gobppus is wavwpus)
  140. [actual] x → wavwpus (原始: x is wavwpus)
  141. [actual] wavwpus → yatrpus (原始: wavwpus is yatrpus)
  142. [actual] x → yatrpus (原始: x is yatrpus)
  143. [actual] yatrpus → qofzpus (原始: yatrpus is qofzpus)
  144. [actual] x → qofzpus (原始: x is qofzpus)
  145. [actual] qofzpus → quhtpus (原始: qofzpus is quhtpus)
  146. [actual] x → quhtpus (原始: x is quhtpus)
  147. [actual] quhtpus → poyrpus (原始: quhtpus is poyrpus)
  148. [actual] x → poyrpus (原始: x is poyrpus)
  149. [actual] poyrpus → babrpus and fuczpus (原始: poyrpus is babrpus and fuczpus)
  150. [actual] x → babrpus (原始: x is babrpus)
  151. [actual] x → babrpus (原始: x is babrpus)
  152. [planning] x → babgpus (原始: x is babgpus)
  153. [planning] x → babrpus (原始: x is babrpus)
  154. [actual] x → babrpus (原始: x is babrpus)
  155. [planning] x → babgpus (原始: x is babgpus)
  156. [planning] x → babrpus (原始: x is babrpus)
  157. [planning] x → babgpus or babrpus (原始: x is babgpus or babrpus)
  158. [actual] x → babrpus (原始: x is babrpus)
  159. [actual] x → babrpus (原始: x is babrpus)
  160. [actual] x → babgpus or babrpus (原始: x is babgpus or babrpus)

开始新的后处理...
[后处理] 从LoG数据文件中获取到图数据，节点数: 40
[后处理] 加载LoG图，包含 40 个节点
  LoG节点 0: x is babgpus or babrpus (规则: MP, 深度: 1)
  LoG节点 1: x is zidspus (规则: CE, 深度: 2)
  LoG节点 2: zidspus is babgpus or babrpus (规则: MP, 深度: 2)
  LoG节点 3: x is zidspus and cobppus (规则: MP, 深度: 3)
  LoG节点 4: zidspus is hofspus (规则: MP, 深度: 3)
  LoG节点 5: hofspus is babgpus or babrpus (规则: MP, 深度: 3)
  LoG节点 6: x is serxpus (规则: MP, 深度: 4)
  LoG节点 7: serxpus is zidspus and cobppus (规则: MP, 深度: 4)
  LoG节点 8: zidspus is hibqpus (规则: MP, 深度: 4)
  LoG节点 9: hibqpus is hofspus (规则: CE, 深度: 4)
  LoG节点 10: hofspus is wavwpus (规则: MP, 深度: 4)
  LoG节点 11: wavwpus is babgpus or babrpus (规则: MP, 深度: 4)
  LoG节点 12: x is yawrpus (规则: MP, 深度: 5)
  LoG节点 13: yawrpus is serxpus (规则: MP, 深度: 5)
  LoG节点 14: serxpus is beshpus (规则: CE, 深度: 5)
  LoG节点 15: beshpus is zidspus and cobppus (规则: CE, 深度: 5)
  LoG节点 16: zidspus is rabtpus (规则: CE, 深度: 5)
  LoG节点 17: rabtpus is hibqpus (规则: CE, 深度: 5)
  LoG节点 18: hibqpus is hofspus and wusjpus (规则: MP, 深度: 5)
  LoG节点 19: hofspus is ruhtpus (规则: MP, 深度: 5)
  LoG节点 20: ruhtpus is wavwpus (规则: MP, 深度: 5)
  LoG节点 21: wavwpus is poyrpus (规则: MP, 深度: 5)
  LoG节点 22: poyrpus is babgpus or babrpus (规则: DI, 深度: 5)
  LoG节点 23: x is mivlpus (规则: MP, 深度: 6)
  LoG节点 24: mivlpus is yawrpus (规则: MP, 深度: 6)
  LoG节点 25: yawrpus is hupwpus (规则: MP, 深度: 6)
  LoG节点 26: hupwpus is serxpus (规则: MP, 深度: 6)
  LoG节点 27: serxpus is beshpus and cevspus (规则: MP, 深度: 6)
  LoG节点 28: beshpus is zidspus and cobppus and huwjpus (规则: MP, 深度: 6)
  LoG节点 29: zidspus is rabtpus and mubvpus (规则: MP, 深度: 6)
  LoG节点 30: rabtpus is hibqpus and telfpus (规则: MP, 深度: 6)
  LoG节点 31: hibqpus is kudtpus (规则: CE, 深度: 6)
  LoG节点 32: kudtpus is hofspus and wusjpus (规则: CE, 深度: 6)
  LoG节点 33: hofspus is wacqpus (规则: MP, 深度: 6)
  LoG节点 34: wacqpus is ruhtpus (规则: MP, 深度: 6)
  LoG节点 35: ruhtpus is pewbpus (规则: CE, 深度: 6)
  LoG节点 36: pewbpus is wavwpus (规则: MP, 深度: 6)
  LoG节点 37: wavwpus is qofzpus (规则: MP, 深度: 6)
  LoG节点 38: qofzpus is poyrpus (规则: MP, 深度: 6)
  LoG节点 39: poyrpus is babrpus (规则: CE, 深度: 6)

============================================================
[后处理] 开始处理节点
============================================================
📊 初始状态:
   - 标准化节点数: 160
   - 初始条件数: 30
   - LoG图节点数: 40

📋 初始条件列表:
    1. yiklpus is serxpus
    2. revbpus is hupwpus
    3. lozmpus is rabtpus and mubvpus
    4. hupwpus is yiklpus
    5. quhtpus is poyrpus
    6. bowypus is yawrpus
    7. ruhtpus is pewbpus and foddpus
    8. wacqpus is sudmpus
    9. hofspus is cuywpus
   10. vumkpus is hibqpus and telfpus
   11. sudmpus is ruhtpus
   12. pewbpus is gobppus
   13. qofzpus is quhtpus
   14. tophpus is beshpus and cevspus
   15. mivlpus is bowypus
   16. kudtpus is hofspus and wusjpus and gerppus
   17. zidspus is lozmpus
   18. yatrpus is qofzpus
   19. gobppus is wavwpus
   20. poyrpus is babrpus and fuczpus
   21. beshpus is qayzpus
   22. yawrpus is revbpus
   23. cuywpus is wacqpus
   24. hibqpus is kudtpus and nehwpus
   25. serxpus is tophpus
   26. qayzpus is zidspus and cobppus and huwjpus
   27. rabtpus is vumkpus
   28. wavwpus is yatrpus
   29. x is pukcpus
   30. pukcpus is mivlpus

🔧 构建初始Statement列表...
✅ 初始Statement列表构建完成，包含 30 个前提节点

🔍 开始处理actual节点...

   节点 1: x is pukcpus
      ↻ 重复节点，计数: 2

   节点 2: pukcpus is mivlpus
      ↻ 重复节点，计数: 2

   节点 3: x is mivlpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is mivlpus
      ✅ 验证成功 + LoG匹配

   节点 4: mivlpus is bowypus
      ↻ 重复节点，计数: 2

   节点 5: x is bowypus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is pukcpus → pukcpus is bowypus
[后处理] 基于推理轨迹点亮节点，使用了 3 个前提条件:
  - 前提: x is pukcpus
  - 前提: pukcpus is mivlpus
  - 前提: mivlpus is bowypus

   节点 6: bowypus is yawrpus
      ↻ 重复节点，计数: 2

   节点 7: x is yawrpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is yawrpus
[子树点亮]     └─ 点亮依赖节点: mivlpus is yawrpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 1 个节点
      ✅ 验证成功 + LoG匹配

   节点 8: yawrpus is revbpus
      ↻ 重复节点，计数: 2

   节点 9: x is revbpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is pukcpus → pukcpus is revbpus
[后处理] 基于推理轨迹点亮节点，使用了 5 个前提条件:
  - 前提: x is pukcpus
  - 前提: pukcpus is mivlpus
  - 前提: mivlpus is bowypus
  - 前提: bowypus is yawrpus
  - 前提: yawrpus is revbpus

   节点 10: revbpus is hupwpus
      ↻ 重复节点，计数: 2

   节点 11: x is hupwpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is pukcpus → pukcpus is hupwpus
[后处理] 基于推理轨迹点亮节点，使用了 6 个前提条件:
  - 前提: x is pukcpus
  - 前提: pukcpus is mivlpus
  - 前提: mivlpus is bowypus
  - 前提: bowypus is yawrpus
  - 前提: yawrpus is revbpus
  - 前提: revbpus is hupwpus
  ✓ 点亮LoG节点: yawrpus is hupwpus
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 12: hupwpus is yiklpus
      ↻ 重复节点，计数: 2

   节点 13: x is yiklpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is pukcpus → pukcpus is yiklpus
[后处理] 基于推理轨迹点亮节点，使用了 7 个前提条件:
  - 前提: x is pukcpus
  - 前提: pukcpus is mivlpus
  - 前提: mivlpus is bowypus
  - 前提: bowypus is yawrpus
  - 前提: yawrpus is revbpus
  - 前提: revbpus is hupwpus
  - 前提: hupwpus is yiklpus

   节点 14: yiklpus is serxpus
      ↻ 重复节点，计数: 2

   节点 15: x is serxpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is serxpus
[子树点亮]     └─ 点亮依赖节点: yawrpus is serxpus (深度5)
[子树点亮]     └─ 点亮依赖节点: hupwpus is serxpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 2 个节点
      ✅ 验证成功 + LoG匹配

   节点 16: x is tophpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is pukcpus → pukcpus is tophpus
[后处理] 基于推理轨迹点亮节点，使用了 9 个前提条件:
  - 前提: x is pukcpus
  - 前提: pukcpus is mivlpus
  - 前提: mivlpus is bowypus
  - 前提: bowypus is yawrpus
  - 前提: yawrpus is revbpus
  - 前提: revbpus is hupwpus
  - 前提: hupwpus is yiklpus
  - 前提: yiklpus is serxpus
  - 前提: serxpus is tophpus

   节点 17: tophpus is beshpus and cevspus
      ↻ 重复节点，计数: 2

   节点 18: tophpus is beshpus and cevspus
      ↻ 重复节点，计数: 3

   节点 19: x is tophpus
      ↻ 重复节点，计数: 2

   节点 20: x is beshpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is pukcpus → pukcpus is beshpus
[后处理] 基于推理轨迹点亮节点，使用了 10 个前提条件:
  - 前提: x is pukcpus
  - 前提: pukcpus is mivlpus
  - 前提: mivlpus is bowypus
  - 前提: bowypus is yawrpus
  - 前提: yawrpus is revbpus
  - 前提: revbpus is hupwpus
  - 前提: hupwpus is yiklpus
  - 前提: yiklpus is serxpus
  - 前提: serxpus is tophpus
  - 前提: tophpus is beshpus and cevspus
  ✓ 点亮LoG节点: serxpus is beshpus
[子树点亮]     └─ 点亮依赖节点: serxpus is beshpus and cevspus (深度6)
[后处理]   └─ 自动点亮依赖子树: 1 个节点
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 21: x is cevspus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is pukcpus → pukcpus is cevspus
[后处理] 基于推理轨迹点亮节点，使用了 10 个前提条件:
  - 前提: x is pukcpus
  - 前提: pukcpus is mivlpus
  - 前提: mivlpus is bowypus
  - 前提: bowypus is yawrpus
  - 前提: yawrpus is revbpus
  - 前提: revbpus is hupwpus
  - 前提: hupwpus is yiklpus
  - 前提: yiklpus is serxpus
  - 前提: serxpus is tophpus
  - 前提: tophpus is beshpus and cevspus

   节点 22: yiklpus is serxpus
      ↻ 重复节点，计数: 3

   节点 23: revbpus is hupwpus
      ↻ 重复节点，计数: 3

   节点 24: lozmpus is rabtpus and mubvpus
      ↻ 重复节点，计数: 2

   节点 25: hupwpus is yiklpus
      ↻ 重复节点，计数: 3

   节点 26: quhtpus is poyrpus
      ↻ 重复节点，计数: 2

   节点 27: bowypus is yawrpus
      ↻ 重复节点，计数: 3

   节点 28: ruhtpus is pewbpus and foddpus
      ↻ 重复节点，计数: 2

   节点 29: wacqpus is sudmpus
      ↻ 重复节点，计数: 2

   节点 30: hofspus is cuywpus
      ↻ 重复节点，计数: 2

   节点 31: vumkpus is hibqpus and telfpus
      ↻ 重复节点，计数: 2

   节点 32: sudmpus is ruhtpus
      ↻ 重复节点，计数: 2

   节点 33: pewbpus is gobppus
      ↻ 重复节点，计数: 2

   节点 34: qofzpus is quhtpus
      ↻ 重复节点，计数: 2

   节点 35: tophpus is beshpus and cevspus
      ↻ 重复节点，计数: 4

   节点 36: mivlpus is bowypus
      ↻ 重复节点，计数: 3

   节点 37: kudtpus is hofspus and wusjpus and gerppus
      ↻ 重复节点，计数: 2

   节点 38: zidspus is lozmpus
      ↻ 重复节点，计数: 2

   节点 39: yatrpus is qofzpus
      ↻ 重复节点，计数: 2

   节点 40: gobppus is wavwpus
      ↻ 重复节点，计数: 2

   节点 41: poyrpus is babrpus and fuczpus
      ↻ 重复节点，计数: 2

   节点 42: poyrpus is babrpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: poyrpus is babrpus
      ✅ 验证成功 + LoG匹配

   节点 43: poyrpus is fuczpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: poyrpus is babrpus and fuczpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: poyrpus is babrpus and fuczpus
  ✓ 点亮LoG节点: poyrpus is babgpus or babrpus
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 44: beshpus is qayzpus
      ↻ 重复节点，计数: 2

   节点 45: yawrpus is revbpus
      ↻ 重复节点，计数: 3

   节点 46: cuywpus is wacqpus
      ↻ 重复节点，计数: 2

   节点 47: hibqpus is kudtpus and nehwpus
      ↻ 重复节点，计数: 2

   节点 48: qayzpus is zidspus and cobppus and huwjpus
      ↻ 重复节点，计数: 2

   节点 49: rabtpus is vumkpus
      ↻ 重复节点，计数: 2

   节点 50: wavwpus is yatrpus
      ↻ 重复节点，计数: 2

   节点 51: x is pukcpus
      ↻ 重复节点，计数: 3

   节点 52: pukcpus is mivlpus
      ↻ 重复节点，计数: 3

   节点 53: tophpus is beshpus and cevspus
      ↻ 重复节点，计数: 5

   节点 54: beshpus is qayzpus
      ↻ 重复节点，计数: 3

   节点 55: qayzpus is zidspus and cobppus and huwjpus
      ↻ 重复节点，计数: 3

   节点 56: zidspus is lozmpus
      ↻ 重复节点，计数: 3

   节点 57: lozmpus is rabtpus and mubvpus
      ↻ 重复节点，计数: 3

   节点 58: rabtpus is vumkpus
      ↻ 重复节点，计数: 3

   节点 59: poyrpus is babrpus
      ↻ 重复节点，计数: 2

   节点 60: quhtpus is poyrpus
      ↻ 重复节点，计数: 3

   节点 61: qofzpus is quhtpus
      ↻ 重复节点，计数: 3

   节点 62: yatrpus is qofzpus
      ↻ 重复节点，计数: 3

   节点 63: wavwpus is yatrpus
      ↻ 重复节点，计数: 3

   节点 64: gobppus is wavwpus
      ↻ 重复节点，计数: 3

   节点 65: pewbpus is gobppus
      ↻ 重复节点，计数: 3

   节点 66: ruhtpus is pewbpus and foddpus
      ↻ 重复节点，计数: 3

   节点 67: sudmpus is ruhtpus
      ↻ 重复节点，计数: 3

   节点 68: wacqpus is sudmpus
      ↻ 重复节点，计数: 3

   节点 69: cuywpus is wacqpus
      ↻ 重复节点，计数: 3

   节点 70: hofspus is cuywpus
      ↻ 重复节点，计数: 3

   节点 71: kudtpus is hofspus and wusjpus and gerppus
      ↻ 重复节点，计数: 3

   节点 72: hibqpus is kudtpus and nehwpus
      ↻ 重复节点，计数: 3

   节点 73: vumkpus is hibqpus and telfpus
      ↻ 重复节点，计数: 3

   节点 74: rabtpus is vumkpus
      ↻ 重复节点，计数: 4

   节点 75: lozmpus is rabtpus and mubvpus
      ↻ 重复节点，计数: 4

   节点 76: zidspus is lozmpus
      ↻ 重复节点，计数: 4

   节点 77: qayzpus is zidspus and cobppus and huwjpus
      ↻ 重复节点，计数: 4

   节点 78: beshpus is qayzpus
      ↻ 重复节点，计数: 4

   节点 79: x is tophpus
      ↻ 重复节点，计数: 3

   节点 80: beshpus is qayzpus
      ↻ 重复节点，计数: 5

   节点 81: qayzpus is zidspus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: qayzpus is zidspus and cobppus and huwjpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: qayzpus is zidspus and cobppus and huwjpus

   节点 82: zidspus is lozmpus
      ↻ 重复节点，计数: 5

   节点 83: lozmpus is rabtpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: lozmpus is rabtpus and mubvpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: lozmpus is rabtpus and mubvpus

   节点 84: rabtpus is vumkpus
      ↻ 重复节点，计数: 5

   节点 85: vumkpus is hibqpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: vumkpus is hibqpus and telfpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: vumkpus is hibqpus and telfpus

   节点 86: hibqpus is kudtpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: hibqpus is kudtpus
      ✅ 验证成功 + LoG匹配

   节点 87: kudtpus is hofspus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: kudtpus is hofspus and wusjpus and gerppus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: kudtpus is hofspus and wusjpus and gerppus
  ✓ 点亮LoG节点: kudtpus is hofspus and wusjpus
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 88: hofspus is cuywpus
      ↻ 重复节点，计数: 4

   节点 89: cuywpus is wacqpus
      ↻ 重复节点，计数: 4

   节点 90: wacqpus is sudmpus
      ↻ 重复节点，计数: 4

   节点 91: sudmpus is ruhtpus
      ↻ 重复节点，计数: 4

   节点 92: ruhtpus is pewbpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: ruhtpus is pewbpus
      ✅ 验证成功 + LoG匹配

   节点 93: pewbpus is gobppus
      ↻ 重复节点，计数: 4

   节点 94: gobppus is wavwpus
      ↻ 重复节点，计数: 4

   节点 95: wavwpus is yatrpus
      ↻ 重复节点，计数: 4

   节点 96: yatrpus is qofzpus
      ↻ 重复节点，计数: 4

   节点 97: qofzpus is quhtpus
      ↻ 重复节点，计数: 4

   节点 98: quhtpus is poyrpus
      ↻ 重复节点，计数: 4

   节点 99: poyrpus is babrpus and fuczpus
      ↻ 重复节点，计数: 3

   节点 100: x is poyrpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is pukcpus → pukcpus is poyrpus
[后处理] 基于推理轨迹点亮节点，使用了 29 个前提条件:
  - 前提: x is pukcpus
  - 前提: pukcpus is mivlpus
  - 前提: mivlpus is bowypus
  - 前提: bowypus is yawrpus
  - 前提: yawrpus is revbpus
  - 前提: revbpus is hupwpus
  - 前提: hupwpus is yiklpus
  - 前提: yiklpus is serxpus
  - 前提: serxpus is tophpus
  - 前提: tophpus is beshpus and cevspus
  - 前提: beshpus is qayzpus
  - 前提: qayzpus is zidspus
  - 前提: zidspus is lozmpus
  - 前提: lozmpus is rabtpus
  - 前提: rabtpus is vumkpus
  - 前提: vumkpus is hibqpus
  - 前提: hibqpus is kudtpus
  - 前提: kudtpus is hofspus
  - 前提: hofspus is cuywpus
  - 前提: cuywpus is wacqpus
  - 前提: wacqpus is sudmpus
  - 前提: sudmpus is ruhtpus
  - 前提: ruhtpus is pewbpus
  - 前提: pewbpus is gobppus
  - 前提: gobppus is wavwpus
  - 前提: wavwpus is yatrpus
  - 前提: yatrpus is qofzpus
  - 前提: qofzpus is quhtpus
  - 前提: quhtpus is poyrpus
  ✓ 点亮LoG节点: x is zidspus
[子树点亮]     └─ 点亮依赖节点: x is zidspus and cobppus (深度3)
[子树点亮]     └─ 点亮依赖节点: serxpus is zidspus and cobppus (深度4)
[子树点亮]     └─ 点亮依赖节点: beshpus is zidspus and cobppus (深度5)
[子树点亮]     └─ 点亮依赖节点: beshpus is zidspus and cobppus and huwjpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 4 个节点
  ✓ 点亮LoG节点: zidspus is hofspus
[子树点亮]     └─ 点亮依赖节点: zidspus is hibqpus (深度4)
[子树点亮]     └─ 点亮依赖节点: hibqpus is hofspus (深度4)
[子树点亮]     └─ 点亮依赖节点: zidspus is rabtpus (深度5)
[子树点亮]     └─ 点亮依赖节点: rabtpus is hibqpus (深度5)
[子树点亮]     └─ 点亮依赖节点: hibqpus is hofspus and wusjpus (深度5)
[子树点亮]     └─ 点亮依赖节点: zidspus is rabtpus and mubvpus (深度6)
[子树点亮]     └─ 点亮依赖节点: rabtpus is hibqpus and telfpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 7 个节点
  ✓ 点亮LoG节点: hofspus is wavwpus
[子树点亮]     └─ 点亮依赖节点: hofspus is ruhtpus (深度5)
[子树点亮]     └─ 点亮依赖节点: ruhtpus is wavwpus (深度5)
[子树点亮]     └─ 点亮依赖节点: hofspus is wacqpus (深度6)
[子树点亮]     └─ 点亮依赖节点: wacqpus is ruhtpus (深度6)
[子树点亮]     └─ 点亮依赖节点: pewbpus is wavwpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 5 个节点
  ✓ 点亮LoG节点: wavwpus is poyrpus
[子树点亮]     └─ 点亮依赖节点: wavwpus is qofzpus (深度6)
[子树点亮]     └─ 点亮依赖节点: qofzpus is poyrpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 2 个节点
[后处理] 通过推理轨迹额外点亮了 4 个LoG节点

   节点 101: poyrpus is babrpus
      ↻ 重复节点，计数: 3

   节点 102: x is babrpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is pukcpus → pukcpus is babrpus
[后处理] 基于推理轨迹点亮节点，使用了 30 个前提条件:
  - 前提: x is pukcpus
  - 前提: pukcpus is mivlpus
  - 前提: mivlpus is bowypus
  - 前提: bowypus is yawrpus
  - 前提: yawrpus is revbpus
  - 前提: revbpus is hupwpus
  - 前提: hupwpus is yiklpus
  - 前提: yiklpus is serxpus
  - 前提: serxpus is tophpus
  - 前提: tophpus is beshpus and cevspus
  - 前提: beshpus is qayzpus
  - 前提: qayzpus is zidspus
  - 前提: zidspus is lozmpus
  - 前提: lozmpus is rabtpus
  - 前提: rabtpus is vumkpus
  - 前提: vumkpus is hibqpus
  - 前提: hibqpus is kudtpus
  - 前提: kudtpus is hofspus
  - 前提: hofspus is cuywpus
  - 前提: cuywpus is wacqpus
  - 前提: wacqpus is sudmpus
  - 前提: sudmpus is ruhtpus
  - 前提: ruhtpus is pewbpus
  - 前提: pewbpus is gobppus
  - 前提: gobppus is wavwpus
  - 前提: wavwpus is yatrpus
  - 前提: yatrpus is qofzpus
  - 前提: qofzpus is quhtpus
  - 前提: quhtpus is poyrpus
  - 前提: poyrpus is babrpus
  ✓ 点亮LoG节点: x is babgpus or babrpus
[子树点亮]     └─ 点亮依赖节点: zidspus is babgpus or babrpus (深度2)
[子树点亮]     └─ 点亮依赖节点: hofspus is babgpus or babrpus (深度3)
[子树点亮]     └─ 点亮依赖节点: wavwpus is babgpus or babrpus (深度4)
[后处理]   └─ 自动点亮依赖子树: 3 个节点
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 103: tophpus is beshpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: tophpus is beshpus and cevspus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: tophpus is beshpus and cevspus

   节点 104: x is beshpus
      ↻ 重复节点，计数: 2

   节点 105: beshpus is qayzpus
      ↻ 重复节点，计数: 6

   节点 106: x is qayzpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is pukcpus → pukcpus is qayzpus
[后处理] 基于推理轨迹点亮节点，使用了 11 个前提条件:
  - 前提: x is pukcpus
  - 前提: pukcpus is mivlpus
  - 前提: mivlpus is bowypus
  - 前提: bowypus is yawrpus
  - 前提: yawrpus is revbpus
  - 前提: revbpus is hupwpus
  - 前提: hupwpus is yiklpus
  - 前提: yiklpus is serxpus
  - 前提: serxpus is tophpus
  - 前提: tophpus is beshpus
  - 前提: beshpus is qayzpus

   节点 107: qayzpus is zidspus and cobppus and huwjpus
      ↻ 重复节点，计数: 5

   节点 108: x is zidspus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 109: zidspus is lozmpus
      ↻ 重复节点，计数: 6

   节点 110: x is lozmpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is pukcpus → pukcpus is lozmpus
[后处理] 基于推理轨迹点亮节点，使用了 13 个前提条件:
  - 前提: x is pukcpus
  - 前提: pukcpus is mivlpus
  - 前提: mivlpus is bowypus
  - 前提: bowypus is yawrpus
  - 前提: yawrpus is revbpus
  - 前提: revbpus is hupwpus
  - 前提: hupwpus is yiklpus
  - 前提: yiklpus is serxpus
  - 前提: serxpus is tophpus
  - 前提: tophpus is beshpus
  - 前提: beshpus is qayzpus
  - 前提: qayzpus is zidspus
  - 前提: zidspus is lozmpus

   节点 111: lozmpus is rabtpus and mubvpus
      ↻ 重复节点，计数: 5

   节点 112: x is rabtpus and mubvpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is pukcpus → pukcpus is rabtpus and mubvpus
[后处理] 基于推理轨迹点亮节点，使用了 14 个前提条件:
  - 前提: x is pukcpus
  - 前提: pukcpus is mivlpus
  - 前提: mivlpus is bowypus
  - 前提: bowypus is yawrpus
  - 前提: yawrpus is revbpus
  - 前提: revbpus is hupwpus
  - 前提: hupwpus is yiklpus
  - 前提: yiklpus is serxpus
  - 前提: serxpus is tophpus
  - 前提: tophpus is beshpus
  - 前提: beshpus is qayzpus
  - 前提: qayzpus is zidspus
  - 前提: zidspus is lozmpus
  - 前提: lozmpus is rabtpus and mubvpus

   节点 113: rabtpus is vumkpus
      ↻ 重复节点，计数: 6

   节点 114: x is vumkpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is pukcpus → pukcpus is vumkpus
[后处理] 基于推理轨迹点亮节点，使用了 15 个前提条件:
  - 前提: x is pukcpus
  - 前提: pukcpus is mivlpus
  - 前提: mivlpus is bowypus
  - 前提: bowypus is yawrpus
  - 前提: yawrpus is revbpus
  - 前提: revbpus is hupwpus
  - 前提: hupwpus is yiklpus
  - 前提: yiklpus is serxpus
  - 前提: serxpus is tophpus
  - 前提: tophpus is beshpus
  - 前提: beshpus is qayzpus
  - 前提: qayzpus is zidspus
  - 前提: zidspus is lozmpus
  - 前提: lozmpus is rabtpus
  - 前提: rabtpus is vumkpus

   节点 115: vumkpus is hibqpus and telfpus
      ↻ 重复节点，计数: 4

   节点 116: x is hibqpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is pukcpus → pukcpus is hibqpus
[后处理] 基于推理轨迹点亮节点，使用了 16 个前提条件:
  - 前提: x is pukcpus
  - 前提: pukcpus is mivlpus
  - 前提: mivlpus is bowypus
  - 前提: bowypus is yawrpus
  - 前提: yawrpus is revbpus
  - 前提: revbpus is hupwpus
  - 前提: hupwpus is yiklpus
  - 前提: yiklpus is serxpus
  - 前提: serxpus is tophpus
  - 前提: tophpus is beshpus
  - 前提: beshpus is qayzpus
  - 前提: qayzpus is zidspus
  - 前提: zidspus is lozmpus
  - 前提: lozmpus is rabtpus
  - 前提: rabtpus is vumkpus
  - 前提: vumkpus is hibqpus

   节点 117: hibqpus is kudtpus and nehwpus
      ↻ 重复节点，计数: 4

   节点 118: x is kudtpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is pukcpus → pukcpus is kudtpus
[后处理] 基于推理轨迹点亮节点，使用了 17 个前提条件:
  - 前提: x is pukcpus
  - 前提: pukcpus is mivlpus
  - 前提: mivlpus is bowypus
  - 前提: bowypus is yawrpus
  - 前提: yawrpus is revbpus
  - 前提: revbpus is hupwpus
  - 前提: hupwpus is yiklpus
  - 前提: yiklpus is serxpus
  - 前提: serxpus is tophpus
  - 前提: tophpus is beshpus
  - 前提: beshpus is qayzpus
  - 前提: qayzpus is zidspus
  - 前提: zidspus is lozmpus
  - 前提: lozmpus is rabtpus
  - 前提: rabtpus is vumkpus
  - 前提: vumkpus is hibqpus
  - 前提: hibqpus is kudtpus

   节点 119: kudtpus is hofspus and wusjpus and gerppus
      ↻ 重复节点，计数: 4

   节点 120: x is hofspus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is pukcpus → pukcpus is hofspus
[后处理] 基于推理轨迹点亮节点，使用了 18 个前提条件:
  - 前提: x is pukcpus
  - 前提: pukcpus is mivlpus
  - 前提: mivlpus is bowypus
  - 前提: bowypus is yawrpus
  - 前提: yawrpus is revbpus
  - 前提: revbpus is hupwpus
  - 前提: hupwpus is yiklpus
  - 前提: yiklpus is serxpus
  - 前提: serxpus is tophpus
  - 前提: tophpus is beshpus
  - 前提: beshpus is qayzpus
  - 前提: qayzpus is zidspus
  - 前提: zidspus is lozmpus
  - 前提: lozmpus is rabtpus
  - 前提: rabtpus is vumkpus
  - 前提: vumkpus is hibqpus
  - 前提: hibqpus is kudtpus
  - 前提: kudtpus is hofspus

   节点 121: hofspus is cuywpus
      ↻ 重复节点，计数: 5

   节点 122: x is cuywpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is pukcpus → pukcpus is cuywpus
[后处理] 基于推理轨迹点亮节点，使用了 19 个前提条件:
  - 前提: x is pukcpus
  - 前提: pukcpus is mivlpus
  - 前提: mivlpus is bowypus
  - 前提: bowypus is yawrpus
  - 前提: yawrpus is revbpus
  - 前提: revbpus is hupwpus
  - 前提: hupwpus is yiklpus
  - 前提: yiklpus is serxpus
  - 前提: serxpus is tophpus
  - 前提: tophpus is beshpus
  - 前提: beshpus is qayzpus
  - 前提: qayzpus is zidspus
  - 前提: zidspus is lozmpus
  - 前提: lozmpus is rabtpus
  - 前提: rabtpus is vumkpus
  - 前提: vumkpus is hibqpus
  - 前提: hibqpus is kudtpus
  - 前提: kudtpus is hofspus
  - 前提: hofspus is cuywpus

   节点 123: cuywpus is wacqpus
      ↻ 重复节点，计数: 5

   节点 124: x is wacqpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is pukcpus → pukcpus is wacqpus
[后处理] 基于推理轨迹点亮节点，使用了 20 个前提条件:
  - 前提: x is pukcpus
  - 前提: pukcpus is mivlpus
  - 前提: mivlpus is bowypus
  - 前提: bowypus is yawrpus
  - 前提: yawrpus is revbpus
  - 前提: revbpus is hupwpus
  - 前提: hupwpus is yiklpus
  - 前提: yiklpus is serxpus
  - 前提: serxpus is tophpus
  - 前提: tophpus is beshpus
  - 前提: beshpus is qayzpus
  - 前提: qayzpus is zidspus
  - 前提: zidspus is lozmpus
  - 前提: lozmpus is rabtpus
  - 前提: rabtpus is vumkpus
  - 前提: vumkpus is hibqpus
  - 前提: hibqpus is kudtpus
  - 前提: kudtpus is hofspus
  - 前提: hofspus is cuywpus
  - 前提: cuywpus is wacqpus

   节点 125: wacqpus is sudmpus
      ↻ 重复节点，计数: 5

   节点 126: x is sudmpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is pukcpus → pukcpus is sudmpus
[后处理] 基于推理轨迹点亮节点，使用了 21 个前提条件:
  - 前提: x is pukcpus
  - 前提: pukcpus is mivlpus
  - 前提: mivlpus is bowypus
  - 前提: bowypus is yawrpus
  - 前提: yawrpus is revbpus
  - 前提: revbpus is hupwpus
  - 前提: hupwpus is yiklpus
  - 前提: yiklpus is serxpus
  - 前提: serxpus is tophpus
  - 前提: tophpus is beshpus
  - 前提: beshpus is qayzpus
  - 前提: qayzpus is zidspus
  - 前提: zidspus is lozmpus
  - 前提: lozmpus is rabtpus
  - 前提: rabtpus is vumkpus
  - 前提: vumkpus is hibqpus
  - 前提: hibqpus is kudtpus
  - 前提: kudtpus is hofspus
  - 前提: hofspus is cuywpus
  - 前提: cuywpus is wacqpus
  - 前提: wacqpus is sudmpus

   节点 127: sudmpus is ruhtpus
      ↻ 重复节点，计数: 5

   节点 128: x is ruhtpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is pukcpus → pukcpus is ruhtpus
[后处理] 基于推理轨迹点亮节点，使用了 22 个前提条件:
  - 前提: x is pukcpus
  - 前提: pukcpus is mivlpus
  - 前提: mivlpus is bowypus
  - 前提: bowypus is yawrpus
  - 前提: yawrpus is revbpus
  - 前提: revbpus is hupwpus
  - 前提: hupwpus is yiklpus
  - 前提: yiklpus is serxpus
  - 前提: serxpus is tophpus
  - 前提: tophpus is beshpus
  - 前提: beshpus is qayzpus
  - 前提: qayzpus is zidspus
  - 前提: zidspus is lozmpus
  - 前提: lozmpus is rabtpus
  - 前提: rabtpus is vumkpus
  - 前提: vumkpus is hibqpus
  - 前提: hibqpus is kudtpus
  - 前提: kudtpus is hofspus
  - 前提: hofspus is cuywpus
  - 前提: cuywpus is wacqpus
  - 前提: wacqpus is sudmpus
  - 前提: sudmpus is ruhtpus

   节点 129: ruhtpus is pewbpus and foddpus
      ↻ 重复节点，计数: 4

   节点 130: x is pewbpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is pukcpus → pukcpus is pewbpus
[后处理] 基于推理轨迹点亮节点，使用了 23 个前提条件:
  - 前提: x is pukcpus
  - 前提: pukcpus is mivlpus
  - 前提: mivlpus is bowypus
  - 前提: bowypus is yawrpus
  - 前提: yawrpus is revbpus
  - 前提: revbpus is hupwpus
  - 前提: hupwpus is yiklpus
  - 前提: yiklpus is serxpus
  - 前提: serxpus is tophpus
  - 前提: tophpus is beshpus
  - 前提: beshpus is qayzpus
  - 前提: qayzpus is zidspus
  - 前提: zidspus is lozmpus
  - 前提: lozmpus is rabtpus
  - 前提: rabtpus is vumkpus
  - 前提: vumkpus is hibqpus
  - 前提: hibqpus is kudtpus
  - 前提: kudtpus is hofspus
  - 前提: hofspus is cuywpus
  - 前提: cuywpus is wacqpus
  - 前提: wacqpus is sudmpus
  - 前提: sudmpus is ruhtpus
  - 前提: ruhtpus is pewbpus

   节点 131: pewbpus is gobppus
      ↻ 重复节点，计数: 5

   节点 132: x is gobppus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is pukcpus → pukcpus is gobppus
[后处理] 基于推理轨迹点亮节点，使用了 24 个前提条件:
  - 前提: x is pukcpus
  - 前提: pukcpus is mivlpus
  - 前提: mivlpus is bowypus
  - 前提: bowypus is yawrpus
  - 前提: yawrpus is revbpus
  - 前提: revbpus is hupwpus
  - 前提: hupwpus is yiklpus
  - 前提: yiklpus is serxpus
  - 前提: serxpus is tophpus
  - 前提: tophpus is beshpus
  - 前提: beshpus is qayzpus
  - 前提: qayzpus is zidspus
  - 前提: zidspus is lozmpus
  - 前提: lozmpus is rabtpus
  - 前提: rabtpus is vumkpus
  - 前提: vumkpus is hibqpus
  - 前提: hibqpus is kudtpus
  - 前提: kudtpus is hofspus
  - 前提: hofspus is cuywpus
  - 前提: cuywpus is wacqpus
  - 前提: wacqpus is sudmpus
  - 前提: sudmpus is ruhtpus
  - 前提: ruhtpus is pewbpus
  - 前提: pewbpus is gobppus

   节点 133: gobppus is wavwpus
      ↻ 重复节点，计数: 5

   节点 134: x is wavwpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is pukcpus → pukcpus is wavwpus
[后处理] 基于推理轨迹点亮节点，使用了 25 个前提条件:
  - 前提: x is pukcpus
  - 前提: pukcpus is mivlpus
  - 前提: mivlpus is bowypus
  - 前提: bowypus is yawrpus
  - 前提: yawrpus is revbpus
  - 前提: revbpus is hupwpus
  - 前提: hupwpus is yiklpus
  - 前提: yiklpus is serxpus
  - 前提: serxpus is tophpus
  - 前提: tophpus is beshpus
  - 前提: beshpus is qayzpus
  - 前提: qayzpus is zidspus
  - 前提: zidspus is lozmpus
  - 前提: lozmpus is rabtpus
  - 前提: rabtpus is vumkpus
  - 前提: vumkpus is hibqpus
  - 前提: hibqpus is kudtpus
  - 前提: kudtpus is hofspus
  - 前提: hofspus is cuywpus
  - 前提: cuywpus is wacqpus
  - 前提: wacqpus is sudmpus
  - 前提: sudmpus is ruhtpus
  - 前提: ruhtpus is pewbpus
  - 前提: pewbpus is gobppus
  - 前提: gobppus is wavwpus

   节点 135: wavwpus is yatrpus
      ↻ 重复节点，计数: 5

   节点 136: x is yatrpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is pukcpus → pukcpus is yatrpus
[后处理] 基于推理轨迹点亮节点，使用了 26 个前提条件:
  - 前提: x is pukcpus
  - 前提: pukcpus is mivlpus
  - 前提: mivlpus is bowypus
  - 前提: bowypus is yawrpus
  - 前提: yawrpus is revbpus
  - 前提: revbpus is hupwpus
  - 前提: hupwpus is yiklpus
  - 前提: yiklpus is serxpus
  - 前提: serxpus is tophpus
  - 前提: tophpus is beshpus
  - 前提: beshpus is qayzpus
  - 前提: qayzpus is zidspus
  - 前提: zidspus is lozmpus
  - 前提: lozmpus is rabtpus
  - 前提: rabtpus is vumkpus
  - 前提: vumkpus is hibqpus
  - 前提: hibqpus is kudtpus
  - 前提: kudtpus is hofspus
  - 前提: hofspus is cuywpus
  - 前提: cuywpus is wacqpus
  - 前提: wacqpus is sudmpus
  - 前提: sudmpus is ruhtpus
  - 前提: ruhtpus is pewbpus
  - 前提: pewbpus is gobppus
  - 前提: gobppus is wavwpus
  - 前提: wavwpus is yatrpus

   节点 137: yatrpus is qofzpus
      ↻ 重复节点，计数: 5

   节点 138: x is qofzpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is pukcpus → pukcpus is qofzpus
[后处理] 基于推理轨迹点亮节点，使用了 27 个前提条件:
  - 前提: x is pukcpus
  - 前提: pukcpus is mivlpus
  - 前提: mivlpus is bowypus
  - 前提: bowypus is yawrpus
  - 前提: yawrpus is revbpus
  - 前提: revbpus is hupwpus
  - 前提: hupwpus is yiklpus
  - 前提: yiklpus is serxpus
  - 前提: serxpus is tophpus
  - 前提: tophpus is beshpus
  - 前提: beshpus is qayzpus
  - 前提: qayzpus is zidspus
  - 前提: zidspus is lozmpus
  - 前提: lozmpus is rabtpus
  - 前提: rabtpus is vumkpus
  - 前提: vumkpus is hibqpus
  - 前提: hibqpus is kudtpus
  - 前提: kudtpus is hofspus
  - 前提: hofspus is cuywpus
  - 前提: cuywpus is wacqpus
  - 前提: wacqpus is sudmpus
  - 前提: sudmpus is ruhtpus
  - 前提: ruhtpus is pewbpus
  - 前提: pewbpus is gobppus
  - 前提: gobppus is wavwpus
  - 前提: wavwpus is yatrpus
  - 前提: yatrpus is qofzpus

   节点 139: qofzpus is quhtpus
      ↻ 重复节点，计数: 5

   节点 140: x is quhtpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is pukcpus → pukcpus is quhtpus
[后处理] 基于推理轨迹点亮节点，使用了 28 个前提条件:
  - 前提: x is pukcpus
  - 前提: pukcpus is mivlpus
  - 前提: mivlpus is bowypus
  - 前提: bowypus is yawrpus
  - 前提: yawrpus is revbpus
  - 前提: revbpus is hupwpus
  - 前提: hupwpus is yiklpus
  - 前提: yiklpus is serxpus
  - 前提: serxpus is tophpus
  - 前提: tophpus is beshpus
  - 前提: beshpus is qayzpus
  - 前提: qayzpus is zidspus
  - 前提: zidspus is lozmpus
  - 前提: lozmpus is rabtpus
  - 前提: rabtpus is vumkpus
  - 前提: vumkpus is hibqpus
  - 前提: hibqpus is kudtpus
  - 前提: kudtpus is hofspus
  - 前提: hofspus is cuywpus
  - 前提: cuywpus is wacqpus
  - 前提: wacqpus is sudmpus
  - 前提: sudmpus is ruhtpus
  - 前提: ruhtpus is pewbpus
  - 前提: pewbpus is gobppus
  - 前提: gobppus is wavwpus
  - 前提: wavwpus is yatrpus
  - 前提: yatrpus is qofzpus
  - 前提: qofzpus is quhtpus

   节点 141: quhtpus is poyrpus
      ↻ 重复节点，计数: 5

   节点 142: x is poyrpus
      ↻ 重复节点，计数: 2

   节点 143: poyrpus is babrpus and fuczpus
      ↻ 重复节点，计数: 4

   节点 144: x is babrpus
      ↻ 重复节点，计数: 2

   节点 145: x is babrpus
      ↻ 重复节点，计数: 3

   节点 146: x is babrpus
      ↻ 重复节点，计数: 4

   节点 147: x is babrpus
      ↻ 重复节点，计数: 5

   节点 148: x is babrpus
      ↻ 重复节点，计数: 6

   节点 149: x is babgpus or babrpus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

🔍 分析推理路径完整性...

============================================================
[后处理] 处理完成
============================================================
📈 处理统计:
   - 处理的actual节点: 149
   - 新增节点: 40
   - 更新已存在节点: 109
   - 点亮的LoG节点: 40

🎯 推理质量统计:
   - 完美推理: 40 (节点正确 + 路径正确)
   - 部分推理: 0 (节点正确 + 路径部分错误)
   - 无效推理: 0 (节点错误或路径完全错误)
[LoG分析] LoG图: 40节点, 30前提, 复杂度1-30

📊 === Statement列表分析 ===
📈 节点统计:
   - 总节点数: 70
   - 前提节点: 30
   - 推理节点: 40
   - 幻觉节点: 0
   - 点亮LoG节点: 40

✅ 推理节点详情:
   🟢 x is mivlpus (出现1次, 质量:perfect)
   🟢 x is bowypus (出现1次, 质量:perfect)
   🟢 x is yawrpus (出现1次, 质量:perfect)
   🟢 x is revbpus (出现1次, 质量:perfect)
   🟢 x is hupwpus (出现1次, 质量:perfect)
   🟢 x is yiklpus (出现1次, 质量:perfect)
   🟢 x is serxpus (出现1次, 质量:perfect)
   🟢 x is tophpus (出现3次, 质量:perfect)
   🟢 x is beshpus (出现2次, 质量:perfect)
   🟢 x is cevspus (出现1次, 质量:perfect)
   🟢 poyrpus is babrpus (出现3次, 质量:perfect)
   🟢 poyrpus is fuczpus (出现1次, 质量:perfect)
   🟢 qayzpus is zidspus (出现1次, 质量:perfect)
   🟢 lozmpus is rabtpus (出现1次, 质量:perfect)
   🟢 vumkpus is hibqpus (出现1次, 质量:perfect)
   🟢 hibqpus is kudtpus (出现1次, 质量:perfect)
   🟢 kudtpus is hofspus (出现1次, 质量:perfect)
   🟢 ruhtpus is pewbpus (出现1次, 质量:perfect)
   🟢 x is poyrpus (出现2次, 质量:perfect)
   🟢 x is babrpus (出现6次, 质量:perfect)
   🟢 tophpus is beshpus (出现1次, 质量:perfect)
   🟢 x is qayzpus (出现1次, 质量:perfect)
   🟢 x is zidspus (出现1次, 质量:perfect)
   🟢 x is lozmpus (出现1次, 质量:perfect)
   🟢 x is rabtpus and mubvpus (出现1次, 质量:perfect)
   🟢 x is vumkpus (出现1次, 质量:perfect)
   🟢 x is hibqpus (出现1次, 质量:perfect)
   🟢 x is kudtpus (出现1次, 质量:perfect)
   🟢 x is hofspus (出现1次, 质量:perfect)
   🟢 x is cuywpus (出现1次, 质量:perfect)
   🟢 x is wacqpus (出现1次, 质量:perfect)
   🟢 x is sudmpus (出现1次, 质量:perfect)
   🟢 x is ruhtpus (出现1次, 质量:perfect)
   🟢 x is pewbpus (出现1次, 质量:perfect)
   🟢 x is gobppus (出现1次, 质量:perfect)
   🟢 x is wavwpus (出现1次, 质量:perfect)
   🟢 x is yatrpus (出现1次, 质量:perfect)
   🟢 x is qofzpus (出现1次, 质量:perfect)
   🟢 x is quhtpus (出现1次, 质量:perfect)
   🟢 x is babgpus or babrpus (出现1次, 质量:perfect)

🔥 点亮的LoG节点:
   - yawrpus is hupwpus
   - hofspus is ruhtpus
   - x is serxpus
   - x is zidspus and cobppus
   - zidspus is hofspus
   - wavwpus is babgpus or babrpus
   - ruhtpus is pewbpus
   - wavwpus is poyrpus
   - zidspus is babgpus or babrpus
   - rabtpus is hibqpus
   - hibqpus is hofspus
   - x is yawrpus
   - yawrpus is serxpus
   - serxpus is beshpus
   - hofspus is babgpus or babrpus
   - serxpus is beshpus and cevspus
   - beshpus is zidspus and cobppus
   - zidspus is rabtpus
   - hofspus is wacqpus
   - hofspus is wavwpus
   - qofzpus is poyrpus
   - x is zidspus
   - x is babgpus or babrpus
   - mivlpus is yawrpus
   - serxpus is zidspus and cobppus
   - zidspus is rabtpus and mubvpus
   - beshpus is zidspus and cobppus and huwjpus
   - hupwpus is serxpus
   - hibqpus is hofspus and wusjpus
   - kudtpus is hofspus and wusjpus
   - x is mivlpus
   - ruhtpus is wavwpus
   - hibqpus is kudtpus
   - poyrpus is babgpus or babrpus
   - rabtpus is hibqpus and telfpus
   - zidspus is hibqpus
   - wacqpus is ruhtpus
   - wavwpus is qofzpus
   - pewbpus is wavwpus
   - poyrpus is babrpus

============================================================
📊 计算评估指标
============================================================

🎯 计算Coverage指标...
   深度Coverage: 6/6 = 100.00%
   最深点亮节点: x is babgpus or babrpus (第6层)
   节点Coverage: 40/40 = 100.00%
   前提条件Coverage: 29/30 = 96.67%
   各推理层点亮比例:
     第1层: 17/17 = 100.00%
     第2层: 11/11 = 100.00%
     第3层: 6/6 = 100.00%
     第4层: 3/3 = 100.00%
     第5层: 2/2 = 100.00%
     第6层: 1/1 = 100.00%

🎯 计算Precision指标...
   Error Rate: 0/40 = 0.00%
   可推导节点: 40/40
   Strict Error Rate: 0/40 = 0.00%
   严格有效节点: 40/40

   详细分析:
     完美推理: 40 (100.00%)
     部分推理: 0 (0.00%)
     无效推理: 0 (0.00%)

================================================================================
处理记录 8/50
================================================================================
记录索引: 7
问题状态: correct
📁 从缓存加载提取结果: evaluation_results.LoG_6.deepseek-reasoner_record_7.json
✅ 使用缓存结果:
   - 句子数: 72
   - 提取的语句数: 65
   - 初始条件数: 19

=== Statement提取完成 ===
总句子数: 72
成功提取: 72
失败提取: 0
总statements数: 65

=== 开始清洗Statement格式 ===
原始statements数: 65
清洗后statements数: 65
过滤掉的statements数: 0

=== 开始标准化和解析节点 ===
清洗后statements数: 65
标准化后节点数: 64
过滤掉的无效实体数: 1
标准化后的节点:
  1. [planning] x → babgpus (原始: x is babgpus)
  2. [actual] x → jicvpus and zihypus (原始: x is jicvpus and zihypus)
  3. [actual] x → jicvpus and zihypus (原始: x is jicvpus and zihypus)
  4. [planning] x → babgpus (原始: x is babgpus)
  5. [actual] bamgpus → babgpus and joldpus and wohvpus and vufmpus (原始: bamgpus is babgpus and joldpus and wohvpus and vufmpus)
  6. [planning] x → babgpus (原始: x is babgpus)
  7. [actual] jicvpus → sitgpus (原始: jicvpus is sitgpus)
  8. [actual] sitgpus → labfpus (原始: sitgpus is labfpus)
  9. [actual] labfpus → vuqppus (原始: labfpus is vuqppus)
  10. [actual] vuqppus → zomppus (原始: vuqppus is zomppus)
  11. [actual] zomppus → pewppus and vognpus (原始: zomppus is pewppus and vognpus)
  12. [actual] vognpus → noyhpus (原始: vognpus is noyhpus)
  13. [actual] noyhpus → dusjpus (原始: noyhpus is dusjpus)
  14. [actual] dusjpus → vupypus and tejypus (原始: dusjpus is vupypus and tejypus)
  15. [actual] vupypus → kibzpus and xowspus (原始: vupypus is kibzpus and xowspus)
  16. [actual] vupypus → havbpus and woswpus (原始: vupypus is havbpus and woswpus)
  17. [actual] kibzpus → detjpus and loyvpus (原始: kibzpus is detjpus and loyvpus)
  18. [actual] detjpus → hoqmpus (原始: detjpus is hoqmpus)
  19. [actual] hoqmpus → botlpus (原始: hoqmpus is botlpus)
  20. [actual] botlpus → livmpus (原始: botlpus is livmpus)
  21. [actual] livmpus → biywpus and hebbpus (原始: livmpus is biywpus and hebbpus)
  22. [actual] biywpus → bamgpus and jebnpus (原始: biywpus is bamgpus and jebnpus)
  23. [actual] bamgpus → babgpus and joldpus and wohvpus and vufmpus (原始: bamgpus is babgpus and joldpus and wohvpus and vufmpus)
  24. [actual] biywpus → bamgpus (原始: biywpus is bamgpus)
  25. [actual] babgpus → bamgpus (原始: babgpus is bamgpus)
  26. [actual] x → jicvpus (原始: x is jicvpus)
  27. [actual] jicvpus → sitgpus (原始: jicvpus is sitgpus)
  28. [actual] sitgpus → labfpus (原始: sitgpus is labfpus)
  29. [actual] labfpus → vuqppus (原始: labfpus is vuqppus)
  30. [actual] vuqppus → zomppus (原始: vuqppus is zomppus)
  31. [actual] zomppus → vognpus (原始: zomppus is vognpus)
  32. [actual] vognpus → noyhpus (原始: vognpus is noyhpus)
  33. [actual] noyhpus → dusjpus (原始: noyhpus is dusjpus)
  34. [actual] dusjpus → vupypus (原始: dusjpus is vupypus)
  35. [actual] vupypus → kibzpus (原始: vupypus is kibzpus)
  36. [actual] kibzpus → detjpus and loyvpus (原始: kibzpus is detjpus and loyvpus)
  37. [actual] detjpus → hoqmpus (原始: detjpus is hoqmpus)
  38. [actual] hoqmpus → botlpus (原始: hoqmpus is botlpus)
  39. [actual] botlpus → livmpus (原始: botlpus is livmpus)
  40. [actual] livmpus → biywpus (原始: livmpus is biywpus)
  41. [actual] biywpus → bamgpus (原始: biywpus is bamgpus)
  42. [actual] bamgpus → babgpus (原始: bamgpus is babgpus)
  43. [actual] x → jicvpus (原始: x is jicvpus)
  44. [actual] jicvpus → sitgpus (原始: jicvpus is sitgpus)
  45. [actual] sitgpus → labfpus (原始: sitgpus is labfpus)
  46. [actual] labfpus → vuqppus (原始: labfpus is vuqppus)
  47. [actual] vuqppus → zomppus (原始: vuqppus is zomppus)
  48. [actual] zomppus → vognpus (原始: zomppus is vognpus)
  49. [actual] vognpus → noyhpus (原始: vognpus is noyhpus)
  50. [actual] noyhpus → dusjpus (原始: noyhpus is dusjpus)
  51. [actual] dusjpus → vupypus and tejypus (原始: dusjpus is vupypus and tejypus)
  52. [actual] vupypus → kibzpus (原始: vupypus is kibzpus)
  53. [actual] kibzpus → detjpus and loyvpus (原始: kibzpus is detjpus and loyvpus)
  54. [actual] detjpus → hoqmpus (原始: detjpus is hoqmpus)
  55. [actual] hoqmpus → botlpus (原始: hoqmpus is botlpus)
  56. [actual] botlpus → livmpus (原始: botlpus is livmpus)
  57. [actual] livmpus → biywpus and hebbpus (原始: livmpus is biywpus and hebbpus)
  58. [actual] biywpus → bamgpus and jebnpus (原始: biywpus is bamgpus and jebnpus)
  59. [actual] bamgpus → babgpus and joldpus and wohvpus and vufmpus (原始: bamgpus is babgpus and joldpus and wohvpus and vufmpus)
  60. [actual] x → bamgpus (原始: x is bamgpus)
  61. [actual] bamgpus → babgpus (原始: bamgpus is babgpus)
  62. [actual] x → babgpus (原始: x is babgpus)
  63. [actual] x → babgpus (原始: x is babgpus)
  64. [planning] x → babgpus (原始: x is babgpus)

开始新的后处理...
[后处理] 从LoG数据文件中获取到图数据，节点数: 30
[后处理] 加载LoG图，包含 30 个节点
  LoG节点 0: x is babgpus (规则: MP, 深度: 1)
  LoG节点 1: x is kibzpus (规则: MP, 深度: 2)
  LoG节点 2: kibzpus is babgpus (规则: CE, 深度: 2)
  LoG节点 3: x is vognpus (规则: CE, 深度: 3)
  LoG节点 4: vognpus is kibzpus (规则: CE, 深度: 3)
  LoG节点 5: kibzpus is babgpus and joldpus (规则: MP, 深度: 3)
  LoG节点 6: x is vognpus and pewppus (规则: MP, 深度: 4)
  LoG节点 7: vognpus is kibzpus and havbpus (规则: MP, 深度: 4)
  LoG节点 8: kibzpus is biywpus (规则: MP, 深度: 4)
  LoG节点 9: biywpus is babgpus and joldpus (规则: CE, 深度: 4)
  LoG节点 10: x is labfpus (规则: MP, 深度: 5)
  LoG节点 11: labfpus is vognpus and pewppus (规则: MP, 深度: 5)
  LoG节点 12: vognpus is vupypus (规则: MP, 深度: 5)
  LoG节点 13: vupypus is kibzpus and havbpus (规则: CI, 深度: 5)
  LoG节点 14: kibzpus is botlpus (规则: MP, 深度: 5)
  LoG节点 15: botlpus is biywpus (规则: CE, 深度: 5)
  LoG节点 16: biywpus is babgpus and joldpus and wohvpus (规则: MP, 深度: 5)
  LoG节点 17: x is jicvpus (规则: CE, 深度: 6)
  LoG节点 18: jicvpus is labfpus (规则: MP, 深度: 6)
  LoG节点 19: labfpus is zomppus (规则: MP, 深度: 6)
  LoG节点 20: zomppus is vognpus and pewppus (规则: CI, 深度: 6)
  LoG节点 21: vognpus is dusjpus (规则: MP, 深度: 6)
  LoG节点 22: dusjpus is vupypus (规则: CE, 深度: 6)
  LoG节点 23: vupypus is kibzpus (规则: CE, 深度: 6)
  LoG节点 24: vupypus is havbpus (规则: CE, 深度: 6)
  LoG节点 25: kibzpus is detjpus (规则: CE, 深度: 6)
  LoG节点 26: detjpus is botlpus (规则: MP, 深度: 6)
  LoG节点 27: botlpus is biywpus and hebbpus (规则: MP, 深度: 6)
  LoG节点 28: biywpus is bamgpus (规则: CE, 深度: 6)
  LoG节点 29: bamgpus is babgpus and joldpus and wohvpus (规则: CE, 深度: 6)

============================================================
[后处理] 开始处理节点
============================================================
📊 初始状态:
   - 标准化节点数: 64
   - 初始条件数: 19
   - LoG图节点数: 30

📋 初始条件列表:
    1. vupypus is kibzpus and xowspus
    2. bamgpus is babgpus and joldpus and wohvpus and vufmpus
    3. kibzpus is detjpus and loyvpus
    4. zomppus is pewppus
    5. hoqmpus is botlpus
    6. biywpus is bamgpus and jebnpus
    7. x is jicvpus and zihypus
    8. vuqppus is zomppus
    9. noyhpus is dusjpus
   10. livmpus is biywpus and hebbpus
   11. zomppus is vognpus
   12. vupypus is havbpus and woswpus
   13. botlpus is livmpus
   14. jicvpus is sitgpus
   15. dusjpus is vupypus and tejypus
   16. sitgpus is labfpus
   17. labfpus is vuqppus
   18. detjpus is hoqmpus
   19. vognpus is noyhpus

🔧 构建初始Statement列表...
✅ 初始Statement列表构建完成，包含 19 个前提节点

🔍 开始处理actual节点...

   节点 1: x is jicvpus and zihypus
      ↻ 重复节点，计数: 2

   节点 2: x is jicvpus and zihypus
      ↻ 重复节点，计数: 3

   节点 3: bamgpus is babgpus and joldpus and wohvpus and vufmpus
      ↻ 重复节点，计数: 2

   节点 4: jicvpus is sitgpus
      ↻ 重复节点，计数: 2

   节点 5: sitgpus is labfpus
      ↻ 重复节点，计数: 2

   节点 6: labfpus is vuqppus
      ↻ 重复节点，计数: 2

   节点 7: vuqppus is zomppus
      ↻ 重复节点，计数: 2

   节点 8: zomppus is pewppus and vognpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CI
      📋 推理路径: CI规则: zomppus is pewppus → zomppus is vognpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: zomppus is pewppus
  - 前提: zomppus is vognpus
  ✓ 点亮LoG节点: zomppus is vognpus and pewppus
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 9: vognpus is noyhpus
      ↻ 重复节点，计数: 2

   节点 10: noyhpus is dusjpus
      ↻ 重复节点，计数: 2

   节点 11: dusjpus is vupypus and tejypus
      ↻ 重复节点，计数: 2

   节点 12: vupypus is kibzpus and xowspus
      ↻ 重复节点，计数: 2

   节点 13: vupypus is havbpus and woswpus
      ↻ 重复节点，计数: 2

   节点 14: kibzpus is detjpus and loyvpus
      ↻ 重复节点，计数: 2

   节点 15: detjpus is hoqmpus
      ↻ 重复节点，计数: 2

   节点 16: hoqmpus is botlpus
      ↻ 重复节点，计数: 2

   节点 17: botlpus is livmpus
      ↻ 重复节点，计数: 2

   节点 18: livmpus is biywpus and hebbpus
      ↻ 重复节点，计数: 2

   节点 19: biywpus is bamgpus and jebnpus
      ↻ 重复节点，计数: 2

   节点 20: bamgpus is babgpus and joldpus and wohvpus and vufmpus
      ↻ 重复节点，计数: 3

   节点 21: biywpus is bamgpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: biywpus is bamgpus
      ✅ 验证成功 + LoG匹配

   节点 22: babgpus is bamgpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 23: x is jicvpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is jicvpus
      ✅ 验证成功 + LoG匹配

   节点 24: jicvpus is sitgpus
      ↻ 重复节点，计数: 3

   节点 25: sitgpus is labfpus
      ↻ 重复节点，计数: 3

   节点 26: labfpus is vuqppus
      ↻ 重复节点，计数: 3

   节点 27: vuqppus is zomppus
      ↻ 重复节点，计数: 3

   节点 28: zomppus is vognpus
      ↻ 重复节点，计数: 2

   节点 29: vognpus is noyhpus
      ↻ 重复节点，计数: 3

   节点 30: noyhpus is dusjpus
      ↻ 重复节点，计数: 3

   节点 31: dusjpus is vupypus
      🔍 验证新节点...
[后处理] 点亮LoG节点: dusjpus is vupypus
      ✅ 验证成功 + LoG匹配

   节点 32: vupypus is kibzpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: vupypus is kibzpus
      ✅ 验证成功 + LoG匹配

   节点 33: kibzpus is detjpus and loyvpus
      ↻ 重复节点，计数: 3

   节点 34: detjpus is hoqmpus
      ↻ 重复节点，计数: 3

   节点 35: hoqmpus is botlpus
      ↻ 重复节点，计数: 3

   节点 36: botlpus is livmpus
      ↻ 重复节点，计数: 3

   节点 37: livmpus is biywpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: livmpus is biywpus and hebbpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: livmpus is biywpus and hebbpus

   节点 38: biywpus is bamgpus
      ↻ 重复节点，计数: 2

   节点 39: bamgpus is babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: bamgpus is babgpus and joldpus and wohvpus and vufmpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: bamgpus is babgpus and joldpus and wohvpus and vufmpus
  ✓ 点亮LoG节点: bamgpus is babgpus and joldpus and wohvpus
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 40: x is jicvpus
      ↻ 重复节点，计数: 2

   节点 41: jicvpus is sitgpus
      ↻ 重复节点，计数: 4

   节点 42: sitgpus is labfpus
      ↻ 重复节点，计数: 4

   节点 43: labfpus is vuqppus
      ↻ 重复节点，计数: 4

   节点 44: vuqppus is zomppus
      ↻ 重复节点，计数: 4

   节点 45: zomppus is vognpus
      ↻ 重复节点，计数: 3

   节点 46: vognpus is noyhpus
      ↻ 重复节点，计数: 4

   节点 47: noyhpus is dusjpus
      ↻ 重复节点，计数: 4

   节点 48: dusjpus is vupypus and tejypus
      ↻ 重复节点，计数: 3

   节点 49: vupypus is kibzpus
      ↻ 重复节点，计数: 2

   节点 50: kibzpus is detjpus and loyvpus
      ↻ 重复节点，计数: 4

   节点 51: detjpus is hoqmpus
      ↻ 重复节点，计数: 4

   节点 52: hoqmpus is botlpus
      ↻ 重复节点，计数: 4

   节点 53: botlpus is livmpus
      ↻ 重复节点，计数: 4

   节点 54: livmpus is biywpus and hebbpus
      ↻ 重复节点，计数: 3

   节点 55: biywpus is bamgpus and jebnpus
      ↻ 重复节点，计数: 3

   节点 56: bamgpus is babgpus and joldpus and wohvpus and vufmpus
      ↻ 重复节点，计数: 4

   节点 57: x is bamgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is jicvpus → jicvpus is bamgpus
[后处理] 基于推理轨迹点亮节点，使用了 16 个前提条件:
  - 前提: x is jicvpus
  - 前提: jicvpus is sitgpus
  - 前提: sitgpus is labfpus
  - 前提: labfpus is vuqppus
  - 前提: vuqppus is zomppus
  - 前提: zomppus is vognpus
  - 前提: vognpus is noyhpus
  - 前提: noyhpus is dusjpus
  - 前提: dusjpus is vupypus
  - 前提: vupypus is kibzpus
  - 前提: kibzpus is detjpus and loyvpus
  - 前提: detjpus is hoqmpus
  - 前提: hoqmpus is botlpus
  - 前提: botlpus is livmpus
  - 前提: livmpus is biywpus
  - 前提: biywpus is bamgpus
  ✓ 点亮LoG节点: x is kibzpus
[子树点亮]     └─ 点亮依赖节点: x is vognpus (深度3)
[子树点亮]     └─ 点亮依赖节点: vognpus is kibzpus (深度3)
[子树点亮]     └─ 点亮依赖节点: x is vognpus and pewppus (深度4)
[子树点亮]     └─ 点亮依赖节点: vognpus is kibzpus and havbpus (深度4)
[子树点亮]     └─ 点亮依赖节点: x is labfpus (深度5)
[子树点亮]     └─ 点亮依赖节点: labfpus is vognpus and pewppus (深度5)
[子树点亮]     └─ 点亮依赖节点: vognpus is vupypus (深度5)
[子树点亮]     └─ 点亮依赖节点: vupypus is kibzpus and havbpus (深度5)
[子树点亮]     └─ 点亮依赖节点: jicvpus is labfpus (深度6)
[子树点亮]     └─ 点亮依赖节点: labfpus is zomppus (深度6)
[子树点亮]     └─ 点亮依赖节点: vognpus is dusjpus (深度6)
[子树点亮]     └─ 点亮依赖节点: vupypus is havbpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 12 个节点
  ✓ 点亮LoG节点: kibzpus is biywpus
[子树点亮]     └─ 点亮依赖节点: kibzpus is botlpus (深度5)
[子树点亮]     └─ 点亮依赖节点: botlpus is biywpus (深度5)
[子树点亮]     └─ 点亮依赖节点: kibzpus is detjpus (深度6)
[子树点亮]     └─ 点亮依赖节点: detjpus is botlpus (深度6)
[子树点亮]     └─ 点亮依赖节点: botlpus is biywpus and hebbpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 5 个节点
[后处理] 通过推理轨迹额外点亮了 2 个LoG节点

   节点 58: bamgpus is babgpus
      ↻ 重复节点，计数: 2

   节点 59: x is babgpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is babgpus
[子树点亮]     └─ 点亮依赖节点: kibzpus is babgpus (深度2)
[子树点亮]     └─ 点亮依赖节点: kibzpus is babgpus and joldpus (深度3)
[子树点亮]     └─ 点亮依赖节点: biywpus is babgpus and joldpus (深度4)
[子树点亮]     └─ 点亮依赖节点: biywpus is babgpus and joldpus and wohvpus (深度5)
[后处理]   └─ 自动点亮依赖子树: 4 个节点
      ✅ 验证成功 + LoG匹配

   节点 60: x is babgpus
      ↻ 重复节点，计数: 2

🔍 分析推理路径完整性...

============================================================
[后处理] 处理完成
============================================================
📈 处理统计:
   - 处理的actual节点: 60
   - 新增节点: 10
   - 更新已存在节点: 50
   - 点亮的LoG节点: 30

🎯 推理质量统计:
   - 完美推理: 8 (节点正确 + 路径正确)
   - 部分推理: 2 (节点正确 + 路径部分错误)
   - 无效推理: 0 (节点错误或路径完全错误)
[LoG分析] LoG图: 30节点, 19前提, 复杂度1-19

📊 === Statement列表分析 ===
📈 节点统计:
   - 总节点数: 29
   - 前提节点: 19
   - 推理节点: 9
   - 幻觉节点: 1
   - 点亮LoG节点: 30

❌ 幻觉节点详情:
   - babgpus is bamgpus (出现1次)

✅ 推理节点详情:
   🟢 zomppus is pewppus and vognpus (出现1次, 质量:perfect)
   🟡 biywpus is bamgpus (出现2次, 质量:partial)
      ⚠️  无效依赖: ['babgpus is bamgpus']
   🟢 x is jicvpus (出现2次, 质量:perfect)
   🟢 dusjpus is vupypus (出现1次, 质量:perfect)
   🟢 vupypus is kibzpus (出现2次, 质量:perfect)
   🟢 livmpus is biywpus (出现1次, 质量:perfect)
   🟢 bamgpus is babgpus (出现2次, 质量:perfect)
   🟡 x is bamgpus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['babgpus is bamgpus']
   🟢 x is babgpus (出现2次, 质量:perfect)

🔥 点亮的LoG节点:
   - x is kibzpus
   - biywpus is babgpus and joldpus and wohvpus
   - vognpus is kibzpus and havbpus
   - biywpus is babgpus and joldpus
   - labfpus is zomppus
   - vognpus is dusjpus
   - x is labfpus
   - jicvpus is labfpus
   - kibzpus is detjpus
   - vupypus is havbpus
   - biywpus is bamgpus
   - x is babgpus
   - dusjpus is vupypus
   - bamgpus is babgpus and joldpus and wohvpus
   - labfpus is vognpus and pewppus
   - vupypus is kibzpus and havbpus
   - vupypus is kibzpus
   - detjpus is botlpus
   - kibzpus is biywpus
   - x is vognpus and pewppus
   - kibzpus is botlpus
   - vognpus is vupypus
   - botlpus is biywpus
   - kibzpus is babgpus
   - kibzpus is babgpus and joldpus
   - x is jicvpus
   - botlpus is biywpus and hebbpus
   - zomppus is vognpus and pewppus
   - x is vognpus
   - vognpus is kibzpus

============================================================
📊 计算评估指标
============================================================

🎯 计算Coverage指标...
   深度Coverage: 6/6 = 100.00%
   最深点亮节点: x is babgpus (第6层)
   节点Coverage: 30/30 = 100.00%
   前提条件Coverage: 18/19 = 94.74%
   各推理层点亮比例:
     第1层: 13/13 = 100.00%
     第2层: 7/7 = 100.00%
     第3层: 4/4 = 100.00%
     第4层: 3/3 = 100.00%
     第5层: 2/2 = 100.00%
     第6层: 1/1 = 100.00%

🎯 计算Precision指标...
   Error Rate: 1/10 = 10.00%
   可推导节点: 9/10
   Strict Error Rate: 3/10 = 30.00%
   严格有效节点: 7/10

   详细分析:
     完美推理: 8 (80.00%)
     部分推理: 2 (20.00%)
     无效推理: 0 (0.00%)

================================================================================
处理记录 9/50
================================================================================
记录索引: 8
问题状态: correct
📁 从缓存加载提取结果: evaluation_results.LoG_6.deepseek-reasoner_record_8.json
✅ 使用缓存结果:
   - 句子数: 159
   - 提取的语句数: 219
   - 初始条件数: 23

=== Statement提取完成 ===
总句子数: 159
成功提取: 159
失败提取: 0
总statements数: 219

=== 开始清洗Statement格式 ===
原始statements数: 219
清洗后statements数: 162
过滤掉的statements数: 57
清洗后的statements:
  1. [planning] x is babgpus
  2. [actual] palrpus is babgpus
  3. [actual] x is lamkpus and bukbpus
  4. [planning] x is babgpus
  5. [actual] palrpus is bokvpus
  6. [actual] xiqppus is sotxpus and cackpus
  7. [actual] tihqpus is xiqppus and vohwpus
  8. [actual] jubxpus is loxfpus and goqnpus
  9. [actual] laydpus is jubxpus
  10. [actual] lamkpus is tihqpus and nagkpus
  11. [actual] rizvpus is zogypus
  12. [actual] cohypus is tuyjpus and wunbpus
  13. [actual] sotxpus is yuvfpus and zirdpus
  14. [actual] yuvfpus is kiqqpus
  15. [actual] yaxwpus is jibtpus and pugfpus
  16. [actual] palrpus is mesppus
  17. [actual] zogypus is zoqspus
  18. [actual] x is lamkpus and bukbpus
  19. [actual] gelhpus is yaxwpus
  20. [actual] kiqqpus is cohypus and pectpus
  21. [actual] gavbpus is xudmpus and vasqpus
  22. [actual] zoqspus is gavbpus
  23. [actual] palrpus is babgpus
  24. [actual] xudmpus is laydpus
  25. [actual] loxfpus is palrpus and boqnpus
  26. [actual] tuyjpus is gelhpus
  27. [actual] yaxwpus is rizvpus
  28. [actual] gelhpus is yaxwpus
  29. [actual] tuyjpus is gelhpus
  30. [actual] tuyjpus is gelhpus and yaxwpus
  31. [actual] yaxwpus is rizvpus
  32. [planning] tuyjpus is rizvpus
  33. [planning] x is babgpus
  34. [actual] x is lamkpus and bukbpus
  35. [planning] babgpus is palrpus
  36. [actual] lamkpus is tihqpus and nagkpus
  37. [actual] lamkpus is tihqpus
  38. [actual] tihqpus is xiqppus and vohwpus
  39. [actual] xiqppus is sotxpus and cackpus
  40. [actual] sotxpus is yuvfpus and zirdpus
  41. [actual] yuvfpus is kiqqpus
  42. [actual] kiqqpus is cohypus and pectpus
  43. [actual] cohypus is tuyjpus and wunbpus
  44. [actual] tuyjpus is gelhpus
  45. [actual] gelhpus is yaxwpus
  46. [actual] yaxwpus is jibtpus and pugfpus
  47. [actual] yaxwpus is rizvpus
  48. [actual] rizvpus is zogypus
  49. [actual] zogypus is zoqspus
  50. [actual] zoqspus is gavbpus
  51. [actual] gavbpus is xudmpus and vasqpus
  52. [actual] xudmpus is laydpus
  53. [actual] laydpus is jubxpus
  54. [actual] jubxpus is loxfpus and goqnpus
  55. [actual] loxfpus is palrpus and boqnpus
  56. [actual] palrpus is babgpus
  57. [actual] palrpus is babgpus
  58. [actual] x is lamkpus
  59. [planning] lamkpus is a category that contains tihqpus
  60. [planning] tihqpus is a category that contains palrpus
  61. [planning] x is babgpus
  62. [planning] x is babgpus
  63. [planning] x is directly babgpus
  64. [planning] x is through the chain
  65. [planning] x is babgpus
  66. [actual] tihqpus is lamkpus
  67. [actual] xiqppus is tihqpus
  68. [actual] loxfpus is xiqppus
  69. [actual] palrpus is loxfpus
  70. [actual] palrpus is babgpus
  71. [planning] lamkpus is babgpus
  72. [planning] lamkpus is tihqpus
  73. [planning] lamkpus is nagkpus
  74. [planning] lamkpus is tihqpus and nagkpus
  75. [planning] lamkpus is tihqpus and nagkpus
  76. [actual] lamkpus is tihqpus and nagkpus
  77. [actual] lamkpus is tihqpus
  78. [actual] lamkpus is nagkpus
  79. [actual] x is lamkpus and bukbpus
  80. [actual] x is lamkpus and bukbpus
  81. [actual] x is lamkpus
  82. [actual] x is bukbpus
  83. [actual] lamkpus is tihqpus
  84. [actual] x is tihqpus
  85. [planning] x is babgpus
  86. [actual] palrpus is babgpus
  87. [actual] palrpus is babgpus
  88. [planning] x is palrpus
  89. [planning] x is a category that is babgpus
  90. [actual] loxfpus is palrpus and boqnpus
  91. [planning] loxfpus is palrpus
  92. [planning] loxfpus is boqnpus
  93. [actual] loxfpus is palrpus and boqnpus
  94. [planning] loxfpus is palrpus
  95. [planning] loxfpus is boqnpus
  96. [planning] loxfpus is palrpus
  97. [actual] palrpus is bokvpus
  98. [actual] x is lamkpus
  99. [planning] x is babgpus
  100. [actual] babgpus is a category
  101. [actual] palrpus is babgpus
  102. [actual] palrpus is a subcategory of babgpus
  103. [planning] x is palrpus
  104. [planning] x is indirectly through other categories
  105. [actual] x is lamkpus
  106. [actual] lamkpus is tihqpus and nagkpus
  107. [actual] lamkpus is a subcategory of tihqpus and of nagkpus
  108. [actual] tihqpus is xiqppus and vohwpus
  109. [actual] tihqpus is subcategory of xiqppus and vohwpus
  110. [actual] loxfpus is palrpus
  111. [actual] loxfpus is a subcategory of palrpus
  112. [planning] loxfpus is palrpus
  113. [actual] jubxpus is loxfpus
  114. [actual] jubxpus is subcategory of loxfpus
  115. [planning] jubxpus is subcategory of loxfpus
  116. [actual] laydpus is jubxpus
  117. [actual] laydpus is subcategory of jubxpus
  118. [actual] xudmpus is laydpus
  119. [actual] xudmpus is subcategory of laydpus
  120. [actual] gavbpus is xudmpus and vasqpus
  121. [actual] gavbpus is subcategory of xudmpus
  122. [actual] zoqspus is gavbpus
  123. [actual] zoqspus is subcategory of gavbpus
  124. [actual] zogypus is zoqspus
  125. [actual] zogypus is subcategory of zoqspus
  126. [actual] rizvpus is zogypus
  127. [actual] rizvpus is subcategory of zogypus
  128. [actual] yaxwpus is rizvpus
  129. [actual] yaxwpus is subcategory of rizvpus
  130. [actual] gelhpus is yaxwpus
  131. [actual] gelhpus is subcategory of yaxwpus
  132. [actual] tuyjpus is gelhpus
  133. [actual] tuyjpus is subcategory of gelhpus
  134. [actual] cohypus is tuyjpus and wunbpus
  135. [actual] cohypus is subcategory of tuyjpus
  136. [actual] kiqqpus is cohypus and pectpus
  137. [actual] kiqqpus is subcategory of cohypus
  138. [actual] kiqqpus is cohypus
  139. [actual] yuvfpus is kiqqpus
  140. [actual] yuvfpus is subcategory of kiqqpus
  141. [actual] sotxpus is yuvfpus and zirdpus
  142. [planning] sotxpus is subcategory of yuvfpus
  143. [planning] sotxpus is yuvfpus
  144. [actual] xiqppus is sotxpus and cackpus
  145. [actual] xiqppus is subcategory of sotxpus
  146. [planning] xiqppus is subcategory of sotxpus
  147. [actual] tihqpus is xiqppus and vohwpus
  148. [actual] tihqpus is subcategory of xiqppus
  149. [planning] tihqpus is subcategory of xiqppus
  150. [actual] lamkpus is tihqpus and nagkpus
  151. [actual] lamkpus is subcategory of tihqpus
  152. [actual] lamkpus is tihqpus
  153. [actual] tihqpus is xiqppus
  154. [actual] xiqppus is loxfpus
  155. [actual] loxfpus is palrpus
  156. [actual] palrpus is babgpus
  157. [actual] lamkpus is babgpus
  158. [actual] x is an instance of lamkpus
  159. [actual] x is an instance of babgpus
  160. [actual] x is babgpus
  161. [actual] palrpus is babgpus
  162. [actual] x is babgpus

=== 开始标准化和解析节点 ===
清洗后statements数: 162
标准化后节点数: 129
过滤掉的无效实体数: 33
标准化后的节点:
  1. [planning] x → babgpus (原始: x is babgpus)
  2. [actual] palrpus → babgpus (原始: palrpus is babgpus)
  3. [actual] x → lamkpus and bukbpus (原始: x is lamkpus and bukbpus)
  4. [planning] x → babgpus (原始: x is babgpus)
  5. [actual] palrpus → bokvpus (原始: palrpus is bokvpus)
  6. [actual] xiqppus → sotxpus and cackpus (原始: xiqppus is sotxpus and cackpus)
  7. [actual] tihqpus → xiqppus and vohwpus (原始: tihqpus is xiqppus and vohwpus)
  8. [actual] jubxpus → loxfpus and goqnpus (原始: jubxpus is loxfpus and goqnpus)
  9. [actual] laydpus → jubxpus (原始: laydpus is jubxpus)
  10. [actual] lamkpus → tihqpus and nagkpus (原始: lamkpus is tihqpus and nagkpus)
  11. [actual] rizvpus → zogypus (原始: rizvpus is zogypus)
  12. [actual] cohypus → tuyjpus and wunbpus (原始: cohypus is tuyjpus and wunbpus)
  13. [actual] sotxpus → yuvfpus and zirdpus (原始: sotxpus is yuvfpus and zirdpus)
  14. [actual] yuvfpus → kiqqpus (原始: yuvfpus is kiqqpus)
  15. [actual] yaxwpus → jibtpus and pugfpus (原始: yaxwpus is jibtpus and pugfpus)
  16. [actual] palrpus → mesppus (原始: palrpus is mesppus)
  17. [actual] zogypus → zoqspus (原始: zogypus is zoqspus)
  18. [actual] x → lamkpus and bukbpus (原始: x is lamkpus and bukbpus)
  19. [actual] gelhpus → yaxwpus (原始: gelhpus is yaxwpus)
  20. [actual] kiqqpus → cohypus and pectpus (原始: kiqqpus is cohypus and pectpus)
  21. [actual] gavbpus → xudmpus and vasqpus (原始: gavbpus is xudmpus and vasqpus)
  22. [actual] zoqspus → gavbpus (原始: zoqspus is gavbpus)
  23. [actual] palrpus → babgpus (原始: palrpus is babgpus)
  24. [actual] xudmpus → laydpus (原始: xudmpus is laydpus)
  25. [actual] loxfpus → palrpus and boqnpus (原始: loxfpus is palrpus and boqnpus)
  26. [actual] tuyjpus → gelhpus (原始: tuyjpus is gelhpus)
  27. [actual] yaxwpus → rizvpus (原始: yaxwpus is rizvpus)
  28. [actual] gelhpus → yaxwpus (原始: gelhpus is yaxwpus)
  29. [actual] tuyjpus → gelhpus (原始: tuyjpus is gelhpus)
  30. [actual] tuyjpus → gelhpus and yaxwpus (原始: tuyjpus is gelhpus and yaxwpus)
  31. [actual] yaxwpus → rizvpus (原始: yaxwpus is rizvpus)
  32. [planning] tuyjpus → rizvpus (原始: tuyjpus is rizvpus)
  33. [planning] x → babgpus (原始: x is babgpus)
  34. [actual] x → lamkpus and bukbpus (原始: x is lamkpus and bukbpus)
  35. [planning] babgpus → palrpus (原始: babgpus is palrpus)
  36. [actual] lamkpus → tihqpus and nagkpus (原始: lamkpus is tihqpus and nagkpus)
  37. [actual] lamkpus → tihqpus (原始: lamkpus is tihqpus)
  38. [actual] tihqpus → xiqppus and vohwpus (原始: tihqpus is xiqppus and vohwpus)
  39. [actual] xiqppus → sotxpus and cackpus (原始: xiqppus is sotxpus and cackpus)
  40. [actual] sotxpus → yuvfpus and zirdpus (原始: sotxpus is yuvfpus and zirdpus)
  41. [actual] yuvfpus → kiqqpus (原始: yuvfpus is kiqqpus)
  42. [actual] kiqqpus → cohypus and pectpus (原始: kiqqpus is cohypus and pectpus)
  43. [actual] cohypus → tuyjpus and wunbpus (原始: cohypus is tuyjpus and wunbpus)
  44. [actual] tuyjpus → gelhpus (原始: tuyjpus is gelhpus)
  45. [actual] gelhpus → yaxwpus (原始: gelhpus is yaxwpus)
  46. [actual] yaxwpus → jibtpus and pugfpus (原始: yaxwpus is jibtpus and pugfpus)
  47. [actual] yaxwpus → rizvpus (原始: yaxwpus is rizvpus)
  48. [actual] rizvpus → zogypus (原始: rizvpus is zogypus)
  49. [actual] zogypus → zoqspus (原始: zogypus is zoqspus)
  50. [actual] zoqspus → gavbpus (原始: zoqspus is gavbpus)
  51. [actual] gavbpus → xudmpus and vasqpus (原始: gavbpus is xudmpus and vasqpus)
  52. [actual] xudmpus → laydpus (原始: xudmpus is laydpus)
  53. [actual] laydpus → jubxpus (原始: laydpus is jubxpus)
  54. [actual] jubxpus → loxfpus and goqnpus (原始: jubxpus is loxfpus and goqnpus)
  55. [actual] loxfpus → palrpus and boqnpus (原始: loxfpus is palrpus and boqnpus)
  56. [actual] palrpus → babgpus (原始: palrpus is babgpus)
  57. [actual] palrpus → babgpus (原始: palrpus is babgpus)
  58. [actual] x → lamkpus (原始: x is lamkpus)
  59. [planning] x → babgpus (原始: x is babgpus)
  60. [planning] x → babgpus (原始: x is babgpus)
  61. [planning] x → babgpus (原始: x is babgpus)
  62. [actual] tihqpus → lamkpus (原始: tihqpus is lamkpus)
  63. [actual] xiqppus → tihqpus (原始: xiqppus is tihqpus)
  64. [actual] loxfpus → xiqppus (原始: loxfpus is xiqppus)
  65. [actual] palrpus → loxfpus (原始: palrpus is loxfpus)
  66. [actual] palrpus → babgpus (原始: palrpus is babgpus)
  67. [planning] lamkpus → babgpus (原始: lamkpus is babgpus)
  68. [planning] lamkpus → tihqpus (原始: lamkpus is tihqpus)
  69. [planning] lamkpus → nagkpus (原始: lamkpus is nagkpus)
  70. [planning] lamkpus → tihqpus and nagkpus (原始: lamkpus is tihqpus and nagkpus)
  71. [planning] lamkpus → tihqpus and nagkpus (原始: lamkpus is tihqpus and nagkpus)
  72. [actual] lamkpus → tihqpus and nagkpus (原始: lamkpus is tihqpus and nagkpus)
  73. [actual] lamkpus → tihqpus (原始: lamkpus is tihqpus)
  74. [actual] lamkpus → nagkpus (原始: lamkpus is nagkpus)
  75. [actual] x → lamkpus and bukbpus (原始: x is lamkpus and bukbpus)
  76. [actual] x → lamkpus and bukbpus (原始: x is lamkpus and bukbpus)
  77. [actual] x → lamkpus (原始: x is lamkpus)
  78. [actual] x → bukbpus (原始: x is bukbpus)
  79. [actual] lamkpus → tihqpus (原始: lamkpus is tihqpus)
  80. [actual] x → tihqpus (原始: x is tihqpus)
  81. [planning] x → babgpus (原始: x is babgpus)
  82. [actual] palrpus → babgpus (原始: palrpus is babgpus)
  83. [actual] palrpus → babgpus (原始: palrpus is babgpus)
  84. [planning] x → palrpus (原始: x is palrpus)
  85. [actual] loxfpus → palrpus and boqnpus (原始: loxfpus is palrpus and boqnpus)
  86. [planning] loxfpus → palrpus (原始: loxfpus is palrpus)
  87. [planning] loxfpus → boqnpus (原始: loxfpus is boqnpus)
  88. [actual] loxfpus → palrpus and boqnpus (原始: loxfpus is palrpus and boqnpus)
  89. [planning] loxfpus → palrpus (原始: loxfpus is palrpus)
  90. [planning] loxfpus → boqnpus (原始: loxfpus is boqnpus)
  91. [planning] loxfpus → palrpus (原始: loxfpus is palrpus)
  92. [actual] palrpus → bokvpus (原始: palrpus is bokvpus)
  93. [actual] x → lamkpus (原始: x is lamkpus)
  94. [planning] x → babgpus (原始: x is babgpus)
  95. [actual] palrpus → babgpus (原始: palrpus is babgpus)
  96. [planning] x → palrpus (原始: x is palrpus)
  97. [actual] x → lamkpus (原始: x is lamkpus)
  98. [actual] lamkpus → tihqpus and nagkpus (原始: lamkpus is tihqpus and nagkpus)
  99. [actual] tihqpus → xiqppus and vohwpus (原始: tihqpus is xiqppus and vohwpus)
  100. [actual] loxfpus → palrpus (原始: loxfpus is palrpus)
  101. [planning] loxfpus → palrpus (原始: loxfpus is palrpus)
  102. [actual] jubxpus → loxfpus (原始: jubxpus is loxfpus)
  103. [actual] laydpus → jubxpus (原始: laydpus is jubxpus)
  104. [actual] xudmpus → laydpus (原始: xudmpus is laydpus)
  105. [actual] gavbpus → xudmpus and vasqpus (原始: gavbpus is xudmpus and vasqpus)
  106. [actual] zoqspus → gavbpus (原始: zoqspus is gavbpus)
  107. [actual] zogypus → zoqspus (原始: zogypus is zoqspus)
  108. [actual] rizvpus → zogypus (原始: rizvpus is zogypus)
  109. [actual] yaxwpus → rizvpus (原始: yaxwpus is rizvpus)
  110. [actual] gelhpus → yaxwpus (原始: gelhpus is yaxwpus)
  111. [actual] tuyjpus → gelhpus (原始: tuyjpus is gelhpus)
  112. [actual] cohypus → tuyjpus and wunbpus (原始: cohypus is tuyjpus and wunbpus)
  113. [actual] kiqqpus → cohypus and pectpus (原始: kiqqpus is cohypus and pectpus)
  114. [actual] kiqqpus → cohypus (原始: kiqqpus is cohypus)
  115. [actual] yuvfpus → kiqqpus (原始: yuvfpus is kiqqpus)
  116. [actual] sotxpus → yuvfpus and zirdpus (原始: sotxpus is yuvfpus and zirdpus)
  117. [planning] sotxpus → yuvfpus (原始: sotxpus is yuvfpus)
  118. [actual] xiqppus → sotxpus and cackpus (原始: xiqppus is sotxpus and cackpus)
  119. [actual] tihqpus → xiqppus and vohwpus (原始: tihqpus is xiqppus and vohwpus)
  120. [actual] lamkpus → tihqpus and nagkpus (原始: lamkpus is tihqpus and nagkpus)
  121. [actual] lamkpus → tihqpus (原始: lamkpus is tihqpus)
  122. [actual] tihqpus → xiqppus (原始: tihqpus is xiqppus)
  123. [actual] xiqppus → loxfpus (原始: xiqppus is loxfpus)
  124. [actual] loxfpus → palrpus (原始: loxfpus is palrpus)
  125. [actual] palrpus → babgpus (原始: palrpus is babgpus)
  126. [actual] lamkpus → babgpus (原始: lamkpus is babgpus)
  127. [actual] x → babgpus (原始: x is babgpus)
  128. [actual] palrpus → babgpus (原始: palrpus is babgpus)
  129. [actual] x → babgpus (原始: x is babgpus)

开始新的后处理...
[后处理] 从LoG数据文件中获取到图数据，节点数: 35
[后处理] 加载LoG图，包含 35 个节点
  LoG节点 0: x is babgpus (规则: MP, 深度: 1)
  LoG节点 1: x is zogypus (规则: MP, 深度: 2)
  LoG节点 2: zogypus is babgpus (规则: CE, 深度: 2)
  LoG节点 3: x is cohypus (规则: MP, 深度: 3)
  LoG节点 4: cohypus is zogypus (规则: CE, 深度: 3)
  LoG节点 5: zogypus is babgpus and mesppus (规则: MP, 深度: 3)
  LoG节点 6: x is sotxpus (规则: MP, 深度: 4)
  LoG节点 7: sotxpus is cohypus (规则: CE, 深度: 4)
  LoG节点 8: cohypus is zogypus and jibtpus (规则: MP, 深度: 4)
  LoG节点 9: zogypus is loxfpus (规则: MP, 深度: 4)
  LoG节点 10: loxfpus is babgpus and mesppus (规则: CE, 深度: 4)
  LoG节点 11: x is tihqpus (规则: MP, 深度: 5)
  LoG节点 12: tihqpus is sotxpus (规则: MP, 深度: 5)
  LoG节点 13: sotxpus is cohypus and pectpus (规则: MP, 深度: 5)
  LoG节点 14: cohypus is yaxwpus (规则: MP, 深度: 5)
  LoG节点 15: yaxwpus is zogypus and jibtpus (规则: CI, 深度: 5)
  LoG节点 16: zogypus is xudmpus (规则: MP, 深度: 5)
  LoG节点 17: xudmpus is loxfpus (规则: MP, 深度: 5)
  LoG节点 18: loxfpus is babgpus and mesppus and bokvpus (规则: MP, 深度: 5)
  LoG节点 19: x is lamkpus (规则: CE, 深度: 6)
  LoG节点 20: lamkpus is tihqpus (规则: CE, 深度: 6)
  LoG节点 21: tihqpus is xiqppus (规则: CE, 深度: 6)
  LoG节点 22: xiqppus is sotxpus (规则: CE, 深度: 6)
  LoG节点 23: sotxpus is yuvfpus (规则: CE, 深度: 6)
  LoG节点 24: yuvfpus is cohypus and pectpus (规则: MP, 深度: 6)
  LoG节点 25: cohypus is tuyjpus (规则: CE, 深度: 6)
  LoG节点 26: tuyjpus is yaxwpus (规则: MP, 深度: 6)
  LoG节点 27: yaxwpus is zogypus (规则: MP, 深度: 6)
  LoG节点 28: yaxwpus is jibtpus (规则: CE, 深度: 6)
  LoG节点 29: zogypus is gavbpus (规则: MP, 深度: 6)
  LoG节点 30: gavbpus is xudmpus (规则: CE, 深度: 6)
  LoG节点 31: xudmpus is jubxpus (规则: MP, 深度: 6)
  LoG节点 32: jubxpus is loxfpus (规则: CE, 深度: 6)
  LoG节点 33: loxfpus is palrpus (规则: CE, 深度: 6)
  LoG节点 34: palrpus is babgpus and mesppus and bokvpus (规则: CI, 深度: 6)

============================================================
[后处理] 开始处理节点
============================================================
📊 初始状态:
   - 标准化节点数: 129
   - 初始条件数: 23
   - LoG图节点数: 35

📋 初始条件列表:
    1. palrpus is bokvpus
    2. xiqppus is sotxpus and cackpus
    3. tihqpus is xiqppus and vohwpus
    4. jubxpus is loxfpus and goqnpus
    5. laydpus is jubxpus
    6. lamkpus is tihqpus and nagkpus
    7. rizvpus is zogypus
    8. cohypus is tuyjpus and wunbpus
    9. sotxpus is yuvfpus and zirdpus
   10. yuvfpus is kiqqpus
   11. yaxwpus is jibtpus and pugfpus
   12. palrpus is mesppus
   13. zogypus is zoqspus
   14. x is lamkpus and bukbpus
   15. gelhpus is yaxwpus
   16. kiqqpus is cohypus and pectpus
   17. gavbpus is xudmpus and vasqpus
   18. zoqspus is gavbpus
   19. palrpus is babgpus
   20. xudmpus is laydpus
   21. loxfpus is palrpus and boqnpus
   22. tuyjpus is gelhpus
   23. yaxwpus is rizvpus

🔧 构建初始Statement列表...
✅ 初始Statement列表构建完成，包含 23 个前提节点

🔍 开始处理actual节点...

   节点 1: palrpus is babgpus
      ↻ 重复节点，计数: 2

   节点 2: x is lamkpus and bukbpus
      ↻ 重复节点，计数: 2

   节点 3: palrpus is bokvpus
      ↻ 重复节点，计数: 2

   节点 4: xiqppus is sotxpus and cackpus
      ↻ 重复节点，计数: 2

   节点 5: tihqpus is xiqppus and vohwpus
      ↻ 重复节点，计数: 2

   节点 6: jubxpus is loxfpus and goqnpus
      ↻ 重复节点，计数: 2

   节点 7: laydpus is jubxpus
      ↻ 重复节点，计数: 2

   节点 8: lamkpus is tihqpus and nagkpus
      ↻ 重复节点，计数: 2

   节点 9: rizvpus is zogypus
      ↻ 重复节点，计数: 2

   节点 10: cohypus is tuyjpus and wunbpus
      ↻ 重复节点，计数: 2

   节点 11: sotxpus is yuvfpus and zirdpus
      ↻ 重复节点，计数: 2

   节点 12: yuvfpus is kiqqpus
      ↻ 重复节点，计数: 2

   节点 13: yaxwpus is jibtpus and pugfpus
      ↻ 重复节点，计数: 2

   节点 14: palrpus is mesppus
      ↻ 重复节点，计数: 2

   节点 15: zogypus is zoqspus
      ↻ 重复节点，计数: 2

   节点 16: x is lamkpus and bukbpus
      ↻ 重复节点，计数: 3

   节点 17: gelhpus is yaxwpus
      ↻ 重复节点，计数: 2

   节点 18: kiqqpus is cohypus and pectpus
      ↻ 重复节点，计数: 2

   节点 19: gavbpus is xudmpus and vasqpus
      ↻ 重复节点，计数: 2

   节点 20: zoqspus is gavbpus
      ↻ 重复节点，计数: 2

   节点 21: palrpus is babgpus
      ↻ 重复节点，计数: 3

   节点 22: xudmpus is laydpus
      ↻ 重复节点，计数: 2

   节点 23: loxfpus is palrpus and boqnpus
      ↻ 重复节点，计数: 2

   节点 24: tuyjpus is gelhpus
      ↻ 重复节点，计数: 2

   节点 25: yaxwpus is rizvpus
      ↻ 重复节点，计数: 2

   节点 26: gelhpus is yaxwpus
      ↻ 重复节点，计数: 3

   节点 27: tuyjpus is gelhpus
      ↻ 重复节点，计数: 3

   节点 28: tuyjpus is gelhpus and yaxwpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CI
      📋 推理路径: CI规则: tuyjpus is gelhpus → tuyjpus is yaxwpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: tuyjpus is gelhpus
  - 前提: gelhpus is yaxwpus
  ✓ 点亮LoG节点: tuyjpus is yaxwpus
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 29: yaxwpus is rizvpus
      ↻ 重复节点，计数: 3

   节点 30: x is lamkpus and bukbpus
      ↻ 重复节点，计数: 4

   节点 31: lamkpus is tihqpus and nagkpus
      ↻ 重复节点，计数: 3

   节点 32: lamkpus is tihqpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: lamkpus is tihqpus
      ✅ 验证成功 + LoG匹配

   节点 33: tihqpus is xiqppus and vohwpus
      ↻ 重复节点，计数: 3

   节点 34: xiqppus is sotxpus and cackpus
      ↻ 重复节点，计数: 3

   节点 35: sotxpus is yuvfpus and zirdpus
      ↻ 重复节点，计数: 3

   节点 36: yuvfpus is kiqqpus
      ↻ 重复节点，计数: 3

   节点 37: kiqqpus is cohypus and pectpus
      ↻ 重复节点，计数: 3

   节点 38: cohypus is tuyjpus and wunbpus
      ↻ 重复节点，计数: 3

   节点 39: tuyjpus is gelhpus
      ↻ 重复节点，计数: 4

   节点 40: gelhpus is yaxwpus
      ↻ 重复节点，计数: 4

   节点 41: yaxwpus is jibtpus and pugfpus
      ↻ 重复节点，计数: 3

   节点 42: yaxwpus is rizvpus
      ↻ 重复节点，计数: 4

   节点 43: rizvpus is zogypus
      ↻ 重复节点，计数: 3

   节点 44: zogypus is zoqspus
      ↻ 重复节点，计数: 3

   节点 45: zoqspus is gavbpus
      ↻ 重复节点，计数: 3

   节点 46: gavbpus is xudmpus and vasqpus
      ↻ 重复节点，计数: 3

   节点 47: xudmpus is laydpus
      ↻ 重复节点，计数: 3

   节点 48: laydpus is jubxpus
      ↻ 重复节点，计数: 3

   节点 49: jubxpus is loxfpus and goqnpus
      ↻ 重复节点，计数: 3

   节点 50: loxfpus is palrpus and boqnpus
      ↻ 重复节点，计数: 3

   节点 51: palrpus is babgpus
      ↻ 重复节点，计数: 4

   节点 52: palrpus is babgpus
      ↻ 重复节点，计数: 5

   节点 53: x is lamkpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is lamkpus
      ✅ 验证成功 + LoG匹配

   节点 54: tihqpus is lamkpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 55: xiqppus is tihqpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 56: loxfpus is xiqppus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 57: palrpus is loxfpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 58: palrpus is babgpus
      ↻ 重复节点，计数: 6

   节点 59: lamkpus is tihqpus and nagkpus
      ↻ 重复节点，计数: 4

   节点 60: lamkpus is tihqpus
      ↻ 重复节点，计数: 2

   节点 61: lamkpus is nagkpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: lamkpus is tihqpus and nagkpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: lamkpus is tihqpus and nagkpus

   节点 62: x is lamkpus and bukbpus
      ↻ 重复节点，计数: 5

   节点 63: x is lamkpus and bukbpus
      ↻ 重复节点，计数: 6

   节点 64: x is lamkpus
      ↻ 重复节点，计数: 2

   节点 65: x is bukbpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: x is lamkpus and bukbpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: x is lamkpus and bukbpus

   节点 66: lamkpus is tihqpus
      ↻ 重复节点，计数: 3

   节点 67: x is tihqpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is tihqpus
      ✅ 验证成功 + LoG匹配

   节点 68: palrpus is babgpus
      ↻ 重复节点，计数: 7

   节点 69: palrpus is babgpus
      ↻ 重复节点，计数: 8

   节点 70: loxfpus is palrpus and boqnpus
      ↻ 重复节点，计数: 4

   节点 71: loxfpus is palrpus and boqnpus
      ↻ 重复节点，计数: 5

   节点 72: palrpus is bokvpus
      ↻ 重复节点，计数: 3

   节点 73: x is lamkpus
      ↻ 重复节点，计数: 3

   节点 74: palrpus is babgpus
      ↻ 重复节点，计数: 9

   节点 75: x is lamkpus
      ↻ 重复节点，计数: 4

   节点 76: lamkpus is tihqpus and nagkpus
      ↻ 重复节点，计数: 5

   节点 77: tihqpus is xiqppus and vohwpus
      ↻ 重复节点，计数: 4

   节点 78: loxfpus is palrpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: loxfpus is palrpus
      ✅ 验证成功 + LoG匹配

   节点 79: jubxpus is loxfpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: jubxpus is loxfpus
      ✅ 验证成功 + LoG匹配

   节点 80: laydpus is jubxpus
      ↻ 重复节点，计数: 4

   节点 81: xudmpus is laydpus
      ↻ 重复节点，计数: 4

   节点 82: gavbpus is xudmpus and vasqpus
      ↻ 重复节点，计数: 4

   节点 83: zoqspus is gavbpus
      ↻ 重复节点，计数: 4

   节点 84: zogypus is zoqspus
      ↻ 重复节点，计数: 4

   节点 85: rizvpus is zogypus
      ↻ 重复节点，计数: 4

   节点 86: yaxwpus is rizvpus
      ↻ 重复节点，计数: 5

   节点 87: gelhpus is yaxwpus
      ↻ 重复节点，计数: 5

   节点 88: tuyjpus is gelhpus
      ↻ 重复节点，计数: 5

   节点 89: cohypus is tuyjpus and wunbpus
      ↻ 重复节点，计数: 4

   节点 90: kiqqpus is cohypus and pectpus
      ↻ 重复节点，计数: 4

   节点 91: kiqqpus is cohypus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: kiqqpus is cohypus and pectpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: kiqqpus is cohypus and pectpus

   节点 92: yuvfpus is kiqqpus
      ↻ 重复节点，计数: 4

   节点 93: sotxpus is yuvfpus and zirdpus
      ↻ 重复节点，计数: 4

   节点 94: xiqppus is sotxpus and cackpus
      ↻ 重复节点，计数: 4

   节点 95: tihqpus is xiqppus and vohwpus
      ↻ 重复节点，计数: 5

   节点 96: lamkpus is tihqpus and nagkpus
      ↻ 重复节点，计数: 6

   节点 97: lamkpus is tihqpus
      ↻ 重复节点，计数: 4

   节点 98: tihqpus is xiqppus
      🔍 验证新节点...
[后处理] 点亮LoG节点: tihqpus is xiqppus
      ✅ 验证成功 + LoG匹配

   节点 99: xiqppus is loxfpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP+CE
      📋 推理路径: MP+CE规则: xiqppus is sotxpus → sotxpus is loxfpus
[后处理] 基于推理轨迹点亮节点，使用了 15 个前提条件:
  - 前提: xiqppus is sotxpus and cackpus
  - 前提: sotxpus is yuvfpus and zirdpus
  - 前提: yuvfpus is kiqqpus
  - 前提: kiqqpus is cohypus
  - 前提: cohypus is tuyjpus and wunbpus
  - 前提: tuyjpus is gelhpus
  - 前提: gelhpus is yaxwpus
  - 前提: yaxwpus is rizvpus
  - 前提: rizvpus is zogypus
  - 前提: zogypus is zoqspus
  - 前提: zoqspus is gavbpus
  - 前提: gavbpus is xudmpus and vasqpus
  - 前提: xudmpus is laydpus
  - 前提: laydpus is jubxpus
  - 前提: jubxpus is loxfpus
  ✓ 点亮LoG节点: cohypus is zogypus
[子树点亮]     └─ 点亮依赖节点: cohypus is zogypus and jibtpus (深度4)
[子树点亮]     └─ 点亮依赖节点: cohypus is yaxwpus (深度5)
[子树点亮]     └─ 点亮依赖节点: yaxwpus is zogypus and jibtpus (深度5)
[子树点亮]     └─ 点亮依赖节点: cohypus is tuyjpus (深度6)
[子树点亮]     └─ 点亮依赖节点: yaxwpus is zogypus (深度6)
[子树点亮]     └─ 点亮依赖节点: yaxwpus is jibtpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 6 个节点
  ✓ 点亮LoG节点: sotxpus is cohypus
[子树点亮]     └─ 点亮依赖节点: sotxpus is cohypus and pectpus (深度5)
[子树点亮]     └─ 点亮依赖节点: sotxpus is yuvfpus (深度6)
[子树点亮]     └─ 点亮依赖节点: yuvfpus is cohypus and pectpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 3 个节点
  ✓ 点亮LoG节点: zogypus is loxfpus
[子树点亮]     └─ 点亮依赖节点: zogypus is xudmpus (深度5)
[子树点亮]     └─ 点亮依赖节点: xudmpus is loxfpus (深度5)
[子树点亮]     └─ 点亮依赖节点: zogypus is gavbpus (深度6)
[子树点亮]     └─ 点亮依赖节点: gavbpus is xudmpus (深度6)
[子树点亮]     └─ 点亮依赖节点: xudmpus is jubxpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 5 个节点
  ✓ 点亮LoG节点: xiqppus is sotxpus
[后处理] 通过推理轨迹额外点亮了 4 个LoG节点

   节点 100: loxfpus is palrpus
      ↻ 重复节点，计数: 2

   节点 101: palrpus is babgpus
      ↻ 重复节点，计数: 10

   节点 102: lamkpus is babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: lamkpus is tihqpus → tihqpus is babgpus
[后处理] 基于推理轨迹点亮节点，使用了 5 个前提条件:
  - 前提: lamkpus is tihqpus
  - 前提: tihqpus is xiqppus
  - 前提: xiqppus is loxfpus
  - 前提: loxfpus is palrpus
  - 前提: palrpus is babgpus

   节点 103: x is babgpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is babgpus
[子树点亮]     └─ 点亮依赖节点: x is zogypus (深度2)
[子树点亮]     └─ 点亮依赖节点: zogypus is babgpus (深度2)
[子树点亮]     └─ 点亮依赖节点: x is cohypus (深度3)
[子树点亮]     └─ 点亮依赖节点: zogypus is babgpus and mesppus (深度3)
[子树点亮]     └─ 点亮依赖节点: x is sotxpus (深度4)
[子树点亮]     └─ 点亮依赖节点: loxfpus is babgpus and mesppus (深度4)
[子树点亮]     └─ 点亮依赖节点: tihqpus is sotxpus (深度5)
[子树点亮]     └─ 点亮依赖节点: loxfpus is babgpus and mesppus and bokvpus (深度5)
[子树点亮]     └─ 点亮依赖节点: palrpus is babgpus and mesppus and bokvpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 9 个节点
      ✅ 验证成功 + LoG匹配

   节点 104: palrpus is babgpus
      ↻ 重复节点，计数: 11

   节点 105: x is babgpus
      ↻ 重复节点，计数: 2

🔍 分析推理路径完整性...

============================================================
[后处理] 处理完成
============================================================
📈 处理统计:
   - 处理的actual节点: 105
   - 新增节点: 17
   - 更新已存在节点: 88
   - 点亮的LoG节点: 35

🎯 推理质量统计:
   - 完美推理: 10 (节点正确 + 路径正确)
   - 部分推理: 7 (节点正确 + 路径部分错误)
   - 无效推理: 0 (节点错误或路径完全错误)
[LoG分析] LoG图: 35节点, 23前提, 复杂度1-23

📊 === Statement列表分析 ===
📈 节点统计:
   - 总节点数: 40
   - 前提节点: 23
   - 推理节点: 13
   - 幻觉节点: 4
   - 点亮LoG节点: 35

❌ 幻觉节点详情:
   - tihqpus is lamkpus (出现1次)
   - xiqppus is tihqpus (出现1次)
   - loxfpus is xiqppus (出现1次)
   - palrpus is loxfpus (出现1次)

✅ 推理节点详情:
   🟢 tuyjpus is gelhpus and yaxwpus (出现1次, 质量:perfect)
   🟡 lamkpus is tihqpus (出现4次, 质量:partial)
      ⚠️  无效依赖: ['xiqppus is tihqpus']
   🟡 x is lamkpus (出现4次, 质量:partial)
      ⚠️  无效依赖: ['tihqpus is lamkpus']
   🟢 lamkpus is nagkpus (出现1次, 质量:perfect)
   🟢 x is bukbpus (出现1次, 质量:perfect)
   🟡 x is tihqpus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['xiqppus is tihqpus']
   🟡 loxfpus is palrpus (出现2次, 质量:partial)
      ⚠️  无效依赖: ['loxfpus is xiqppus']
   🟡 jubxpus is loxfpus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['palrpus is loxfpus']
   🟢 kiqqpus is cohypus (出现1次, 质量:perfect)
   🟡 tihqpus is xiqppus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['tihqpus is lamkpus', 'loxfpus is xiqppus']
   🟡 xiqppus is loxfpus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['xiqppus is tihqpus', 'palrpus is loxfpus']
   🟢 lamkpus is babgpus (出现1次, 质量:perfect)
   🟢 x is babgpus (出现2次, 质量:perfect)

🔥 点亮的LoG节点:
   - sotxpus is yuvfpus
   - loxfpus is palrpus
   - yaxwpus is zogypus
   - yaxwpus is zogypus and jibtpus
   - lamkpus is tihqpus
   - x is lamkpus
   - cohypus is zogypus and jibtpus
   - cohypus is yaxwpus
   - x is sotxpus
   - x is babgpus
   - loxfpus is babgpus and mesppus and bokvpus
   - zogypus is loxfpus
   - palrpus is babgpus and mesppus and bokvpus
   - x is tihqpus
   - xudmpus is loxfpus
   - jubxpus is loxfpus
   - cohypus is tuyjpus
   - loxfpus is babgpus and mesppus
   - tihqpus is xiqppus
   - cohypus is zogypus
   - xudmpus is jubxpus
   - zogypus is babgpus
   - zogypus is xudmpus
   - tihqpus is sotxpus
   - x is cohypus
   - zogypus is gavbpus
   - yaxwpus is jibtpus
   - sotxpus is cohypus and pectpus
   - sotxpus is cohypus
   - yuvfpus is cohypus and pectpus
   - xiqppus is sotxpus
   - zogypus is babgpus and mesppus
   - gavbpus is xudmpus
   - tuyjpus is yaxwpus
   - x is zogypus

============================================================
📊 计算评估指标
============================================================

🎯 计算Coverage指标...
   深度Coverage: 6/6 = 100.00%
   最深点亮节点: x is babgpus (第6层)
   节点Coverage: 35/35 = 100.00%
   前提条件Coverage: 23/23 = 100.00%
   各推理层点亮比例:
     第1层: 16/16 = 100.00%
     第2层: 8/8 = 100.00%
     第3层: 5/5 = 100.00%
     第4层: 3/3 = 100.00%
     第5层: 2/2 = 100.00%
     第6层: 1/1 = 100.00%

🎯 计算Precision指标...
   Error Rate: 4/17 = 23.53%
   可推导节点: 13/17
   Strict Error Rate: 11/17 = 64.71%
   严格有效节点: 6/17

   详细分析:
     完美推理: 10 (58.82%)
     部分推理: 7 (41.18%)
     无效推理: 0 (0.00%)

================================================================================
处理记录 10/50
================================================================================
记录索引: 9
问题状态: correct
📁 从缓存加载提取结果: evaluation_results.LoG_6.deepseek-reasoner_record_9.json
✅ 使用缓存结果:
   - 句子数: 171
   - 提取的语句数: 221
   - 初始条件数: 35

=== Statement提取完成 ===
总句子数: 171
成功提取: 171
失败提取: 0
总statements数: 221

=== 开始清洗Statement格式 ===
原始statements数: 221
清洗后statements数: 203
过滤掉的statements数: 18
清洗后的statements:
  1. [planning] x is babgpus
  2. [planning] x is babrpus
  3. [planning] x is babspus
  4. [planning] x is babgpus and muqcpus and relmpus
  5. [actual] x is yujkpus
  6. [actual] yujkpus is gajnpus and sefxpus
  7. [actual] yujkpus is gajnpus and sefxpus
  8. [actual] gajnpus is hizspus
  9. [actual] gajnpus is hizspus
  10. [actual] hizspus is fikvpus and yaltpus
  11. [actual] hizspus is fikvpus and yaltpus
  12. [actual] fikvpus is ferypus and xewtpus
  13. [actual] fikvpus is ferypus and xewtpus
  14. [actual] ferypus is ceslpus and zihdpus
  15. [actual] ferypus is ceslpus and zihdpus
  16. [actual] nalgpus is pittpus
  17. [actual] nalgpus is babgpus
  18. [actual] nalgpus is babgpus
  19. [planning] x is nalgpus or babgpus
  20. [actual] leztpus is babrpus
  21. [actual] buffpus is babspus and tuvkpus
  22. [actual] buffpus is babspus
  23. [planning] x is buffpus
  24. [planning] x is leztpus
  25. [planning] x is nalgpus
  26. [actual] x is yujkpus
  27. [actual] yujkpus is gajnpus
  28. [actual] gajnpus is hizspus
  29. [actual] hizspus is fikvpus
  30. [actual] fikvpus is ferypus
  31. [actual] ferypus is ceslpus
  32. [actual] yujkpus is ceslpus
  33. [planning] yujkpus is ceslpus
  34. [actual] yujkpus is gajnpus
  35. [actual] gajnpus is hizspus
  36. [actual] yujkpus is hizspus
  37. [actual] hizspus is fikvpus
  38. [actual] yujkpus is fikvpus
  39. [actual] fikvpus is ferypus
  40. [actual] yujkpus is ferypus
  41. [actual] ferypus is ceslpus
  42. [actual] yujkpus is ceslpus
  43. [actual] x is ceslpus
  44. [actual] ceslpus is gahxpus
  45. [actual] ceslpus is serlpus and nehhpus
  46. [planning] ceslpus is wenfpus and vuhlpus
  47. [actual] ceslpus is wenfpus and vuhlpus
  48. [planning] ceslpus is wenfpus and vuhlpus
  49. [actual] ceslpus is wenfpus
  50. [planning] ceslpus is wenfpus
  51. [planning] wenfpus is a category that contains ceslpus
  52. [actual] ceslpus is wenfpus and vuhlpus
  53. [actual] ceslpus is serlpus and nehhpus
  54. [actual] serlpus is a category
  55. [actual] ceslpus is serlpus
  56. [actual] serlpus is qojjpus and kuhrpus
  57. [actual] nalgpus is babgpus
  58. [actual] kuhrpus is nalgpus and pasgpus
  59. [actual] kuhrpus is nalgpus and pasgpus
  60. [actual] serlpus is kuhrpus
  61. [actual] serlpus is kuhrpus
  62. [actual] ceslpus is serlpus
  63. [actual] serlpus is kuhrpus
  64. [actual] kuhrpus is nalgpus
  65. [actual] nalgpus is babgpus
  66. [planning] ceslpus is babgpus
  67. [actual] ceslpus is serlpus
  68. [actual] serlpus is kuhrpus
  69. [actual] kuhrpus is nalgpus and pasgpus
  70. [actual] nalgpus is babgpus
  71. [actual] nalgpus is babgpus
  72. [actual] ceslpus is serlpus
  73. [actual] serlpus is kuhrpus
  74. [actual] kuhrpus is nalgpus
  75. [actual] nalgpus is babgpus
  76. [actual] ceslpus is babgpus
  77. [actual] x is ceslpus
  78. [actual] x is babgpus
  79. [actual] x is babgpus
  80. [planning] x is babrpus and babspus
  81. [actual] leztpus is babrpus
  82. [planning] x is leztpus
  83. [actual] x is ceslpus
  84. [planning] x is ceslpus and gahxpus
  85. [actual] ceslpus is gahxpus
  86. [actual] gahxpus is pezgpus and wedtpus
  87. [actual] pezgpus is doscpus
  88. [actual] doscpus is gafcpus and colqpus
  89. [actual] gafcpus is lotrpus
  90. [actual] lotrpus is nudjpus
  91. [actual] nudjpus is hunzpus
  92. [actual] hunzpus is gacqpus
  93. [actual] gacqpus is buffpus
  94. [actual] buffpus is babspus and tuvkpus
  95. [actual] leztpus is babrpus
  96. [actual] sopbpus is leztpus
  97. [actual] sopbpus is veytpus
  98. [planning] sopbpus is dildpus
  99. [actual] dildpus is sopbpus
  100. [actual] tophpus is dildpus
  101. [actual] wudtpus is tophpus and luwlpus
  102. [actual] wenfpus is pixvpus
  103. [actual] ceslpus is wenfpus and vuhlpus
  104. [actual] ceslpus is wenfpus
  105. [actual] wenfpus is pixvpus
  106. [planning] wenfpus is pixvpus
  107. [actual] pixvpus is wudtpus
  108. [actual] pixvpus is wudtpus
  109. [actual] pixvpus is wudtpus
  110. [actual] wudtpus is tophpus and luwlpus
  111. [actual] wudtpus is tophpus
  112. [actual] tophpus is dildpus
  113. [planning] tophpus is dildpus
  114. [actual] dildpus is sopbpus
  115. [planning] dildpus is sopbpus
  116. [actual] sopbpus is leztpus and veytpus
  117. [actual] sopbpus is leztpus
  118. [actual] leztpus is babrpus
  119. [actual] ceslpus is babrpus
  120. [actual] x is ceslpus
  121. [actual] x is babrpus
  122. [actual] x is babrpus
  123. [planning] x is babspus
  124. [actual] buffpus is babspus and tuvkpus
  125. [planning] x is buffpus
  126. [actual] hunzpus is gacqpus
  127. [actual] gacqpus is buffpus
  128. [actual] lotrpus is nudjpus
  129. [actual] nudjpus is hunzpus
  130. [actual] hunzpus is gacqpus
  131. [actual] gacqpus is buffpus
  132. [actual] ceslpus is gahxpus
  133. [actual] gahxpus is pezgpus and wedtpus
  134. [actual] pezgpus is doscpus
  135. [actual] doscpus is gafcpus and colqpus
  136. [actual] gafcpus is lotrpus
  137. [actual] ceslpus is gahxpus
  138. [planning] gahxpus is pezgpus
  139. [actual] gahxpus is pezgpus and wedtpus
  140. [actual] gahxpus is pezgpus
  141. [actual] pezgpus is doscpus
  142. [actual] pezgpus is doscpus and is doscpus
  143. [actual] doscpus is gafcpus and colqpus
  144. [actual] doscpus is gafcpus
  145. [actual] gafcpus is lotrpus
  146. [planning] gafcpus is lotrpus
  147. [actual] lotrpus is nudjpus
  148. [planning] lotrpus is nudjpus
  149. [actual] nudjpus is hunzpus
  150. [planning] nudjpus is hunzpus
  151. [actual] hunzpus is gacqpus
  152. [actual] hunzpus is gacqpus
  153. [actual] gacqpus is buffpus
  154. [planning] gacqpus is buffpus
  155. [actual] buffpus is babspus
  156. [planning] buffpus is babspus
  157. [actual] ceslpus is babspus
  158. [actual] x is ceslpus
  159. [actual] x is babspus
  160. [actual] x is babgpus and babrpus and babspus
  161. [actual] x is yujkpus
  162. [actual] yujkpus is ceslpus
  163. [actual] yujkpus is gajnpus and sefxpus
  164. [actual] yujkpus is gajnpus
  165. [actual] gajnpus is hizspus
  166. [actual] gajnpus is hizspus
  167. [actual] yujkpus is hizspus
  168. [actual] hizspus is fikvpus and yaltpus
  169. [actual] hizspus is fikvpus
  170. [actual] yujkpus is fikvpus
  171. [actual] fikvpus is ferypus and xewtpus
  172. [actual] fikvpus is ferypus
  173. [actual] yujkpus is ferypus
  174. [actual] ferypus is ceslpus and zihdpus
  175. [actual] ferypus is ceslpus
  176. [actual] yujkpus is ceslpus
  177. [actual] ceslpus is serlpus
  178. [actual] serlpus is kuhrpus
  179. [actual] kuhrpus is nalgpus and pasgpus
  180. [actual] nalgpus is babgpus
  181. [actual] ceslpus is babgpus
  182. [actual] ceslpus is wenfpus and vuhlpus
  183. [actual] wenfpus is pixvpus
  184. [actual] pixvpus is wudtpus
  185. [actual] wudtpus is tophpus and luwlpus
  186. [actual] tophpus is dildpus
  187. [actual] dildpus is sopbpus
  188. [actual] sopbpus is leztpus and veytpus
  189. [actual] leztpus is babrpus
  190. [actual] ceslpus is babrpus
  191. [actual] ceslpus is gahxpus
  192. [actual] gahxpus is pezgpus and wedtpus
  193. [actual] pezgpus is doscpus
  194. [actual] doscpus is gafcpus and colqpus
  195. [actual] colqpus is gafcpus
  196. [actual] gafcpus is lotrpus
  197. [actual] lotrpus is nudjpus
  198. [actual] nudjpus is hunzpus
  199. [actual] hunzpus is gacqpus
  200. [actual] gacqpus is buffpus
  201. [actual] buffpus is babspus and tuvkpus
  202. [actual] ceslpus is babspus
  203. [actual] x is all three

=== 开始标准化和解析节点 ===
清洗后statements数: 203
标准化后节点数: 199
过滤掉的无效实体数: 4
标准化后的节点:
  1. [planning] x → babgpus (原始: x is babgpus)
  2. [planning] x → babrpus (原始: x is babrpus)
  3. [planning] x → babspus (原始: x is babspus)
  4. [planning] x → babgpus and muqcpus and relmpus (原始: x is babgpus and muqcpus and relmpus)
  5. [actual] x → yujkpus (原始: x is yujkpus)
  6. [actual] yujkpus → gajnpus and sefxpus (原始: yujkpus is gajnpus and sefxpus)
  7. [actual] yujkpus → gajnpus and sefxpus (原始: yujkpus is gajnpus and sefxpus)
  8. [actual] gajnpus → hizspus (原始: gajnpus is hizspus)
  9. [actual] gajnpus → hizspus (原始: gajnpus is hizspus)
  10. [actual] hizspus → fikvpus and yaltpus (原始: hizspus is fikvpus and yaltpus)
  11. [actual] hizspus → fikvpus and yaltpus (原始: hizspus is fikvpus and yaltpus)
  12. [actual] fikvpus → ferypus and xewtpus (原始: fikvpus is ferypus and xewtpus)
  13. [actual] fikvpus → ferypus and xewtpus (原始: fikvpus is ferypus and xewtpus)
  14. [actual] ferypus → ceslpus and zihdpus (原始: ferypus is ceslpus and zihdpus)
  15. [actual] ferypus → ceslpus and zihdpus (原始: ferypus is ceslpus and zihdpus)
  16. [actual] nalgpus → pittpus (原始: nalgpus is pittpus)
  17. [actual] nalgpus → babgpus (原始: nalgpus is babgpus)
  18. [actual] nalgpus → babgpus (原始: nalgpus is babgpus)
  19. [planning] x → nalgpus or babgpus (原始: x is nalgpus or babgpus)
  20. [actual] leztpus → babrpus (原始: leztpus is babrpus)
  21. [actual] buffpus → babspus and tuvkpus (原始: buffpus is babspus and tuvkpus)
  22. [actual] buffpus → babspus (原始: buffpus is babspus)
  23. [planning] x → buffpus (原始: x is buffpus)
  24. [planning] x → leztpus (原始: x is leztpus)
  25. [planning] x → nalgpus (原始: x is nalgpus)
  26. [actual] x → yujkpus (原始: x is yujkpus)
  27. [actual] yujkpus → gajnpus (原始: yujkpus is gajnpus)
  28. [actual] gajnpus → hizspus (原始: gajnpus is hizspus)
  29. [actual] hizspus → fikvpus (原始: hizspus is fikvpus)
  30. [actual] fikvpus → ferypus (原始: fikvpus is ferypus)
  31. [actual] ferypus → ceslpus (原始: ferypus is ceslpus)
  32. [actual] yujkpus → ceslpus (原始: yujkpus is ceslpus)
  33. [planning] yujkpus → ceslpus (原始: yujkpus is ceslpus)
  34. [actual] yujkpus → gajnpus (原始: yujkpus is gajnpus)
  35. [actual] gajnpus → hizspus (原始: gajnpus is hizspus)
  36. [actual] yujkpus → hizspus (原始: yujkpus is hizspus)
  37. [actual] hizspus → fikvpus (原始: hizspus is fikvpus)
  38. [actual] yujkpus → fikvpus (原始: yujkpus is fikvpus)
  39. [actual] fikvpus → ferypus (原始: fikvpus is ferypus)
  40. [actual] yujkpus → ferypus (原始: yujkpus is ferypus)
  41. [actual] ferypus → ceslpus (原始: ferypus is ceslpus)
  42. [actual] yujkpus → ceslpus (原始: yujkpus is ceslpus)
  43. [actual] x → ceslpus (原始: x is ceslpus)
  44. [actual] ceslpus → gahxpus (原始: ceslpus is gahxpus)
  45. [actual] ceslpus → serlpus and nehhpus (原始: ceslpus is serlpus and nehhpus)
  46. [planning] ceslpus → wenfpus and vuhlpus (原始: ceslpus is wenfpus and vuhlpus)
  47. [actual] ceslpus → wenfpus and vuhlpus (原始: ceslpus is wenfpus and vuhlpus)
  48. [planning] ceslpus → wenfpus and vuhlpus (原始: ceslpus is wenfpus and vuhlpus)
  49. [actual] ceslpus → wenfpus (原始: ceslpus is wenfpus)
  50. [planning] ceslpus → wenfpus (原始: ceslpus is wenfpus)
  51. [actual] ceslpus → wenfpus and vuhlpus (原始: ceslpus is wenfpus and vuhlpus)
  52. [actual] ceslpus → serlpus and nehhpus (原始: ceslpus is serlpus and nehhpus)
  53. [actual] ceslpus → serlpus (原始: ceslpus is serlpus)
  54. [actual] serlpus → qojjpus and kuhrpus (原始: serlpus is qojjpus and kuhrpus)
  55. [actual] nalgpus → babgpus (原始: nalgpus is babgpus)
  56. [actual] kuhrpus → nalgpus and pasgpus (原始: kuhrpus is nalgpus and pasgpus)
  57. [actual] kuhrpus → nalgpus and pasgpus (原始: kuhrpus is nalgpus and pasgpus)
  58. [actual] serlpus → kuhrpus (原始: serlpus is kuhrpus)
  59. [actual] serlpus → kuhrpus (原始: serlpus is kuhrpus)
  60. [actual] ceslpus → serlpus (原始: ceslpus is serlpus)
  61. [actual] serlpus → kuhrpus (原始: serlpus is kuhrpus)
  62. [actual] kuhrpus → nalgpus (原始: kuhrpus is nalgpus)
  63. [actual] nalgpus → babgpus (原始: nalgpus is babgpus)
  64. [planning] ceslpus → babgpus (原始: ceslpus is babgpus)
  65. [actual] ceslpus → serlpus (原始: ceslpus is serlpus)
  66. [actual] serlpus → kuhrpus (原始: serlpus is kuhrpus)
  67. [actual] kuhrpus → nalgpus and pasgpus (原始: kuhrpus is nalgpus and pasgpus)
  68. [actual] nalgpus → babgpus (原始: nalgpus is babgpus)
  69. [actual] nalgpus → babgpus (原始: nalgpus is babgpus)
  70. [actual] ceslpus → serlpus (原始: ceslpus is serlpus)
  71. [actual] serlpus → kuhrpus (原始: serlpus is kuhrpus)
  72. [actual] kuhrpus → nalgpus (原始: kuhrpus is nalgpus)
  73. [actual] nalgpus → babgpus (原始: nalgpus is babgpus)
  74. [actual] ceslpus → babgpus (原始: ceslpus is babgpus)
  75. [actual] x → ceslpus (原始: x is ceslpus)
  76. [actual] x → babgpus (原始: x is babgpus)
  77. [actual] x → babgpus (原始: x is babgpus)
  78. [planning] x → babrpus and babspus (原始: x is babrpus and babspus)
  79. [actual] leztpus → babrpus (原始: leztpus is babrpus)
  80. [planning] x → leztpus (原始: x is leztpus)
  81. [actual] x → ceslpus (原始: x is ceslpus)
  82. [planning] x → ceslpus and gahxpus (原始: x is ceslpus and gahxpus)
  83. [actual] ceslpus → gahxpus (原始: ceslpus is gahxpus)
  84. [actual] gahxpus → pezgpus and wedtpus (原始: gahxpus is pezgpus and wedtpus)
  85. [actual] pezgpus → doscpus (原始: pezgpus is doscpus)
  86. [actual] doscpus → gafcpus and colqpus (原始: doscpus is gafcpus and colqpus)
  87. [actual] gafcpus → lotrpus (原始: gafcpus is lotrpus)
  88. [actual] lotrpus → nudjpus (原始: lotrpus is nudjpus)
  89. [actual] nudjpus → hunzpus (原始: nudjpus is hunzpus)
  90. [actual] hunzpus → gacqpus (原始: hunzpus is gacqpus)
  91. [actual] gacqpus → buffpus (原始: gacqpus is buffpus)
  92. [actual] buffpus → babspus and tuvkpus (原始: buffpus is babspus and tuvkpus)
  93. [actual] leztpus → babrpus (原始: leztpus is babrpus)
  94. [actual] sopbpus → leztpus (原始: sopbpus is leztpus)
  95. [actual] sopbpus → veytpus (原始: sopbpus is veytpus)
  96. [planning] sopbpus → dildpus (原始: sopbpus is dildpus)
  97. [actual] dildpus → sopbpus (原始: dildpus is sopbpus)
  98. [actual] tophpus → dildpus (原始: tophpus is dildpus)
  99. [actual] wudtpus → tophpus and luwlpus (原始: wudtpus is tophpus and luwlpus)
  100. [actual] wenfpus → pixvpus (原始: wenfpus is pixvpus)
  101. [actual] ceslpus → wenfpus and vuhlpus (原始: ceslpus is wenfpus and vuhlpus)
  102. [actual] ceslpus → wenfpus (原始: ceslpus is wenfpus)
  103. [actual] wenfpus → pixvpus (原始: wenfpus is pixvpus)
  104. [planning] wenfpus → pixvpus (原始: wenfpus is pixvpus)
  105. [actual] pixvpus → wudtpus (原始: pixvpus is wudtpus)
  106. [actual] pixvpus → wudtpus (原始: pixvpus is wudtpus)
  107. [actual] pixvpus → wudtpus (原始: pixvpus is wudtpus)
  108. [actual] wudtpus → tophpus and luwlpus (原始: wudtpus is tophpus and luwlpus)
  109. [actual] wudtpus → tophpus (原始: wudtpus is tophpus)
  110. [actual] tophpus → dildpus (原始: tophpus is dildpus)
  111. [planning] tophpus → dildpus (原始: tophpus is dildpus)
  112. [actual] dildpus → sopbpus (原始: dildpus is sopbpus)
  113. [planning] dildpus → sopbpus (原始: dildpus is sopbpus)
  114. [actual] sopbpus → leztpus and veytpus (原始: sopbpus is leztpus and veytpus)
  115. [actual] sopbpus → leztpus (原始: sopbpus is leztpus)
  116. [actual] leztpus → babrpus (原始: leztpus is babrpus)
  117. [actual] ceslpus → babrpus (原始: ceslpus is babrpus)
  118. [actual] x → ceslpus (原始: x is ceslpus)
  119. [actual] x → babrpus (原始: x is babrpus)
  120. [actual] x → babrpus (原始: x is babrpus)
  121. [planning] x → babspus (原始: x is babspus)
  122. [actual] buffpus → babspus and tuvkpus (原始: buffpus is babspus and tuvkpus)
  123. [planning] x → buffpus (原始: x is buffpus)
  124. [actual] hunzpus → gacqpus (原始: hunzpus is gacqpus)
  125. [actual] gacqpus → buffpus (原始: gacqpus is buffpus)
  126. [actual] lotrpus → nudjpus (原始: lotrpus is nudjpus)
  127. [actual] nudjpus → hunzpus (原始: nudjpus is hunzpus)
  128. [actual] hunzpus → gacqpus (原始: hunzpus is gacqpus)
  129. [actual] gacqpus → buffpus (原始: gacqpus is buffpus)
  130. [actual] ceslpus → gahxpus (原始: ceslpus is gahxpus)
  131. [actual] gahxpus → pezgpus and wedtpus (原始: gahxpus is pezgpus and wedtpus)
  132. [actual] pezgpus → doscpus (原始: pezgpus is doscpus)
  133. [actual] doscpus → gafcpus and colqpus (原始: doscpus is gafcpus and colqpus)
  134. [actual] gafcpus → lotrpus (原始: gafcpus is lotrpus)
  135. [actual] ceslpus → gahxpus (原始: ceslpus is gahxpus)
  136. [planning] gahxpus → pezgpus (原始: gahxpus is pezgpus)
  137. [actual] gahxpus → pezgpus and wedtpus (原始: gahxpus is pezgpus and wedtpus)
  138. [actual] gahxpus → pezgpus (原始: gahxpus is pezgpus)
  139. [actual] pezgpus → doscpus (原始: pezgpus is doscpus)
  140. [actual] doscpus → gafcpus and colqpus (原始: doscpus is gafcpus and colqpus)
  141. [actual] doscpus → gafcpus (原始: doscpus is gafcpus)
  142. [actual] gafcpus → lotrpus (原始: gafcpus is lotrpus)
  143. [planning] gafcpus → lotrpus (原始: gafcpus is lotrpus)
  144. [actual] lotrpus → nudjpus (原始: lotrpus is nudjpus)
  145. [planning] lotrpus → nudjpus (原始: lotrpus is nudjpus)
  146. [actual] nudjpus → hunzpus (原始: nudjpus is hunzpus)
  147. [planning] nudjpus → hunzpus (原始: nudjpus is hunzpus)
  148. [actual] hunzpus → gacqpus (原始: hunzpus is gacqpus)
  149. [actual] hunzpus → gacqpus (原始: hunzpus is gacqpus)
  150. [actual] gacqpus → buffpus (原始: gacqpus is buffpus)
  151. [planning] gacqpus → buffpus (原始: gacqpus is buffpus)
  152. [actual] buffpus → babspus (原始: buffpus is babspus)
  153. [planning] buffpus → babspus (原始: buffpus is babspus)
  154. [actual] ceslpus → babspus (原始: ceslpus is babspus)
  155. [actual] x → ceslpus (原始: x is ceslpus)
  156. [actual] x → babspus (原始: x is babspus)
  157. [actual] x → babgpus and babrpus and babspus (原始: x is babgpus and babrpus and babspus)
  158. [actual] x → yujkpus (原始: x is yujkpus)
  159. [actual] yujkpus → ceslpus (原始: yujkpus is ceslpus)
  160. [actual] yujkpus → gajnpus and sefxpus (原始: yujkpus is gajnpus and sefxpus)
  161. [actual] yujkpus → gajnpus (原始: yujkpus is gajnpus)
  162. [actual] gajnpus → hizspus (原始: gajnpus is hizspus)
  163. [actual] gajnpus → hizspus (原始: gajnpus is hizspus)
  164. [actual] yujkpus → hizspus (原始: yujkpus is hizspus)
  165. [actual] hizspus → fikvpus and yaltpus (原始: hizspus is fikvpus and yaltpus)
  166. [actual] hizspus → fikvpus (原始: hizspus is fikvpus)
  167. [actual] yujkpus → fikvpus (原始: yujkpus is fikvpus)
  168. [actual] fikvpus → ferypus and xewtpus (原始: fikvpus is ferypus and xewtpus)
  169. [actual] fikvpus → ferypus (原始: fikvpus is ferypus)
  170. [actual] yujkpus → ferypus (原始: yujkpus is ferypus)
  171. [actual] ferypus → ceslpus and zihdpus (原始: ferypus is ceslpus and zihdpus)
  172. [actual] ferypus → ceslpus (原始: ferypus is ceslpus)
  173. [actual] yujkpus → ceslpus (原始: yujkpus is ceslpus)
  174. [actual] ceslpus → serlpus (原始: ceslpus is serlpus)
  175. [actual] serlpus → kuhrpus (原始: serlpus is kuhrpus)
  176. [actual] kuhrpus → nalgpus and pasgpus (原始: kuhrpus is nalgpus and pasgpus)
  177. [actual] nalgpus → babgpus (原始: nalgpus is babgpus)
  178. [actual] ceslpus → babgpus (原始: ceslpus is babgpus)
  179. [actual] ceslpus → wenfpus and vuhlpus (原始: ceslpus is wenfpus and vuhlpus)
  180. [actual] wenfpus → pixvpus (原始: wenfpus is pixvpus)
  181. [actual] pixvpus → wudtpus (原始: pixvpus is wudtpus)
  182. [actual] wudtpus → tophpus and luwlpus (原始: wudtpus is tophpus and luwlpus)
  183. [actual] tophpus → dildpus (原始: tophpus is dildpus)
  184. [actual] dildpus → sopbpus (原始: dildpus is sopbpus)
  185. [actual] sopbpus → leztpus and veytpus (原始: sopbpus is leztpus and veytpus)
  186. [actual] leztpus → babrpus (原始: leztpus is babrpus)
  187. [actual] ceslpus → babrpus (原始: ceslpus is babrpus)
  188. [actual] ceslpus → gahxpus (原始: ceslpus is gahxpus)
  189. [actual] gahxpus → pezgpus and wedtpus (原始: gahxpus is pezgpus and wedtpus)
  190. [actual] pezgpus → doscpus (原始: pezgpus is doscpus)
  191. [actual] doscpus → gafcpus and colqpus (原始: doscpus is gafcpus and colqpus)
  192. [actual] colqpus → gafcpus (原始: colqpus is gafcpus)
  193. [actual] gafcpus → lotrpus (原始: gafcpus is lotrpus)
  194. [actual] lotrpus → nudjpus (原始: lotrpus is nudjpus)
  195. [actual] nudjpus → hunzpus (原始: nudjpus is hunzpus)
  196. [actual] hunzpus → gacqpus (原始: hunzpus is gacqpus)
  197. [actual] gacqpus → buffpus (原始: gacqpus is buffpus)
  198. [actual] buffpus → babspus and tuvkpus (原始: buffpus is babspus and tuvkpus)
  199. [actual] ceslpus → babspus (原始: ceslpus is babspus)

开始新的后处理...
[后处理] 从LoG数据文件中获取到图数据，节点数: 48
[后处理] 加载LoG图，包含 48 个节点
  LoG节点 0: x is babgpus and babrpus and babspus (规则: MP, 深度: 1)
  LoG节点 1: x is ceslpus (规则: CE, 深度: 2)
  LoG节点 2: ceslpus is babgpus and babrpus and babspus (规则: CI, 深度: 2)
  LoG节点 3: x is ceslpus and rujtpus (规则: MP, 深度: 3)
  LoG节点 4: ceslpus is babgpus (规则: MP, 深度: 3)
  LoG节点 5: ceslpus is babrpus (规则: MP, 深度: 3)
  LoG节点 6: ceslpus is babspus (规则: MP, 深度: 3)
  LoG节点 7: x is fikvpus (规则: MP, 深度: 4)
  LoG节点 8: fikvpus is ceslpus and rujtpus (规则: CI, 深度: 4)
  LoG节点 9: ceslpus is kuhrpus (规则: CE, 深度: 4)
  LoG节点 10: kuhrpus is babgpus (规则: CE, 深度: 4)
  LoG节点 11: ceslpus is sopbpus (规则: MP, 深度: 4)
  LoG节点 12: sopbpus is babrpus (规则: CE, 深度: 4)
  LoG节点 13: ceslpus is gafcpus (规则: MP, 深度: 4)
  LoG节点 14: gafcpus is babspus (规则: MP, 深度: 4)
  LoG节点 15: x is gajnpus (规则: CE, 深度: 5)
  LoG节点 16: gajnpus is fikvpus (规则: CE, 深度: 5)
  LoG节点 17: fikvpus is ceslpus (规则: CE, 深度: 5)
  LoG节点 18: fikvpus is rujtpus (规则: MP, 深度: 5)
  LoG节点 19: ceslpus is kuhrpus and qojjpus (规则: MP, 深度: 5)
  LoG节点 20: kuhrpus is babgpus and pittpus (规则: MP, 深度: 5)
  LoG节点 21: ceslpus is wudtpus (规则: MP, 深度: 5)
  LoG节点 22: wudtpus is sopbpus (规则: MP, 深度: 5)
  LoG节点 23: sopbpus is babrpus and pervpus (规则: MP, 深度: 5)
  LoG节点 24: ceslpus is pezgpus (规则: CE, 深度: 5)
  LoG节点 25: pezgpus is gafcpus (规则: CE, 深度: 5)
  LoG节点 26: gafcpus is gacqpus (规则: MP, 深度: 5)
  LoG节点 27: gacqpus is babspus (规则: CE, 深度: 5)
  LoG节点 28: x is gajnpus and sefxpus (规则: MP, 深度: 6)
  LoG节点 29: gajnpus is fikvpus and yaltpus (规则: MP, 深度: 6)
  LoG节点 30: fikvpus is ceslpus and zihdpus (规则: MP, 深度: 6)
  LoG节点 31: fikvpus is wudkpus (规则: MP, 深度: 6)
  LoG节点 32: wudkpus is rujtpus (规则: MP, 深度: 6)
  LoG节点 33: ceslpus is serlpus (规则: CE, 深度: 6)
  LoG节点 34: serlpus is kuhrpus and qojjpus (规则: CI, 深度: 6)
  LoG节点 35: kuhrpus is nalgpus (规则: CE, 深度: 6)
  LoG节点 36: nalgpus is babgpus and pittpus (规则: CI, 深度: 6)
  LoG节点 37: ceslpus is wenfpus (规则: CE, 深度: 6)
  LoG节点 38: wenfpus is wudtpus (规则: MP, 深度: 6)
  LoG节点 39: wudtpus is tophpus (规则: CE, 深度: 6)
  LoG节点 40: tophpus is sopbpus (规则: MP, 深度: 6)
  LoG节点 41: sopbpus is leztpus (规则: CE, 深度: 6)
  LoG节点 42: leztpus is babrpus and pervpus (规则: CI, 深度: 6)
  LoG节点 43: ceslpus is pezgpus and wedtpus (规则: MP, 深度: 6)
  LoG节点 44: pezgpus is gafcpus and colqpus (规则: MP, 深度: 6)
  LoG节点 45: gafcpus is nudjpus (规则: MP, 深度: 6)
  LoG节点 46: nudjpus is gacqpus (规则: MP, 深度: 6)
  LoG节点 47: gacqpus is babspus and tuvkpus (规则: MP, 深度: 6)

============================================================
[后处理] 开始处理节点
============================================================
📊 初始状态:
   - 标准化节点数: 199
   - 初始条件数: 35
   - LoG图节点数: 48

📋 初始条件列表:
    1. ceslpus is gahxpus
    2. tophpus is dildpus
    3. nalgpus is pittpus
    4. gafcpus is lotrpus
    5. ceslpus is serlpus and nehhpus
    6. serlpus is qojjpus
    7. yujkpus is gajnpus and sefxpus
    8. fikvpus is ferypus
    9. fikvpus is xewtpus
   10. dildpus is sopbpus
   11. buffpus is babspus and tuvkpus
   12. nudjpus is hunzpus
   13. xewtpus is wudkpus
   14. pixvpus is wudtpus
   15. serlpus is kuhrpus
   16. gacqpus is buffpus
   17. wenfpus is pixvpus
   18. kuxppus is rujtpus
   19. wudtpus is tophpus and luwlpus
   20. ceslpus is wenfpus and vuhlpus
   21. ferypus is ceslpus and zihdpus
   22. nalgpus is babgpus
   23. lotrpus is nudjpus
   24. gahxpus is pezgpus and wedtpus
   25. hizspus is fikvpus and yaltpus
   26. gajnpus is hizspus
   27. x is yujkpus
   28. leztpus is babrpus
   29. wudkpus is kuxppus
   30. kuhrpus is nalgpus and pasgpus
   31. doscpus is gafcpus and colqpus
   32. sopbpus is leztpus and veytpus
   33. pezgpus is doscpus
   34. hunzpus is gacqpus
   35. leztpus is pervpus

🔧 构建初始Statement列表...
✅ 初始Statement列表构建完成，包含 35 个前提节点

🔍 开始处理actual节点...

   节点 1: x is yujkpus
      ↻ 重复节点，计数: 2

   节点 2: yujkpus is gajnpus and sefxpus
      ↻ 重复节点，计数: 2

   节点 3: yujkpus is gajnpus and sefxpus
      ↻ 重复节点，计数: 3

   节点 4: gajnpus is hizspus
      ↻ 重复节点，计数: 2

   节点 5: gajnpus is hizspus
      ↻ 重复节点，计数: 3

   节点 6: hizspus is fikvpus and yaltpus
      ↻ 重复节点，计数: 2

   节点 7: hizspus is fikvpus and yaltpus
      ↻ 重复节点，计数: 3

   节点 8: fikvpus is ferypus and xewtpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CI
      📋 推理路径: CI规则: fikvpus is ferypus → fikvpus is xewtpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: fikvpus is ferypus
  - 前提: fikvpus is xewtpus

   节点 9: fikvpus is ferypus and xewtpus
      ↻ 重复节点，计数: 2

   节点 10: ferypus is ceslpus and zihdpus
      ↻ 重复节点，计数: 2

   节点 11: ferypus is ceslpus and zihdpus
      ↻ 重复节点，计数: 3

   节点 12: nalgpus is pittpus
      ↻ 重复节点，计数: 2

   节点 13: nalgpus is babgpus
      ↻ 重复节点，计数: 2

   节点 14: nalgpus is babgpus
      ↻ 重复节点，计数: 3

   节点 15: leztpus is babrpus
      ↻ 重复节点，计数: 2

   节点 16: buffpus is babspus and tuvkpus
      ↻ 重复节点，计数: 2

   节点 17: buffpus is babspus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: buffpus is babspus and tuvkpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: buffpus is babspus and tuvkpus

   节点 18: x is yujkpus
      ↻ 重复节点，计数: 3

   节点 19: yujkpus is gajnpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: yujkpus is gajnpus and sefxpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: yujkpus is gajnpus and sefxpus

   节点 20: gajnpus is hizspus
      ↻ 重复节点，计数: 4

   节点 21: hizspus is fikvpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: hizspus is fikvpus and yaltpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: hizspus is fikvpus and yaltpus

   节点 22: fikvpus is ferypus
      ↻ 重复节点，计数: 2

   节点 23: ferypus is ceslpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: ferypus is ceslpus and zihdpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: ferypus is ceslpus and zihdpus

   节点 24: yujkpus is ceslpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: yujkpus is gajnpus → gajnpus is ceslpus
[后处理] 基于推理轨迹点亮节点，使用了 5 个前提条件:
  - 前提: yujkpus is gajnpus
  - 前提: gajnpus is hizspus
  - 前提: hizspus is fikvpus
  - 前提: fikvpus is ferypus
  - 前提: ferypus is ceslpus
  ✓ 点亮LoG节点: gajnpus is fikvpus
[子树点亮]     └─ 点亮依赖节点: gajnpus is fikvpus and yaltpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 1 个节点
  ✓ 点亮LoG节点: fikvpus is ceslpus
[子树点亮]     └─ 点亮依赖节点: fikvpus is ceslpus and zihdpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 1 个节点
[后处理] 通过推理轨迹额外点亮了 2 个LoG节点

   节点 25: yujkpus is gajnpus
      ↻ 重复节点，计数: 2

   节点 26: gajnpus is hizspus
      ↻ 重复节点，计数: 5

   节点 27: yujkpus is hizspus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: yujkpus is gajnpus → gajnpus is hizspus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: yujkpus is gajnpus
  - 前提: gajnpus is hizspus

   节点 28: hizspus is fikvpus
      ↻ 重复节点，计数: 2

   节点 29: yujkpus is fikvpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: yujkpus is gajnpus → gajnpus is fikvpus
[后处理] 基于推理轨迹点亮节点，使用了 3 个前提条件:
  - 前提: yujkpus is gajnpus
  - 前提: gajnpus is hizspus
  - 前提: hizspus is fikvpus

   节点 30: fikvpus is ferypus
      ↻ 重复节点，计数: 3

   节点 31: yujkpus is ferypus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: yujkpus is gajnpus → gajnpus is ferypus
[后处理] 基于推理轨迹点亮节点，使用了 4 个前提条件:
  - 前提: yujkpus is gajnpus
  - 前提: gajnpus is hizspus
  - 前提: hizspus is fikvpus
  - 前提: fikvpus is ferypus

   节点 32: ferypus is ceslpus
      ↻ 重复节点，计数: 2

   节点 33: yujkpus is ceslpus
      ↻ 重复节点，计数: 2

   节点 34: x is ceslpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is ceslpus
[子树点亮]     └─ 点亮依赖节点: x is ceslpus and rujtpus (深度3)
[子树点亮]     └─ 点亮依赖节点: x is fikvpus (深度4)
[子树点亮]     └─ 点亮依赖节点: fikvpus is ceslpus and rujtpus (深度4)
[子树点亮]     └─ 点亮依赖节点: x is gajnpus (深度5)
[子树点亮]     └─ 点亮依赖节点: fikvpus is rujtpus (深度5)
[子树点亮]     └─ 点亮依赖节点: x is gajnpus and sefxpus (深度6)
[子树点亮]     └─ 点亮依赖节点: fikvpus is wudkpus (深度6)
[子树点亮]     └─ 点亮依赖节点: wudkpus is rujtpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 8 个节点
      ✅ 验证成功 + LoG匹配

   节点 35: ceslpus is gahxpus
      ↻ 重复节点，计数: 2

   节点 36: ceslpus is serlpus and nehhpus
      ↻ 重复节点，计数: 2

   节点 37: ceslpus is wenfpus and vuhlpus
      ↻ 重复节点，计数: 2

   节点 38: ceslpus is wenfpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: ceslpus is wenfpus
      ✅ 验证成功 + LoG匹配

   节点 39: ceslpus is wenfpus and vuhlpus
      ↻ 重复节点，计数: 3

   节点 40: ceslpus is serlpus and nehhpus
      ↻ 重复节点，计数: 3

   节点 41: ceslpus is serlpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: ceslpus is serlpus
      ✅ 验证成功 + LoG匹配

   节点 42: serlpus is qojjpus and kuhrpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CI
      📋 推理路径: CI规则: serlpus is qojjpus → serlpus is kuhrpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: serlpus is qojjpus
  - 前提: serlpus is kuhrpus
  ✓ 点亮LoG节点: serlpus is kuhrpus and qojjpus
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 43: nalgpus is babgpus
      ↻ 重复节点，计数: 4

   节点 44: kuhrpus is nalgpus and pasgpus
      ↻ 重复节点，计数: 2

   节点 45: kuhrpus is nalgpus and pasgpus
      ↻ 重复节点，计数: 3

   节点 46: serlpus is kuhrpus
      ↻ 重复节点，计数: 2

   节点 47: serlpus is kuhrpus
      ↻ 重复节点，计数: 3

   节点 48: ceslpus is serlpus
      ↻ 重复节点，计数: 2

   节点 49: serlpus is kuhrpus
      ↻ 重复节点，计数: 4

   节点 50: kuhrpus is nalgpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: kuhrpus is nalgpus
      ✅ 验证成功 + LoG匹配

   节点 51: nalgpus is babgpus
      ↻ 重复节点，计数: 5

   节点 52: ceslpus is serlpus
      ↻ 重复节点，计数: 3

   节点 53: serlpus is kuhrpus
      ↻ 重复节点，计数: 5

   节点 54: kuhrpus is nalgpus and pasgpus
      ↻ 重复节点，计数: 4

   节点 55: nalgpus is babgpus
      ↻ 重复节点，计数: 6

   节点 56: nalgpus is babgpus
      ↻ 重复节点，计数: 7

   节点 57: ceslpus is serlpus
      ↻ 重复节点，计数: 4

   节点 58: serlpus is kuhrpus
      ↻ 重复节点，计数: 6

   节点 59: kuhrpus is nalgpus
      ↻ 重复节点，计数: 2

   节点 60: nalgpus is babgpus
      ↻ 重复节点，计数: 8

   节点 61: ceslpus is babgpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: ceslpus is babgpus
[子树点亮]     └─ 点亮依赖节点: ceslpus is kuhrpus (深度4)
[子树点亮]     └─ 点亮依赖节点: kuhrpus is babgpus (深度4)
[子树点亮]     └─ 点亮依赖节点: ceslpus is kuhrpus and qojjpus (深度5)
[子树点亮]     └─ 点亮依赖节点: kuhrpus is babgpus and pittpus (深度5)
[子树点亮]     └─ 点亮依赖节点: nalgpus is babgpus and pittpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 5 个节点
      ✅ 验证成功 + LoG匹配

   节点 62: x is ceslpus
      ↻ 重复节点，计数: 2

   节点 63: x is babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is yujkpus → yujkpus is babgpus
[后处理] 基于推理轨迹点亮节点，使用了 7 个前提条件:
  - 前提: x is yujkpus
  - 前提: yujkpus is gajnpus
  - 前提: gajnpus is hizspus
  - 前提: hizspus is fikvpus
  - 前提: fikvpus is ferypus
  - 前提: ferypus is ceslpus
  - 前提: ceslpus is babgpus

   节点 64: x is babgpus
      ↻ 重复节点，计数: 2

   节点 65: leztpus is babrpus
      ↻ 重复节点，计数: 3

   节点 66: x is ceslpus
      ↻ 重复节点，计数: 3

   节点 67: ceslpus is gahxpus
      ↻ 重复节点，计数: 3

   节点 68: gahxpus is pezgpus and wedtpus
      ↻ 重复节点，计数: 2

   节点 69: pezgpus is doscpus
      ↻ 重复节点，计数: 2

   节点 70: doscpus is gafcpus and colqpus
      ↻ 重复节点，计数: 2

   节点 71: gafcpus is lotrpus
      ↻ 重复节点，计数: 2

   节点 72: lotrpus is nudjpus
      ↻ 重复节点，计数: 2

   节点 73: nudjpus is hunzpus
      ↻ 重复节点，计数: 2

   节点 74: hunzpus is gacqpus
      ↻ 重复节点，计数: 2

   节点 75: gacqpus is buffpus
      ↻ 重复节点，计数: 2

   节点 76: buffpus is babspus and tuvkpus
      ↻ 重复节点，计数: 3

   节点 77: leztpus is babrpus
      ↻ 重复节点，计数: 4

   节点 78: sopbpus is leztpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: sopbpus is leztpus
      ✅ 验证成功 + LoG匹配

   节点 79: sopbpus is veytpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: sopbpus is leztpus and veytpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: sopbpus is leztpus and veytpus

   节点 80: dildpus is sopbpus
      ↻ 重复节点，计数: 2

   节点 81: tophpus is dildpus
      ↻ 重复节点，计数: 2

   节点 82: wudtpus is tophpus and luwlpus
      ↻ 重复节点，计数: 2

   节点 83: wenfpus is pixvpus
      ↻ 重复节点，计数: 2

   节点 84: ceslpus is wenfpus and vuhlpus
      ↻ 重复节点，计数: 4

   节点 85: ceslpus is wenfpus
      ↻ 重复节点，计数: 2

   节点 86: wenfpus is pixvpus
      ↻ 重复节点，计数: 3

   节点 87: pixvpus is wudtpus
      ↻ 重复节点，计数: 2

   节点 88: pixvpus is wudtpus
      ↻ 重复节点，计数: 3

   节点 89: pixvpus is wudtpus
      ↻ 重复节点，计数: 4

   节点 90: wudtpus is tophpus and luwlpus
      ↻ 重复节点，计数: 3

   节点 91: wudtpus is tophpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: wudtpus is tophpus
      ✅ 验证成功 + LoG匹配

   节点 92: tophpus is dildpus
      ↻ 重复节点，计数: 3

   节点 93: dildpus is sopbpus
      ↻ 重复节点，计数: 3

   节点 94: sopbpus is leztpus and veytpus
      ↻ 重复节点，计数: 2

   节点 95: sopbpus is leztpus
      ↻ 重复节点，计数: 2

   节点 96: leztpus is babrpus
      ↻ 重复节点，计数: 5

   节点 97: ceslpus is babrpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: ceslpus is babrpus
[子树点亮]     └─ 点亮依赖节点: ceslpus is sopbpus (深度4)
[子树点亮]     └─ 点亮依赖节点: sopbpus is babrpus (深度4)
[子树点亮]     └─ 点亮依赖节点: ceslpus is wudtpus (深度5)
[子树点亮]     └─ 点亮依赖节点: wudtpus is sopbpus (深度5)
[子树点亮]     └─ 点亮依赖节点: sopbpus is babrpus and pervpus (深度5)
[子树点亮]     └─ 点亮依赖节点: wenfpus is wudtpus (深度6)
[子树点亮]     └─ 点亮依赖节点: tophpus is sopbpus (深度6)
[子树点亮]     └─ 点亮依赖节点: leztpus is babrpus and pervpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 8 个节点
      ✅ 验证成功 + LoG匹配

   节点 98: x is ceslpus
      ↻ 重复节点，计数: 4

   节点 99: x is babrpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is yujkpus → yujkpus is babrpus
[后处理] 基于推理轨迹点亮节点，使用了 7 个前提条件:
  - 前提: x is yujkpus
  - 前提: yujkpus is gajnpus
  - 前提: gajnpus is hizspus
  - 前提: hizspus is fikvpus
  - 前提: fikvpus is ferypus
  - 前提: ferypus is ceslpus
  - 前提: ceslpus is babrpus

   节点 100: x is babrpus
      ↻ 重复节点，计数: 2

   节点 101: buffpus is babspus and tuvkpus
      ↻ 重复节点，计数: 4

   节点 102: hunzpus is gacqpus
      ↻ 重复节点，计数: 3

   节点 103: gacqpus is buffpus
      ↻ 重复节点，计数: 3

   节点 104: lotrpus is nudjpus
      ↻ 重复节点，计数: 3

   节点 105: nudjpus is hunzpus
      ↻ 重复节点，计数: 3

   节点 106: hunzpus is gacqpus
      ↻ 重复节点，计数: 4

   节点 107: gacqpus is buffpus
      ↻ 重复节点，计数: 4

   节点 108: ceslpus is gahxpus
      ↻ 重复节点，计数: 4

   节点 109: gahxpus is pezgpus and wedtpus
      ↻ 重复节点，计数: 3

   节点 110: pezgpus is doscpus
      ↻ 重复节点，计数: 3

   节点 111: doscpus is gafcpus and colqpus
      ↻ 重复节点，计数: 3

   节点 112: gafcpus is lotrpus
      ↻ 重复节点，计数: 3

   节点 113: ceslpus is gahxpus
      ↻ 重复节点，计数: 5

   节点 114: gahxpus is pezgpus and wedtpus
      ↻ 重复节点，计数: 4

   节点 115: gahxpus is pezgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: gahxpus is pezgpus and wedtpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: gahxpus is pezgpus and wedtpus

   节点 116: pezgpus is doscpus
      ↻ 重复节点，计数: 4

   节点 117: doscpus is gafcpus and colqpus
      ↻ 重复节点，计数: 4

   节点 118: doscpus is gafcpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: doscpus is gafcpus and colqpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: doscpus is gafcpus and colqpus

   节点 119: gafcpus is lotrpus
      ↻ 重复节点，计数: 4

   节点 120: lotrpus is nudjpus
      ↻ 重复节点，计数: 4

   节点 121: nudjpus is hunzpus
      ↻ 重复节点，计数: 4

   节点 122: hunzpus is gacqpus
      ↻ 重复节点，计数: 5

   节点 123: hunzpus is gacqpus
      ↻ 重复节点，计数: 6

   节点 124: gacqpus is buffpus
      ↻ 重复节点，计数: 5

   节点 125: buffpus is babspus
      ↻ 重复节点，计数: 2

   节点 126: ceslpus is babspus
      🔍 验证新节点...
[后处理] 点亮LoG节点: ceslpus is babspus
[子树点亮]     └─ 点亮依赖节点: ceslpus is gafcpus (深度4)
[子树点亮]     └─ 点亮依赖节点: gafcpus is babspus (深度4)
[子树点亮]     └─ 点亮依赖节点: ceslpus is pezgpus (深度5)
[子树点亮]     └─ 点亮依赖节点: pezgpus is gafcpus (深度5)
[子树点亮]     └─ 点亮依赖节点: gafcpus is gacqpus (深度5)
[子树点亮]     └─ 点亮依赖节点: gacqpus is babspus (深度5)
[子树点亮]     └─ 点亮依赖节点: ceslpus is pezgpus and wedtpus (深度6)
[子树点亮]     └─ 点亮依赖节点: pezgpus is gafcpus and colqpus (深度6)
[子树点亮]     └─ 点亮依赖节点: gafcpus is nudjpus (深度6)
[子树点亮]     └─ 点亮依赖节点: nudjpus is gacqpus (深度6)
[子树点亮]     └─ 点亮依赖节点: gacqpus is babspus and tuvkpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 11 个节点
      ✅ 验证成功 + LoG匹配

   节点 127: x is ceslpus
      ↻ 重复节点，计数: 5

   节点 128: x is babspus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is yujkpus → yujkpus is babspus
[后处理] 基于推理轨迹点亮节点，使用了 7 个前提条件:
  - 前提: x is yujkpus
  - 前提: yujkpus is gajnpus
  - 前提: gajnpus is hizspus
  - 前提: hizspus is fikvpus
  - 前提: fikvpus is ferypus
  - 前提: ferypus is ceslpus
  - 前提: ceslpus is babspus

   节点 129: x is babgpus and babrpus and babspus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is babgpus and babrpus and babspus
[子树点亮]     └─ 点亮依赖节点: ceslpus is babgpus and babrpus and babspus (深度2)
[后处理]   └─ 自动点亮依赖子树: 1 个节点
      ✅ 验证成功 + LoG匹配

   节点 130: x is yujkpus
      ↻ 重复节点，计数: 4

   节点 131: yujkpus is ceslpus
      ↻ 重复节点，计数: 3

   节点 132: yujkpus is gajnpus and sefxpus
      ↻ 重复节点，计数: 4

   节点 133: yujkpus is gajnpus
      ↻ 重复节点，计数: 3

   节点 134: gajnpus is hizspus
      ↻ 重复节点，计数: 6

   节点 135: gajnpus is hizspus
      ↻ 重复节点，计数: 7

   节点 136: yujkpus is hizspus
      ↻ 重复节点，计数: 2

   节点 137: hizspus is fikvpus and yaltpus
      ↻ 重复节点，计数: 4

   节点 138: hizspus is fikvpus
      ↻ 重复节点，计数: 3

   节点 139: yujkpus is fikvpus
      ↻ 重复节点，计数: 2

   节点 140: fikvpus is ferypus and xewtpus
      ↻ 重复节点，计数: 3

   节点 141: fikvpus is ferypus
      ↻ 重复节点，计数: 4

   节点 142: yujkpus is ferypus
      ↻ 重复节点，计数: 2

   节点 143: ferypus is ceslpus and zihdpus
      ↻ 重复节点，计数: 4

   节点 144: ferypus is ceslpus
      ↻ 重复节点，计数: 3

   节点 145: yujkpus is ceslpus
      ↻ 重复节点，计数: 4

   节点 146: ceslpus is serlpus
      ↻ 重复节点，计数: 5

   节点 147: serlpus is kuhrpus
      ↻ 重复节点，计数: 7

   节点 148: kuhrpus is nalgpus and pasgpus
      ↻ 重复节点，计数: 5

   节点 149: nalgpus is babgpus
      ↻ 重复节点，计数: 9

   节点 150: ceslpus is babgpus
      ↻ 重复节点，计数: 2

   节点 151: ceslpus is wenfpus and vuhlpus
      ↻ 重复节点，计数: 5

   节点 152: wenfpus is pixvpus
      ↻ 重复节点，计数: 4

   节点 153: pixvpus is wudtpus
      ↻ 重复节点，计数: 5

   节点 154: wudtpus is tophpus and luwlpus
      ↻ 重复节点，计数: 4

   节点 155: tophpus is dildpus
      ↻ 重复节点，计数: 4

   节点 156: dildpus is sopbpus
      ↻ 重复节点，计数: 4

   节点 157: sopbpus is leztpus and veytpus
      ↻ 重复节点，计数: 3

   节点 158: leztpus is babrpus
      ↻ 重复节点，计数: 6

   节点 159: ceslpus is babrpus
      ↻ 重复节点，计数: 2

   节点 160: ceslpus is gahxpus
      ↻ 重复节点，计数: 6

   节点 161: gahxpus is pezgpus and wedtpus
      ↻ 重复节点，计数: 5

   节点 162: pezgpus is doscpus
      ↻ 重复节点，计数: 5

   节点 163: doscpus is gafcpus and colqpus
      ↻ 重复节点，计数: 5

   节点 164: colqpus is gafcpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 165: gafcpus is lotrpus
      ↻ 重复节点，计数: 5

   节点 166: lotrpus is nudjpus
      ↻ 重复节点，计数: 5

   节点 167: nudjpus is hunzpus
      ↻ 重复节点，计数: 5

   节点 168: hunzpus is gacqpus
      ↻ 重复节点，计数: 7

   节点 169: gacqpus is buffpus
      ↻ 重复节点，计数: 6

   节点 170: buffpus is babspus and tuvkpus
      ↻ 重复节点，计数: 5

   节点 171: ceslpus is babspus
      ↻ 重复节点，计数: 2

🔍 分析推理路径完整性...

============================================================
[后处理] 处理完成
============================================================
📈 处理统计:
   - 处理的actual节点: 171
   - 新增节点: 27
   - 更新已存在节点: 144
   - 点亮的LoG节点: 48

🎯 推理质量统计:
   - 完美推理: 26 (节点正确 + 路径正确)
   - 部分推理: 1 (节点正确 + 路径部分错误)
   - 无效推理: 0 (节点错误或路径完全错误)
[LoG分析] LoG图: 48节点, 35前提, 复杂度1-35

📊 === Statement列表分析 ===
📈 节点统计:
   - 总节点数: 62
   - 前提节点: 35
   - 推理节点: 26
   - 幻觉节点: 1
   - 点亮LoG节点: 48

❌ 幻觉节点详情:
   - colqpus is gafcpus (出现1次)

✅ 推理节点详情:
   🟢 fikvpus is ferypus and xewtpus (出现3次, 质量:perfect)
   🟢 buffpus is babspus (出现2次, 质量:perfect)
   🟢 yujkpus is gajnpus (出现3次, 质量:perfect)
   🟢 hizspus is fikvpus (出现3次, 质量:perfect)
   🟢 ferypus is ceslpus (出现3次, 质量:perfect)
   🟢 yujkpus is ceslpus (出现4次, 质量:perfect)
   🟢 yujkpus is hizspus (出现2次, 质量:perfect)
   🟢 yujkpus is fikvpus (出现2次, 质量:perfect)
   🟢 yujkpus is ferypus (出现2次, 质量:perfect)
   🟢 x is ceslpus (出现5次, 质量:perfect)
   🟢 ceslpus is wenfpus (出现2次, 质量:perfect)
   🟢 ceslpus is serlpus (出现5次, 质量:perfect)
   🟢 serlpus is qojjpus and kuhrpus (出现1次, 质量:perfect)
   🟢 kuhrpus is nalgpus (出现2次, 质量:perfect)
   🟢 ceslpus is babgpus (出现2次, 质量:perfect)
   🟢 x is babgpus (出现2次, 质量:perfect)
   🟢 sopbpus is leztpus (出现2次, 质量:perfect)
   🟢 sopbpus is veytpus (出现1次, 质量:perfect)
   🟢 wudtpus is tophpus (出现1次, 质量:perfect)
   🟢 ceslpus is babrpus (出现2次, 质量:perfect)
   🟢 x is babrpus (出现2次, 质量:perfect)
   🟢 gahxpus is pezgpus (出现1次, 质量:perfect)
   🟡 doscpus is gafcpus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['colqpus is gafcpus']
   🟢 ceslpus is babspus (出现2次, 质量:perfect)
   🟢 x is babspus (出现1次, 质量:perfect)
   🟢 x is babgpus and babrpus and babspus (出现1次, 质量:perfect)

🔥 点亮的LoG节点:
   - ceslpus is babrpus
   - ceslpus is serlpus
   - wudtpus is tophpus
   - pezgpus is gafcpus and colqpus
   - kuhrpus is nalgpus
   - serlpus is kuhrpus and qojjpus
   - nalgpus is babgpus and pittpus
   - ceslpus is kuhrpus and qojjpus
   - kuhrpus is babgpus
   - x is fikvpus
   - ceslpus is sopbpus
   - ceslpus is babgpus and babrpus and babspus
   - fikvpus is wudkpus
   - kuhrpus is babgpus and pittpus
   - ceslpus is kuhrpus
   - ceslpus is babspus
   - nudjpus is gacqpus
   - gafcpus is gacqpus
   - ceslpus is wudtpus
   - ceslpus is wenfpus
   - sopbpus is leztpus
   - sopbpus is babrpus and pervpus
   - x is ceslpus
   - pezgpus is gafcpus
   - wudkpus is rujtpus
   - gajnpus is fikvpus and yaltpus
   - sopbpus is babrpus
   - fikvpus is rujtpus
   - gacqpus is babspus
   - x is babgpus and babrpus and babspus
   - leztpus is babrpus and pervpus
   - ceslpus is pezgpus
   - gacqpus is babspus and tuvkpus
   - ceslpus is gafcpus
   - fikvpus is ceslpus and rujtpus
   - ceslpus is babgpus
   - gafcpus is nudjpus
   - fikvpus is ceslpus
   - x is gajnpus
   - x is ceslpus and rujtpus
   - wudtpus is sopbpus
   - ceslpus is pezgpus and wedtpus
   - gajnpus is fikvpus
   - x is gajnpus and sefxpus
   - tophpus is sopbpus
   - fikvpus is ceslpus and zihdpus
   - wenfpus is wudtpus
   - gafcpus is babspus

============================================================
📊 计算评估指标
============================================================

🎯 计算Coverage指标...
   深度Coverage: 6/6 = 100.00%
   最深点亮节点: x is babgpus and babrpus and babspus (第6层)
   节点Coverage: 48/48 = 100.00%
   前提条件Coverage: 29/35 = 82.86%
   各推理层点亮比例:
     第1层: 20/20 = 100.00%
     第2层: 13/13 = 100.00%
     第3层: 8/8 = 100.00%
     第4层: 4/4 = 100.00%
     第5层: 2/2 = 100.00%
     第6层: 1/1 = 100.00%

🎯 计算Precision指标...
   Error Rate: 1/27 = 3.70%
   可推导节点: 26/27
   Strict Error Rate: 2/27 = 7.41%
   严格有效节点: 25/27

   详细分析:
     完美推理: 26 (96.30%)
     部分推理: 1 (3.70%)
     无效推理: 0 (0.00%)

================================================================================
处理记录 11/50
================================================================================
记录索引: 10
问题状态: correct
📁 从缓存加载提取结果: evaluation_results.LoG_6.deepseek-reasoner_record_10.json
✅ 使用缓存结果:
   - 句子数: 131
   - 提取的语句数: 136
   - 初始条件数: 20

=== Statement提取完成 ===
总句子数: 131
成功提取: 131
失败提取: 0
总statements数: 136

=== 开始清洗Statement格式 ===
原始statements数: 136
清洗后statements数: 128
过滤掉的statements数: 8
清洗后的statements:
  1. [planning] x is babgpus
  2. [planning] x is babrpus
  3. [planning] x is babspus
  4. [actual] x is nuhdpus
  5. [planning] nuhdpus is A
  6. [actual] lujdpus is kepxpus and nexvpus and yupkpus
  7. [actual] mimqpus is wefgpus
  8. [actual] hasxpus is vovppus and qadnpus and huctpus
  9. [actual] tihppus is rohspus
  10. [actual] cowwpus is nixfpus and jivbpus
  11. [actual] joympus is zejtpus and debmpus
  12. [actual] joqwpus is joympus and dowzpus and hegfpus
  13. [actual] petcpus is zivtpus and rafnpus
  14. [actual] nuhdpus is mikkpus and kecnpus
  15. [actual] diztpus is petcpus
  16. [actual] zivtpus is lujdpus and howcpus
  17. [actual] x is nuhdpus
  18. [actual] kepxpus is cowwpus and lizgpus
  19. [actual] zejtpus is mimqpus and yumbpus and nuwtpus
  20. [actual] mikkpus is joqwpus
  21. [actual] vovppus is tihppus
  22. [actual] nixfpus is karlpus
  23. [actual] rohspus is diztpus and kimhpus
  24. [actual] karlpus is babspus
  25. [actual] wefgpus is hasxpus
  26. [planning] x is babgpus
  27. [planning] x is babrpus
  28. [planning] x is babspus
  29. [actual] karlpus is babspus
  30. [actual] karlpus is babspus is a category that
  31. [planning] x is babspus
  32. [planning] x is the others
  33. [actual] nuhdpus is mikkpus and kecnpus
  34. [actual] nuhdpus is mikkpus and kecnpus
  35. [planning] mikkpus is B
  36. [planning] kecnpus is B
  37. [actual] mikkpus is joqwpus
  38. [actual] mikkpus is joqwpus
  39. [actual] nuhdpus is joqwpus
  40. [actual] nuhdpus is mikkpus
  41. [actual] joqwpus is joympus and dowzpus and hegfpus
  42. [actual] joqwpus is joympus
  43. [actual] joqwpus is dowzpus
  44. [actual] joqwpus is hegfpus
  45. [actual] nuhdpus is joympus
  46. [actual] nuhdpus is dowzpus
  47. [actual] nuhdpus is hegfpus
  48. [actual] joympus is zejtpus and debmpus
  49. [actual] joympus is zejtpus and debmpus
  50. [actual] zejtpus is mimqpus and yumbpus and nuwtpus
  51. [actual] zejtpus is mimqpus and yumbpus and nuwtpus
  52. [actual] mimqpus is wefgpus
  53. [actual] wefgpus is hasxpus
  54. [actual] mimqpus is wefgpus
  55. [actual] wefgpus is hasxpus
  56. [actual] hasxpus is vovppus and qadnpus and huctpus
  57. [actual] vovppus is tihppus
  58. [actual] tihppus is rohspus
  59. [actual] rohspus is diztpus and kimhpus
  60. [actual] diztpus is petcpus
  61. [actual] petcpus is zivtpus and rafnpus
  62. [actual] zivtpus is lujdpus and howcpus
  63. [actual] lujdpus is kepxpus and nexvpus and yupkpus
  64. [actual] kepxpus is cowwpus and lizgpus
  65. [actual] cowwpus is nixfpus and jivbpus
  66. [actual] nixfpus is karlpus
  67. [actual] karlpus is babspus
  68. [actual] nixfpus is karlpus
  69. [actual] karlpus is babspus
  70. [planning] x is this chain
  71. [actual] x is nuhdpus
  72. [actual] nuhdpus is mikkpus
  73. [actual] mikkpus is joqwpus
  74. [actual] joqwpus is joympus
  75. [actual] joympus is zejtpus
  76. [actual] zejtpus is mimqpus
  77. [actual] mimqpus is wefgpus
  78. [actual] wefgpus is hasxpus
  79. [actual] hasxpus is vovppus
  80. [actual] vovppus is tihppus
  81. [actual] tihppus is rohspus
  82. [actual] rohspus is diztpus
  83. [actual] diztpus is petcpus
  84. [actual] petcpus is zivtpus
  85. [actual] zivtpus is lujdpus
  86. [actual] lujdpus is kepxpus
  87. [actual] kepxpus is cowwpus
  88. [actual] cowwpus is nixfpus
  89. [actual] nixfpus is karlpus
  90. [actual] karlpus is babspus
  91. [actual] x is nuhdpus
  92. [actual] nuhdpus is mikkpus
  93. [actual] mikkpus is joqwpus
  94. [actual] joqwpus is joympus
  95. [actual] joympus is zejtpus
  96. [actual] zejtpus is mimqpus
  97. [actual] mimqpus is wefgpus
  98. [actual] hasxpus is vovppus
  99. [actual] vovppus is tihppus
  100. [actual] tihppus is rohspus
  101. [actual] rohspus is diztpus
  102. [actual] diztpus is petcpus
  103. [actual] petcpus is zivtpus
  104. [actual] zivtpus is lujdpus
  105. [actual] lujdpus is kepxpus
  106. [actual] kepxpus is cowwpus
  107. [actual] cowwpus is nixfpus
  108. [actual] nixfpus is karlpus
  109. [actual] karlpus is babspus
  110. [actual] nuhdpus is all these things
  111. [actual] nuhdpus is babspus
  112. [actual] x is babspus
  113. [planning] x is babgpus
  114. [planning] x is babrpus
  115. [planning] x is babspus
  116. [planning] x is babgpus or babrpus or babspus
  117. [planning] x is babspus
  118. [actual] hasxpus is vovppus
  119. [actual] hasxpus is qadnpus
  120. [actual] hasxpus is huctpus
  121. [actual] joympus is debmpus
  122. [actual] x is babspus
  123. [actual] x is babgpus or babrpus or babspus
  124. [planning] x is babgpus
  125. [planning] x is babrpus
  126. [planning] x is babgpus
  127. [planning] x is babrpus
  128. [actual] x is babspus

=== 开始标准化和解析节点 ===
清洗后statements数: 128
标准化后节点数: 121
过滤掉的无效实体数: 7
标准化后的节点:
  1. [planning] x → babgpus (原始: x is babgpus)
  2. [planning] x → babrpus (原始: x is babrpus)
  3. [planning] x → babspus (原始: x is babspus)
  4. [actual] x → nuhdpus (原始: x is nuhdpus)
  5. [actual] lujdpus → kepxpus and nexvpus and yupkpus (原始: lujdpus is kepxpus and nexvpus and yupkpus)
  6. [actual] mimqpus → wefgpus (原始: mimqpus is wefgpus)
  7. [actual] hasxpus → vovppus and qadnpus and huctpus (原始: hasxpus is vovppus and qadnpus and huctpus)
  8. [actual] tihppus → rohspus (原始: tihppus is rohspus)
  9. [actual] cowwpus → nixfpus and jivbpus (原始: cowwpus is nixfpus and jivbpus)
  10. [actual] joympus → zejtpus and debmpus (原始: joympus is zejtpus and debmpus)
  11. [actual] joqwpus → joympus and dowzpus and hegfpus (原始: joqwpus is joympus and dowzpus and hegfpus)
  12. [actual] petcpus → zivtpus and rafnpus (原始: petcpus is zivtpus and rafnpus)
  13. [actual] nuhdpus → mikkpus and kecnpus (原始: nuhdpus is mikkpus and kecnpus)
  14. [actual] diztpus → petcpus (原始: diztpus is petcpus)
  15. [actual] zivtpus → lujdpus and howcpus (原始: zivtpus is lujdpus and howcpus)
  16. [actual] x → nuhdpus (原始: x is nuhdpus)
  17. [actual] kepxpus → cowwpus and lizgpus (原始: kepxpus is cowwpus and lizgpus)
  18. [actual] zejtpus → mimqpus and yumbpus and nuwtpus (原始: zejtpus is mimqpus and yumbpus and nuwtpus)
  19. [actual] mikkpus → joqwpus (原始: mikkpus is joqwpus)
  20. [actual] vovppus → tihppus (原始: vovppus is tihppus)
  21. [actual] nixfpus → karlpus (原始: nixfpus is karlpus)
  22. [actual] rohspus → diztpus and kimhpus (原始: rohspus is diztpus and kimhpus)
  23. [actual] karlpus → babspus (原始: karlpus is babspus)
  24. [actual] wefgpus → hasxpus (原始: wefgpus is hasxpus)
  25. [planning] x → babgpus (原始: x is babgpus)
  26. [planning] x → babrpus (原始: x is babrpus)
  27. [planning] x → babspus (原始: x is babspus)
  28. [actual] karlpus → babspus (原始: karlpus is babspus)
  29. [planning] x → babspus (原始: x is babspus)
  30. [actual] nuhdpus → mikkpus and kecnpus (原始: nuhdpus is mikkpus and kecnpus)
  31. [actual] nuhdpus → mikkpus and kecnpus (原始: nuhdpus is mikkpus and kecnpus)
  32. [actual] mikkpus → joqwpus (原始: mikkpus is joqwpus)
  33. [actual] mikkpus → joqwpus (原始: mikkpus is joqwpus)
  34. [actual] nuhdpus → joqwpus (原始: nuhdpus is joqwpus)
  35. [actual] nuhdpus → mikkpus (原始: nuhdpus is mikkpus)
  36. [actual] joqwpus → joympus and dowzpus and hegfpus (原始: joqwpus is joympus and dowzpus and hegfpus)
  37. [actual] joqwpus → joympus (原始: joqwpus is joympus)
  38. [actual] joqwpus → dowzpus (原始: joqwpus is dowzpus)
  39. [actual] joqwpus → hegfpus (原始: joqwpus is hegfpus)
  40. [actual] nuhdpus → joympus (原始: nuhdpus is joympus)
  41. [actual] nuhdpus → dowzpus (原始: nuhdpus is dowzpus)
  42. [actual] nuhdpus → hegfpus (原始: nuhdpus is hegfpus)
  43. [actual] joympus → zejtpus and debmpus (原始: joympus is zejtpus and debmpus)
  44. [actual] joympus → zejtpus and debmpus (原始: joympus is zejtpus and debmpus)
  45. [actual] zejtpus → mimqpus and yumbpus and nuwtpus (原始: zejtpus is mimqpus and yumbpus and nuwtpus)
  46. [actual] zejtpus → mimqpus and yumbpus and nuwtpus (原始: zejtpus is mimqpus and yumbpus and nuwtpus)
  47. [actual] mimqpus → wefgpus (原始: mimqpus is wefgpus)
  48. [actual] wefgpus → hasxpus (原始: wefgpus is hasxpus)
  49. [actual] mimqpus → wefgpus (原始: mimqpus is wefgpus)
  50. [actual] wefgpus → hasxpus (原始: wefgpus is hasxpus)
  51. [actual] hasxpus → vovppus and qadnpus and huctpus (原始: hasxpus is vovppus and qadnpus and huctpus)
  52. [actual] vovppus → tihppus (原始: vovppus is tihppus)
  53. [actual] tihppus → rohspus (原始: tihppus is rohspus)
  54. [actual] rohspus → diztpus and kimhpus (原始: rohspus is diztpus and kimhpus)
  55. [actual] diztpus → petcpus (原始: diztpus is petcpus)
  56. [actual] petcpus → zivtpus and rafnpus (原始: petcpus is zivtpus and rafnpus)
  57. [actual] zivtpus → lujdpus and howcpus (原始: zivtpus is lujdpus and howcpus)
  58. [actual] lujdpus → kepxpus and nexvpus and yupkpus (原始: lujdpus is kepxpus and nexvpus and yupkpus)
  59. [actual] kepxpus → cowwpus and lizgpus (原始: kepxpus is cowwpus and lizgpus)
  60. [actual] cowwpus → nixfpus and jivbpus (原始: cowwpus is nixfpus and jivbpus)
  61. [actual] nixfpus → karlpus (原始: nixfpus is karlpus)
  62. [actual] karlpus → babspus (原始: karlpus is babspus)
  63. [actual] nixfpus → karlpus (原始: nixfpus is karlpus)
  64. [actual] karlpus → babspus (原始: karlpus is babspus)
  65. [actual] x → nuhdpus (原始: x is nuhdpus)
  66. [actual] nuhdpus → mikkpus (原始: nuhdpus is mikkpus)
  67. [actual] mikkpus → joqwpus (原始: mikkpus is joqwpus)
  68. [actual] joqwpus → joympus (原始: joqwpus is joympus)
  69. [actual] joympus → zejtpus (原始: joympus is zejtpus)
  70. [actual] zejtpus → mimqpus (原始: zejtpus is mimqpus)
  71. [actual] mimqpus → wefgpus (原始: mimqpus is wefgpus)
  72. [actual] wefgpus → hasxpus (原始: wefgpus is hasxpus)
  73. [actual] hasxpus → vovppus (原始: hasxpus is vovppus)
  74. [actual] vovppus → tihppus (原始: vovppus is tihppus)
  75. [actual] tihppus → rohspus (原始: tihppus is rohspus)
  76. [actual] rohspus → diztpus (原始: rohspus is diztpus)
  77. [actual] diztpus → petcpus (原始: diztpus is petcpus)
  78. [actual] petcpus → zivtpus (原始: petcpus is zivtpus)
  79. [actual] zivtpus → lujdpus (原始: zivtpus is lujdpus)
  80. [actual] lujdpus → kepxpus (原始: lujdpus is kepxpus)
  81. [actual] kepxpus → cowwpus (原始: kepxpus is cowwpus)
  82. [actual] cowwpus → nixfpus (原始: cowwpus is nixfpus)
  83. [actual] nixfpus → karlpus (原始: nixfpus is karlpus)
  84. [actual] karlpus → babspus (原始: karlpus is babspus)
  85. [actual] x → nuhdpus (原始: x is nuhdpus)
  86. [actual] nuhdpus → mikkpus (原始: nuhdpus is mikkpus)
  87. [actual] mikkpus → joqwpus (原始: mikkpus is joqwpus)
  88. [actual] joqwpus → joympus (原始: joqwpus is joympus)
  89. [actual] joympus → zejtpus (原始: joympus is zejtpus)
  90. [actual] zejtpus → mimqpus (原始: zejtpus is mimqpus)
  91. [actual] mimqpus → wefgpus (原始: mimqpus is wefgpus)
  92. [actual] hasxpus → vovppus (原始: hasxpus is vovppus)
  93. [actual] vovppus → tihppus (原始: vovppus is tihppus)
  94. [actual] tihppus → rohspus (原始: tihppus is rohspus)
  95. [actual] rohspus → diztpus (原始: rohspus is diztpus)
  96. [actual] diztpus → petcpus (原始: diztpus is petcpus)
  97. [actual] petcpus → zivtpus (原始: petcpus is zivtpus)
  98. [actual] zivtpus → lujdpus (原始: zivtpus is lujdpus)
  99. [actual] lujdpus → kepxpus (原始: lujdpus is kepxpus)
  100. [actual] kepxpus → cowwpus (原始: kepxpus is cowwpus)
  101. [actual] cowwpus → nixfpus (原始: cowwpus is nixfpus)
  102. [actual] nixfpus → karlpus (原始: nixfpus is karlpus)
  103. [actual] karlpus → babspus (原始: karlpus is babspus)
  104. [actual] nuhdpus → babspus (原始: nuhdpus is babspus)
  105. [actual] x → babspus (原始: x is babspus)
  106. [planning] x → babgpus (原始: x is babgpus)
  107. [planning] x → babrpus (原始: x is babrpus)
  108. [planning] x → babspus (原始: x is babspus)
  109. [planning] x → babgpus or babrpus or babspus (原始: x is babgpus or babrpus or babspus)
  110. [planning] x → babspus (原始: x is babspus)
  111. [actual] hasxpus → vovppus (原始: hasxpus is vovppus)
  112. [actual] hasxpus → qadnpus (原始: hasxpus is qadnpus)
  113. [actual] hasxpus → huctpus (原始: hasxpus is huctpus)
  114. [actual] joympus → debmpus (原始: joympus is debmpus)
  115. [actual] x → babspus (原始: x is babspus)
  116. [actual] x → babgpus or babrpus or babspus (原始: x is babgpus or babrpus or babspus)
  117. [planning] x → babgpus (原始: x is babgpus)
  118. [planning] x → babrpus (原始: x is babrpus)
  119. [planning] x → babgpus (原始: x is babgpus)
  120. [planning] x → babrpus (原始: x is babrpus)
  121. [actual] x → babspus (原始: x is babspus)

开始新的后处理...
[后处理] 从LoG数据文件中获取到图数据，节点数: 36
[后处理] 加载LoG图，包含 36 个节点
  LoG节点 0: x is babgpus or babrpus or babspus (规则: MP, 深度: 1)
  LoG节点 1: x is vovppus (规则: MP, 深度: 2)
  LoG节点 2: vovppus is babgpus or babrpus or babspus (规则: MP, 深度: 2)
  LoG节点 3: x is joympus (规则: CE, 深度: 3)
  LoG节点 4: joympus is vovppus (规则: MP, 深度: 3)
  LoG节点 5: vovppus is kepxpus (规则: MP, 深度: 3)
  LoG节点 6: kepxpus is babgpus or babrpus or babspus (规则: DI, 深度: 3)
  LoG节点 7: x is joympus and dowzpus (规则: MP, 深度: 4)
  LoG节点 8: joympus is mimqpus (规则: CE, 深度: 4)
  LoG节点 9: mimqpus is vovppus (规则: CE, 深度: 4)
  LoG节点 10: vovppus is zivtpus (规则: MP, 深度: 4)
  LoG节点 11: zivtpus is kepxpus (规则: CE, 深度: 4)
  LoG节点 12: kepxpus is babspus or babrpus (规则: MP, 深度: 4)
  LoG节点 13: x is mikkpus (规则: CE, 深度: 5)
  LoG节点 14: mikkpus is joympus and dowzpus (规则: CE, 深度: 5)
  LoG节点 15: joympus is mimqpus and yumbpus (规则: MP, 深度: 5)
  LoG节点 16: mimqpus is vovppus and qadnpus (规则: MP, 深度: 5)
  LoG节点 17: vovppus is diztpus (规则: MP, 深度: 5)
  LoG节点 18: diztpus is zivtpus (规则: CE, 深度: 5)
  LoG节点 19: zivtpus is kepxpus and nexvpus (规则: MP, 深度: 5)
  LoG节点 20: kepxpus is nixfpus (规则: MP, 深度: 5)
  LoG节点 21: nixfpus is babspus or babrpus (规则: DI, 深度: 5)
  LoG节点 22: x is mikkpus and kecnpus (规则: MP, 深度: 6)
  LoG节点 23: mikkpus is joympus and dowzpus and hegfpus (规则: MP, 深度: 6)
  LoG节点 24: joympus is zejtpus (规则: CE, 深度: 6)
  LoG节点 25: zejtpus is mimqpus and yumbpus (规则: CE, 深度: 6)
  LoG节点 26: mimqpus is hasxpus (规则: MP, 深度: 6)
  LoG节点 27: hasxpus is vovppus and qadnpus (规则: CE, 深度: 6)
  LoG节点 28: vovppus is rohspus (规则: MP, 深度: 6)
  LoG节点 29: rohspus is diztpus (规则: CE, 深度: 6)
  LoG节点 30: diztpus is zivtpus and rafnpus (规则: MP, 深度: 6)
  LoG节点 31: zivtpus is lujdpus (规则: CE, 深度: 6)
  LoG节点 32: lujdpus is kepxpus and nexvpus (规则: CE, 深度: 6)
  LoG节点 33: kepxpus is cowwpus (规则: CE, 深度: 6)
  LoG节点 34: cowwpus is nixfpus (规则: CE, 深度: 6)
  LoG节点 35: nixfpus is babspus (规则: MP, 深度: 6)

============================================================
[后处理] 开始处理节点
============================================================
📊 初始状态:
   - 标准化节点数: 121
   - 初始条件数: 20
   - LoG图节点数: 36

📋 初始条件列表:
    1. lujdpus is kepxpus and nexvpus and yupkpus
    2. mimqpus is wefgpus
    3. hasxpus is vovppus and qadnpus and huctpus
    4. tihppus is rohspus
    5. cowwpus is nixfpus and jivbpus
    6. joympus is zejtpus and debmpus
    7. joqwpus is joympus and dowzpus and hegfpus
    8. petcpus is zivtpus and rafnpus
    9. nuhdpus is mikkpus and kecnpus
   10. diztpus is petcpus
   11. zivtpus is lujdpus and howcpus
   12. x is nuhdpus
   13. kepxpus is cowwpus and lizgpus
   14. zejtpus is mimqpus and yumbpus and nuwtpus
   15. mikkpus is joqwpus
   16. vovppus is tihppus
   17. nixfpus is karlpus
   18. rohspus is diztpus and kimhpus
   19. karlpus is babspus
   20. wefgpus is hasxpus

🔧 构建初始Statement列表...
✅ 初始Statement列表构建完成，包含 20 个前提节点

🔍 开始处理actual节点...

   节点 1: x is nuhdpus
      ↻ 重复节点，计数: 2

   节点 2: lujdpus is kepxpus and nexvpus and yupkpus
      ↻ 重复节点，计数: 2

   节点 3: mimqpus is wefgpus
      ↻ 重复节点，计数: 2

   节点 4: hasxpus is vovppus and qadnpus and huctpus
      ↻ 重复节点，计数: 2

   节点 5: tihppus is rohspus
      ↻ 重复节点，计数: 2

   节点 6: cowwpus is nixfpus and jivbpus
      ↻ 重复节点，计数: 2

   节点 7: joympus is zejtpus and debmpus
      ↻ 重复节点，计数: 2

   节点 8: joqwpus is joympus and dowzpus and hegfpus
      ↻ 重复节点，计数: 2

   节点 9: petcpus is zivtpus and rafnpus
      ↻ 重复节点，计数: 2

   节点 10: nuhdpus is mikkpus and kecnpus
      ↻ 重复节点，计数: 2

   节点 11: diztpus is petcpus
      ↻ 重复节点，计数: 2

   节点 12: zivtpus is lujdpus and howcpus
      ↻ 重复节点，计数: 2

   节点 13: x is nuhdpus
      ↻ 重复节点，计数: 3

   节点 14: kepxpus is cowwpus and lizgpus
      ↻ 重复节点，计数: 2

   节点 15: zejtpus is mimqpus and yumbpus and nuwtpus
      ↻ 重复节点，计数: 2

   节点 16: mikkpus is joqwpus
      ↻ 重复节点，计数: 2

   节点 17: vovppus is tihppus
      ↻ 重复节点，计数: 2

   节点 18: nixfpus is karlpus
      ↻ 重复节点，计数: 2

   节点 19: rohspus is diztpus and kimhpus
      ↻ 重复节点，计数: 2

   节点 20: karlpus is babspus
      ↻ 重复节点，计数: 2

   节点 21: wefgpus is hasxpus
      ↻ 重复节点，计数: 2

   节点 22: karlpus is babspus
      ↻ 重复节点，计数: 3

   节点 23: nuhdpus is mikkpus and kecnpus
      ↻ 重复节点，计数: 3

   节点 24: nuhdpus is mikkpus and kecnpus
      ↻ 重复节点，计数: 4

   节点 25: mikkpus is joqwpus
      ↻ 重复节点，计数: 3

   节点 26: mikkpus is joqwpus
      ↻ 重复节点，计数: 4

   节点 27: nuhdpus is joqwpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP+CE
      📋 推理路径: MP+CE规则: nuhdpus is mikkpus → mikkpus is joqwpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: nuhdpus is mikkpus and kecnpus
  - 前提: mikkpus is joqwpus

   节点 28: nuhdpus is mikkpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: nuhdpus is mikkpus and kecnpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: nuhdpus is mikkpus and kecnpus

   节点 29: joqwpus is joympus and dowzpus and hegfpus
      ↻ 重复节点，计数: 3

   节点 30: joqwpus is joympus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: joqwpus is joympus and dowzpus and hegfpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: joqwpus is joympus and dowzpus and hegfpus

   节点 31: joqwpus is dowzpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: joqwpus is joympus and dowzpus and hegfpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: joqwpus is joympus and dowzpus and hegfpus

   节点 32: joqwpus is hegfpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: joqwpus is joympus and dowzpus and hegfpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: joqwpus is joympus and dowzpus and hegfpus

   节点 33: nuhdpus is joympus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: nuhdpus is joqwpus → joqwpus is joympus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: nuhdpus is joqwpus
  - 前提: joqwpus is joympus

   节点 34: nuhdpus is dowzpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: nuhdpus is joqwpus → joqwpus is dowzpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: nuhdpus is joqwpus
  - 前提: joqwpus is dowzpus

   节点 35: nuhdpus is hegfpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: nuhdpus is joqwpus → joqwpus is hegfpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: nuhdpus is joqwpus
  - 前提: joqwpus is hegfpus

   节点 36: joympus is zejtpus and debmpus
      ↻ 重复节点，计数: 3

   节点 37: joympus is zejtpus and debmpus
      ↻ 重复节点，计数: 4

   节点 38: zejtpus is mimqpus and yumbpus and nuwtpus
      ↻ 重复节点，计数: 3

   节点 39: zejtpus is mimqpus and yumbpus and nuwtpus
      ↻ 重复节点，计数: 4

   节点 40: mimqpus is wefgpus
      ↻ 重复节点，计数: 3

   节点 41: wefgpus is hasxpus
      ↻ 重复节点，计数: 3

   节点 42: mimqpus is wefgpus
      ↻ 重复节点，计数: 4

   节点 43: wefgpus is hasxpus
      ↻ 重复节点，计数: 4

   节点 44: hasxpus is vovppus and qadnpus and huctpus
      ↻ 重复节点，计数: 3

   节点 45: vovppus is tihppus
      ↻ 重复节点，计数: 3

   节点 46: tihppus is rohspus
      ↻ 重复节点，计数: 3

   节点 47: rohspus is diztpus and kimhpus
      ↻ 重复节点，计数: 3

   节点 48: diztpus is petcpus
      ↻ 重复节点，计数: 3

   节点 49: petcpus is zivtpus and rafnpus
      ↻ 重复节点，计数: 3

   节点 50: zivtpus is lujdpus and howcpus
      ↻ 重复节点，计数: 3

   节点 51: lujdpus is kepxpus and nexvpus and yupkpus
      ↻ 重复节点，计数: 3

   节点 52: kepxpus is cowwpus and lizgpus
      ↻ 重复节点，计数: 3

   节点 53: cowwpus is nixfpus and jivbpus
      ↻ 重复节点，计数: 3

   节点 54: nixfpus is karlpus
      ↻ 重复节点，计数: 3

   节点 55: karlpus is babspus
      ↻ 重复节点，计数: 4

   节点 56: nixfpus is karlpus
      ↻ 重复节点，计数: 4

   节点 57: karlpus is babspus
      ↻ 重复节点，计数: 5

   节点 58: x is nuhdpus
      ↻ 重复节点，计数: 4

   节点 59: nuhdpus is mikkpus
      ↻ 重复节点，计数: 2

   节点 60: mikkpus is joqwpus
      ↻ 重复节点，计数: 5

   节点 61: joqwpus is joympus
      ↻ 重复节点，计数: 2

   节点 62: joympus is zejtpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: joympus is zejtpus
      ✅ 验证成功 + LoG匹配

   节点 63: zejtpus is mimqpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: zejtpus is mimqpus and yumbpus and nuwtpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: zejtpus is mimqpus and yumbpus and nuwtpus
  ✓ 点亮LoG节点: zejtpus is mimqpus and yumbpus
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 64: mimqpus is wefgpus
      ↻ 重复节点，计数: 5

   节点 65: wefgpus is hasxpus
      ↻ 重复节点，计数: 5

   节点 66: hasxpus is vovppus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: hasxpus is vovppus and qadnpus and huctpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: hasxpus is vovppus and qadnpus and huctpus
  ✓ 点亮LoG节点: hasxpus is vovppus and qadnpus
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 67: vovppus is tihppus
      ↻ 重复节点，计数: 4

   节点 68: tihppus is rohspus
      ↻ 重复节点，计数: 4

   节点 69: rohspus is diztpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: rohspus is diztpus
      ✅ 验证成功 + LoG匹配

   节点 70: diztpus is petcpus
      ↻ 重复节点，计数: 4

   节点 71: petcpus is zivtpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: petcpus is zivtpus and rafnpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: petcpus is zivtpus and rafnpus

   节点 72: zivtpus is lujdpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: zivtpus is lujdpus
      ✅ 验证成功 + LoG匹配

   节点 73: lujdpus is kepxpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: lujdpus is kepxpus and nexvpus and yupkpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: lujdpus is kepxpus and nexvpus and yupkpus
  ✓ 点亮LoG节点: lujdpus is kepxpus and nexvpus
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 74: kepxpus is cowwpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: kepxpus is cowwpus
      ✅ 验证成功 + LoG匹配

   节点 75: cowwpus is nixfpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: cowwpus is nixfpus
      ✅ 验证成功 + LoG匹配

   节点 76: nixfpus is karlpus
      ↻ 重复节点，计数: 5

   节点 77: karlpus is babspus
      ↻ 重复节点，计数: 6

   节点 78: x is nuhdpus
      ↻ 重复节点，计数: 5

   节点 79: nuhdpus is mikkpus
      ↻ 重复节点，计数: 3

   节点 80: mikkpus is joqwpus
      ↻ 重复节点，计数: 6

   节点 81: joqwpus is joympus
      ↻ 重复节点，计数: 3

   节点 82: joympus is zejtpus
      ↻ 重复节点，计数: 2

   节点 83: zejtpus is mimqpus
      ↻ 重复节点，计数: 2

   节点 84: mimqpus is wefgpus
      ↻ 重复节点，计数: 6

   节点 85: hasxpus is vovppus
      ↻ 重复节点，计数: 2

   节点 86: vovppus is tihppus
      ↻ 重复节点，计数: 5

   节点 87: tihppus is rohspus
      ↻ 重复节点，计数: 5

   节点 88: rohspus is diztpus
      ↻ 重复节点，计数: 2

   节点 89: diztpus is petcpus
      ↻ 重复节点，计数: 5

   节点 90: petcpus is zivtpus
      ↻ 重复节点，计数: 2

   节点 91: zivtpus is lujdpus
      ↻ 重复节点，计数: 2

   节点 92: lujdpus is kepxpus
      ↻ 重复节点，计数: 2

   节点 93: kepxpus is cowwpus
      ↻ 重复节点，计数: 2

   节点 94: cowwpus is nixfpus
      ↻ 重复节点，计数: 2

   节点 95: nixfpus is karlpus
      ↻ 重复节点，计数: 6

   节点 96: karlpus is babspus
      ↻ 重复节点，计数: 7

   节点 97: nuhdpus is babspus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: nuhdpus is joqwpus → joqwpus is babspus
[后处理] 基于推理轨迹点亮节点，使用了 18 个前提条件:
  - 前提: nuhdpus is joqwpus
  - 前提: joqwpus is joympus
  - 前提: joympus is zejtpus
  - 前提: zejtpus is mimqpus
  - 前提: mimqpus is wefgpus
  - 前提: wefgpus is hasxpus
  - 前提: hasxpus is vovppus
  - 前提: vovppus is tihppus
  - 前提: tihppus is rohspus
  - 前提: rohspus is diztpus
  - 前提: diztpus is petcpus
  - 前提: petcpus is zivtpus
  - 前提: zivtpus is lujdpus
  - 前提: lujdpus is kepxpus
  - 前提: kepxpus is cowwpus
  - 前提: cowwpus is nixfpus
  - 前提: nixfpus is karlpus
  - 前提: karlpus is babspus
  ✓ 点亮LoG节点: vovppus is babgpus or babrpus or babspus
[子树点亮]     └─ 点亮依赖节点: vovppus is kepxpus (深度3)
[子树点亮]     └─ 点亮依赖节点: kepxpus is babgpus or babrpus or babspus (深度3)
[子树点亮]     └─ 点亮依赖节点: vovppus is zivtpus (深度4)
[子树点亮]     └─ 点亮依赖节点: zivtpus is kepxpus (深度4)
[子树点亮]     └─ 点亮依赖节点: kepxpus is babspus or babrpus (深度4)
[子树点亮]     └─ 点亮依赖节点: vovppus is diztpus (深度5)
[子树点亮]     └─ 点亮依赖节点: diztpus is zivtpus (深度5)
[子树点亮]     └─ 点亮依赖节点: zivtpus is kepxpus and nexvpus (深度5)
[子树点亮]     └─ 点亮依赖节点: kepxpus is nixfpus (深度5)
[子树点亮]     └─ 点亮依赖节点: nixfpus is babspus or babrpus (深度5)
[子树点亮]     └─ 点亮依赖节点: vovppus is rohspus (深度6)
[子树点亮]     └─ 点亮依赖节点: diztpus is zivtpus and rafnpus (深度6)
[子树点亮]     └─ 点亮依赖节点: nixfpus is babspus (深度6)
[后处理]   └─ 自动点亮依赖子树: 13 个节点
  ✓ 点亮LoG节点: joympus is vovppus
[子树点亮]     └─ 点亮依赖节点: joympus is mimqpus (深度4)
[子树点亮]     └─ 点亮依赖节点: mimqpus is vovppus (深度4)
[子树点亮]     └─ 点亮依赖节点: joympus is mimqpus and yumbpus (深度5)
[子树点亮]     └─ 点亮依赖节点: mimqpus is vovppus and qadnpus (深度5)
[子树点亮]     └─ 点亮依赖节点: mimqpus is hasxpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 5 个节点
[后处理] 通过推理轨迹额外点亮了 2 个LoG节点

   节点 98: x is babspus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is nuhdpus → nuhdpus is babspus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: x is nuhdpus
  - 前提: nuhdpus is babspus
  ✓ 点亮LoG节点: x is babgpus or babrpus or babspus
[子树点亮]     └─ 点亮依赖节点: x is vovppus (深度2)
[子树点亮]     └─ 点亮依赖节点: x is joympus (深度3)
[子树点亮]     └─ 点亮依赖节点: x is joympus and dowzpus (深度4)
[子树点亮]     └─ 点亮依赖节点: x is mikkpus (深度5)
[子树点亮]     └─ 点亮依赖节点: mikkpus is joympus and dowzpus (深度5)
[子树点亮]     └─ 点亮依赖节点: x is mikkpus and kecnpus (深度6)
[子树点亮]     └─ 点亮依赖节点: mikkpus is joympus and dowzpus and hegfpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 7 个节点
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 99: hasxpus is vovppus
      ↻ 重复节点，计数: 3

   节点 100: hasxpus is qadnpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: hasxpus is vovppus and qadnpus and huctpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: hasxpus is vovppus and qadnpus and huctpus

   节点 101: hasxpus is huctpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: hasxpus is vovppus and qadnpus and huctpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: hasxpus is vovppus and qadnpus and huctpus

   节点 102: joympus is debmpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: joympus is zejtpus and debmpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: joympus is zejtpus and debmpus

   节点 103: x is babspus
      ↻ 重复节点，计数: 2

   节点 104: x is babgpus or babrpus or babspus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 105: x is babspus
      ↻ 重复节点，计数: 3

🔍 分析推理路径完整性...

============================================================
[后处理] 处理完成
============================================================
📈 处理统计:
   - 处理的actual节点: 105
   - 新增节点: 23
   - 更新已存在节点: 82
   - 点亮的LoG节点: 36

🎯 推理质量统计:
   - 完美推理: 23 (节点正确 + 路径正确)
   - 部分推理: 0 (节点正确 + 路径部分错误)
   - 无效推理: 0 (节点错误或路径完全错误)
[LoG分析] LoG图: 36节点, 20前提, 复杂度1-20

📊 === Statement列表分析 ===
📈 节点统计:
   - 总节点数: 43
   - 前提节点: 20
   - 推理节点: 23
   - 幻觉节点: 0
   - 点亮LoG节点: 36

✅ 推理节点详情:
   🟢 nuhdpus is joqwpus (出现1次, 质量:perfect)
   🟢 nuhdpus is mikkpus (出现3次, 质量:perfect)
   🟢 joqwpus is joympus (出现3次, 质量:perfect)
   🟢 joqwpus is dowzpus (出现1次, 质量:perfect)
   🟢 joqwpus is hegfpus (出现1次, 质量:perfect)
   🟢 nuhdpus is joympus (出现1次, 质量:perfect)
   🟢 nuhdpus is dowzpus (出现1次, 质量:perfect)
   🟢 nuhdpus is hegfpus (出现1次, 质量:perfect)
   🟢 joympus is zejtpus (出现2次, 质量:perfect)
   🟢 zejtpus is mimqpus (出现2次, 质量:perfect)
   🟢 hasxpus is vovppus (出现3次, 质量:perfect)
   🟢 rohspus is diztpus (出现2次, 质量:perfect)
   🟢 petcpus is zivtpus (出现2次, 质量:perfect)
   🟢 zivtpus is lujdpus (出现2次, 质量:perfect)
   🟢 lujdpus is kepxpus (出现2次, 质量:perfect)
   🟢 kepxpus is cowwpus (出现2次, 质量:perfect)
   🟢 cowwpus is nixfpus (出现2次, 质量:perfect)
   🟢 nuhdpus is babspus (出现1次, 质量:perfect)
   🟢 x is babspus (出现3次, 质量:perfect)
   🟢 hasxpus is qadnpus (出现1次, 质量:perfect)
   🟢 hasxpus is huctpus (出现1次, 质量:perfect)
   🟢 joympus is debmpus (出现1次, 质量:perfect)
   🟢 x is babgpus or babrpus or babspus (出现1次, 质量:perfect)

🔥 点亮的LoG节点:
   - x is vovppus
   - zivtpus is kepxpus and nexvpus
   - vovppus is kepxpus
   - joympus is mimqpus and yumbpus
   - mimqpus is vovppus
   - nixfpus is babspus
   - x is joympus
   - lujdpus is kepxpus and nexvpus
   - mimqpus is vovppus and qadnpus
   - joympus is vovppus
   - diztpus is zivtpus and rafnpus
   - zivtpus is lujdpus
   - joympus is mimqpus
   - x is joympus and dowzpus
   - mikkpus is joympus and dowzpus and hegfpus
   - zejtpus is mimqpus and yumbpus
   - nixfpus is babspus or babrpus
   - zivtpus is kepxpus
   - mikkpus is joympus and dowzpus
   - hasxpus is vovppus and qadnpus
   - vovppus is diztpus
   - x is mikkpus
   - kepxpus is babgpus or babrpus or babspus
   - vovppus is zivtpus
   - kepxpus is cowwpus
   - vovppus is rohspus
   - kepxpus is babspus or babrpus
   - rohspus is diztpus
   - x is babgpus or babrpus or babspus
   - vovppus is babgpus or babrpus or babspus
   - mimqpus is hasxpus
   - diztpus is zivtpus
   - cowwpus is nixfpus
   - kepxpus is nixfpus
   - joympus is zejtpus
   - x is mikkpus and kecnpus

============================================================
📊 计算评估指标
============================================================

🎯 计算Coverage指标...
   深度Coverage: 6/6 = 100.00%
   最深点亮节点: x is babgpus or babrpus or babspus (第6层)
   节点Coverage: 36/36 = 100.00%
   前提条件Coverage: 20/20 = 100.00%
   各推理层点亮比例:
     第1层: 14/14 = 100.00%
     第2层: 9/9 = 100.00%
     第3层: 6/6 = 100.00%
     第4层: 4/4 = 100.00%
     第5层: 2/2 = 100.00%
     第6层: 1/1 = 100.00%

🎯 计算Precision指标...
   Error Rate: 0/23 = 0.00%
   可推导节点: 23/23
   Strict Error Rate: 0/23 = 0.00%
   严格有效节点: 23/23

   详细分析:
     完美推理: 23 (100.00%)
     部分推理: 0 (0.00%)
     无效推理: 0 (0.00%)

================================================================================
处理记录 12/50
================================================================================
记录索引: 11
问题状态: correct
📁 从缓存加载提取结果: evaluation_results.LoG_6.deepseek-reasoner_record_11.json
✅ 使用缓存结果:
   - 句子数: 231
   - 提取的语句数: 296
   - 初始条件数: 26

=== Statement提取完成 ===
总句子数: 231
成功提取: 231
失败提取: 0
总statements数: 296

=== 开始清洗Statement格式 ===
原始statements数: 296
清洗后statements数: 236
过滤掉的statements数: 60
清洗后的statements:
  1. [planning] x is babgpus
  2. [planning] x is babrpus
  3. [planning] x is babspus
  4. [planning] x is babgpus
  5. [planning] x is babrpus
  6. [planning] x is babspus
  7. [actual] lerwpus is babgpus and rayspus
  8. [actual] x is relmpus and muqcpus
  9. [planning] x is babgpus
  10. [planning] x is babgpus
  11. [actual] lerwpus is yexbpus
  12. [actual] yexbpus is lerwpus and pazjpus
  13. [actual] x is relmpus
  14. [actual] relmpus is babgpus
  15. [actual] x is babgpus
  16. [planning] x is babgpus and babkpus and babmpus
  17. [planning] x is babgpus
  18. [planning] x is relmpus
  19. [planning] x is babgpus
  20. [planning] x is babgpus
  21. [actual] x is vokkpus
  22. [actual] x is mirmpus and xudmpus
  23. [actual] x is ciwnpus
  24. [actual] vokkpus is wiqtpus
  25. [actual] vokkpus is lalhpus
  26. [actual] wiqtpus is wipkpus
  27. [actual] wipkpus is yaxvpus and xakvpus
  28. [actual] yaxvpus is quczpus
  29. [actual] quczpus is degvpus
  30. [actual] degvpus is nukfpus
  31. [planning] degvpus is babspus
  32. [actual] degvpus is nukfpus
  33. [planning] degvpus is babspus
  34. [actual] degvpus is nukfpus
  35. [actual] degvpus is babspus
  36. [actual] degvpus is nukfpus
  37. [actual] degvpus is babspus
  38. [actual] yaxvpus is quczpus
  39. [actual] degvpus is nukfpus
  40. [actual] x is vokkpus
  41. [actual] biykpus is mexzpus and dikbpus
  42. [actual] x is mirmpus and xudmpus
  43. [actual] wipkpus is yaxvpus and xakvpus
  44. [actual] macbpus is fekkpus
  45. [actual] x is ciwnpus
  46. [actual] tidlpus is silxpus
  47. [actual] gexjpus is viztpus and wermpus
  48. [actual] vokkpus is wiqtpus and lalhpus
  49. [actual] mudrpus is macbpus
  50. [actual] wiqtpus is wipkpus
  51. [actual] mexzpus is mudrpus and wuwxpus and cumnpus
  52. [actual] sawgpus is babgpus and damspus
  53. [actual] silxpus is biykpus and wosgpus and fojbpus
  54. [actual] mirmpus is hiktpus
  55. [actual] hiktpus is pacbpus and hehvpus
  56. [actual] degvpus is babspus
  57. [actual] degvpus is babspus
  58. [actual] degvpus is nukfpus
  59. [actual] degvpus is babspus
  60. [actual] yaxvpus is quczpus
  61. [actual] degvpus is nukfpus
  62. [actual] x is vokkpus
  63. [actual] degvpus is babspus
  64. [actual] yaxvpus is quczpus
  65. [actual] degvpus is nukfpus
  66. [actual] x is vokkpus
  67. [actual] biykpus is mexzpus and dikbpus
  68. [actual] x is mirmpus and xudmpus
  69. [actual] wipkpus is yaxvpus and xakvpus
  70. [actual] macbpus is fekkpus
  71. [actual] x is ciwnpus
  72. [actual] tidlpus is silxpus
  73. [actual] gexjpus is viztpus and wermpus
  74. [actual] vokkpus is wiqtpus and lalhpus
  75. [actual] mudrpus is macbpus
  76. [actual] wiqtpus is wipkpus
  77. [actual] mexzpus is mudrpus and wuwxpus and cumnpus
  78. [actual] sawgpus is babgpus and damspus
  79. [actual] silxpus is biykpus and wosgpus and fojbpus
  80. [actual] mirmpus is hiktpus
  81. [actual] hiktpus is pacbpus and hehvpus
  82. [actual] degvpus is babspus
  83. [actual] qukcpus is babrpus and xotzpus
  84. [actual] quczpus is degvpus
  85. [actual] ciwnpus is tidlpus and pirbpus
  86. [actual] viztpus is qukcpus
  87. [actual] pacbpus is gexjpus
  88. [actual] jaqspus is sawgpus and mefspus
  89. [actual] fekkpus is jaqspus and mefjpus
  90. [actual] degvpus is babspus
  91. [actual] degvpus is babspus
  92. [planning] x is babgpus
  93. [planning] x is babrpus
  94. [planning] x is babspus
  95. [actual] degvpus is babspus
  96. [planning] x is babspus
  97. [actual] x is vokkpus
  98. [actual] vokkpus is wiqtpus
  99. [actual] wiqtpus is wipkpus
  100. [actual] wipkpus is yaxvpus
  101. [actual] yaxvpus is quczpus
  102. [actual] quczpus is degvpus
  103. [actual] x is degvpus
  104. [actual] x is vokkpus
  105. [actual] vokkpus is wiqtpus
  106. [actual] x is wiqtpus
  107. [planning] x is wiqtpus
  108. [planning] vokkpus is a category that contains wiqtpus
  109. [actual] x is vokkpus
  110. [planning] x is wiqtpus
  111. [actual] x is vokkpus
  112. [actual] vokkpus is wiqtpus
  113. [actual] x is wiqtpus
  114. [planning] x is wiqtpus
  115. [actual] vokkpus is wiqtpus
  116. [actual] vokkpus is a subset of wiqtpus
  117. [actual] x is vokkpus
  118. [actual] x is wiqtpus
  119. [actual] wiqtpus is wipkpus
  120. [actual] x is wipkpus
  121. [actual] wipkpus is yaxvpus and xakvpus
  122. [actual] wipkpus is subset of yaxvpus
  123. [actual] x is yaxvpus
  124. [actual] yaxvpus is quczpus
  125. [planning] x is quczpus
  126. [actual] quczpus is degvpus
  127. [planning] x is degvpus
  128. [actual] degvpus is babspus
  129. [planning] x is babspus
  130. [actual] x is babspus
  131. [actual] x is babspus
  132. [actual] babgpus is mentioned in sawgpus
  133. [actual] sawgpus is babgpus and damspus
  134. [actual] babgpus is a subcategory of sawgpus
  135. [planning] sawgpus is babgpus
  136. [actual] sawgpus is babgpus and damspus
  137. [planning] sawgpus is babgpus and damspus
  138. [actual] sawgpus is babgpus and damspus
  139. [planning] sawgpus is babgpus
  140. [planning] sawgpus is babgpus and damspus
  141. [actual] sawgpus is babgpus and damspus
  142. [actual] sawgpus is a subset of babgpus
  143. [actual] sawgpus is a subset of damspus
  144. [actual] jaqspus is sawgpus and mefspus
  145. [planning] jaqspus is sawgpus and mefspus
  146. [actual] jaqspus is sawgpus
  147. [actual] sawgpus is babgpus
  148. [actual] jaqspus is babgpus
  149. [planning] x is babgpus
  150. [actual] x is relmpus
  151. [actual] relmpus is babgpus
  152. [actual] x is babgpus
  153. [actual] sawgpus is babgpus and damspus
  154. [planning] babgpus is category
  155. [planning] damspus is category
  156. [planning] sawgpus is category
  157. [actual] sawgpus is babgpus
  158. [planning] sawgpus is babgpus
  159. [planning] sawgpus is a type of babgpus
  160. [actual] sawgpus is babgpus and damspus
  161. [actual] biykpus is mexzpus and dikbpus
  162. [planning] x is babgpus
  163. [actual] qukcpus is babrpus
  164. [actual] qukcpus is xotzpus
  165. [planning] x is babrpus
  166. [planning] x is babgpus and babrpus
  167. [actual] x is ciwnpus
  168. [actual] ciwnpus is tidlpus and pirbpus
  169. [actual] ciwnpus is tidlpus
  170. [actual] ciwnpus is pirbpus
  171. [actual] tidlpus is silxpus
  172. [actual] tidlpus is silxpus
  173. [actual] silxpus is biykpus and wosgpus and fojbpus
  174. [actual] silxpus is biykpus
  175. [actual] silxpus is wosgpus
  176. [actual] silxpus is fojbpus
  177. [actual] biykpus is mexzpus and dikbpus
  178. [actual] biykpus is mexzpus
  179. [actual] biykpus is dikbpus
  180. [actual] mexzpus is mudrpus and wuwxpus and cumnpus
  181. [actual] mudrpus is macbpus
  182. [actual] mudrpus is macbpus
  183. [actual] macbpus is fekkpus
  184. [actual] macbpus is fekkpus
  185. [actual] fekkpus is jaqspus and mefjpus
  186. [actual] fekkpus is jaqspus
  187. [actual] fekkpus is mefjpus
  188. [actual] jaqspus is sawgpus and mefspus
  189. [actual] jaqspus is sawgpus
  190. [actual] jaqspus is mefspus
  191. [actual] sawgpus is babgpus and damspus
  192. [actual] sawgpus is babgpus
  193. [actual] sawgpus is damspus
  194. [actual] fekkpus is jaqspus
  195. [actual] fekkpus is babgpus
  196. [actual] ciwnpus is tidlpus
  197. [actual] ciwnpus is babgpus
  198. [actual] x is ciwnpus
  199. [actual] x is ciwnpus
  200. [planning] x is babgpus
  201. [actual] x is vokkpus
  202. [actual] x is vokkpus
  203. [actual] x is a subset of vokkpus
  204. [actual] x is ciwnpus
  205. [planning] x is babgpus
  206. [actual] x is babgpus
  207. [planning] x is babrpus
  208. [actual] babrpus is qukcpus
  209. [actual] qukcpus is babrpus and xotzpus
  210. [planning] x is qukcpus
  211. [planning] x is babrpus
  212. [actual] x is mirmpus
  213. [actual] x is mirmpus and xudmpus
  214. [actual] mirmpus is hiktpus
  215. [actual] mirmpus is hiktpus
  216. [actual] hiktpus is pacbpus and hehvpus
  217. [actual] hiktpus is pacbpus
  218. [actual] hiktpus is hehvpus
  219. [actual] pacbpus is gexjpus
  220. [actual] pacbpus is gexjpus
  221. [actual] gexjpus is viztpus and wermpus
  222. [actual] gexjpus is viztpus
  223. [actual] gexjpus is wermpus
  224. [actual] viztpus is qukcpus
  225. [actual] viztpus is qukcpus
  226. [actual] x is mirmpus
  227. [actual] qukcpus is babrpus
  228. [actual] x is babrpus
  229. [actual] x is babrpus
  230. [actual] x is babgpus and babrpus and babspus
  231. [actual] degvpus is babspus
  232. [actual] sawgpus is babgpus
  233. [planning] jaqspus is sawgpus
  234. [actual] viztpus is qukcpus
  235. [actual] qukcpus is babrpus
  236. [actual] x is babgpus and babrpus and babspus

=== 开始标准化和解析节点 ===
清洗后statements数: 236
标准化后节点数: 224
过滤掉的无效实体数: 12
标准化后的节点:
  1. [planning] x → babgpus (原始: x is babgpus)
  2. [planning] x → babrpus (原始: x is babrpus)
  3. [planning] x → babspus (原始: x is babspus)
  4. [planning] x → babgpus (原始: x is babgpus)
  5. [planning] x → babrpus (原始: x is babrpus)
  6. [planning] x → babspus (原始: x is babspus)
  7. [actual] lerwpus → babgpus and rayspus (原始: lerwpus is babgpus and rayspus)
  8. [actual] x → relmpus and muqcpus (原始: x is relmpus and muqcpus)
  9. [planning] x → babgpus (原始: x is babgpus)
  10. [planning] x → babgpus (原始: x is babgpus)
  11. [actual] lerwpus → yexbpus (原始: lerwpus is yexbpus)
  12. [actual] yexbpus → lerwpus and pazjpus (原始: yexbpus is lerwpus and pazjpus)
  13. [actual] x → relmpus (原始: x is relmpus)
  14. [actual] relmpus → babgpus (原始: relmpus is babgpus)
  15. [actual] x → babgpus (原始: x is babgpus)
  16. [planning] x → babgpus and babkpus and babmpus (原始: x is babgpus and babkpus and babmpus)
  17. [planning] x → babgpus (原始: x is babgpus)
  18. [planning] x → relmpus (原始: x is relmpus)
  19. [planning] x → babgpus (原始: x is babgpus)
  20. [planning] x → babgpus (原始: x is babgpus)
  21. [actual] x → vokkpus (原始: x is vokkpus)
  22. [actual] x → mirmpus and xudmpus (原始: x is mirmpus and xudmpus)
  23. [actual] x → ciwnpus (原始: x is ciwnpus)
  24. [actual] vokkpus → wiqtpus (原始: vokkpus is wiqtpus)
  25. [actual] vokkpus → lalhpus (原始: vokkpus is lalhpus)
  26. [actual] wiqtpus → wipkpus (原始: wiqtpus is wipkpus)
  27. [actual] wipkpus → yaxvpus and xakvpus (原始: wipkpus is yaxvpus and xakvpus)
  28. [actual] yaxvpus → quczpus (原始: yaxvpus is quczpus)
  29. [actual] quczpus → degvpus (原始: quczpus is degvpus)
  30. [actual] degvpus → nukfpus (原始: degvpus is nukfpus)
  31. [planning] degvpus → babspus (原始: degvpus is babspus)
  32. [actual] degvpus → nukfpus (原始: degvpus is nukfpus)
  33. [planning] degvpus → babspus (原始: degvpus is babspus)
  34. [actual] degvpus → nukfpus (原始: degvpus is nukfpus)
  35. [actual] degvpus → babspus (原始: degvpus is babspus)
  36. [actual] degvpus → nukfpus (原始: degvpus is nukfpus)
  37. [actual] degvpus → babspus (原始: degvpus is babspus)
  38. [actual] yaxvpus → quczpus (原始: yaxvpus is quczpus)
  39. [actual] degvpus → nukfpus (原始: degvpus is nukfpus)
  40. [actual] x → vokkpus (原始: x is vokkpus)
  41. [actual] biykpus → mexzpus and dikbpus (原始: biykpus is mexzpus and dikbpus)
  42. [actual] x → mirmpus and xudmpus (原始: x is mirmpus and xudmpus)
  43. [actual] wipkpus → yaxvpus and xakvpus (原始: wipkpus is yaxvpus and xakvpus)
  44. [actual] macbpus → fekkpus (原始: macbpus is fekkpus)
  45. [actual] x → ciwnpus (原始: x is ciwnpus)
  46. [actual] tidlpus → silxpus (原始: tidlpus is silxpus)
  47. [actual] gexjpus → viztpus and wermpus (原始: gexjpus is viztpus and wermpus)
  48. [actual] vokkpus → wiqtpus and lalhpus (原始: vokkpus is wiqtpus and lalhpus)
  49. [actual] mudrpus → macbpus (原始: mudrpus is macbpus)
  50. [actual] wiqtpus → wipkpus (原始: wiqtpus is wipkpus)
  51. [actual] mexzpus → mudrpus and wuwxpus and cumnpus (原始: mexzpus is mudrpus and wuwxpus and cumnpus)
  52. [actual] sawgpus → babgpus and damspus (原始: sawgpus is babgpus and damspus)
  53. [actual] silxpus → biykpus and wosgpus and fojbpus (原始: silxpus is biykpus and wosgpus and fojbpus)
  54. [actual] mirmpus → hiktpus (原始: mirmpus is hiktpus)
  55. [actual] hiktpus → pacbpus and hehvpus (原始: hiktpus is pacbpus and hehvpus)
  56. [actual] degvpus → babspus (原始: degvpus is babspus)
  57. [actual] degvpus → babspus (原始: degvpus is babspus)
  58. [actual] degvpus → nukfpus (原始: degvpus is nukfpus)
  59. [actual] degvpus → babspus (原始: degvpus is babspus)
  60. [actual] yaxvpus → quczpus (原始: yaxvpus is quczpus)
  61. [actual] degvpus → nukfpus (原始: degvpus is nukfpus)
  62. [actual] x → vokkpus (原始: x is vokkpus)
  63. [actual] degvpus → babspus (原始: degvpus is babspus)
  64. [actual] yaxvpus → quczpus (原始: yaxvpus is quczpus)
  65. [actual] degvpus → nukfpus (原始: degvpus is nukfpus)
  66. [actual] x → vokkpus (原始: x is vokkpus)
  67. [actual] biykpus → mexzpus and dikbpus (原始: biykpus is mexzpus and dikbpus)
  68. [actual] x → mirmpus and xudmpus (原始: x is mirmpus and xudmpus)
  69. [actual] wipkpus → yaxvpus and xakvpus (原始: wipkpus is yaxvpus and xakvpus)
  70. [actual] macbpus → fekkpus (原始: macbpus is fekkpus)
  71. [actual] x → ciwnpus (原始: x is ciwnpus)
  72. [actual] tidlpus → silxpus (原始: tidlpus is silxpus)
  73. [actual] gexjpus → viztpus and wermpus (原始: gexjpus is viztpus and wermpus)
  74. [actual] vokkpus → wiqtpus and lalhpus (原始: vokkpus is wiqtpus and lalhpus)
  75. [actual] mudrpus → macbpus (原始: mudrpus is macbpus)
  76. [actual] wiqtpus → wipkpus (原始: wiqtpus is wipkpus)
  77. [actual] mexzpus → mudrpus and wuwxpus and cumnpus (原始: mexzpus is mudrpus and wuwxpus and cumnpus)
  78. [actual] sawgpus → babgpus and damspus (原始: sawgpus is babgpus and damspus)
  79. [actual] silxpus → biykpus and wosgpus and fojbpus (原始: silxpus is biykpus and wosgpus and fojbpus)
  80. [actual] mirmpus → hiktpus (原始: mirmpus is hiktpus)
  81. [actual] hiktpus → pacbpus and hehvpus (原始: hiktpus is pacbpus and hehvpus)
  82. [actual] degvpus → babspus (原始: degvpus is babspus)
  83. [actual] qukcpus → babrpus and xotzpus (原始: qukcpus is babrpus and xotzpus)
  84. [actual] quczpus → degvpus (原始: quczpus is degvpus)
  85. [actual] ciwnpus → tidlpus and pirbpus (原始: ciwnpus is tidlpus and pirbpus)
  86. [actual] viztpus → qukcpus (原始: viztpus is qukcpus)
  87. [actual] pacbpus → gexjpus (原始: pacbpus is gexjpus)
  88. [actual] jaqspus → sawgpus and mefspus (原始: jaqspus is sawgpus and mefspus)
  89. [actual] fekkpus → jaqspus and mefjpus (原始: fekkpus is jaqspus and mefjpus)
  90. [actual] degvpus → babspus (原始: degvpus is babspus)
  91. [actual] degvpus → babspus (原始: degvpus is babspus)
  92. [planning] x → babgpus (原始: x is babgpus)
  93. [planning] x → babrpus (原始: x is babrpus)
  94. [planning] x → babspus (原始: x is babspus)
  95. [actual] degvpus → babspus (原始: degvpus is babspus)
  96. [planning] x → babspus (原始: x is babspus)
  97. [actual] x → vokkpus (原始: x is vokkpus)
  98. [actual] vokkpus → wiqtpus (原始: vokkpus is wiqtpus)
  99. [actual] wiqtpus → wipkpus (原始: wiqtpus is wipkpus)
  100. [actual] wipkpus → yaxvpus (原始: wipkpus is yaxvpus)
  101. [actual] yaxvpus → quczpus (原始: yaxvpus is quczpus)
  102. [actual] quczpus → degvpus (原始: quczpus is degvpus)
  103. [actual] x → degvpus (原始: x is degvpus)
  104. [actual] x → vokkpus (原始: x is vokkpus)
  105. [actual] vokkpus → wiqtpus (原始: vokkpus is wiqtpus)
  106. [actual] x → wiqtpus (原始: x is wiqtpus)
  107. [planning] x → wiqtpus (原始: x is wiqtpus)
  108. [actual] x → vokkpus (原始: x is vokkpus)
  109. [planning] x → wiqtpus (原始: x is wiqtpus)
  110. [actual] x → vokkpus (原始: x is vokkpus)
  111. [actual] vokkpus → wiqtpus (原始: vokkpus is wiqtpus)
  112. [actual] x → wiqtpus (原始: x is wiqtpus)
  113. [planning] x → wiqtpus (原始: x is wiqtpus)
  114. [actual] vokkpus → wiqtpus (原始: vokkpus is wiqtpus)
  115. [actual] x → vokkpus (原始: x is vokkpus)
  116. [actual] x → wiqtpus (原始: x is wiqtpus)
  117. [actual] wiqtpus → wipkpus (原始: wiqtpus is wipkpus)
  118. [actual] x → wipkpus (原始: x is wipkpus)
  119. [actual] wipkpus → yaxvpus and xakvpus (原始: wipkpus is yaxvpus and xakvpus)
  120. [actual] x → yaxvpus (原始: x is yaxvpus)
  121. [actual] yaxvpus → quczpus (原始: yaxvpus is quczpus)
  122. [planning] x → quczpus (原始: x is quczpus)
  123. [actual] quczpus → degvpus (原始: quczpus is degvpus)
  124. [planning] x → degvpus (原始: x is degvpus)
  125. [actual] degvpus → babspus (原始: degvpus is babspus)
  126. [planning] x → babspus (原始: x is babspus)
  127. [actual] x → babspus (原始: x is babspus)
  128. [actual] x → babspus (原始: x is babspus)
  129. [actual] sawgpus → babgpus and damspus (原始: sawgpus is babgpus and damspus)
  130. [planning] sawgpus → babgpus (原始: sawgpus is babgpus)
  131. [actual] sawgpus → babgpus and damspus (原始: sawgpus is babgpus and damspus)
  132. [planning] sawgpus → babgpus and damspus (原始: sawgpus is babgpus and damspus)
  133. [actual] sawgpus → babgpus and damspus (原始: sawgpus is babgpus and damspus)
  134. [planning] sawgpus → babgpus (原始: sawgpus is babgpus)
  135. [planning] sawgpus → babgpus and damspus (原始: sawgpus is babgpus and damspus)
  136. [actual] sawgpus → babgpus and damspus (原始: sawgpus is babgpus and damspus)
  137. [actual] jaqspus → sawgpus and mefspus (原始: jaqspus is sawgpus and mefspus)
  138. [planning] jaqspus → sawgpus and mefspus (原始: jaqspus is sawgpus and mefspus)
  139. [actual] jaqspus → sawgpus (原始: jaqspus is sawgpus)
  140. [actual] sawgpus → babgpus (原始: sawgpus is babgpus)
  141. [actual] jaqspus → babgpus (原始: jaqspus is babgpus)
  142. [planning] x → babgpus (原始: x is babgpus)
  143. [actual] x → relmpus (原始: x is relmpus)
  144. [actual] relmpus → babgpus (原始: relmpus is babgpus)
  145. [actual] x → babgpus (原始: x is babgpus)
  146. [actual] sawgpus → babgpus and damspus (原始: sawgpus is babgpus and damspus)
  147. [actual] sawgpus → babgpus (原始: sawgpus is babgpus)
  148. [planning] sawgpus → babgpus (原始: sawgpus is babgpus)
  149. [actual] sawgpus → babgpus and damspus (原始: sawgpus is babgpus and damspus)
  150. [actual] biykpus → mexzpus and dikbpus (原始: biykpus is mexzpus and dikbpus)
  151. [planning] x → babgpus (原始: x is babgpus)
  152. [actual] qukcpus → babrpus (原始: qukcpus is babrpus)
  153. [actual] qukcpus → xotzpus (原始: qukcpus is xotzpus)
  154. [planning] x → babrpus (原始: x is babrpus)
  155. [planning] x → babgpus and babrpus (原始: x is babgpus and babrpus)
  156. [actual] x → ciwnpus (原始: x is ciwnpus)
  157. [actual] ciwnpus → tidlpus and pirbpus (原始: ciwnpus is tidlpus and pirbpus)
  158. [actual] ciwnpus → tidlpus (原始: ciwnpus is tidlpus)
  159. [actual] ciwnpus → pirbpus (原始: ciwnpus is pirbpus)
  160. [actual] tidlpus → silxpus (原始: tidlpus is silxpus)
  161. [actual] tidlpus → silxpus (原始: tidlpus is silxpus)
  162. [actual] silxpus → biykpus and wosgpus and fojbpus (原始: silxpus is biykpus and wosgpus and fojbpus)
  163. [actual] silxpus → biykpus (原始: silxpus is biykpus)
  164. [actual] silxpus → wosgpus (原始: silxpus is wosgpus)
  165. [actual] silxpus → fojbpus (原始: silxpus is fojbpus)
  166. [actual] biykpus → mexzpus and dikbpus (原始: biykpus is mexzpus and dikbpus)
  167. [actual] biykpus → mexzpus (原始: biykpus is mexzpus)
  168. [actual] biykpus → dikbpus (原始: biykpus is dikbpus)
  169. [actual] mexzpus → mudrpus and wuwxpus and cumnpus (原始: mexzpus is mudrpus and wuwxpus and cumnpus)
  170. [actual] mudrpus → macbpus (原始: mudrpus is macbpus)
  171. [actual] mudrpus → macbpus (原始: mudrpus is macbpus)
  172. [actual] macbpus → fekkpus (原始: macbpus is fekkpus)
  173. [actual] macbpus → fekkpus (原始: macbpus is fekkpus)
  174. [actual] fekkpus → jaqspus and mefjpus (原始: fekkpus is jaqspus and mefjpus)
  175. [actual] fekkpus → jaqspus (原始: fekkpus is jaqspus)
  176. [actual] fekkpus → mefjpus (原始: fekkpus is mefjpus)
  177. [actual] jaqspus → sawgpus and mefspus (原始: jaqspus is sawgpus and mefspus)
  178. [actual] jaqspus → sawgpus (原始: jaqspus is sawgpus)
  179. [actual] jaqspus → mefspus (原始: jaqspus is mefspus)
  180. [actual] sawgpus → babgpus and damspus (原始: sawgpus is babgpus and damspus)
  181. [actual] sawgpus → babgpus (原始: sawgpus is babgpus)
  182. [actual] sawgpus → damspus (原始: sawgpus is damspus)
  183. [actual] fekkpus → jaqspus (原始: fekkpus is jaqspus)
  184. [actual] fekkpus → babgpus (原始: fekkpus is babgpus)
  185. [actual] ciwnpus → tidlpus (原始: ciwnpus is tidlpus)
  186. [actual] ciwnpus → babgpus (原始: ciwnpus is babgpus)
  187. [actual] x → ciwnpus (原始: x is ciwnpus)
  188. [actual] x → ciwnpus (原始: x is ciwnpus)
  189. [planning] x → babgpus (原始: x is babgpus)
  190. [actual] x → vokkpus (原始: x is vokkpus)
  191. [actual] x → vokkpus (原始: x is vokkpus)
  192. [actual] x → ciwnpus (原始: x is ciwnpus)
  193. [planning] x → babgpus (原始: x is babgpus)
  194. [actual] x → babgpus (原始: x is babgpus)
  195. [planning] x → babrpus (原始: x is babrpus)
  196. [actual] babrpus → qukcpus (原始: babrpus is qukcpus)
  197. [actual] qukcpus → babrpus and xotzpus (原始: qukcpus is babrpus and xotzpus)
  198. [planning] x → qukcpus (原始: x is qukcpus)
  199. [planning] x → babrpus (原始: x is babrpus)
  200. [actual] x → mirmpus (原始: x is mirmpus)
  201. [actual] x → mirmpus and xudmpus (原始: x is mirmpus and xudmpus)
  202. [actual] mirmpus → hiktpus (原始: mirmpus is hiktpus)
  203. [actual] mirmpus → hiktpus (原始: mirmpus is hiktpus)
  204. [actual] hiktpus → pacbpus and hehvpus (原始: hiktpus is pacbpus and hehvpus)
  205. [actual] hiktpus → pacbpus (原始: hiktpus is pacbpus)
  206. [actual] hiktpus → hehvpus (原始: hiktpus is hehvpus)
  207. [actual] pacbpus → gexjpus (原始: pacbpus is gexjpus)
  208. [actual] pacbpus → gexjpus (原始: pacbpus is gexjpus)
  209. [actual] gexjpus → viztpus and wermpus (原始: gexjpus is viztpus and wermpus)
  210. [actual] gexjpus → viztpus (原始: gexjpus is viztpus)
  211. [actual] gexjpus → wermpus (原始: gexjpus is wermpus)
  212. [actual] viztpus → qukcpus (原始: viztpus is qukcpus)
  213. [actual] viztpus → qukcpus (原始: viztpus is qukcpus)
  214. [actual] x → mirmpus (原始: x is mirmpus)
  215. [actual] qukcpus → babrpus (原始: qukcpus is babrpus)
  216. [actual] x → babrpus (原始: x is babrpus)
  217. [actual] x → babrpus (原始: x is babrpus)
  218. [actual] x → babgpus and babrpus and babspus (原始: x is babgpus and babrpus and babspus)
  219. [actual] degvpus → babspus (原始: degvpus is babspus)
  220. [actual] sawgpus → babgpus (原始: sawgpus is babgpus)
  221. [planning] jaqspus → sawgpus (原始: jaqspus is sawgpus)
  222. [actual] viztpus → qukcpus (原始: viztpus is qukcpus)
  223. [actual] qukcpus → babrpus (原始: qukcpus is babrpus)
  224. [actual] x → babgpus and babrpus and babspus (原始: x is babgpus and babrpus and babspus)

开始新的后处理...
[后处理] 从LoG数据文件中获取到图数据，节点数: 41
[后处理] 加载LoG图，包含 41 个节点
  LoG节点 0: x is babgpus and babrpus and babspus (规则: CI, 深度: 1)
  LoG节点 1: x is babgpus (规则: MP, 深度: 2)
  LoG节点 2: x is babrpus and babspus (规则: CI, 深度: 2)
  LoG节点 3: x is biykpus (规则: CE, 深度: 3)
  LoG节点 4: biykpus is babgpus (规则: MP, 深度: 3)
  LoG节点 5: x is babrpus (规则: MP, 深度: 3)
  LoG节点 6: x is babspus (规则: MP, 深度: 3)
  LoG节点 7: x is biykpus and wosgpus (规则: MP, 深度: 4)
  LoG节点 8: biykpus is mudrpus (规则: CE, 深度: 4)
  LoG节点 9: mudrpus is babgpus (规则: MP, 深度: 4)
  LoG节点 10: x is pacbpus (规则: CE, 深度: 4)
  LoG节点 11: pacbpus is babrpus (规则: MP, 深度: 4)
  LoG节点 12: x is yaxvpus (规则: MP, 深度: 4)
  LoG节点 13: yaxvpus is babspus (规则: CE, 深度: 4)
  LoG节点 14: x is tidlpus (规则: CE, 深度: 5)
  LoG节点 15: tidlpus is biykpus and wosgpus (规则: CE, 深度: 5)
  LoG节点 16: biykpus is mudrpus and wuwxpus (规则: MP, 深度: 5)
  LoG节点 17: mudrpus is jaqspus (规则: MP, 深度: 5)
  LoG节点 18: jaqspus is babgpus (规则: MP, 深度: 5)
  LoG节点 19: x is pacbpus and hehvpus (规则: MP, 深度: 5)
  LoG节点 20: pacbpus is viztpus (规则: CE, 深度: 5)
  LoG节点 21: viztpus is babrpus (规则: CE, 深度: 5)
  LoG节点 22: x is wiqtpus (规则: CE, 深度: 5)
  LoG节点 23: wiqtpus is yaxvpus (规则: CE, 深度: 5)
  LoG节点 24: yaxvpus is babspus and nukfpus (规则: MP, 深度: 5)
  LoG节点 25: x is tidlpus and pirbpus (规则: MP, 深度: 6)
  LoG节点 26: tidlpus is biykpus and wosgpus and fojbpus (规则: MP, 深度: 6)
  LoG节点 27: biykpus is mexzpus (规则: CE, 深度: 6)
  LoG节点 28: mexzpus is mudrpus and wuwxpus (规则: CE, 深度: 6)
  LoG节点 29: mudrpus is fekkpus (规则: MP, 深度: 6)
  LoG节点 30: fekkpus is jaqspus (规则: CE, 深度: 6)
  LoG节点 31: jaqspus is sawgpus (规则: CE, 深度: 6)
  LoG节点 32: sawgpus is babgpus (规则: CE, 深度: 6)
  LoG节点 33: x is mirmpus (规则: CE, 深度: 6)
  LoG节点 34: mirmpus is pacbpus and hehvpus (规则: MP, 深度: 6)
  LoG节点 35: pacbpus is viztpus and wermpus (规则: MP, 深度: 6)
  LoG节点 36: viztpus is babrpus and xotzpus (规则: MP, 深度: 6)
  LoG节点 37: x is wiqtpus and lalhpus (规则: MP, 深度: 6)
  LoG节点 38: wiqtpus is yaxvpus and xakvpus (规则: MP, 深度: 6)
  LoG节点 39: yaxvpus is degvpus (规则: MP, 深度: 6)
  LoG节点 40: degvpus is babspus and nukfpus (规则: CI, 深度: 6)

============================================================
[后处理] 开始处理节点
============================================================
📊 初始状态:
   - 标准化节点数: 224
   - 初始条件数: 26
   - LoG图节点数: 41

📋 初始条件列表:
    1. yaxvpus is quczpus
    2. degvpus is nukfpus
    3. x is vokkpus
    4. biykpus is mexzpus and dikbpus
    5. x is mirmpus and xudmpus
    6. wipkpus is yaxvpus and xakvpus
    7. macbpus is fekkpus
    8. x is ciwnpus
    9. tidlpus is silxpus
   10. gexjpus is viztpus and wermpus
   11. vokkpus is wiqtpus and lalhpus
   12. mudrpus is macbpus
   13. wiqtpus is wipkpus
   14. mexzpus is mudrpus and wuwxpus and cumnpus
   15. sawgpus is babgpus and damspus
   16. silxpus is biykpus and wosgpus and fojbpus
   17. mirmpus is hiktpus
   18. hiktpus is pacbpus and hehvpus
   19. degvpus is babspus
   20. qukcpus is babrpus and xotzpus
   21. quczpus is degvpus
   22. ciwnpus is tidlpus and pirbpus
   23. viztpus is qukcpus
   24. pacbpus is gexjpus
   25. jaqspus is sawgpus and mefspus
   26. fekkpus is jaqspus and mefjpus

🔧 构建初始Statement列表...
✅ 初始Statement列表构建完成，包含 26 个前提节点

🔍 开始处理actual节点...

   节点 1: lerwpus is babgpus and rayspus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 2: x is relmpus and muqcpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 3: lerwpus is yexbpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 4: yexbpus is lerwpus and pazjpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 5: x is relmpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: x is relmpus and muqcpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: x is relmpus and muqcpus

   节点 6: relmpus is babgpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 7: x is babgpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is babgpus
[子树点亮]     └─ 点亮依赖节点: x is biykpus (深度3)
[子树点亮]     └─ 点亮依赖节点: biykpus is babgpus (深度3)
[子树点亮]     └─ 点亮依赖节点: x is biykpus and wosgpus (深度4)
[子树点亮]     └─ 点亮依赖节点: biykpus is mudrpus (深度4)
[子树点亮]     └─ 点亮依赖节点: mudrpus is babgpus (深度4)
[子树点亮]     └─ 点亮依赖节点: x is tidlpus (深度5)
[子树点亮]     └─ 点亮依赖节点: tidlpus is biykpus and wosgpus (深度5)
[子树点亮]     └─ 点亮依赖节点: biykpus is mudrpus and wuwxpus (深度5)
[子树点亮]     └─ 点亮依赖节点: mudrpus is jaqspus (深度5)
[子树点亮]     └─ 点亮依赖节点: jaqspus is babgpus (深度5)
[子树点亮]     └─ 点亮依赖节点: x is tidlpus and pirbpus (深度6)
[子树点亮]     └─ 点亮依赖节点: tidlpus is biykpus and wosgpus and fojbpus (深度6)
[子树点亮]     └─ 点亮依赖节点: biykpus is mexzpus (深度6)
[子树点亮]     └─ 点亮依赖节点: mexzpus is mudrpus and wuwxpus (深度6)
[子树点亮]     └─ 点亮依赖节点: mudrpus is fekkpus (深度6)
[子树点亮]     └─ 点亮依赖节点: fekkpus is jaqspus (深度6)
[子树点亮]     └─ 点亮依赖节点: jaqspus is sawgpus (深度6)
[子树点亮]     └─ 点亮依赖节点: sawgpus is babgpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 18 个节点
      ✅ 验证成功 + LoG匹配

   节点 8: x is vokkpus
      ↻ 重复节点，计数: 2

   节点 9: x is mirmpus and xudmpus
      ↻ 重复节点，计数: 2

   节点 10: x is ciwnpus
      ↻ 重复节点，计数: 2

   节点 11: vokkpus is wiqtpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: vokkpus is wiqtpus and lalhpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: vokkpus is wiqtpus and lalhpus

   节点 12: vokkpus is lalhpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: vokkpus is wiqtpus and lalhpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: vokkpus is wiqtpus and lalhpus

   节点 13: wiqtpus is wipkpus
      ↻ 重复节点，计数: 2

   节点 14: wipkpus is yaxvpus and xakvpus
      ↻ 重复节点，计数: 2

   节点 15: yaxvpus is quczpus
      ↻ 重复节点，计数: 2

   节点 16: quczpus is degvpus
      ↻ 重复节点，计数: 2

   节点 17: degvpus is nukfpus
      ↻ 重复节点，计数: 2

   节点 18: degvpus is nukfpus
      ↻ 重复节点，计数: 3

   节点 19: degvpus is nukfpus
      ↻ 重复节点，计数: 4

   节点 20: degvpus is babspus
      ↻ 重复节点，计数: 2

   节点 21: degvpus is nukfpus
      ↻ 重复节点，计数: 5

   节点 22: degvpus is babspus
      ↻ 重复节点，计数: 3

   节点 23: yaxvpus is quczpus
      ↻ 重复节点，计数: 3

   节点 24: degvpus is nukfpus
      ↻ 重复节点，计数: 6

   节点 25: x is vokkpus
      ↻ 重复节点，计数: 3

   节点 26: biykpus is mexzpus and dikbpus
      ↻ 重复节点，计数: 2

   节点 27: x is mirmpus and xudmpus
      ↻ 重复节点，计数: 3

   节点 28: wipkpus is yaxvpus and xakvpus
      ↻ 重复节点，计数: 3

   节点 29: macbpus is fekkpus
      ↻ 重复节点，计数: 2

   节点 30: x is ciwnpus
      ↻ 重复节点，计数: 3

   节点 31: tidlpus is silxpus
      ↻ 重复节点，计数: 2

   节点 32: gexjpus is viztpus and wermpus
      ↻ 重复节点，计数: 2

   节点 33: vokkpus is wiqtpus and lalhpus
      ↻ 重复节点，计数: 2

   节点 34: mudrpus is macbpus
      ↻ 重复节点，计数: 2

   节点 35: wiqtpus is wipkpus
      ↻ 重复节点，计数: 3

   节点 36: mexzpus is mudrpus and wuwxpus and cumnpus
      ↻ 重复节点，计数: 2

   节点 37: sawgpus is babgpus and damspus
      ↻ 重复节点，计数: 2

   节点 38: silxpus is biykpus and wosgpus and fojbpus
      ↻ 重复节点，计数: 2

   节点 39: mirmpus is hiktpus
      ↻ 重复节点，计数: 2

   节点 40: hiktpus is pacbpus and hehvpus
      ↻ 重复节点，计数: 2

   节点 41: degvpus is babspus
      ↻ 重复节点，计数: 4

   节点 42: degvpus is babspus
      ↻ 重复节点，计数: 5

   节点 43: degvpus is nukfpus
      ↻ 重复节点，计数: 7

   节点 44: degvpus is babspus
      ↻ 重复节点，计数: 6

   节点 45: yaxvpus is quczpus
      ↻ 重复节点，计数: 4

   节点 46: degvpus is nukfpus
      ↻ 重复节点，计数: 8

   节点 47: x is vokkpus
      ↻ 重复节点，计数: 4

   节点 48: degvpus is babspus
      ↻ 重复节点，计数: 7

   节点 49: yaxvpus is quczpus
      ↻ 重复节点，计数: 5

   节点 50: degvpus is nukfpus
      ↻ 重复节点，计数: 9

   节点 51: x is vokkpus
      ↻ 重复节点，计数: 5

   节点 52: biykpus is mexzpus and dikbpus
      ↻ 重复节点，计数: 3

   节点 53: x is mirmpus and xudmpus
      ↻ 重复节点，计数: 4

   节点 54: wipkpus is yaxvpus and xakvpus
      ↻ 重复节点，计数: 4

   节点 55: macbpus is fekkpus
      ↻ 重复节点，计数: 3

   节点 56: x is ciwnpus
      ↻ 重复节点，计数: 4

   节点 57: tidlpus is silxpus
      ↻ 重复节点，计数: 3

   节点 58: gexjpus is viztpus and wermpus
      ↻ 重复节点，计数: 3

   节点 59: vokkpus is wiqtpus and lalhpus
      ↻ 重复节点，计数: 3

   节点 60: mudrpus is macbpus
      ↻ 重复节点，计数: 3

   节点 61: wiqtpus is wipkpus
      ↻ 重复节点，计数: 4

   节点 62: mexzpus is mudrpus and wuwxpus and cumnpus
      ↻ 重复节点，计数: 3

   节点 63: sawgpus is babgpus and damspus
      ↻ 重复节点，计数: 3

   节点 64: silxpus is biykpus and wosgpus and fojbpus
      ↻ 重复节点，计数: 3

   节点 65: mirmpus is hiktpus
      ↻ 重复节点，计数: 3

   节点 66: hiktpus is pacbpus and hehvpus
      ↻ 重复节点，计数: 3

   节点 67: degvpus is babspus
      ↻ 重复节点，计数: 8

   节点 68: qukcpus is babrpus and xotzpus
      ↻ 重复节点，计数: 2

   节点 69: quczpus is degvpus
      ↻ 重复节点，计数: 3

   节点 70: ciwnpus is tidlpus and pirbpus
      ↻ 重复节点，计数: 2

   节点 71: viztpus is qukcpus
      ↻ 重复节点，计数: 2

   节点 72: pacbpus is gexjpus
      ↻ 重复节点，计数: 2

   节点 73: jaqspus is sawgpus and mefspus
      ↻ 重复节点，计数: 2

   节点 74: fekkpus is jaqspus and mefjpus
      ↻ 重复节点，计数: 2

   节点 75: degvpus is babspus
      ↻ 重复节点，计数: 9

   节点 76: degvpus is babspus
      ↻ 重复节点，计数: 10

   节点 77: degvpus is babspus
      ↻ 重复节点，计数: 11

   节点 78: x is vokkpus
      ↻ 重复节点，计数: 6

   节点 79: vokkpus is wiqtpus
      ↻ 重复节点，计数: 2

   节点 80: wiqtpus is wipkpus
      ↻ 重复节点，计数: 5

   节点 81: wipkpus is yaxvpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: wipkpus is yaxvpus and xakvpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: wipkpus is yaxvpus and xakvpus

   节点 82: yaxvpus is quczpus
      ↻ 重复节点，计数: 6

   节点 83: quczpus is degvpus
      ↻ 重复节点，计数: 4

   节点 84: x is degvpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is vokkpus → vokkpus is degvpus
[后处理] 基于推理轨迹点亮节点，使用了 6 个前提条件:
  - 前提: x is vokkpus
  - 前提: vokkpus is wiqtpus
  - 前提: wiqtpus is wipkpus
  - 前提: wipkpus is yaxvpus
  - 前提: yaxvpus is quczpus
  - 前提: quczpus is degvpus
  ✓ 点亮LoG节点: x is yaxvpus
[子树点亮]     └─ 点亮依赖节点: x is wiqtpus (深度5)
[子树点亮]     └─ 点亮依赖节点: wiqtpus is yaxvpus (深度5)
[子树点亮]     └─ 点亮依赖节点: x is wiqtpus and lalhpus (深度6)
[子树点亮]     └─ 点亮依赖节点: wiqtpus is yaxvpus and xakvpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 4 个节点
  ✓ 点亮LoG节点: yaxvpus is degvpus
[后处理] 通过推理轨迹额外点亮了 2 个LoG节点

   节点 85: x is vokkpus
      ↻ 重复节点，计数: 7

   节点 86: vokkpus is wiqtpus
      ↻ 重复节点，计数: 3

   节点 87: x is wiqtpus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 88: x is vokkpus
      ↻ 重复节点，计数: 8

   节点 89: x is vokkpus
      ↻ 重复节点，计数: 9

   节点 90: vokkpus is wiqtpus
      ↻ 重复节点，计数: 4

   节点 91: x is wiqtpus
      ↻ 重复节点，计数: 2

   节点 92: vokkpus is wiqtpus
      ↻ 重复节点，计数: 5

   节点 93: x is vokkpus
      ↻ 重复节点，计数: 10

   节点 94: x is wiqtpus
      ↻ 重复节点，计数: 3

   节点 95: wiqtpus is wipkpus
      ↻ 重复节点，计数: 6

   节点 96: x is wipkpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is vokkpus → vokkpus is wipkpus
[后处理] 基于推理轨迹点亮节点，使用了 3 个前提条件:
  - 前提: x is vokkpus
  - 前提: vokkpus is wiqtpus
  - 前提: wiqtpus is wipkpus

   节点 97: wipkpus is yaxvpus and xakvpus
      ↻ 重复节点，计数: 5

   节点 98: x is yaxvpus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 99: yaxvpus is quczpus
      ↻ 重复节点，计数: 7

   节点 100: quczpus is degvpus
      ↻ 重复节点，计数: 5

   节点 101: degvpus is babspus
      ↻ 重复节点，计数: 12

   节点 102: x is babspus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is babspus
[子树点亮]     └─ 点亮依赖节点: yaxvpus is babspus (深度4)
[子树点亮]     └─ 点亮依赖节点: yaxvpus is babspus and nukfpus (深度5)
[子树点亮]     └─ 点亮依赖节点: degvpus is babspus and nukfpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 3 个节点
      ✅ 验证成功 + LoG匹配

   节点 103: x is babspus
      ↻ 重复节点，计数: 2

   节点 104: sawgpus is babgpus and damspus
      ↻ 重复节点，计数: 4

   节点 105: sawgpus is babgpus and damspus
      ↻ 重复节点，计数: 5

   节点 106: sawgpus is babgpus and damspus
      ↻ 重复节点，计数: 6

   节点 107: sawgpus is babgpus and damspus
      ↻ 重复节点，计数: 7

   节点 108: jaqspus is sawgpus and mefspus
      ↻ 重复节点，计数: 3

   节点 109: jaqspus is sawgpus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 110: sawgpus is babgpus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 111: jaqspus is babgpus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 112: x is relmpus
      ↻ 重复节点，计数: 2

   节点 113: relmpus is babgpus
      ↻ 重复节点，计数: 2

   节点 114: x is babgpus
      ↻ 重复节点，计数: 2

   节点 115: sawgpus is babgpus and damspus
      ↻ 重复节点，计数: 8

   节点 116: sawgpus is babgpus
      ↻ 重复节点，计数: 2

   节点 117: sawgpus is babgpus and damspus
      ↻ 重复节点，计数: 9

   节点 118: biykpus is mexzpus and dikbpus
      ↻ 重复节点，计数: 4

   节点 119: qukcpus is babrpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: qukcpus is babrpus and xotzpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: qukcpus is babrpus and xotzpus

   节点 120: qukcpus is xotzpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: qukcpus is babrpus and xotzpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: qukcpus is babrpus and xotzpus

   节点 121: x is ciwnpus
      ↻ 重复节点，计数: 5

   节点 122: ciwnpus is tidlpus and pirbpus
      ↻ 重复节点，计数: 3

   节点 123: ciwnpus is tidlpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: ciwnpus is tidlpus and pirbpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: ciwnpus is tidlpus and pirbpus

   节点 124: ciwnpus is pirbpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: ciwnpus is tidlpus and pirbpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: ciwnpus is tidlpus and pirbpus

   节点 125: tidlpus is silxpus
      ↻ 重复节点，计数: 4

   节点 126: tidlpus is silxpus
      ↻ 重复节点，计数: 5

   节点 127: silxpus is biykpus and wosgpus and fojbpus
      ↻ 重复节点，计数: 4

   节点 128: silxpus is biykpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: silxpus is biykpus and wosgpus and fojbpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: silxpus is biykpus and wosgpus and fojbpus

   节点 129: silxpus is wosgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: silxpus is biykpus and wosgpus and fojbpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: silxpus is biykpus and wosgpus and fojbpus

   节点 130: silxpus is fojbpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: silxpus is biykpus and wosgpus and fojbpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: silxpus is biykpus and wosgpus and fojbpus

   节点 131: biykpus is mexzpus and dikbpus
      ↻ 重复节点，计数: 5

   节点 132: biykpus is mexzpus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 133: biykpus is dikbpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: biykpus is mexzpus and dikbpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: biykpus is mexzpus and dikbpus

   节点 134: mexzpus is mudrpus and wuwxpus and cumnpus
      ↻ 重复节点，计数: 4

   节点 135: mudrpus is macbpus
      ↻ 重复节点，计数: 4

   节点 136: mudrpus is macbpus
      ↻ 重复节点，计数: 5

   节点 137: macbpus is fekkpus
      ↻ 重复节点，计数: 4

   节点 138: macbpus is fekkpus
      ↻ 重复节点，计数: 5

   节点 139: fekkpus is jaqspus and mefjpus
      ↻ 重复节点，计数: 3

   节点 140: fekkpus is jaqspus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 141: fekkpus is mefjpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: fekkpus is jaqspus and mefjpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: fekkpus is jaqspus and mefjpus

   节点 142: jaqspus is sawgpus and mefspus
      ↻ 重复节点，计数: 4

   节点 143: jaqspus is sawgpus
      ↻ 重复节点，计数: 2

   节点 144: jaqspus is mefspus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: jaqspus is sawgpus and mefspus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: jaqspus is sawgpus and mefspus

   节点 145: sawgpus is babgpus and damspus
      ↻ 重复节点，计数: 10

   节点 146: sawgpus is babgpus
      ↻ 重复节点，计数: 3

   节点 147: sawgpus is damspus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: sawgpus is babgpus and damspus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: sawgpus is babgpus and damspus

   节点 148: fekkpus is jaqspus
      ↻ 重复节点，计数: 2

   节点 149: fekkpus is babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: fekkpus is jaqspus → jaqspus is babgpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: fekkpus is jaqspus
  - 前提: jaqspus is babgpus

   节点 150: ciwnpus is tidlpus
      ↻ 重复节点，计数: 2

   节点 151: ciwnpus is babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: ciwnpus is tidlpus → tidlpus is babgpus
[后处理] 基于推理轨迹点亮节点，使用了 8 个前提条件:
  - 前提: ciwnpus is tidlpus
  - 前提: tidlpus is silxpus
  - 前提: silxpus is biykpus
  - 前提: biykpus is mexzpus
  - 前提: mexzpus is mudrpus and wuwxpus and cumnpus
  - 前提: mudrpus is macbpus
  - 前提: macbpus is fekkpus
  - 前提: fekkpus is babgpus

   节点 152: x is ciwnpus
      ↻ 重复节点，计数: 6

   节点 153: x is ciwnpus
      ↻ 重复节点，计数: 7

   节点 154: x is vokkpus
      ↻ 重复节点，计数: 11

   节点 155: x is vokkpus
      ↻ 重复节点，计数: 12

   节点 156: x is ciwnpus
      ↻ 重复节点，计数: 8

   节点 157: x is babgpus
      ↻ 重复节点，计数: 3

   节点 158: babrpus is qukcpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 159: qukcpus is babrpus and xotzpus
      ↻ 重复节点，计数: 3

   节点 160: x is mirmpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is mirmpus
      ✅ 验证成功 + LoG匹配

   节点 161: x is mirmpus and xudmpus
      ↻ 重复节点，计数: 5

   节点 162: mirmpus is hiktpus
      ↻ 重复节点，计数: 4

   节点 163: mirmpus is hiktpus
      ↻ 重复节点，计数: 5

   节点 164: hiktpus is pacbpus and hehvpus
      ↻ 重复节点，计数: 4

   节点 165: hiktpus is pacbpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: hiktpus is pacbpus and hehvpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: hiktpus is pacbpus and hehvpus

   节点 166: hiktpus is hehvpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: hiktpus is pacbpus and hehvpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: hiktpus is pacbpus and hehvpus

   节点 167: pacbpus is gexjpus
      ↻ 重复节点，计数: 3

   节点 168: pacbpus is gexjpus
      ↻ 重复节点，计数: 4

   节点 169: gexjpus is viztpus and wermpus
      ↻ 重复节点，计数: 4

   节点 170: gexjpus is viztpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: gexjpus is viztpus and wermpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: gexjpus is viztpus and wermpus

   节点 171: gexjpus is wermpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: gexjpus is viztpus and wermpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: gexjpus is viztpus and wermpus

   节点 172: viztpus is qukcpus
      ↻ 重复节点，计数: 3

   节点 173: viztpus is qukcpus
      ↻ 重复节点，计数: 4

   节点 174: x is mirmpus
      ↻ 重复节点，计数: 2

   节点 175: qukcpus is babrpus
      ↻ 重复节点，计数: 2

   节点 176: x is babrpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is babrpus
[子树点亮]     └─ 点亮依赖节点: x is pacbpus (深度4)
[子树点亮]     └─ 点亮依赖节点: pacbpus is babrpus (深度4)
[子树点亮]     └─ 点亮依赖节点: x is pacbpus and hehvpus (深度5)
[子树点亮]     └─ 点亮依赖节点: pacbpus is viztpus (深度5)
[子树点亮]     └─ 点亮依赖节点: viztpus is babrpus (深度5)
[子树点亮]     └─ 点亮依赖节点: mirmpus is pacbpus and hehvpus (深度6)
[子树点亮]     └─ 点亮依赖节点: pacbpus is viztpus and wermpus (深度6)
[子树点亮]     └─ 点亮依赖节点: viztpus is babrpus and xotzpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 8 个节点
      ✅ 验证成功 + LoG匹配

   节点 177: x is babrpus
      ↻ 重复节点，计数: 2

   节点 178: x is babgpus and babrpus and babspus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is babgpus and babrpus and babspus
[子树点亮]     └─ 点亮依赖节点: x is babrpus and babspus (深度2)
[后处理]   └─ 自动点亮依赖子树: 1 个节点
      ✅ 验证成功 + LoG匹配

   节点 179: degvpus is babspus
      ↻ 重复节点，计数: 13

   节点 180: sawgpus is babgpus
      ↻ 重复节点，计数: 4

   节点 181: viztpus is qukcpus
      ↻ 重复节点，计数: 5

   节点 182: qukcpus is babrpus
      ↻ 重复节点，计数: 3

   节点 183: x is babgpus and babrpus and babspus
      ↻ 重复节点，计数: 2

🔍 分析推理路径完整性...

============================================================
[后处理] 处理完成
============================================================
📈 处理统计:
   - 处理的actual节点: 183
   - 新增节点: 41
   - 更新已存在节点: 142
   - 点亮的LoG节点: 41

🎯 推理质量统计:
   - 完美推理: 25 (节点正确 + 路径正确)
   - 部分推理: 14 (节点正确 + 路径部分错误)
   - 无效推理: 2 (节点错误或路径完全错误)
[LoG分析] LoG图: 41节点, 26前提, 复杂度1-26

📊 === Statement列表分析 ===
📈 节点统计:
   - 总节点数: 67
   - 前提节点: 26
   - 推理节点: 35
   - 幻觉节点: 6
   - 点亮LoG节点: 41

❌ 幻觉节点详情:
   - lerwpus is babgpus and rayspus (出现1次)
   - x is relmpus and muqcpus (出现1次)
   - lerwpus is yexbpus (出现1次)
   - yexbpus is lerwpus and pazjpus (出现1次)
   - relmpus is babgpus (出现2次)
   - babrpus is qukcpus (出现1次)

✅ 推理节点详情:
   🟡 x is relmpus (出现2次, 质量:partial)
      ⚠️  无效依赖: ['x is relmpus and muqcpus']
   🟡 x is babgpus (出现3次, 质量:partial)
      ⚠️  无效依赖: ['x is relmpus and muqcpus', 'relmpus is babgpus']
   🟢 vokkpus is wiqtpus (出现5次, 质量:perfect)
   🟢 vokkpus is lalhpus (出现1次, 质量:perfect)
   🟢 wipkpus is yaxvpus (出现1次, 质量:perfect)
   🟡 x is degvpus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['x is relmpus and muqcpus']
   🟡 x is wiqtpus (出现3次, 质量:partial)
      ⚠️  无效依赖: ['x is relmpus and muqcpus']
   🟡 x is wipkpus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['x is relmpus and muqcpus']
   🟡 x is yaxvpus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['x is relmpus and muqcpus']
   🟡 x is babspus (出现2次, 质量:partial)
      ⚠️  无效依赖: ['x is relmpus and muqcpus']
   🟢 jaqspus is sawgpus (出现2次, 质量:perfect)
   🟡 sawgpus is babgpus (出现4次, 质量:partial)
      ⚠️  无效依赖: ['relmpus is babgpus']
   🟡 jaqspus is babgpus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['relmpus is babgpus']
   🟢 qukcpus is babrpus (出现3次, 质量:perfect)
   🟢 qukcpus is xotzpus (出现1次, 质量:perfect)
   🟢 ciwnpus is tidlpus (出现2次, 质量:perfect)
   🟢 ciwnpus is pirbpus (出现1次, 质量:perfect)
   🟢 silxpus is biykpus (出现1次, 质量:perfect)
   🟢 silxpus is wosgpus (出现1次, 质量:perfect)
   🟢 silxpus is fojbpus (出现1次, 质量:perfect)
   🟢 biykpus is mexzpus (出现1次, 质量:perfect)
   🟢 biykpus is dikbpus (出现1次, 质量:perfect)
   🟢 fekkpus is jaqspus (出现2次, 质量:perfect)
   🟢 fekkpus is mefjpus (出现1次, 质量:perfect)
   🟢 jaqspus is mefspus (出现1次, 质量:perfect)
   🟢 sawgpus is damspus (出现1次, 质量:perfect)
   🟡 fekkpus is babgpus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['relmpus is babgpus']
   🟡 ciwnpus is babgpus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['relmpus is babgpus']
   🟡 x is mirmpus (出现2次, 质量:partial)
      ⚠️  无效依赖: ['x is relmpus and muqcpus']
   🟢 hiktpus is pacbpus (出现1次, 质量:perfect)
   🟢 hiktpus is hehvpus (出现1次, 质量:perfect)
   🟢 gexjpus is viztpus (出现1次, 质量:perfect)
   🟢 gexjpus is wermpus (出现1次, 质量:perfect)
   🟡 x is babrpus (出现2次, 质量:partial)
      ⚠️  无效依赖: ['x is relmpus and muqcpus']
   🟡 x is babgpus and babrpus and babspus (出现2次, 质量:partial)
      ⚠️  无效依赖: ['x is relmpus and muqcpus']

🔥 点亮的LoG节点:
   - mirmpus is pacbpus and hehvpus
   - x is wiqtpus
   - x is babspus
   - pacbpus is viztpus and wermpus
   - x is tidlpus and pirbpus
   - sawgpus is babgpus
   - biykpus is mexzpus
   - pacbpus is viztpus
   - biykpus is mudrpus and wuwxpus
   - mudrpus is fekkpus
   - x is biykpus
   - x is babrpus and babspus
   - viztpus is babrpus and xotzpus
   - tidlpus is biykpus and wosgpus
   - x is babrpus
   - x is babgpus
   - jaqspus is sawgpus
   - yaxvpus is babspus and nukfpus
   - yaxvpus is babspus
   - x is babgpus and babrpus and babspus
   - fekkpus is jaqspus
   - biykpus is babgpus
   - x is biykpus and wosgpus
   - degvpus is babspus and nukfpus
   - jaqspus is babgpus
   - pacbpus is babrpus
   - x is tidlpus
   - x is wiqtpus and lalhpus
   - tidlpus is biykpus and wosgpus and fojbpus
   - biykpus is mudrpus
   - wiqtpus is yaxvpus
   - x is pacbpus
   - mudrpus is babgpus
   - viztpus is babrpus
   - mexzpus is mudrpus and wuwxpus
   - wiqtpus is yaxvpus and xakvpus
   - mudrpus is jaqspus
   - x is yaxvpus
   - yaxvpus is degvpus
   - x is pacbpus and hehvpus
   - x is mirmpus

============================================================
📊 计算评估指标
============================================================

🎯 计算Coverage指标...
   深度Coverage: 6/6 = 100.00%
   最深点亮节点: x is babgpus and babrpus and babspus (第6层)
   节点Coverage: 41/41 = 100.00%
   前提条件Coverage: 26/26 = 100.00%
   各推理层点亮比例:
     第1层: 16/16 = 100.00%
     第2层: 11/11 = 100.00%
     第3层: 7/7 = 100.00%
     第4层: 4/4 = 100.00%
     第5层: 2/2 = 100.00%
     第6层: 1/1 = 100.00%

🎯 计算Precision指标...
   Error Rate: 6/41 = 14.63%
   可推导节点: 35/41
   Strict Error Rate: 20/41 = 48.78%
   严格有效节点: 21/41

   详细分析:
     完美推理: 25 (60.98%)
     部分推理: 14 (34.15%)
     无效推理: 2 (4.88%)

================================================================================
处理记录 13/50
================================================================================
记录索引: 12
问题状态: correct
📁 从缓存加载提取结果: evaluation_results.LoG_6.deepseek-reasoner_record_12.json
✅ 使用缓存结果:
   - 句子数: 57
   - 提取的语句数: 57
   - 初始条件数: 16

=== Statement提取完成 ===
总句子数: 57
成功提取: 57
失败提取: 0
总statements数: 57

=== 开始清洗Statement格式 ===
原始statements数: 57
清洗后statements数: 57
过滤掉的statements数: 0

=== 开始标准化和解析节点 ===
清洗后statements数: 57
标准化后节点数: 56
过滤掉的无效实体数: 1
标准化后的节点:
  1. [planning] x → babgpus (原始: x is babgpus)
  2. [planning] x → babrpus (原始: x is babrpus)
  3. [actual] x → curdpus (原始: x is curdpus)
  4. [actual] curdpus → tervpus (原始: curdpus is tervpus)
  5. [actual] tervpus → fipypus and bubxpus (原始: tervpus is fipypus and bubxpus)
  6. [actual] bubxpus → quccpus and rohbpus (原始: bubxpus is quccpus and rohbpus)
  7. [actual] quccpus → pimppus (原始: quccpus is pimppus)
  8. [actual] pimppus → bimnpus (原始: pimppus is bimnpus)
  9. [actual] bimnpus → xopdpus (原始: bimnpus is xopdpus)
  10. [actual] xopdpus → jajmpus (原始: xopdpus is jajmpus)
  11. [actual] jajmpus → lahspus and halqpus (原始: jajmpus is lahspus and halqpus)
  12. [actual] lahspus → batppus (原始: lahspus is batppus)
  13. [actual] batppus → dublpus (原始: batppus is dublpus)
  14. [actual] dublpus → babgpus and babrpus and quycpus and jumcpus (原始: dublpus is babgpus and babrpus and quycpus and jumcpus)
  15. [actual] x → curdpus (原始: x is curdpus)
  16. [actual] curdpus → tervpus (原始: curdpus is tervpus)
  17. [actual] tervpus → bubxpus (原始: tervpus is bubxpus)
  18. [actual] tervpus → bubxpus (原始: tervpus is bubxpus)
  19. [actual] bubxpus → quccpus and rohbpus (原始: bubxpus is quccpus and rohbpus)
  20. [actual] quccpus → pimppus (原始: quccpus is pimppus)
  21. [actual] quccpus → pimppus (原始: quccpus is pimppus)
  22. [actual] pimppus → bimnpus (原始: pimppus is bimnpus)
  23. [actual] pimppus → bimnpus (原始: pimppus is bimnpus)
  24. [actual] bimnpus → xopdpus (原始: bimnpus is xopdpus)
  25. [actual] xopdpus → jajmpus (原始: xopdpus is jajmpus)
  26. [actual] jajmpus → lahspus and halqpus (原始: jajmpus is lahspus and halqpus)
  27. [actual] lahspus → batppus (原始: lahspus is batppus)
  28. [actual] lahspus → batppus (原始: lahspus is batppus)
  29. [actual] batppus → dublpus (原始: batppus is dublpus)
  30. [actual] batppus → dublpus (原始: batppus is dublpus)
  31. [actual] dublpus → babgpus (原始: dublpus is babgpus)
  32. [actual] dublpus → babgpus (原始: dublpus is babgpus)
  33. [actual] x → babgpus (原始: x is babgpus)
  34. [planning] x → babrpus (原始: x is babrpus)
  35. [actual] dublpus → babrpus (原始: dublpus is babrpus)
  36. [actual] dublpus → babrpus and quycpus and jumcpus (原始: dublpus is babrpus and quycpus and jumcpus)
  37. [planning] x → dublpus (原始: x is dublpus)
  38. [planning] x → babrpus (原始: x is babrpus)
  39. [actual] x → curdpus (原始: x is curdpus)
  40. [actual] curdpus → tervpus (原始: curdpus is tervpus)
  41. [actual] tervpus → bubxpus (原始: tervpus is bubxpus)
  42. [actual] bubxpus → quccpus (原始: bubxpus is quccpus)
  43. [actual] quccpus → pimppus (原始: quccpus is pimppus)
  44. [actual] pimppus → bimnpus (原始: pimppus is bimnpus)
  45. [actual] bimnpus → xopdpus (原始: bimnpus is xopdpus)
  46. [actual] xopdpus → jajmpus (原始: xopdpus is jajmpus)
  47. [actual] jajmpus → lahspus (原始: jajmpus is lahspus)
  48. [actual] lahspus → batppus (原始: lahspus is batppus)
  49. [actual] batppus → dublpus (原始: batppus is dublpus)
  50. [actual] x → dublpus (原始: x is dublpus)
  51. [actual] dublpus → babgpus and babrpus (原始: dublpus is babgpus and babrpus)
  52. [actual] x → babgpus and babrpus (原始: x is babgpus and babrpus)
  53. [actual] quccpus → busgpus and rejtpus (原始: quccpus is busgpus and rejtpus)
  54. [actual] curdpus → tervpus (原始: curdpus is tervpus)
  55. [actual] x → babgpus and babrpus (原始: x is babgpus and babrpus)
  56. [planning] x → babgpus and babrpus (原始: x is babgpus and babrpus)

开始新的后处理...
[后处理] 从LoG数据文件中获取到图数据，节点数: 21
[后处理] 加载LoG图，包含 21 个节点
  LoG节点 0: x is babgpus and babrpus (规则: MP, 深度: 1)
  LoG节点 1: x is pimppus (规则: CE, 深度: 2)
  LoG节点 2: pimppus is babgpus and babrpus (规则: CE, 深度: 2)
  LoG节点 3: x is pimppus and rejtpus (规则: MP, 深度: 3)
  LoG节点 4: pimppus is babgpus and babrpus and quycpus (规则: MP, 深度: 3)
  LoG节点 5: x is bubxpus (规则: CE, 深度: 4)
  LoG节点 6: bubxpus is pimppus and rejtpus (规则: CE, 深度: 4)
  LoG节点 7: pimppus is lahspus (规则: CE, 深度: 4)
  LoG节点 8: lahspus is babgpus and babrpus and quycpus (规则: CE, 深度: 4)
  LoG节点 9: x is bubxpus and fipypus (规则: MP, 深度: 5)
  LoG节点 10: bubxpus is pimppus and rejtpus and busgpus (规则: MP, 深度: 5)
  LoG节点 11: pimppus is lahspus and halqpus (规则: MP, 深度: 5)
  LoG节点 12: lahspus is babgpus and babrpus and quycpus and jumcpus (规则: MP, 深度: 5)
  LoG节点 13: x is tervpus (规则: MP, 深度: 6)
  LoG节点 14: tervpus is bubxpus and fipypus (规则: CI, 深度: 6)
  LoG节点 15: bubxpus is quccpus (规则: CE, 深度: 6)
  LoG节点 16: quccpus is pimppus and rejtpus and busgpus (规则: CI, 深度: 6)
  LoG节点 17: pimppus is xopdpus (规则: MP, 深度: 6)
  LoG节点 18: xopdpus is lahspus and halqpus (规则: MP, 深度: 6)
  LoG节点 19: lahspus is dublpus (规则: MP, 深度: 6)
  LoG节点 20: dublpus is babgpus and babrpus and quycpus and jumcpus (规则: CI, 深度: 6)

============================================================
[后处理] 开始处理节点
============================================================
📊 初始状态:
   - 标准化节点数: 56
   - 初始条件数: 16
   - LoG图节点数: 21

📋 初始条件列表:
    1. tervpus is fipypus
    2. quccpus is pimppus
    3. batppus is dublpus
    4. tervpus is bubxpus
    5. x is curdpus
    6. bubxpus is quccpus and rohbpus
    7. bimnpus is xopdpus
    8. dublpus is babgpus
    9. xopdpus is jajmpus
   10. quccpus is busgpus
   11. curdpus is tervpus
   12. jajmpus is lahspus and halqpus
   13. dublpus is babrpus and quycpus and jumcpus
   14. pimppus is bimnpus
   15. quccpus is rejtpus
   16. lahspus is batppus

🔧 构建初始Statement列表...
✅ 初始Statement列表构建完成，包含 16 个前提节点

🔍 开始处理actual节点...

   节点 1: x is curdpus
      ↻ 重复节点，计数: 2

   节点 2: curdpus is tervpus
      ↻ 重复节点，计数: 2

   节点 3: tervpus is fipypus and bubxpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CI
      📋 推理路径: CI规则: tervpus is fipypus → tervpus is bubxpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: tervpus is fipypus
  - 前提: tervpus is bubxpus
  ✓ 点亮LoG节点: tervpus is bubxpus and fipypus
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 4: bubxpus is quccpus and rohbpus
      ↻ 重复节点，计数: 2

   节点 5: quccpus is pimppus
      ↻ 重复节点，计数: 2

   节点 6: pimppus is bimnpus
      ↻ 重复节点，计数: 2

   节点 7: bimnpus is xopdpus
      ↻ 重复节点，计数: 2

   节点 8: xopdpus is jajmpus
      ↻ 重复节点，计数: 2

   节点 9: jajmpus is lahspus and halqpus
      ↻ 重复节点，计数: 2

   节点 10: lahspus is batppus
      ↻ 重复节点，计数: 2

   节点 11: batppus is dublpus
      ↻ 重复节点，计数: 2

   节点 12: dublpus is babgpus and babrpus and quycpus and jumcpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: dublpus is babgpus and babrpus and quycpus and jumcpus
      ✅ 验证成功 + LoG匹配

   节点 13: x is curdpus
      ↻ 重复节点，计数: 3

   节点 14: curdpus is tervpus
      ↻ 重复节点，计数: 3

   节点 15: tervpus is bubxpus
      ↻ 重复节点，计数: 2

   节点 16: tervpus is bubxpus
      ↻ 重复节点，计数: 3

   节点 17: bubxpus is quccpus and rohbpus
      ↻ 重复节点，计数: 3

   节点 18: quccpus is pimppus
      ↻ 重复节点，计数: 3

   节点 19: quccpus is pimppus
      ↻ 重复节点，计数: 4

   节点 20: pimppus is bimnpus
      ↻ 重复节点，计数: 3

   节点 21: pimppus is bimnpus
      ↻ 重复节点，计数: 4

   节点 22: bimnpus is xopdpus
      ↻ 重复节点，计数: 3

   节点 23: xopdpus is jajmpus
      ↻ 重复节点，计数: 3

   节点 24: jajmpus is lahspus and halqpus
      ↻ 重复节点，计数: 3

   节点 25: lahspus is batppus
      ↻ 重复节点，计数: 3

   节点 26: lahspus is batppus
      ↻ 重复节点，计数: 4

   节点 27: batppus is dublpus
      ↻ 重复节点，计数: 3

   节点 28: batppus is dublpus
      ↻ 重复节点，计数: 4

   节点 29: dublpus is babgpus
      ↻ 重复节点，计数: 2

   节点 30: dublpus is babgpus
      ↻ 重复节点，计数: 3

   节点 31: x is babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is curdpus → curdpus is babgpus
[后处理] 基于推理轨迹点亮节点，使用了 12 个前提条件:
  - 前提: x is curdpus
  - 前提: curdpus is tervpus
  - 前提: tervpus is bubxpus
  - 前提: bubxpus is quccpus and rohbpus
  - 前提: quccpus is pimppus
  - 前提: pimppus is bimnpus
  - 前提: bimnpus is xopdpus
  - 前提: xopdpus is jajmpus
  - 前提: jajmpus is lahspus and halqpus
  - 前提: lahspus is batppus
  - 前提: batppus is dublpus
  - 前提: dublpus is babgpus
  ✓ 点亮LoG节点: x is pimppus
[子树点亮]     └─ 点亮依赖节点: x is pimppus and rejtpus (深度3)
[子树点亮]     └─ 点亮依赖节点: x is bubxpus (深度4)
[子树点亮]     └─ 点亮依赖节点: bubxpus is pimppus and rejtpus (深度4)
[子树点亮]     └─ 点亮依赖节点: x is bubxpus and fipypus (深度5)
[子树点亮]     └─ 点亮依赖节点: bubxpus is pimppus and rejtpus and busgpus (深度5)
[子树点亮]     └─ 点亮依赖节点: x is tervpus (深度6)
[子树点亮]     └─ 点亮依赖节点: bubxpus is quccpus (深度6)
[子树点亮]     └─ 点亮依赖节点: quccpus is pimppus and rejtpus and busgpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 8 个节点
  ✓ 点亮LoG节点: pimppus is lahspus
[子树点亮]     └─ 点亮依赖节点: pimppus is lahspus and halqpus (深度5)
[子树点亮]     └─ 点亮依赖节点: pimppus is xopdpus (深度6)
[子树点亮]     └─ 点亮依赖节点: xopdpus is lahspus and halqpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 3 个节点
  ✓ 点亮LoG节点: lahspus is dublpus
[后处理] 通过推理轨迹额外点亮了 3 个LoG节点

   节点 32: dublpus is babrpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: dublpus is babrpus and quycpus and jumcpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: dublpus is babrpus and quycpus and jumcpus

   节点 33: dublpus is babrpus and quycpus and jumcpus
      ↻ 重复节点，计数: 2

   节点 34: x is curdpus
      ↻ 重复节点，计数: 4

   节点 35: curdpus is tervpus
      ↻ 重复节点，计数: 4

   节点 36: tervpus is bubxpus
      ↻ 重复节点，计数: 4

   节点 37: bubxpus is quccpus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 38: quccpus is pimppus
      ↻ 重复节点，计数: 5

   节点 39: pimppus is bimnpus
      ↻ 重复节点，计数: 5

   节点 40: bimnpus is xopdpus
      ↻ 重复节点，计数: 4

   节点 41: xopdpus is jajmpus
      ↻ 重复节点，计数: 4

   节点 42: jajmpus is lahspus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: jajmpus is lahspus and halqpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: jajmpus is lahspus and halqpus

   节点 43: lahspus is batppus
      ↻ 重复节点，计数: 5

   节点 44: batppus is dublpus
      ↻ 重复节点，计数: 5

   节点 45: x is dublpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is curdpus → curdpus is dublpus
[后处理] 基于推理轨迹点亮节点，使用了 11 个前提条件:
  - 前提: x is curdpus
  - 前提: curdpus is tervpus
  - 前提: tervpus is bubxpus
  - 前提: bubxpus is quccpus
  - 前提: quccpus is pimppus
  - 前提: pimppus is bimnpus
  - 前提: bimnpus is xopdpus
  - 前提: xopdpus is jajmpus
  - 前提: jajmpus is lahspus
  - 前提: lahspus is batppus
  - 前提: batppus is dublpus

   节点 46: dublpus is babgpus and babrpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CI
      📋 推理路径: CI规则: dublpus is babgpus → dublpus is babrpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: dublpus is babgpus
  - 前提: dublpus is babrpus

   节点 47: x is babgpus and babrpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is babgpus and babrpus
[子树点亮]     └─ 点亮依赖节点: pimppus is babgpus and babrpus (深度2)
[子树点亮]     └─ 点亮依赖节点: pimppus is babgpus and babrpus and quycpus (深度3)
[子树点亮]     └─ 点亮依赖节点: lahspus is babgpus and babrpus and quycpus (深度4)
[子树点亮]     └─ 点亮依赖节点: lahspus is babgpus and babrpus and quycpus and jumcpus (深度5)
[后处理]   └─ 自动点亮依赖子树: 4 个节点
      ✅ 验证成功 + LoG匹配

   节点 48: quccpus is busgpus and rejtpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CI
      📋 推理路径: CI规则: quccpus is busgpus → quccpus is rejtpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: quccpus is busgpus
  - 前提: quccpus is rejtpus

   节点 49: curdpus is tervpus
      ↻ 重复节点，计数: 5

   节点 50: x is babgpus and babrpus
      ↻ 重复节点，计数: 2

🔍 分析推理路径完整性...

============================================================
[后处理] 处理完成
============================================================
📈 处理统计:
   - 处理的actual节点: 50
   - 新增节点: 10
   - 更新已存在节点: 40
   - 点亮的LoG节点: 21

🎯 推理质量统计:
   - 完美推理: 10 (节点正确 + 路径正确)
   - 部分推理: 0 (节点正确 + 路径部分错误)
   - 无效推理: 0 (节点错误或路径完全错误)
[LoG分析] LoG图: 21节点, 16前提, 复杂度1-16

📊 === Statement列表分析 ===
📈 节点统计:
   - 总节点数: 26
   - 前提节点: 16
   - 推理节点: 10
   - 幻觉节点: 0
   - 点亮LoG节点: 21

✅ 推理节点详情:
   🟢 tervpus is fipypus and bubxpus (出现1次, 质量:perfect)
   🟢 dublpus is babgpus and babrpus and quycpus and jumcpus (出现1次, 质量:perfect)
   🟢 x is babgpus (出现1次, 质量:perfect)
   🟢 dublpus is babrpus (出现1次, 质量:perfect)
   🟢 bubxpus is quccpus (出现1次, 质量:perfect)
   🟢 jajmpus is lahspus (出现1次, 质量:perfect)
   🟢 x is dublpus (出现1次, 质量:perfect)
   🟢 dublpus is babgpus and babrpus (出现1次, 质量:perfect)
   🟢 x is babgpus and babrpus (出现2次, 质量:perfect)
   🟢 quccpus is busgpus and rejtpus (出现1次, 质量:perfect)

🔥 点亮的LoG节点:
   - pimppus is babgpus and babrpus
   - x is bubxpus
   - bubxpus is pimppus and rejtpus
   - bubxpus is quccpus
   - quccpus is pimppus and rejtpus and busgpus
   - lahspus is babgpus and babrpus and quycpus
   - x is pimppus
   - bubxpus is pimppus and rejtpus and busgpus
   - xopdpus is lahspus and halqpus
   - pimppus is xopdpus
   - pimppus is lahspus
   - x is pimppus and rejtpus
   - x is babgpus and babrpus
   - dublpus is babgpus and babrpus and quycpus and jumcpus
   - x is bubxpus and fipypus
   - pimppus is babgpus and babrpus and quycpus
   - lahspus is dublpus
   - tervpus is bubxpus and fipypus
   - pimppus is lahspus and halqpus
   - lahspus is babgpus and babrpus and quycpus and jumcpus
   - x is tervpus

============================================================
📊 计算评估指标
============================================================

🎯 计算Coverage指标...
   深度Coverage: 6/6 = 100.00%
   最深点亮节点: x is babgpus and babrpus (第6层)
   节点Coverage: 21/21 = 100.00%
   前提条件Coverage: 13/16 = 81.25%
   各推理层点亮比例:
     第1层: 8/8 = 100.00%
     第2层: 4/4 = 100.00%
     第3层: 4/4 = 100.00%
     第4层: 2/2 = 100.00%
     第5层: 2/2 = 100.00%
     第6层: 1/1 = 100.00%

🎯 计算Precision指标...
   Error Rate: 0/10 = 0.00%
   可推导节点: 10/10
   Strict Error Rate: 0/10 = 0.00%
   严格有效节点: 10/10

   详细分析:
     完美推理: 10 (100.00%)
     部分推理: 0 (0.00%)
     无效推理: 0 (0.00%)

================================================================================
处理记录 14/50
================================================================================
记录索引: 13
问题状态: correct
📁 从缓存加载提取结果: evaluation_results.LoG_6.deepseek-reasoner_record_13.json
✅ 使用缓存结果:
   - 句子数: 73
   - 提取的语句数: 99
   - 初始条件数: 24

=== Statement提取完成 ===
总句子数: 73
成功提取: 73
失败提取: 0
总statements数: 99

=== 开始清洗Statement格式 ===
原始statements数: 99
清洗后statements数: 99
过滤掉的statements数: 0

=== 开始标准化和解析节点 ===
清洗后statements数: 99
标准化后节点数: 98
过滤掉的无效实体数: 1
标准化后的节点:
  1. [planning] x → babgpus and babrpus and babspus (原始: x is babgpus and babrpus and babspus)
  2. [actual] x → tuqjpus (原始: x is tuqjpus)
  3. [actual] x → tuqjpus (原始: x is tuqjpus)
  4. [actual] tuqjpus → tiqjpus (原始: tuqjpus is tiqjpus)
  5. [actual] x → tiqjpus (原始: x is tiqjpus)
  6. [actual] tiqjpus → hawspus and qiqypus (原始: tiqjpus is hawspus and qiqypus)
  7. [actual] x → hawspus (原始: x is hawspus)
  8. [actual] x → qiqypus (原始: x is qiqypus)
  9. [planning] x → babgpus and babrpus and babspus (原始: x is babgpus and babrpus and babspus)
  10. [actual] x → hawspus (原始: x is hawspus)
  11. [actual] hawspus → gutypus (原始: hawspus is gutypus)
  12. [actual] x → gutypus (原始: x is gutypus)
  13. [actual] gutypus → belcpus and xasvpus (原始: gutypus is belcpus and xasvpus)
  14. [actual] x → belcpus (原始: x is belcpus)
  15. [actual] x → xasvpus (原始: x is xasvpus)
  16. [actual] belcpus → savlpus and seczpus (原始: belcpus is savlpus and seczpus)
  17. [actual] x → savlpus and seczpus (原始: x is savlpus and seczpus)
  18. [actual] belcpus → fuvnpus and vacnpus (原始: belcpus is fuvnpus and vacnpus)
  19. [actual] belcpus → savlpus and seczpus (原始: belcpus is savlpus and seczpus)
  20. [actual] belcpus → fuvnpus and vacnpus (原始: belcpus is fuvnpus and vacnpus)
  21. [actual] x → belcpus (原始: x is belcpus)
  22. [actual] x → savlpus and seczpus and fuvnpus and vacnpus (原始: x is savlpus and seczpus and fuvnpus and vacnpus)
  23. [actual] savlpus → dosxpus (原始: savlpus is dosxpus)
  24. [actual] x → dosxpus (原始: x is dosxpus)
  25. [actual] dosxpus → jivbpus (原始: dosxpus is jivbpus)
  26. [actual] x → jivbpus (原始: x is jivbpus)
  27. [actual] x → qiqypus (原始: x is qiqypus)
  28. [actual] x → hawspus (原始: x is hawspus)
  29. [actual] hawspus → gutypus (原始: hawspus is gutypus)
  30. [actual] pehtpus → tiygpus (原始: pehtpus is tiygpus)
  31. [actual] tiygpus → cilxpus (原始: tiygpus is cilxpus)
  32. [actual] cilxpus → babgpus and babrpus (原始: cilxpus is babgpus and babrpus)
  33. [planning] x → pehtpus (原始: x is pehtpus)
  34. [planning] x → tiygpus (原始: x is tiygpus)
  35. [planning] x → babgpus (原始: x is babgpus)
  36. [planning] x → babrpus (原始: x is babrpus)
  37. [actual] babspus → babspus and gibkpus (原始: babspus is babspus and gibkpus)
  38. [actual] sakypus → babspus and gibkpus (原始: sakypus is babspus and gibkpus)
  39. [actual] viyxpus → qegzpus and gijmpus (原始: viyxpus is qegzpus and gijmpus)
  40. [actual] qegzpus → sakypus (原始: qegzpus is sakypus)
  41. [actual] viyxpus → sakypus (原始: viyxpus is sakypus)
  42. [actual] viyxpus → babspus (原始: viyxpus is babspus)
  43. [planning] x → babspus (原始: x is babspus)
  44. [planning] x → viyxpus (原始: x is viyxpus)
  45. [actual] x → belcpus (原始: x is belcpus)
  46. [actual] hezgpus → viyxpus and fendpus and yijgpus (原始: hezgpus is viyxpus and fendpus and yijgpus)
  47. [actual] tekxpus → hezgpus (原始: tekxpus is hezgpus)
  48. [actual] zawkpus → tekxpus and fosmpus (原始: zawkpus is tekxpus and fosmpus)
  49. [actual] nanrpus → zawkpus (原始: nanrpus is zawkpus)
  50. [actual] lorspus → nanrpus (原始: lorspus is nanrpus)
  51. [actual] fuvnpus → lorspus (原始: fuvnpus is lorspus)
  52. [actual] x → fuvnpus (原始: x is fuvnpus)
  53. [actual] belcpus → fuvnpus (原始: belcpus is fuvnpus)
  54. [actual] vacnpus → fuvnpus (原始: vacnpus is fuvnpus)
  55. [actual] x → fuvnpus (原始: x is fuvnpus)
  56. [actual] fuvnpus → lorspus (原始: fuvnpus is lorspus)
  57. [planning] x → lorspus (原始: x is lorspus)
  58. [actual] lorspus → nanrpus (原始: lorspus is nanrpus)
  59. [planning] x → nanrpus (原始: x is nanrpus)
  60. [actual] nanrpus → zawkpus (原始: nanrpus is zawkpus)
  61. [planning] x → zawkpus (原始: x is zawkpus)
  62. [actual] zawkpus → tekxpus and fosmpus (原始: zawkpus is tekxpus and fosmpus)
  63. [actual] x → tekxpus and fosmpus (原始: x is tekxpus and fosmpus)
  64. [actual] tekxpus → hezgpus (原始: tekxpus is hezgpus)
  65. [actual] x → hezgpus (原始: x is hezgpus)
  66. [actual] hezgpus → viyxpus and fendpus and yijgpus (原始: hezgpus is viyxpus and fendpus and yijgpus)
  67. [actual] x → viyxpus and fendpus and yijgpus (原始: x is viyxpus and fendpus and yijgpus)
  68. [actual] viyxpus → qegzpus and gijmpus (原始: viyxpus is qegzpus and gijmpus)
  69. [actual] viyxpus → cowppus (原始: viyxpus is cowppus)
  70. [actual] viyxpus → qegzpus (原始: viyxpus is qegzpus)
  71. [actual] qegzpus → sakypus (原始: qegzpus is sakypus)
  72. [actual] viyxpus → sakypus (原始: viyxpus is sakypus)
  73. [actual] sakypus → babspus and gibkpus (原始: sakypus is babspus and gibkpus)
  74. [actual] viyxpus → babspus (原始: viyxpus is babspus)
  75. [actual] x → viyxpus (原始: x is viyxpus)
  76. [actual] x → babspus (原始: x is babspus)
  77. [actual] x → babspus (原始: x is babspus)
  78. [planning] x → babgpus (原始: x is babgpus)
  79. [planning] x → babrpus (原始: x is babrpus)
  80. [actual] cilxpus → babgpus and babrpus (原始: cilxpus is babgpus and babrpus)
  81. [actual] tiygpus → cilxpus (原始: tiygpus is cilxpus)
  82. [actual] pehtpus → tiygpus (原始: pehtpus is tiygpus)
  83. [planning] x → pehtpus (原始: x is pehtpus)
  84. [actual] cowppus → maxppus and cutzpus (原始: cowppus is maxppus and cutzpus)
  85. [actual] viyxpus → cowppus (原始: viyxpus is cowppus)
  86. [actual] x → viyxpus (原始: x is viyxpus)
  87. [actual] x → cowppus (原始: x is cowppus)
  88. [actual] cowppus → maxppus and cutzpus (原始: cowppus is maxppus and cutzpus)
  89. [planning] x → maxppus and cutzpus (原始: x is maxppus and cutzpus)
  90. [actual] maxppus → pehtpus (原始: maxppus is pehtpus)
  91. [planning] x → pehtpus (原始: x is pehtpus)
  92. [actual] pehtpus → tiygpus (原始: pehtpus is tiygpus)
  93. [actual] x → tiygpus (原始: x is tiygpus)
  94. [actual] tiygpus → cilxpus (原始: tiygpus is cilxpus)
  95. [planning] x → cilxpus (原始: x is cilxpus)
  96. [actual] cilxpus → babgpus and babrpus (原始: cilxpus is babgpus and babrpus)
  97. [actual] x → babgpus and babrpus (原始: x is babgpus and babrpus)
  98. [actual] x → babgpus and babrpus and babspus (原始: x is babgpus and babrpus and babspus)

开始新的后处理...
[后处理] 从LoG数据文件中获取到图数据，节点数: 34
[后处理] 加载LoG图，包含 34 个节点
  LoG节点 0: x is babgpus and babrpus and babspus (规则: MP, 深度: 1)
  LoG节点 1: x is nanrpus (规则: CE, 深度: 2)
  LoG节点 2: nanrpus is babgpus and babrpus and babspus (规则: MP, 深度: 2)
  LoG节点 3: x is nanrpus and jivbpus (规则: MP, 深度: 3)
  LoG节点 4: nanrpus is viyxpus (规则: CE, 深度: 3)
  LoG节点 5: viyxpus is babgpus and babrpus and babspus (规则: CI, 深度: 3)
  LoG节点 6: x is belcpus (规则: MP, 深度: 4)
  LoG节点 7: belcpus is nanrpus and jivbpus (规则: CI, 深度: 4)
  LoG节点 8: nanrpus is viyxpus and fendpus (规则: MP, 深度: 4)
  LoG节点 9: viyxpus is babgpus and babrpus (规则: MP, 深度: 4)
  LoG节点 10: viyxpus is babspus (规则: CE, 深度: 4)
  LoG节点 11: x is hawspus (规则: MP, 深度: 5)
  LoG节点 12: hawspus is belcpus (规则: CE, 深度: 5)
  LoG节点 13: belcpus is nanrpus (规则: MP, 深度: 5)
  LoG节点 14: belcpus is jivbpus (规则: MP, 深度: 5)
  LoG节点 15: nanrpus is tekxpus (规则: CE, 深度: 5)
  LoG节点 16: tekxpus is viyxpus and fendpus (规则: CE, 深度: 5)
  LoG节点 17: viyxpus is maxppus (规则: CE, 深度: 5)
  LoG节点 18: maxppus is babgpus and babrpus (规则: MP, 深度: 5)
  LoG节点 19: viyxpus is babspus and gibkpus (规则: MP, 深度: 5)
  LoG节点 20: x is tiqjpus (规则: MP, 深度: 6)
  LoG节点 21: tiqjpus is hawspus (规则: CE, 深度: 6)
  LoG节点 22: hawspus is belcpus and xasvpus (规则: MP, 深度: 6)
  LoG节点 23: belcpus is fuvnpus (规则: CE, 深度: 6)
  LoG节点 24: fuvnpus is nanrpus (规则: MP, 深度: 6)
  LoG节点 25: belcpus is savlpus (规则: CE, 深度: 6)
  LoG节点 26: savlpus is jivbpus (规则: MP, 深度: 6)
  LoG节点 27: nanrpus is tekxpus and fosmpus (规则: MP, 深度: 6)
  LoG节点 28: tekxpus is viyxpus and fendpus and yijgpus (规则: MP, 深度: 6)
  LoG节点 29: viyxpus is maxppus and cutzpus (规则: MP, 深度: 6)
  LoG节点 30: maxppus is tiygpus (规则: MP, 深度: 6)
  LoG节点 31: tiygpus is babgpus and babrpus (规则: MP, 深度: 6)
  LoG节点 32: viyxpus is qegzpus (规则: CE, 深度: 6)
  LoG节点 33: qegzpus is babspus and gibkpus (规则: MP, 深度: 6)

============================================================
[后处理] 开始处理节点
============================================================
📊 初始状态:
   - 标准化节点数: 98
   - 初始条件数: 24
   - LoG图节点数: 34

📋 初始条件列表:
    1. tiygpus is cilxpus
    2. tiqjpus is hawspus and qiqypus
    3. savlpus is dosxpus
    4. sakypus is babspus and gibkpus
    5. belcpus is savlpus and seczpus
    6. dosxpus is jivbpus
    7. maxppus is pehtpus
    8. qegzpus is sakypus
    9. x is tuqjpus
   10. zawkpus is tekxpus and fosmpus
   11. pehtpus is tiygpus
   12. hezgpus is viyxpus and fendpus and yijgpus
   13. tekxpus is hezgpus
   14. fuvnpus is lorspus
   15. nanrpus is zawkpus
   16. gutypus is belcpus and xasvpus
   17. viyxpus is qegzpus and gijmpus
   18. hawspus is gutypus
   19. viyxpus is cowppus
   20. belcpus is fuvnpus and vacnpus
   21. cowppus is maxppus and cutzpus
   22. lorspus is nanrpus
   23. tuqjpus is tiqjpus
   24. cilxpus is babgpus and babrpus

🔧 构建初始Statement列表...
✅ 初始Statement列表构建完成，包含 24 个前提节点

🔍 开始处理actual节点...

   节点 1: x is tuqjpus
      ↻ 重复节点，计数: 2

   节点 2: x is tuqjpus
      ↻ 重复节点，计数: 3

   节点 3: tuqjpus is tiqjpus
      ↻ 重复节点，计数: 2

   节点 4: x is tiqjpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is tiqjpus
      ✅ 验证成功 + LoG匹配

   节点 5: tiqjpus is hawspus and qiqypus
      ↻ 重复节点，计数: 2

   节点 6: x is hawspus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is hawspus
[子树点亮]     └─ 点亮依赖节点: tiqjpus is hawspus (深度6)
[后处理]   └─ 自动点亮依赖子树: 1 个节点
      ✅ 验证成功 + LoG匹配

   节点 7: x is qiqypus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is tuqjpus → tuqjpus is qiqypus
[后处理] 基于推理轨迹点亮节点，使用了 3 个前提条件:
  - 前提: x is tuqjpus
  - 前提: tuqjpus is tiqjpus
  - 前提: tiqjpus is hawspus and qiqypus

   节点 8: x is hawspus
      ↻ 重复节点，计数: 2

   节点 9: hawspus is gutypus
      ↻ 重复节点，计数: 2

   节点 10: x is gutypus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is tuqjpus → tuqjpus is gutypus
[后处理] 基于推理轨迹点亮节点，使用了 4 个前提条件:
  - 前提: x is tuqjpus
  - 前提: tuqjpus is tiqjpus
  - 前提: tiqjpus is hawspus and qiqypus
  - 前提: hawspus is gutypus

   节点 11: gutypus is belcpus and xasvpus
      ↻ 重复节点，计数: 2

   节点 12: x is belcpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is belcpus
[子树点亮]     └─ 点亮依赖节点: hawspus is belcpus (深度5)
[子树点亮]     └─ 点亮依赖节点: hawspus is belcpus and xasvpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 2 个节点
      ✅ 验证成功 + LoG匹配

   节点 13: x is xasvpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is tuqjpus → tuqjpus is xasvpus
[后处理] 基于推理轨迹点亮节点，使用了 5 个前提条件:
  - 前提: x is tuqjpus
  - 前提: tuqjpus is tiqjpus
  - 前提: tiqjpus is hawspus and qiqypus
  - 前提: hawspus is gutypus
  - 前提: gutypus is belcpus and xasvpus

   节点 14: belcpus is savlpus and seczpus
      ↻ 重复节点，计数: 2

   节点 15: x is savlpus and seczpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is tuqjpus → tuqjpus is savlpus and seczpus
[后处理] 基于推理轨迹点亮节点，使用了 6 个前提条件:
  - 前提: x is tuqjpus
  - 前提: tuqjpus is tiqjpus
  - 前提: tiqjpus is hawspus and qiqypus
  - 前提: hawspus is gutypus
  - 前提: gutypus is belcpus and xasvpus
  - 前提: belcpus is savlpus and seczpus
  ✓ 点亮LoG节点: belcpus is savlpus
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 16: belcpus is fuvnpus and vacnpus
      ↻ 重复节点，计数: 2

   节点 17: belcpus is savlpus and seczpus
      ↻ 重复节点，计数: 3

   节点 18: belcpus is fuvnpus and vacnpus
      ↻ 重复节点，计数: 3

   节点 19: x is belcpus
      ↻ 重复节点，计数: 2

   节点 20: x is savlpus and seczpus and fuvnpus and vacnpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is tuqjpus → tuqjpus is savlpus and seczpus and fuvnpus and vacnpus
[后处理] 基于推理轨迹点亮节点，使用了 7 个前提条件:
  - 前提: x is tuqjpus
  - 前提: tuqjpus is tiqjpus
  - 前提: tiqjpus is hawspus and qiqypus
  - 前提: hawspus is gutypus
  - 前提: gutypus is belcpus and xasvpus
  - 前提: belcpus is savlpus and seczpus
  - 前提: belcpus is fuvnpus and vacnpus
  ✓ 点亮LoG节点: belcpus is fuvnpus
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 21: savlpus is dosxpus
      ↻ 重复节点，计数: 2

   节点 22: x is dosxpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is tuqjpus → tuqjpus is dosxpus
[后处理] 基于推理轨迹点亮节点，使用了 7 个前提条件:
  - 前提: x is tuqjpus
  - 前提: tuqjpus is tiqjpus
  - 前提: tiqjpus is hawspus and qiqypus
  - 前提: hawspus is gutypus
  - 前提: gutypus is belcpus and xasvpus
  - 前提: belcpus is savlpus and seczpus
  - 前提: savlpus is dosxpus

   节点 23: dosxpus is jivbpus
      ↻ 重复节点，计数: 2

   节点 24: x is jivbpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is tuqjpus → tuqjpus is jivbpus
[后处理] 基于推理轨迹点亮节点，使用了 8 个前提条件:
  - 前提: x is tuqjpus
  - 前提: tuqjpus is tiqjpus
  - 前提: tiqjpus is hawspus and qiqypus
  - 前提: hawspus is gutypus
  - 前提: gutypus is belcpus and xasvpus
  - 前提: belcpus is savlpus and seczpus
  - 前提: savlpus is dosxpus
  - 前提: dosxpus is jivbpus
  ✓ 点亮LoG节点: belcpus is jivbpus
[子树点亮]     └─ 点亮依赖节点: savlpus is jivbpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 1 个节点
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 25: x is qiqypus
      ↻ 重复节点，计数: 2

   节点 26: x is hawspus
      ↻ 重复节点，计数: 3

   节点 27: hawspus is gutypus
      ↻ 重复节点，计数: 3

   节点 28: pehtpus is tiygpus
      ↻ 重复节点，计数: 2

   节点 29: tiygpus is cilxpus
      ↻ 重复节点，计数: 2

   节点 30: cilxpus is babgpus and babrpus
      ↻ 重复节点，计数: 2

   节点 31: babspus is babspus and gibkpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 32: sakypus is babspus and gibkpus
      ↻ 重复节点，计数: 2

   节点 33: viyxpus is qegzpus and gijmpus
      ↻ 重复节点，计数: 2

   节点 34: qegzpus is sakypus
      ↻ 重复节点，计数: 2

   节点 35: viyxpus is sakypus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP+CE
      📋 推理路径: MP+CE规则: viyxpus is qegzpus → qegzpus is sakypus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: viyxpus is qegzpus and gijmpus
  - 前提: qegzpus is sakypus
  ✓ 点亮LoG节点: viyxpus is qegzpus
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 36: viyxpus is babspus
      🔍 验证新节点...
[后处理] 点亮LoG节点: viyxpus is babspus
[子树点亮]     └─ 点亮依赖节点: viyxpus is babspus and gibkpus (深度5)
[子树点亮]     └─ 点亮依赖节点: qegzpus is babspus and gibkpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 2 个节点
      ✅ 验证成功 + LoG匹配

   节点 37: x is belcpus
      ↻ 重复节点，计数: 3

   节点 38: hezgpus is viyxpus and fendpus and yijgpus
      ↻ 重复节点，计数: 2

   节点 39: tekxpus is hezgpus
      ↻ 重复节点，计数: 2

   节点 40: zawkpus is tekxpus and fosmpus
      ↻ 重复节点，计数: 2

   节点 41: nanrpus is zawkpus
      ↻ 重复节点，计数: 2

   节点 42: lorspus is nanrpus
      ↻ 重复节点，计数: 2

   节点 43: fuvnpus is lorspus
      ↻ 重复节点，计数: 2

   节点 44: x is fuvnpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: x is savlpus and seczpus and fuvnpus and vacnpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: x is savlpus and seczpus and fuvnpus and vacnpus

   节点 45: belcpus is fuvnpus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 46: vacnpus is fuvnpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 47: x is fuvnpus
      ↻ 重复节点，计数: 2

   节点 48: fuvnpus is lorspus
      ↻ 重复节点，计数: 3

   节点 49: lorspus is nanrpus
      ↻ 重复节点，计数: 3

   节点 50: nanrpus is zawkpus
      ↻ 重复节点，计数: 3

   节点 51: zawkpus is tekxpus and fosmpus
      ↻ 重复节点，计数: 3

   节点 52: x is tekxpus and fosmpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is tuqjpus → tuqjpus is tekxpus and fosmpus
[后处理] 基于推理轨迹点亮节点，使用了 10 个前提条件:
  - 前提: x is tuqjpus
  - 前提: tuqjpus is tiqjpus
  - 前提: tiqjpus is hawspus and qiqypus
  - 前提: hawspus is gutypus
  - 前提: gutypus is belcpus and xasvpus
  - 前提: belcpus is fuvnpus
  - 前提: fuvnpus is lorspus
  - 前提: lorspus is nanrpus
  - 前提: nanrpus is zawkpus
  - 前提: zawkpus is tekxpus and fosmpus
  ✓ 点亮LoG节点: x is nanrpus
[子树点亮]     └─ 点亮依赖节点: x is nanrpus and jivbpus (深度3)
[子树点亮]     └─ 点亮依赖节点: belcpus is nanrpus and jivbpus (深度4)
[子树点亮]     └─ 点亮依赖节点: belcpus is nanrpus (深度5)
[子树点亮]     └─ 点亮依赖节点: fuvnpus is nanrpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 4 个节点
  ✓ 点亮LoG节点: nanrpus is tekxpus
[子树点亮]     └─ 点亮依赖节点: nanrpus is tekxpus and fosmpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 1 个节点
[后处理] 通过推理轨迹额外点亮了 2 个LoG节点

   节点 53: tekxpus is hezgpus
      ↻ 重复节点，计数: 3

   节点 54: x is hezgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is tuqjpus → tuqjpus is hezgpus
[后处理] 基于推理轨迹点亮节点，使用了 11 个前提条件:
  - 前提: x is tuqjpus
  - 前提: tuqjpus is tiqjpus
  - 前提: tiqjpus is hawspus and qiqypus
  - 前提: hawspus is gutypus
  - 前提: gutypus is belcpus and xasvpus
  - 前提: belcpus is fuvnpus
  - 前提: fuvnpus is lorspus
  - 前提: lorspus is nanrpus
  - 前提: nanrpus is zawkpus
  - 前提: zawkpus is tekxpus and fosmpus
  - 前提: tekxpus is hezgpus

   节点 55: hezgpus is viyxpus and fendpus and yijgpus
      ↻ 重复节点，计数: 3

   节点 56: x is viyxpus and fendpus and yijgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is tuqjpus → tuqjpus is viyxpus and fendpus and yijgpus
[后处理] 基于推理轨迹点亮节点，使用了 12 个前提条件:
  - 前提: x is tuqjpus
  - 前提: tuqjpus is tiqjpus
  - 前提: tiqjpus is hawspus and qiqypus
  - 前提: hawspus is gutypus
  - 前提: gutypus is belcpus and xasvpus
  - 前提: belcpus is fuvnpus
  - 前提: fuvnpus is lorspus
  - 前提: lorspus is nanrpus
  - 前提: nanrpus is zawkpus
  - 前提: zawkpus is tekxpus and fosmpus
  - 前提: tekxpus is hezgpus
  - 前提: hezgpus is viyxpus and fendpus and yijgpus
  ✓ 点亮LoG节点: nanrpus is viyxpus
[子树点亮]     └─ 点亮依赖节点: nanrpus is viyxpus and fendpus (深度4)
[子树点亮]     └─ 点亮依赖节点: tekxpus is viyxpus and fendpus (深度5)
[子树点亮]     └─ 点亮依赖节点: tekxpus is viyxpus and fendpus and yijgpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 3 个节点
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 57: viyxpus is qegzpus and gijmpus
      ↻ 重复节点，计数: 3

   节点 58: viyxpus is cowppus
      ↻ 重复节点，计数: 2

   节点 59: viyxpus is qegzpus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 60: qegzpus is sakypus
      ↻ 重复节点，计数: 3

   节点 61: viyxpus is sakypus
      ↻ 重复节点，计数: 2

   节点 62: sakypus is babspus and gibkpus
      ↻ 重复节点，计数: 3

   节点 63: viyxpus is babspus
      ↻ 重复节点，计数: 2

   节点 64: x is viyxpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: x is viyxpus and fendpus and yijgpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: x is viyxpus and fendpus and yijgpus

   节点 65: x is babspus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is tuqjpus → tuqjpus is babspus
[后处理] 基于推理轨迹点亮节点，使用了 13 个前提条件:
  - 前提: x is tuqjpus
  - 前提: tuqjpus is tiqjpus
  - 前提: tiqjpus is hawspus and qiqypus
  - 前提: hawspus is gutypus
  - 前提: gutypus is belcpus and xasvpus
  - 前提: belcpus is fuvnpus
  - 前提: fuvnpus is lorspus
  - 前提: lorspus is nanrpus
  - 前提: nanrpus is zawkpus
  - 前提: zawkpus is tekxpus and fosmpus
  - 前提: tekxpus is hezgpus
  - 前提: hezgpus is viyxpus and fendpus and yijgpus
  - 前提: viyxpus is babspus

   节点 66: x is babspus
      ↻ 重复节点，计数: 2

   节点 67: cilxpus is babgpus and babrpus
      ↻ 重复节点，计数: 3

   节点 68: tiygpus is cilxpus
      ↻ 重复节点，计数: 3

   节点 69: pehtpus is tiygpus
      ↻ 重复节点，计数: 3

   节点 70: cowppus is maxppus and cutzpus
      ↻ 重复节点，计数: 2

   节点 71: viyxpus is cowppus
      ↻ 重复节点，计数: 3

   节点 72: x is viyxpus
      ↻ 重复节点，计数: 2

   节点 73: x is cowppus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is tuqjpus → tuqjpus is cowppus
[后处理] 基于推理轨迹点亮节点，使用了 13 个前提条件:
  - 前提: x is tuqjpus
  - 前提: tuqjpus is tiqjpus
  - 前提: tiqjpus is hawspus and qiqypus
  - 前提: hawspus is gutypus
  - 前提: gutypus is belcpus and xasvpus
  - 前提: belcpus is fuvnpus
  - 前提: fuvnpus is lorspus
  - 前提: lorspus is nanrpus
  - 前提: nanrpus is zawkpus
  - 前提: zawkpus is tekxpus and fosmpus
  - 前提: tekxpus is hezgpus
  - 前提: hezgpus is viyxpus and fendpus and yijgpus
  - 前提: viyxpus is cowppus

   节点 74: cowppus is maxppus and cutzpus
      ↻ 重复节点，计数: 3

   节点 75: maxppus is pehtpus
      ↻ 重复节点，计数: 2

   节点 76: pehtpus is tiygpus
      ↻ 重复节点，计数: 4

   节点 77: x is tiygpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is tuqjpus → tuqjpus is tiygpus
[后处理] 基于推理轨迹点亮节点，使用了 16 个前提条件:
  - 前提: x is tuqjpus
  - 前提: tuqjpus is tiqjpus
  - 前提: tiqjpus is hawspus and qiqypus
  - 前提: hawspus is gutypus
  - 前提: gutypus is belcpus and xasvpus
  - 前提: belcpus is fuvnpus
  - 前提: fuvnpus is lorspus
  - 前提: lorspus is nanrpus
  - 前提: nanrpus is zawkpus
  - 前提: zawkpus is tekxpus and fosmpus
  - 前提: tekxpus is hezgpus
  - 前提: hezgpus is viyxpus and fendpus and yijgpus
  - 前提: viyxpus is cowppus
  - 前提: cowppus is maxppus and cutzpus
  - 前提: maxppus is pehtpus
  - 前提: pehtpus is tiygpus
  ✓ 点亮LoG节点: viyxpus is maxppus
[子树点亮]     └─ 点亮依赖节点: viyxpus is maxppus and cutzpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 1 个节点
  ✓ 点亮LoG节点: maxppus is tiygpus
[后处理] 通过推理轨迹额外点亮了 2 个LoG节点

   节点 78: tiygpus is cilxpus
      ↻ 重复节点，计数: 4

   节点 79: cilxpus is babgpus and babrpus
      ↻ 重复节点，计数: 4

   节点 80: x is babgpus and babrpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is tuqjpus → tuqjpus is babgpus and babrpus
[后处理] 基于推理轨迹点亮节点，使用了 18 个前提条件:
  - 前提: x is tuqjpus
  - 前提: tuqjpus is tiqjpus
  - 前提: tiqjpus is hawspus and qiqypus
  - 前提: hawspus is gutypus
  - 前提: gutypus is belcpus and xasvpus
  - 前提: belcpus is fuvnpus
  - 前提: fuvnpus is lorspus
  - 前提: lorspus is nanrpus
  - 前提: nanrpus is zawkpus
  - 前提: zawkpus is tekxpus and fosmpus
  - 前提: tekxpus is hezgpus
  - 前提: hezgpus is viyxpus and fendpus and yijgpus
  - 前提: viyxpus is cowppus
  - 前提: cowppus is maxppus and cutzpus
  - 前提: maxppus is pehtpus
  - 前提: pehtpus is tiygpus
  - 前提: tiygpus is cilxpus
  - 前提: cilxpus is babgpus and babrpus
  ✓ 点亮LoG节点: viyxpus is babgpus and babrpus
[子树点亮]     └─ 点亮依赖节点: maxppus is babgpus and babrpus (深度5)
[子树点亮]     └─ 点亮依赖节点: tiygpus is babgpus and babrpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 2 个节点
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 81: x is babgpus and babrpus and babspus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is babgpus and babrpus and babspus
[子树点亮]     └─ 点亮依赖节点: nanrpus is babgpus and babrpus and babspus (深度2)
[子树点亮]     └─ 点亮依赖节点: viyxpus is babgpus and babrpus and babspus (深度3)
[后处理]   └─ 自动点亮依赖子树: 2 个节点
      ✅ 验证成功 + LoG匹配

🔍 分析推理路径完整性...

============================================================
[后处理] 处理完成
============================================================
📈 处理统计:
   - 处理的actual节点: 81
   - 新增节点: 26
   - 更新已存在节点: 55
   - 点亮的LoG节点: 34

🎯 推理质量统计:
   - 完美推理: 24 (节点正确 + 路径正确)
   - 部分推理: 2 (节点正确 + 路径部分错误)
   - 无效推理: 0 (节点错误或路径完全错误)
[LoG分析] LoG图: 34节点, 24前提, 复杂度1-24

📊 === Statement列表分析 ===
📈 节点统计:
   - 总节点数: 50
   - 前提节点: 24
   - 推理节点: 24
   - 幻觉节点: 2
   - 点亮LoG节点: 34

❌ 幻觉节点详情:
   - babspus is babspus and gibkpus (出现1次)
   - vacnpus is fuvnpus (出现1次)

✅ 推理节点详情:
   🟢 x is tiqjpus (出现1次, 质量:perfect)
   🟢 x is hawspus (出现3次, 质量:perfect)
   🟢 x is qiqypus (出现2次, 质量:perfect)
   🟢 x is gutypus (出现1次, 质量:perfect)
   🟢 x is belcpus (出现3次, 质量:perfect)
   🟢 x is xasvpus (出现1次, 质量:perfect)
   🟢 x is savlpus and seczpus (出现1次, 质量:perfect)
   🟢 x is savlpus and seczpus and fuvnpus and vacnpus (出现1次, 质量:perfect)
   🟢 x is dosxpus (出现1次, 质量:perfect)
   🟢 x is jivbpus (出现1次, 质量:perfect)
   🟢 viyxpus is sakypus (出现2次, 质量:perfect)
   🟢 viyxpus is babspus (出现2次, 质量:perfect)
   🟡 x is fuvnpus (出现2次, 质量:partial)
      ⚠️  无效依赖: ['vacnpus is fuvnpus']
   🟡 belcpus is fuvnpus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['vacnpus is fuvnpus']
   🟢 x is tekxpus and fosmpus (出现1次, 质量:perfect)
   🟢 x is hezgpus (出现1次, 质量:perfect)
   🟢 x is viyxpus and fendpus and yijgpus (出现1次, 质量:perfect)
   🟢 viyxpus is qegzpus (出现1次, 质量:perfect)
   🟢 x is viyxpus (出现2次, 质量:perfect)
   🟢 x is babspus (出现2次, 质量:perfect)
   🟢 x is cowppus (出现1次, 质量:perfect)
   🟢 x is tiygpus (出现1次, 质量:perfect)
   🟢 x is babgpus and babrpus (出现1次, 质量:perfect)
   🟢 x is babgpus and babrpus and babspus (出现1次, 质量:perfect)

🔥 点亮的LoG节点:
   - viyxpus is maxppus and cutzpus
   - belcpus is jivbpus
   - savlpus is jivbpus
   - belcpus is fuvnpus
   - nanrpus is tekxpus
   - belcpus is nanrpus
   - tekxpus is viyxpus and fendpus
   - tiqjpus is hawspus
   - hawspus is belcpus and xasvpus
   - x is hawspus
   - x is nanrpus and jivbpus
   - fuvnpus is nanrpus
   - x is belcpus
   - maxppus is tiygpus
   - viyxpus is babgpus and babrpus
   - viyxpus is babgpus and babrpus and babspus
   - belcpus is nanrpus and jivbpus
   - x is babgpus and babrpus and babspus
   - nanrpus is viyxpus and fendpus
   - x is nanrpus
   - viyxpus is babspus
   - qegzpus is babspus and gibkpus
   - viyxpus is maxppus
   - viyxpus is qegzpus
   - nanrpus is viyxpus
   - maxppus is babgpus and babrpus
   - nanrpus is tekxpus and fosmpus
   - tiygpus is babgpus and babrpus
   - belcpus is savlpus
   - x is tiqjpus
   - viyxpus is babspus and gibkpus
   - tekxpus is viyxpus and fendpus and yijgpus
   - hawspus is belcpus
   - nanrpus is babgpus and babrpus and babspus

============================================================
📊 计算评估指标
============================================================

🎯 计算Coverage指标...
   深度Coverage: 6/6 = 100.00%
   最深点亮节点: x is babgpus and babrpus and babspus (第6层)
   节点Coverage: 34/34 = 100.00%
   前提条件Coverage: 24/24 = 100.00%
   各推理层点亮比例:
     第1层: 14/14 = 100.00%
     第2层: 9/9 = 100.00%
     第3层: 5/5 = 100.00%
     第4层: 3/3 = 100.00%
     第5层: 2/2 = 100.00%
     第6层: 1/1 = 100.00%

🎯 计算Precision指标...
   Error Rate: 2/26 = 7.69%
   可推导节点: 24/26
   Strict Error Rate: 4/26 = 15.38%
   严格有效节点: 22/26

   详细分析:
     完美推理: 24 (92.31%)
     部分推理: 2 (7.69%)
     无效推理: 0 (0.00%)

================================================================================
处理记录 15/50
================================================================================
记录索引: 14
问题状态: correct
📁 从缓存加载提取结果: evaluation_results.LoG_6.deepseek-reasoner_record_14.json
✅ 使用缓存结果:
   - 句子数: 66
   - 提取的语句数: 67
   - 初始条件数: 13

=== Statement提取完成 ===
总句子数: 66
成功提取: 66
失败提取: 0
总statements数: 67

=== 开始清洗Statement格式 ===
原始statements数: 67
清洗后statements数: 64
过滤掉的statements数: 3
清洗后的statements:
  1. [planning] x is babgpus
  2. [planning] x is babrpus
  3. [actual] x is binypus
  4. [actual] x is binypus
  5. [planning] binypus is babgpus or binypus is babrpus
  6. [actual] binypus is rexqpus and wuszpus
  7. [actual] binypus is rexqpus and wuszpus
  8. [actual] babgpus is mentioned in the context of pilkpus
  9. [actual] pilkpus is babgpus and sulvpus and wobkpus
  10. [actual] pilkpus is babgpus
  11. [planning] x is pilkpus
  12. [planning] x is babgpus
  13. [actual] x is binypus
  14. [actual] binypus is rexqpus and wuszpus
  15. [actual] rexqpus is huyfpus and hofspus
  16. [actual] huyfpus is yupkpus
  17. [actual] yupkpus is kanhpus
  18. [actual] kanhpus is legbpus
  19. [actual] legbpus is yotgpus
  20. [actual] yotgpus is sectpus and quzzpus
  21. [actual] yotgpus is sectpus and quzzpus
  22. [actual] quzzpus is dilbpus
  23. [actual] dilbpus is sukxpus and xeyzpus
  24. [actual] sukxpus is pilkpus
  25. [actual] pilkpus is babgpus and sulvpus and wobkpus
  26. [actual] x is pilkpus
  27. [actual] pilkpus is babgpus
  28. [actual] x is binypus
  29. [actual] binypus is rexqpus
  30. [actual] x is rexqpus
  31. [actual] rexqpus is huyfpus
  32. [actual] x is huyfpus
  33. [actual] huyfpus is yupkpus
  34. [actual] x is yupkpus
  35. [actual] yupkpus is kanhpus
  36. [actual] x is kanhpus
  37. [actual] kanhpus is legbpus
  38. [actual] x is legbpus
  39. [actual] legbpus is yotgpus
  40. [actual] x is yotgpus
  41. [actual] yotgpus is quzzpus
  42. [actual] x is quzzpus
  43. [actual] yotgpus is quzzpus
  44. [actual] quzzpus is dilbpus
  45. [actual] x is dilbpus
  46. [actual] dilbpus is sukxpus
  47. [actual] x is sukxpus
  48. [actual] dilbpus is sukxpus and xeyzpus
  49. [actual] sukxpus is pilkpus
  50. [actual] x is pilkpus
  51. [actual] pilkpus is babgpus
  52. [actual] x is babgpus
  53. [actual] x is babgpus
  54. [planning] x is babgpus or babrpus
  55. [actual] x is babgpus
  56. [actual] x is babgpus or babrpus
  57. [actual] yotgpus is sectpus
  58. [actual] rexqpus is hofspus
  59. [actual] binypus is wuszpus
  60. [actual] x is babgpus
  61. [actual] x is babgpus or babrpus
  62. [planning] x is babrpus
  63. [planning] x is babgpus
  64. [planning] x is babgpus

=== 开始标准化和解析节点 ===
清洗后statements数: 64
标准化后节点数: 62
过滤掉的无效实体数: 2
标准化后的节点:
  1. [planning] x → babgpus (原始: x is babgpus)
  2. [planning] x → babrpus (原始: x is babrpus)
  3. [actual] x → binypus (原始: x is binypus)
  4. [actual] x → binypus (原始: x is binypus)
  5. [actual] binypus → rexqpus and wuszpus (原始: binypus is rexqpus and wuszpus)
  6. [actual] binypus → rexqpus and wuszpus (原始: binypus is rexqpus and wuszpus)
  7. [actual] pilkpus → babgpus and sulvpus and wobkpus (原始: pilkpus is babgpus and sulvpus and wobkpus)
  8. [actual] pilkpus → babgpus (原始: pilkpus is babgpus)
  9. [planning] x → pilkpus (原始: x is pilkpus)
  10. [planning] x → babgpus (原始: x is babgpus)
  11. [actual] x → binypus (原始: x is binypus)
  12. [actual] binypus → rexqpus and wuszpus (原始: binypus is rexqpus and wuszpus)
  13. [actual] rexqpus → huyfpus and hofspus (原始: rexqpus is huyfpus and hofspus)
  14. [actual] huyfpus → yupkpus (原始: huyfpus is yupkpus)
  15. [actual] yupkpus → kanhpus (原始: yupkpus is kanhpus)
  16. [actual] kanhpus → legbpus (原始: kanhpus is legbpus)
  17. [actual] legbpus → yotgpus (原始: legbpus is yotgpus)
  18. [actual] yotgpus → sectpus and quzzpus (原始: yotgpus is sectpus and quzzpus)
  19. [actual] yotgpus → sectpus and quzzpus (原始: yotgpus is sectpus and quzzpus)
  20. [actual] quzzpus → dilbpus (原始: quzzpus is dilbpus)
  21. [actual] dilbpus → sukxpus and xeyzpus (原始: dilbpus is sukxpus and xeyzpus)
  22. [actual] sukxpus → pilkpus (原始: sukxpus is pilkpus)
  23. [actual] pilkpus → babgpus and sulvpus and wobkpus (原始: pilkpus is babgpus and sulvpus and wobkpus)
  24. [actual] x → pilkpus (原始: x is pilkpus)
  25. [actual] pilkpus → babgpus (原始: pilkpus is babgpus)
  26. [actual] x → binypus (原始: x is binypus)
  27. [actual] binypus → rexqpus (原始: binypus is rexqpus)
  28. [actual] x → rexqpus (原始: x is rexqpus)
  29. [actual] rexqpus → huyfpus (原始: rexqpus is huyfpus)
  30. [actual] x → huyfpus (原始: x is huyfpus)
  31. [actual] huyfpus → yupkpus (原始: huyfpus is yupkpus)
  32. [actual] x → yupkpus (原始: x is yupkpus)
  33. [actual] yupkpus → kanhpus (原始: yupkpus is kanhpus)
  34. [actual] x → kanhpus (原始: x is kanhpus)
  35. [actual] kanhpus → legbpus (原始: kanhpus is legbpus)
  36. [actual] x → legbpus (原始: x is legbpus)
  37. [actual] legbpus → yotgpus (原始: legbpus is yotgpus)
  38. [actual] x → yotgpus (原始: x is yotgpus)
  39. [actual] yotgpus → quzzpus (原始: yotgpus is quzzpus)
  40. [actual] x → quzzpus (原始: x is quzzpus)
  41. [actual] yotgpus → quzzpus (原始: yotgpus is quzzpus)
  42. [actual] quzzpus → dilbpus (原始: quzzpus is dilbpus)
  43. [actual] x → dilbpus (原始: x is dilbpus)
  44. [actual] dilbpus → sukxpus (原始: dilbpus is sukxpus)
  45. [actual] x → sukxpus (原始: x is sukxpus)
  46. [actual] dilbpus → sukxpus and xeyzpus (原始: dilbpus is sukxpus and xeyzpus)
  47. [actual] sukxpus → pilkpus (原始: sukxpus is pilkpus)
  48. [actual] x → pilkpus (原始: x is pilkpus)
  49. [actual] pilkpus → babgpus (原始: pilkpus is babgpus)
  50. [actual] x → babgpus (原始: x is babgpus)
  51. [actual] x → babgpus (原始: x is babgpus)
  52. [planning] x → babgpus or babrpus (原始: x is babgpus or babrpus)
  53. [actual] x → babgpus (原始: x is babgpus)
  54. [actual] x → babgpus or babrpus (原始: x is babgpus or babrpus)
  55. [actual] yotgpus → sectpus (原始: yotgpus is sectpus)
  56. [actual] rexqpus → hofspus (原始: rexqpus is hofspus)
  57. [actual] binypus → wuszpus (原始: binypus is wuszpus)
  58. [actual] x → babgpus (原始: x is babgpus)
  59. [actual] x → babgpus or babrpus (原始: x is babgpus or babrpus)
  60. [planning] x → babrpus (原始: x is babrpus)
  61. [planning] x → babgpus (原始: x is babgpus)
  62. [planning] x → babgpus (原始: x is babgpus)

开始新的后处理...
[后处理] 从LoG数据文件中获取到图数据，节点数: 19
[后处理] 加载LoG图，包含 19 个节点
  LoG节点 0: x is babgpus or babrpus (规则: DI, 深度: 1)
  LoG节点 1: x is babgpus (规则: MP, 深度: 2)
  LoG节点 2: x is quzzpus (规则: MP, 深度: 3)
  LoG节点 3: quzzpus is babgpus (规则: CE, 深度: 3)
  LoG节点 4: x is kanhpus (规则: MP, 深度: 4)
  LoG节点 5: kanhpus is quzzpus (规则: CE, 深度: 4)
  LoG节点 6: quzzpus is babgpus and sulvpus (规则: MP, 深度: 4)
  LoG节点 7: x is rexqpus (规则: CE, 深度: 5)
  LoG节点 8: rexqpus is kanhpus (规则: MP, 深度: 5)
  LoG节点 9: kanhpus is quzzpus and sectpus (规则: MP, 深度: 5)
  LoG节点 10: quzzpus is sukxpus (规则: CE, 深度: 5)
  LoG节点 11: sukxpus is babgpus and sulvpus (规则: CE, 深度: 5)
  LoG节点 12: x is rexqpus and wuszpus (规则: MP, 深度: 6)
  LoG节点 13: rexqpus is huyfpus (规则: CE, 深度: 6)
  LoG节点 14: huyfpus is kanhpus (规则: MP, 深度: 6)
  LoG节点 15: kanhpus is yotgpus (规则: MP, 深度: 6)
  LoG节点 16: yotgpus is quzzpus and sectpus (规则: CI, 深度: 6)
  LoG节点 17: quzzpus is sukxpus and xeyzpus (规则: MP, 深度: 6)
  LoG节点 18: sukxpus is babgpus and sulvpus and wobkpus (规则: MP, 深度: 6)

============================================================
[后处理] 开始处理节点
============================================================
📊 初始状态:
   - 标准化节点数: 62
   - 初始条件数: 13
   - LoG图节点数: 19

📋 初始条件列表:
    1. huyfpus is yupkpus
    2. yupkpus is kanhpus
    3. legbpus is yotgpus
    4. quzzpus is dilbpus
    5. yotgpus is sectpus
    6. yotgpus is quzzpus
    7. pilkpus is babgpus and sulvpus and wobkpus
    8. binypus is rexqpus and wuszpus
    9. dilbpus is sukxpus and xeyzpus
   10. x is binypus
   11. kanhpus is legbpus
   12. rexqpus is huyfpus and hofspus
   13. sukxpus is pilkpus

🔧 构建初始Statement列表...
✅ 初始Statement列表构建完成，包含 13 个前提节点

🔍 开始处理actual节点...

   节点 1: x is binypus
      ↻ 重复节点，计数: 2

   节点 2: x is binypus
      ↻ 重复节点，计数: 3

   节点 3: binypus is rexqpus and wuszpus
      ↻ 重复节点，计数: 2

   节点 4: binypus is rexqpus and wuszpus
      ↻ 重复节点，计数: 3

   节点 5: pilkpus is babgpus and sulvpus and wobkpus
      ↻ 重复节点，计数: 2

   节点 6: pilkpus is babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: pilkpus is babgpus and sulvpus and wobkpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: pilkpus is babgpus and sulvpus and wobkpus

   节点 7: x is binypus
      ↻ 重复节点，计数: 4

   节点 8: binypus is rexqpus and wuszpus
      ↻ 重复节点，计数: 4

   节点 9: rexqpus is huyfpus and hofspus
      ↻ 重复节点，计数: 2

   节点 10: huyfpus is yupkpus
      ↻ 重复节点，计数: 2

   节点 11: yupkpus is kanhpus
      ↻ 重复节点，计数: 2

   节点 12: kanhpus is legbpus
      ↻ 重复节点，计数: 2

   节点 13: legbpus is yotgpus
      ↻ 重复节点，计数: 2

   节点 14: yotgpus is sectpus and quzzpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CI
      📋 推理路径: CI规则: yotgpus is sectpus → yotgpus is quzzpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: yotgpus is sectpus
  - 前提: yotgpus is quzzpus
  ✓ 点亮LoG节点: yotgpus is quzzpus and sectpus
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 15: yotgpus is sectpus and quzzpus
      ↻ 重复节点，计数: 2

   节点 16: quzzpus is dilbpus
      ↻ 重复节点，计数: 2

   节点 17: dilbpus is sukxpus and xeyzpus
      ↻ 重复节点，计数: 2

   节点 18: sukxpus is pilkpus
      ↻ 重复节点，计数: 2

   节点 19: pilkpus is babgpus and sulvpus and wobkpus
      ↻ 重复节点，计数: 3

   节点 20: x is pilkpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is binypus → binypus is pilkpus
[后处理] 基于推理轨迹点亮节点，使用了 11 个前提条件:
  - 前提: x is binypus
  - 前提: binypus is rexqpus and wuszpus
  - 前提: rexqpus is huyfpus and hofspus
  - 前提: huyfpus is yupkpus
  - 前提: yupkpus is kanhpus
  - 前提: kanhpus is legbpus
  - 前提: legbpus is yotgpus
  - 前提: yotgpus is quzzpus
  - 前提: quzzpus is dilbpus
  - 前提: dilbpus is sukxpus and xeyzpus
  - 前提: sukxpus is pilkpus
  ✓ 点亮LoG节点: x is quzzpus
[子树点亮]     └─ 点亮依赖节点: x is kanhpus (深度4)
[子树点亮]     └─ 点亮依赖节点: kanhpus is quzzpus (深度4)
[子树点亮]     └─ 点亮依赖节点: x is rexqpus (深度5)
[子树点亮]     └─ 点亮依赖节点: rexqpus is kanhpus (深度5)
[子树点亮]     └─ 点亮依赖节点: kanhpus is quzzpus and sectpus (深度5)
[子树点亮]     └─ 点亮依赖节点: x is rexqpus and wuszpus (深度6)
[子树点亮]     └─ 点亮依赖节点: rexqpus is huyfpus (深度6)
[子树点亮]     └─ 点亮依赖节点: huyfpus is kanhpus (深度6)
[子树点亮]     └─ 点亮依赖节点: kanhpus is yotgpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 9 个节点
  ✓ 点亮LoG节点: quzzpus is sukxpus
[子树点亮]     └─ 点亮依赖节点: quzzpus is sukxpus and xeyzpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 1 个节点
[后处理] 通过推理轨迹额外点亮了 2 个LoG节点

   节点 21: pilkpus is babgpus
      ↻ 重复节点，计数: 2

   节点 22: x is binypus
      ↻ 重复节点，计数: 5

   节点 23: binypus is rexqpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: binypus is rexqpus and wuszpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: binypus is rexqpus and wuszpus

   节点 24: x is rexqpus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 25: rexqpus is huyfpus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 26: x is huyfpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is binypus → binypus is huyfpus
[后处理] 基于推理轨迹点亮节点，使用了 3 个前提条件:
  - 前提: x is binypus
  - 前提: binypus is rexqpus
  - 前提: rexqpus is huyfpus

   节点 27: huyfpus is yupkpus
      ↻ 重复节点，计数: 3

   节点 28: x is yupkpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is binypus → binypus is yupkpus
[后处理] 基于推理轨迹点亮节点，使用了 4 个前提条件:
  - 前提: x is binypus
  - 前提: binypus is rexqpus
  - 前提: rexqpus is huyfpus
  - 前提: huyfpus is yupkpus

   节点 29: yupkpus is kanhpus
      ↻ 重复节点，计数: 3

   节点 30: x is kanhpus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 31: kanhpus is legbpus
      ↻ 重复节点，计数: 3

   节点 32: x is legbpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is binypus → binypus is legbpus
[后处理] 基于推理轨迹点亮节点，使用了 6 个前提条件:
  - 前提: x is binypus
  - 前提: binypus is rexqpus
  - 前提: rexqpus is huyfpus
  - 前提: huyfpus is yupkpus
  - 前提: yupkpus is kanhpus
  - 前提: kanhpus is legbpus

   节点 33: legbpus is yotgpus
      ↻ 重复节点，计数: 3

   节点 34: x is yotgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is binypus → binypus is yotgpus
[后处理] 基于推理轨迹点亮节点，使用了 7 个前提条件:
  - 前提: x is binypus
  - 前提: binypus is rexqpus
  - 前提: rexqpus is huyfpus
  - 前提: huyfpus is yupkpus
  - 前提: yupkpus is kanhpus
  - 前提: kanhpus is legbpus
  - 前提: legbpus is yotgpus

   节点 35: yotgpus is quzzpus
      ↻ 重复节点，计数: 2

   节点 36: x is quzzpus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 37: yotgpus is quzzpus
      ↻ 重复节点，计数: 3

   节点 38: quzzpus is dilbpus
      ↻ 重复节点，计数: 3

   节点 39: x is dilbpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is binypus → binypus is dilbpus
[后处理] 基于推理轨迹点亮节点，使用了 9 个前提条件:
  - 前提: x is binypus
  - 前提: binypus is rexqpus
  - 前提: rexqpus is huyfpus
  - 前提: huyfpus is yupkpus
  - 前提: yupkpus is kanhpus
  - 前提: kanhpus is legbpus
  - 前提: legbpus is yotgpus
  - 前提: yotgpus is quzzpus
  - 前提: quzzpus is dilbpus

   节点 40: dilbpus is sukxpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: dilbpus is sukxpus and xeyzpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: dilbpus is sukxpus and xeyzpus

   节点 41: x is sukxpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is binypus → binypus is sukxpus
[后处理] 基于推理轨迹点亮节点，使用了 10 个前提条件:
  - 前提: x is binypus
  - 前提: binypus is rexqpus
  - 前提: rexqpus is huyfpus
  - 前提: huyfpus is yupkpus
  - 前提: yupkpus is kanhpus
  - 前提: kanhpus is legbpus
  - 前提: legbpus is yotgpus
  - 前提: yotgpus is quzzpus
  - 前提: quzzpus is dilbpus
  - 前提: dilbpus is sukxpus

   节点 42: dilbpus is sukxpus and xeyzpus
      ↻ 重复节点，计数: 3

   节点 43: sukxpus is pilkpus
      ↻ 重复节点，计数: 3

   节点 44: x is pilkpus
      ↻ 重复节点，计数: 2

   节点 45: pilkpus is babgpus
      ↻ 重复节点，计数: 3

   节点 46: x is babgpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is babgpus
[子树点亮]     └─ 点亮依赖节点: quzzpus is babgpus (深度3)
[子树点亮]     └─ 点亮依赖节点: quzzpus is babgpus and sulvpus (深度4)
[子树点亮]     └─ 点亮依赖节点: sukxpus is babgpus and sulvpus (深度5)
[子树点亮]     └─ 点亮依赖节点: sukxpus is babgpus and sulvpus and wobkpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 4 个节点
      ✅ 验证成功 + LoG匹配

   节点 47: x is babgpus
      ↻ 重复节点，计数: 2

   节点 48: x is babgpus
      ↻ 重复节点，计数: 3

   节点 49: x is babgpus or babrpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is babgpus or babrpus
      ✅ 验证成功 + LoG匹配

   节点 50: yotgpus is sectpus
      ↻ 重复节点，计数: 2

   节点 51: rexqpus is hofspus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: rexqpus is huyfpus and hofspus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: rexqpus is huyfpus and hofspus

   节点 52: binypus is wuszpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: binypus is rexqpus and wuszpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: binypus is rexqpus and wuszpus

   节点 53: x is babgpus
      ↻ 重复节点，计数: 4

   节点 54: x is babgpus or babrpus
      ↻ 重复节点，计数: 2

🔍 分析推理路径完整性...

============================================================
[后处理] 处理完成
============================================================
📈 处理统计:
   - 处理的actual节点: 54
   - 新增节点: 19
   - 更新已存在节点: 35
   - 点亮的LoG节点: 19

🎯 推理质量统计:
   - 完美推理: 19 (节点正确 + 路径正确)
   - 部分推理: 0 (节点正确 + 路径部分错误)
   - 无效推理: 0 (节点错误或路径完全错误)
[LoG分析] LoG图: 19节点, 13前提, 复杂度1-13

📊 === Statement列表分析 ===
📈 节点统计:
   - 总节点数: 32
   - 前提节点: 13
   - 推理节点: 19
   - 幻觉节点: 0
   - 点亮LoG节点: 19

✅ 推理节点详情:
   🟢 pilkpus is babgpus (出现3次, 质量:perfect)
   🟢 yotgpus is sectpus and quzzpus (出现2次, 质量:perfect)
   🟢 x is pilkpus (出现2次, 质量:perfect)
   🟢 binypus is rexqpus (出现1次, 质量:perfect)
   🟢 x is rexqpus (出现1次, 质量:perfect)
   🟢 rexqpus is huyfpus (出现1次, 质量:perfect)
   🟢 x is huyfpus (出现1次, 质量:perfect)
   🟢 x is yupkpus (出现1次, 质量:perfect)
   🟢 x is kanhpus (出现1次, 质量:perfect)
   🟢 x is legbpus (出现1次, 质量:perfect)
   🟢 x is yotgpus (出现1次, 质量:perfect)
   🟢 x is quzzpus (出现1次, 质量:perfect)
   🟢 x is dilbpus (出现1次, 质量:perfect)
   🟢 dilbpus is sukxpus (出现1次, 质量:perfect)
   🟢 x is sukxpus (出现1次, 质量:perfect)
   🟢 x is babgpus (出现4次, 质量:perfect)
   🟢 x is babgpus or babrpus (出现2次, 质量:perfect)
   🟢 rexqpus is hofspus (出现1次, 质量:perfect)
   🟢 binypus is wuszpus (出现1次, 质量:perfect)

🔥 点亮的LoG节点:
   - x is rexqpus and wuszpus
   - x is kanhpus
   - x is quzzpus
   - rexqpus is huyfpus
   - x is babgpus
   - yotgpus is quzzpus and sectpus
   - rexqpus is kanhpus
   - sukxpus is babgpus and sulvpus and wobkpus
   - quzzpus is sukxpus and xeyzpus
   - quzzpus is sukxpus
   - x is babgpus or babrpus
   - sukxpus is babgpus and sulvpus
   - kanhpus is yotgpus
   - quzzpus is babgpus and sulvpus
   - x is rexqpus
   - huyfpus is kanhpus
   - quzzpus is babgpus
   - kanhpus is quzzpus and sectpus
   - kanhpus is quzzpus

============================================================
📊 计算评估指标
============================================================

🎯 计算Coverage指标...
   深度Coverage: 6/6 = 100.00%
   最深点亮节点: x is babgpus or babrpus (第6层)
   节点Coverage: 19/19 = 100.00%
   前提条件Coverage: 13/13 = 100.00%
   各推理层点亮比例:
     第1层: 7/7 = 100.00%
     第2层: 5/5 = 100.00%
     第3层: 3/3 = 100.00%
     第4层: 2/2 = 100.00%
     第5层: 1/1 = 100.00%
     第6层: 1/1 = 100.00%

🎯 计算Precision指标...
   Error Rate: 0/19 = 0.00%
   可推导节点: 19/19
   Strict Error Rate: 0/19 = 0.00%
   严格有效节点: 19/19

   详细分析:
     完美推理: 19 (100.00%)
     部分推理: 0 (0.00%)
     无效推理: 0 (0.00%)

================================================================================
处理记录 16/50
================================================================================
记录索引: 15
问题状态: correct
📁 从缓存加载提取结果: evaluation_results.LoG_6.deepseek-reasoner_record_15.json
✅ 使用缓存结果:
   - 句子数: 70
   - 提取的语句数: 90
   - 初始条件数: 19

=== Statement提取完成 ===
总句子数: 70
成功提取: 70
失败提取: 0
总statements数: 90

=== 开始清洗Statement格式 ===
原始statements数: 90
清洗后statements数: 88
过滤掉的statements数: 2
清洗后的statements:
  1. [planning] x is babgpus
  2. [actual] x is vevtpus
  3. [actual] x is vevtpus
  4. [planning] vevtpus is babgpus
  5. [actual] vevtpus is harzpus and zabqpus
  6. [actual] vevtpus is harzpus and zabqpus
  7. [actual] harzpus is kegbpus
  8. [actual] harzpus is kegbpus
  9. [actual] kegbpus is yovrpus and yablpus
  10. [actual] kegbpus is yovrpus and yablpus
  11. [actual] yovrpus is jixqpus and cafdpus
  12. [actual] yovrpus is jixqpus and cafdpus
  13. [actual] jixqpus is vacwpus
  14. [actual] jixqpus is vacwpus
  15. [actual] vacwpus is puxdpus and yeswpus and wisppus
  16. [actual] vacwpus is puxdpus
  17. [actual] vacwpus is yeswpus
  18. [actual] vacwpus is wisppus
  19. [actual] puxdpus is najlpus and kokxpus
  20. [actual] puxdpus is najlpus and kokxpus
  21. [actual] najlpus is yostpus
  22. [actual] najlpus is yostpus
  23. [actual] yostpus is pavxpus
  24. [actual] yostpus is pavxpus
  25. [actual] pavxpus is tuwgpus
  26. [actual] pavxpus is tuwgpus
  27. [actual] pavxpus is morjpus and catlpus
  28. [actual] pavxpus is morjpus and catlpus
  29. [actual] morjpus is yapwpus
  30. [actual] morjpus is yapwpus
  31. [actual] yapwpus is tihzpus and winrpus
  32. [actual] yapwpus is tihzpus and winrpus
  33. [actual] tihzpus is foftpus
  34. [actual] tihzpus is foftpus
  35. [actual] foftpus is gakdpus
  36. [actual] foftpus is gakdpus
  37. [actual] gakdpus is hasmpus
  38. [actual] gakdpus is hasmpus
  39. [actual] hasmpus is babgpus and zujhpus
  40. [actual] hasmpus is babgpus and zujhpus
  41. [actual] hasmpus is babgpus
  42. [actual] gakdpus is hasmpus
  43. [actual] foftpus is gakdpus
  44. [actual] tihzpus is foftpus
  45. [actual] yapwpus is tihzpus
  46. [actual] morjpus is yapwpus
  47. [actual] pavxpus is morjpus
  48. [actual] yostpus is pavxpus
  49. [actual] najlpus is yostpus
  50. [actual] puxdpus is najlpus
  51. [actual] vacwpus is puxdpus
  52. [actual] jixqpus is vacwpus
  53. [actual] yovrpus is jixqpus
  54. [actual] kegbpus is yovrpus
  55. [actual] harzpus is kegbpus
  56. [actual] vevtpus is harzpus
  57. [planning] vevtpus is babgpus
  58. [actual] vevtpus is harzpus
  59. [actual] harzpus is kegbpus
  60. [actual] kegbpus is yovrpus
  61. [actual] yovrpus is jixqpus
  62. [actual] jixqpus is vacwpus
  63. [actual] vacwpus is puxdpus
  64. [actual] puxdpus is najlpus
  65. [actual] najlpus is yostpus
  66. [actual] yostpus is pavxpus
  67. [actual] pavxpus is morjpus
  68. [actual] morjpus is yapwpus
  69. [actual] yapwpus is tihzpus
  70. [actual] tihzpus is foftpus
  71. [actual] foftpus is gakdpus
  72. [actual] gakdpus is hasmpus
  73. [actual] hasmpus is babgpus
  74. [actual] vevtpus is harzpus
  75. [actual] harzpus is kegbpus
  76. [actual] hasmpus is babgpus
  77. [planning] vevtpus is babgpus
  78. [actual] vevtpus is harzpus
  79. [actual] harzpus is kegbpus
  80. [actual] kegbpus is hasmpus
  81. [actual] hasmpus is babgpus
  82. [actual] vevtpus is babgpus
  83. [actual] x is vevtpus
  84. [planning] x is babgpus
  85. [actual] x is babgpus
  86. [actual] vevtpus is zabqpus
  87. [actual] hasmpus is babgpus
  88. [actual] x is babgpus

=== 开始标准化和解析节点 ===
清洗后statements数: 88
标准化后节点数: 88
过滤掉的无效实体数: 0
标准化后的节点:
  1. [planning] x → babgpus (原始: x is babgpus)
  2. [actual] x → vevtpus (原始: x is vevtpus)
  3. [actual] x → vevtpus (原始: x is vevtpus)
  4. [planning] vevtpus → babgpus (原始: vevtpus is babgpus)
  5. [actual] vevtpus → harzpus and zabqpus (原始: vevtpus is harzpus and zabqpus)
  6. [actual] vevtpus → harzpus and zabqpus (原始: vevtpus is harzpus and zabqpus)
  7. [actual] harzpus → kegbpus (原始: harzpus is kegbpus)
  8. [actual] harzpus → kegbpus (原始: harzpus is kegbpus)
  9. [actual] kegbpus → yovrpus and yablpus (原始: kegbpus is yovrpus and yablpus)
  10. [actual] kegbpus → yovrpus and yablpus (原始: kegbpus is yovrpus and yablpus)
  11. [actual] yovrpus → jixqpus and cafdpus (原始: yovrpus is jixqpus and cafdpus)
  12. [actual] yovrpus → jixqpus and cafdpus (原始: yovrpus is jixqpus and cafdpus)
  13. [actual] jixqpus → vacwpus (原始: jixqpus is vacwpus)
  14. [actual] jixqpus → vacwpus (原始: jixqpus is vacwpus)
  15. [actual] vacwpus → puxdpus and yeswpus and wisppus (原始: vacwpus is puxdpus and yeswpus and wisppus)
  16. [actual] vacwpus → puxdpus (原始: vacwpus is puxdpus)
  17. [actual] vacwpus → yeswpus (原始: vacwpus is yeswpus)
  18. [actual] vacwpus → wisppus (原始: vacwpus is wisppus)
  19. [actual] puxdpus → najlpus and kokxpus (原始: puxdpus is najlpus and kokxpus)
  20. [actual] puxdpus → najlpus and kokxpus (原始: puxdpus is najlpus and kokxpus)
  21. [actual] najlpus → yostpus (原始: najlpus is yostpus)
  22. [actual] najlpus → yostpus (原始: najlpus is yostpus)
  23. [actual] yostpus → pavxpus (原始: yostpus is pavxpus)
  24. [actual] yostpus → pavxpus (原始: yostpus is pavxpus)
  25. [actual] pavxpus → tuwgpus (原始: pavxpus is tuwgpus)
  26. [actual] pavxpus → tuwgpus (原始: pavxpus is tuwgpus)
  27. [actual] pavxpus → morjpus and catlpus (原始: pavxpus is morjpus and catlpus)
  28. [actual] pavxpus → morjpus and catlpus (原始: pavxpus is morjpus and catlpus)
  29. [actual] morjpus → yapwpus (原始: morjpus is yapwpus)
  30. [actual] morjpus → yapwpus (原始: morjpus is yapwpus)
  31. [actual] yapwpus → tihzpus and winrpus (原始: yapwpus is tihzpus and winrpus)
  32. [actual] yapwpus → tihzpus and winrpus (原始: yapwpus is tihzpus and winrpus)
  33. [actual] tihzpus → foftpus (原始: tihzpus is foftpus)
  34. [actual] tihzpus → foftpus (原始: tihzpus is foftpus)
  35. [actual] foftpus → gakdpus (原始: foftpus is gakdpus)
  36. [actual] foftpus → gakdpus (原始: foftpus is gakdpus)
  37. [actual] gakdpus → hasmpus (原始: gakdpus is hasmpus)
  38. [actual] gakdpus → hasmpus (原始: gakdpus is hasmpus)
  39. [actual] hasmpus → babgpus and zujhpus (原始: hasmpus is babgpus and zujhpus)
  40. [actual] hasmpus → babgpus and zujhpus (原始: hasmpus is babgpus and zujhpus)
  41. [actual] hasmpus → babgpus (原始: hasmpus is babgpus)
  42. [actual] gakdpus → hasmpus (原始: gakdpus is hasmpus)
  43. [actual] foftpus → gakdpus (原始: foftpus is gakdpus)
  44. [actual] tihzpus → foftpus (原始: tihzpus is foftpus)
  45. [actual] yapwpus → tihzpus (原始: yapwpus is tihzpus)
  46. [actual] morjpus → yapwpus (原始: morjpus is yapwpus)
  47. [actual] pavxpus → morjpus (原始: pavxpus is morjpus)
  48. [actual] yostpus → pavxpus (原始: yostpus is pavxpus)
  49. [actual] najlpus → yostpus (原始: najlpus is yostpus)
  50. [actual] puxdpus → najlpus (原始: puxdpus is najlpus)
  51. [actual] vacwpus → puxdpus (原始: vacwpus is puxdpus)
  52. [actual] jixqpus → vacwpus (原始: jixqpus is vacwpus)
  53. [actual] yovrpus → jixqpus (原始: yovrpus is jixqpus)
  54. [actual] kegbpus → yovrpus (原始: kegbpus is yovrpus)
  55. [actual] harzpus → kegbpus (原始: harzpus is kegbpus)
  56. [actual] vevtpus → harzpus (原始: vevtpus is harzpus)
  57. [planning] vevtpus → babgpus (原始: vevtpus is babgpus)
  58. [actual] vevtpus → harzpus (原始: vevtpus is harzpus)
  59. [actual] harzpus → kegbpus (原始: harzpus is kegbpus)
  60. [actual] kegbpus → yovrpus (原始: kegbpus is yovrpus)
  61. [actual] yovrpus → jixqpus (原始: yovrpus is jixqpus)
  62. [actual] jixqpus → vacwpus (原始: jixqpus is vacwpus)
  63. [actual] vacwpus → puxdpus (原始: vacwpus is puxdpus)
  64. [actual] puxdpus → najlpus (原始: puxdpus is najlpus)
  65. [actual] najlpus → yostpus (原始: najlpus is yostpus)
  66. [actual] yostpus → pavxpus (原始: yostpus is pavxpus)
  67. [actual] pavxpus → morjpus (原始: pavxpus is morjpus)
  68. [actual] morjpus → yapwpus (原始: morjpus is yapwpus)
  69. [actual] yapwpus → tihzpus (原始: yapwpus is tihzpus)
  70. [actual] tihzpus → foftpus (原始: tihzpus is foftpus)
  71. [actual] foftpus → gakdpus (原始: foftpus is gakdpus)
  72. [actual] gakdpus → hasmpus (原始: gakdpus is hasmpus)
  73. [actual] hasmpus → babgpus (原始: hasmpus is babgpus)
  74. [actual] vevtpus → harzpus (原始: vevtpus is harzpus)
  75. [actual] harzpus → kegbpus (原始: harzpus is kegbpus)
  76. [actual] hasmpus → babgpus (原始: hasmpus is babgpus)
  77. [planning] vevtpus → babgpus (原始: vevtpus is babgpus)
  78. [actual] vevtpus → harzpus (原始: vevtpus is harzpus)
  79. [actual] harzpus → kegbpus (原始: harzpus is kegbpus)
  80. [actual] kegbpus → hasmpus (原始: kegbpus is hasmpus)
  81. [actual] hasmpus → babgpus (原始: hasmpus is babgpus)
  82. [actual] vevtpus → babgpus (原始: vevtpus is babgpus)
  83. [actual] x → vevtpus (原始: x is vevtpus)
  84. [planning] x → babgpus (原始: x is babgpus)
  85. [actual] x → babgpus (原始: x is babgpus)
  86. [actual] vevtpus → zabqpus (原始: vevtpus is zabqpus)
  87. [actual] hasmpus → babgpus (原始: hasmpus is babgpus)
  88. [actual] x → babgpus (原始: x is babgpus)

开始新的后处理...
[后处理] 从LoG数据文件中获取到图数据，节点数: 28
[后处理] 加载LoG图，包含 28 个节点
  LoG节点 0: x is babgpus (规则: MP, 深度: 1)
  LoG节点 1: x is puxdpus (规则: CE, 深度: 2)
  LoG节点 2: puxdpus is babgpus (规则: MP, 深度: 2)
  LoG节点 3: x is puxdpus and yeswpus (规则: MP, 深度: 3)
  LoG节点 4: puxdpus is morjpus (规则: CE, 深度: 3)
  LoG节点 5: morjpus is babgpus (规则: CE, 深度: 3)
  LoG节点 6: x is yovrpus (规则: MP, 深度: 4)
  LoG节点 7: yovrpus is puxdpus and yeswpus (规则: CE, 深度: 4)
  LoG节点 8: puxdpus is morjpus and ginlpus (规则: MP, 深度: 4)
  LoG节点 9: morjpus is babgpus and zujhpus (规则: MP, 深度: 4)
  LoG节点 10: x is harzpus (规则: CE, 深度: 5)
  LoG节点 11: harzpus is yovrpus (规则: CE, 深度: 5)
  LoG节点 12: yovrpus is puxdpus and yeswpus and wisppus (规则: MP, 深度: 5)
  LoG节点 13: puxdpus is pavxpus (规则: MP, 深度: 5)
  LoG节点 14: pavxpus is morjpus and ginlpus (规则: CI, 深度: 5)
  LoG节点 15: morjpus is tihzpus (规则: CE, 深度: 5)
  LoG节点 16: tihzpus is babgpus and zujhpus (规则: MP, 深度: 5)
  LoG节点 17: x is harzpus and zabqpus (规则: MP, 深度: 6)
  LoG节点 18: harzpus is yovrpus and yablpus (规则: MP, 深度: 6)
  LoG节点 19: yovrpus is jixqpus (规则: CE, 深度: 6)
  LoG节点 20: jixqpus is puxdpus and yeswpus and wisppus (规则: MP, 深度: 6)
  LoG节点 21: puxdpus is najlpus (规则: CE, 深度: 6)
  LoG节点 22: najlpus is pavxpus (规则: MP, 深度: 6)
  LoG节点 23: pavxpus is morjpus (规则: CE, 深度: 6)
  LoG节点 24: pavxpus is ginlpus (规则: MP, 深度: 6)
  LoG节点 25: morjpus is tihzpus and winrpus (规则: MP, 深度: 6)
  LoG节点 26: tihzpus is gakdpus (规则: MP, 深度: 6)
  LoG节点 27: gakdpus is babgpus and zujhpus (规则: MP, 深度: 6)

============================================================
[后处理] 开始处理节点
============================================================
📊 初始状态:
   - 标准化节点数: 88
   - 初始条件数: 19
   - LoG图节点数: 28

📋 初始条件列表:
    1. puxdpus is najlpus and kokxpus
    2. foftpus is gakdpus
    3. yostpus is pavxpus
    4. vacwpus is puxdpus and yeswpus and wisppus
    5. x is vevtpus
    6. tihzpus is foftpus
    7. pavxpus is tuwgpus
    8. pavxpus is morjpus and catlpus
    9. morjpus is yapwpus
   10. harzpus is kegbpus
   11. yapwpus is tihzpus and winrpus
   12. hasmpus is babgpus and zujhpus
   13. gakdpus is hasmpus
   14. yovrpus is jixqpus and cafdpus
   15. jixqpus is vacwpus
   16. najlpus is yostpus
   17. vevtpus is harzpus and zabqpus
   18. kegbpus is yovrpus and yablpus
   19. tuwgpus is ginlpus

🔧 构建初始Statement列表...
✅ 初始Statement列表构建完成，包含 19 个前提节点

🔍 开始处理actual节点...

   节点 1: x is vevtpus
      ↻ 重复节点，计数: 2

   节点 2: x is vevtpus
      ↻ 重复节点，计数: 3

   节点 3: vevtpus is harzpus and zabqpus
      ↻ 重复节点，计数: 2

   节点 4: vevtpus is harzpus and zabqpus
      ↻ 重复节点，计数: 3

   节点 5: harzpus is kegbpus
      ↻ 重复节点，计数: 2

   节点 6: harzpus is kegbpus
      ↻ 重复节点，计数: 3

   节点 7: kegbpus is yovrpus and yablpus
      ↻ 重复节点，计数: 2

   节点 8: kegbpus is yovrpus and yablpus
      ↻ 重复节点，计数: 3

   节点 9: yovrpus is jixqpus and cafdpus
      ↻ 重复节点，计数: 2

   节点 10: yovrpus is jixqpus and cafdpus
      ↻ 重复节点，计数: 3

   节点 11: jixqpus is vacwpus
      ↻ 重复节点，计数: 2

   节点 12: jixqpus is vacwpus
      ↻ 重复节点，计数: 3

   节点 13: vacwpus is puxdpus and yeswpus and wisppus
      ↻ 重复节点，计数: 2

   节点 14: vacwpus is puxdpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: vacwpus is puxdpus and yeswpus and wisppus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: vacwpus is puxdpus and yeswpus and wisppus

   节点 15: vacwpus is yeswpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: vacwpus is puxdpus and yeswpus and wisppus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: vacwpus is puxdpus and yeswpus and wisppus

   节点 16: vacwpus is wisppus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: vacwpus is puxdpus and yeswpus and wisppus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: vacwpus is puxdpus and yeswpus and wisppus

   节点 17: puxdpus is najlpus and kokxpus
      ↻ 重复节点，计数: 2

   节点 18: puxdpus is najlpus and kokxpus
      ↻ 重复节点，计数: 3

   节点 19: najlpus is yostpus
      ↻ 重复节点，计数: 2

   节点 20: najlpus is yostpus
      ↻ 重复节点，计数: 3

   节点 21: yostpus is pavxpus
      ↻ 重复节点，计数: 2

   节点 22: yostpus is pavxpus
      ↻ 重复节点，计数: 3

   节点 23: pavxpus is tuwgpus
      ↻ 重复节点，计数: 2

   节点 24: pavxpus is tuwgpus
      ↻ 重复节点，计数: 3

   节点 25: pavxpus is morjpus and catlpus
      ↻ 重复节点，计数: 2

   节点 26: pavxpus is morjpus and catlpus
      ↻ 重复节点，计数: 3

   节点 27: morjpus is yapwpus
      ↻ 重复节点，计数: 2

   节点 28: morjpus is yapwpus
      ↻ 重复节点，计数: 3

   节点 29: yapwpus is tihzpus and winrpus
      ↻ 重复节点，计数: 2

   节点 30: yapwpus is tihzpus and winrpus
      ↻ 重复节点，计数: 3

   节点 31: tihzpus is foftpus
      ↻ 重复节点，计数: 2

   节点 32: tihzpus is foftpus
      ↻ 重复节点，计数: 3

   节点 33: foftpus is gakdpus
      ↻ 重复节点，计数: 2

   节点 34: foftpus is gakdpus
      ↻ 重复节点，计数: 3

   节点 35: gakdpus is hasmpus
      ↻ 重复节点，计数: 2

   节点 36: gakdpus is hasmpus
      ↻ 重复节点，计数: 3

   节点 37: hasmpus is babgpus and zujhpus
      ↻ 重复节点，计数: 2

   节点 38: hasmpus is babgpus and zujhpus
      ↻ 重复节点，计数: 3

   节点 39: hasmpus is babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: hasmpus is babgpus and zujhpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: hasmpus is babgpus and zujhpus

   节点 40: gakdpus is hasmpus
      ↻ 重复节点，计数: 4

   节点 41: foftpus is gakdpus
      ↻ 重复节点，计数: 4

   节点 42: tihzpus is foftpus
      ↻ 重复节点，计数: 4

   节点 43: yapwpus is tihzpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: yapwpus is tihzpus and winrpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: yapwpus is tihzpus and winrpus

   节点 44: morjpus is yapwpus
      ↻ 重复节点，计数: 4

   节点 45: pavxpus is morjpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: pavxpus is morjpus
      ✅ 验证成功 + LoG匹配

   节点 46: yostpus is pavxpus
      ↻ 重复节点，计数: 4

   节点 47: najlpus is yostpus
      ↻ 重复节点，计数: 4

   节点 48: puxdpus is najlpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: puxdpus is najlpus
      ✅ 验证成功 + LoG匹配

   节点 49: vacwpus is puxdpus
      ↻ 重复节点，计数: 2

   节点 50: jixqpus is vacwpus
      ↻ 重复节点，计数: 4

   节点 51: yovrpus is jixqpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: yovrpus is jixqpus
      ✅ 验证成功 + LoG匹配

   节点 52: kegbpus is yovrpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: kegbpus is yovrpus and yablpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: kegbpus is yovrpus and yablpus

   节点 53: harzpus is kegbpus
      ↻ 重复节点，计数: 4

   节点 54: vevtpus is harzpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: vevtpus is harzpus and zabqpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: vevtpus is harzpus and zabqpus

   节点 55: vevtpus is harzpus
      ↻ 重复节点，计数: 2

   节点 56: harzpus is kegbpus
      ↻ 重复节点，计数: 5

   节点 57: kegbpus is yovrpus
      ↻ 重复节点，计数: 2

   节点 58: yovrpus is jixqpus
      ↻ 重复节点，计数: 2

   节点 59: jixqpus is vacwpus
      ↻ 重复节点，计数: 5

   节点 60: vacwpus is puxdpus
      ↻ 重复节点，计数: 3

   节点 61: puxdpus is najlpus
      ↻ 重复节点，计数: 2

   节点 62: najlpus is yostpus
      ↻ 重复节点，计数: 5

   节点 63: yostpus is pavxpus
      ↻ 重复节点，计数: 5

   节点 64: pavxpus is morjpus
      ↻ 重复节点，计数: 2

   节点 65: morjpus is yapwpus
      ↻ 重复节点，计数: 5

   节点 66: yapwpus is tihzpus
      ↻ 重复节点，计数: 2

   节点 67: tihzpus is foftpus
      ↻ 重复节点，计数: 5

   节点 68: foftpus is gakdpus
      ↻ 重复节点，计数: 5

   节点 69: gakdpus is hasmpus
      ↻ 重复节点，计数: 5

   节点 70: hasmpus is babgpus
      ↻ 重复节点，计数: 2

   节点 71: vevtpus is harzpus
      ↻ 重复节点，计数: 3

   节点 72: harzpus is kegbpus
      ↻ 重复节点，计数: 6

   节点 73: hasmpus is babgpus
      ↻ 重复节点，计数: 3

   节点 74: vevtpus is harzpus
      ↻ 重复节点，计数: 4

   节点 75: harzpus is kegbpus
      ↻ 重复节点，计数: 7

   节点 76: kegbpus is hasmpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: kegbpus is yovrpus → yovrpus is hasmpus
[后处理] 基于推理轨迹点亮节点，使用了 13 个前提条件:
  - 前提: kegbpus is yovrpus
  - 前提: yovrpus is jixqpus
  - 前提: jixqpus is vacwpus
  - 前提: vacwpus is puxdpus
  - 前提: puxdpus is najlpus
  - 前提: najlpus is yostpus
  - 前提: yostpus is pavxpus
  - 前提: pavxpus is morjpus
  - 前提: morjpus is yapwpus
  - 前提: yapwpus is tihzpus
  - 前提: tihzpus is foftpus
  - 前提: foftpus is gakdpus
  - 前提: gakdpus is hasmpus
  ✓ 点亮LoG节点: puxdpus is morjpus
[子树点亮]     └─ 点亮依赖节点: puxdpus is morjpus and ginlpus (深度4)
[子树点亮]     └─ 点亮依赖节点: puxdpus is pavxpus (深度5)
[子树点亮]     └─ 点亮依赖节点: pavxpus is morjpus and ginlpus (深度5)
[子树点亮]     └─ 点亮依赖节点: najlpus is pavxpus (深度6)
[子树点亮]     └─ 点亮依赖节点: pavxpus is ginlpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 5 个节点
  ✓ 点亮LoG节点: morjpus is tihzpus
[子树点亮]     └─ 点亮依赖节点: morjpus is tihzpus and winrpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 1 个节点
  ✓ 点亮LoG节点: tihzpus is gakdpus
[后处理] 通过推理轨迹额外点亮了 3 个LoG节点

   节点 77: hasmpus is babgpus
      ↻ 重复节点，计数: 4

   节点 78: vevtpus is babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: vevtpus is harzpus → harzpus is babgpus
[后处理] 基于推理轨迹点亮节点，使用了 16 个前提条件:
  - 前提: vevtpus is harzpus
  - 前提: harzpus is kegbpus
  - 前提: kegbpus is yovrpus
  - 前提: yovrpus is jixqpus
  - 前提: jixqpus is vacwpus
  - 前提: vacwpus is puxdpus
  - 前提: puxdpus is najlpus
  - 前提: najlpus is yostpus
  - 前提: yostpus is pavxpus
  - 前提: pavxpus is morjpus
  - 前提: morjpus is yapwpus
  - 前提: yapwpus is tihzpus
  - 前提: tihzpus is foftpus
  - 前提: foftpus is gakdpus
  - 前提: gakdpus is hasmpus
  - 前提: hasmpus is babgpus
  ✓ 点亮LoG节点: puxdpus is babgpus
[子树点亮]     └─ 点亮依赖节点: morjpus is babgpus (深度3)
[子树点亮]     └─ 点亮依赖节点: morjpus is babgpus and zujhpus (深度4)
[子树点亮]     └─ 点亮依赖节点: tihzpus is babgpus and zujhpus (深度5)
[子树点亮]     └─ 点亮依赖节点: gakdpus is babgpus and zujhpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 4 个节点
  ✓ 点亮LoG节点: harzpus is yovrpus
[子树点亮]     └─ 点亮依赖节点: harzpus is yovrpus and yablpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 1 个节点
[后处理] 通过推理轨迹额外点亮了 2 个LoG节点

   节点 79: x is vevtpus
      ↻ 重复节点，计数: 4

   节点 80: x is babgpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is babgpus
[子树点亮]     └─ 点亮依赖节点: x is puxdpus (深度2)
[子树点亮]     └─ 点亮依赖节点: x is puxdpus and yeswpus (深度3)
[子树点亮]     └─ 点亮依赖节点: x is yovrpus (深度4)
[子树点亮]     └─ 点亮依赖节点: yovrpus is puxdpus and yeswpus (深度4)
[子树点亮]     └─ 点亮依赖节点: x is harzpus (深度5)
[子树点亮]     └─ 点亮依赖节点: yovrpus is puxdpus and yeswpus and wisppus (深度5)
[子树点亮]     └─ 点亮依赖节点: x is harzpus and zabqpus (深度6)
[子树点亮]     └─ 点亮依赖节点: jixqpus is puxdpus and yeswpus and wisppus (深度6)
[后处理]   └─ 自动点亮依赖子树: 8 个节点
      ✅ 验证成功 + LoG匹配

   节点 81: vevtpus is zabqpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: vevtpus is harzpus and zabqpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: vevtpus is harzpus and zabqpus

   节点 82: hasmpus is babgpus
      ↻ 重复节点，计数: 5

   节点 83: x is babgpus
      ↻ 重复节点，计数: 2

🔍 分析推理路径完整性...

============================================================
[后处理] 处理完成
============================================================
📈 处理统计:
   - 处理的actual节点: 83
   - 新增节点: 14
   - 更新已存在节点: 69
   - 点亮的LoG节点: 28

🎯 推理质量统计:
   - 完美推理: 14 (节点正确 + 路径正确)
   - 部分推理: 0 (节点正确 + 路径部分错误)
   - 无效推理: 0 (节点错误或路径完全错误)
[LoG分析] LoG图: 28节点, 19前提, 复杂度1-19

📊 === Statement列表分析 ===
📈 节点统计:
   - 总节点数: 33
   - 前提节点: 19
   - 推理节点: 14
   - 幻觉节点: 0
   - 点亮LoG节点: 28

✅ 推理节点详情:
   🟢 vacwpus is puxdpus (出现3次, 质量:perfect)
   🟢 vacwpus is yeswpus (出现1次, 质量:perfect)
   🟢 vacwpus is wisppus (出现1次, 质量:perfect)
   🟢 hasmpus is babgpus (出现5次, 质量:perfect)
   🟢 yapwpus is tihzpus (出现2次, 质量:perfect)
   🟢 pavxpus is morjpus (出现2次, 质量:perfect)
   🟢 puxdpus is najlpus (出现2次, 质量:perfect)
   🟢 yovrpus is jixqpus (出现2次, 质量:perfect)
   🟢 kegbpus is yovrpus (出现2次, 质量:perfect)
   🟢 vevtpus is harzpus (出现4次, 质量:perfect)
   🟢 kegbpus is hasmpus (出现1次, 质量:perfect)
   🟢 vevtpus is babgpus (出现1次, 质量:perfect)
   🟢 x is babgpus (出现2次, 质量:perfect)
   🟢 vevtpus is zabqpus (出现1次, 质量:perfect)

🔥 点亮的LoG节点:
   - yovrpus is puxdpus and yeswpus and wisppus
   - x is harzpus
   - yovrpus is puxdpus and yeswpus
   - morjpus is babgpus and zujhpus
   - harzpus is yovrpus
   - pavxpus is morjpus
   - x is harzpus and zabqpus
   - puxdpus is pavxpus
   - puxdpus is babgpus
   - x is babgpus
   - yovrpus is jixqpus
   - morjpus is tihzpus and winrpus
   - morjpus is babgpus
   - harzpus is yovrpus and yablpus
   - x is yovrpus
   - x is puxdpus
   - gakdpus is babgpus and zujhpus
   - najlpus is pavxpus
   - morjpus is tihzpus
   - tihzpus is babgpus and zujhpus
   - puxdpus is morjpus and ginlpus
   - pavxpus is morjpus and ginlpus
   - x is puxdpus and yeswpus
   - jixqpus is puxdpus and yeswpus and wisppus
   - pavxpus is ginlpus
   - puxdpus is najlpus
   - tihzpus is gakdpus
   - puxdpus is morjpus

============================================================
📊 计算评估指标
============================================================

🎯 计算Coverage指标...
   深度Coverage: 6/6 = 100.00%
   最深点亮节点: x is babgpus (第6层)
   节点Coverage: 28/28 = 100.00%
   前提条件Coverage: 18/19 = 94.74%
   各推理层点亮比例:
     第1层: 11/11 = 100.00%
     第2层: 7/7 = 100.00%
     第3层: 4/4 = 100.00%
     第4层: 3/3 = 100.00%
     第5层: 2/2 = 100.00%
     第6层: 1/1 = 100.00%

🎯 计算Precision指标...
   Error Rate: 0/14 = 0.00%
   可推导节点: 14/14
   Strict Error Rate: 0/14 = 0.00%
   严格有效节点: 14/14

   详细分析:
     完美推理: 14 (100.00%)
     部分推理: 0 (0.00%)
     无效推理: 0 (0.00%)

================================================================================
处理记录 17/50
================================================================================
记录索引: 16
问题状态: correct
📁 从缓存加载提取结果: evaluation_results.LoG_6.deepseek-reasoner_record_16.json
✅ 使用缓存结果:
   - 句子数: 95
   - 提取的语句数: 126
   - 初始条件数: 15

=== Statement提取完成 ===
总句子数: 95
成功提取: 95
失败提取: 0
总statements数: 126

=== 开始清洗Statement格式 ===
原始statements数: 126
清洗后statements数: 122
过滤掉的statements数: 4
清洗后的statements:
  1. [planning] x is babgpus and babrpus and babspus
  2. [actual] x is viwnpus
  3. [planning] viwnpus is babgpus
  4. [planning] viwnpus is babrpus
  5. [planning] viwnpus is babspus
  6. [actual] lerwpus is babgpus and rayspus
  7. [actual] x is relmpus and muqcpus
  8. [actual] viwnpus is cubrpus
  9. [actual] viwnpus is cubrpus
  10. [actual] cubrpus is nujcpus
  11. [actual] cubrpus is nujcpus
  12. [actual] nujcpus is xaggpus and vopjpus
  13. [actual] nujcpus is xaggpus and vopjpus
  14. [actual] lelkpus is babgpus and babrpus and wifjpus
  15. [actual] lenzpus is related to fohjpus
  16. [actual] fohjpus is babspus and terspus and gegrpus
  17. [actual] lenzpus is fohjpus and befqpus
  18. [planning] viwnpus is lenzpus or lelkpus
  19. [actual] x is viwnpus
  20. [actual] viwnpus is cubrpus
  21. [actual] cubrpus is nujcpus
  22. [actual] nujcpus is xaggpus and vopjpus
  23. [actual] xaggpus is fawzpus and dimbpus
  24. [actual] xaggpus is fawzpus and dimbpus
  25. [actual] fawzpus is kanypus
  26. [actual] fawzpus is kanypus
  27. [actual] kanypus is jofxpus
  28. [actual] kanypus is jofxpus
  29. [actual] jofxpus is jepppus
  30. [actual] jofxpus is jepppus
  31. [actual] jepppus is fuscpus
  32. [actual] jepppus is fuscpus
  33. [actual] jepppus is lenzpus
  34. [actual] jepppus is lenzpus
  35. [actual] jofxpus is jepppus
  36. [actual] jepppus is lenzpus
  37. [actual] jofxpus is lenzpus
  38. [planning] jofxpus is lenzpus
  39. [actual] kanypus is jofxpus
  40. [actual] kanypus is jepppus
  41. [actual] kanypus is jofxpus
  42. [actual] jofxpus is jepppus
  43. [actual] kanypus is jepppus
  44. [actual] jepppus is lenzpus
  45. [actual] kanypus is lenzpus
  46. [actual] fawzpus is kanypus
  47. [actual] kanypus is lenzpus
  48. [actual] fawzpus is lenzpus
  49. [actual] fawzpus is kanypus
  50. [actual] kanypus is lenzpus
  51. [actual] fawzpus is lenzpus
  52. [actual] xaggpus is fawzpus and dimbpus
  53. [actual] xaggpus is fawzpus
  54. [actual] fawzpus is lenzpus
  55. [actual] xaggpus is lenzpus
  56. [planning] xaggpus is lenzpus?
  57. [actual] nujcpus is xaggpus
  58. [actual] nujcpus is lenzpus
  59. [actual] cubrpus is nujcpus
  60. [actual] nujcpus is lenzpus
  61. [actual] cubrpus is lenzpus
  62. [actual] viwnpus is cubrpus
  63. [actual] cubrpus is lenzpus
  64. [actual] viwnpus is lenzpus
  65. [actual] x is viwnpus
  66. [actual] viwnpus is lenzpus
  67. [actual] x is lenzpus
  68. [actual] lenzpus is lelkpus and yiscpus
  69. [actual] lenzpus is lelkpus and yiscpus
  70. [actual] lenzpus is lelkpus and yiscpus
  71. [actual] x is lenzpus
  72. [actual] lenzpus is lelkpus
  73. [actual] x is lelkpus
  74. [actual] lelkpus is babgpus and babrpus and wifjpus
  75. [actual] lelkpus is babgpus and babrpus and wifjpus
  76. [actual] x is lelkpus
  77. [actual] lelkpus is babgpus
  78. [actual] x is babgpus
  79. [actual] lelkpus is babrpus
  80. [actual] x is babrpus
  81. [actual] x is babgpus
  82. [actual] x is babrpus
  83. [planning] x is babspus
  84. [actual] babspus is fohjpus and terspus and gegrpus
  85. [actual] lenzpus is fohjpus
  86. [actual] lenzpus is befqpus
  87. [actual] lenzpus is fohjpus and befqpus
  88. [actual] x is lenzpus
  89. [actual] lenzpus is fohjpus
  90. [actual] x is fohjpus
  91. [actual] fohjpus is babspus
  92. [actual] x is fohjpus
  93. [actual] fohjpus is babspus
  94. [actual] x is babspus
  95. [actual] x is babgpus and babrpus and babspus
  96. [actual] x is lenzpus
  97. [actual] jepppus is lenzpus
  98. [actual] jepppus is lenzpus
  99. [actual] kanypus is jofxpus
  100. [actual] jofxpus is jepppus
  101. [actual] kanypus is jepppus
  102. [actual] kanypus is lenzpus
  103. [actual] fawzpus is kanypus
  104. [actual] fawzpus is lenzpus
  105. [actual] xaggpus is fawzpus
  106. [actual] xaggpus is lenzpus
  107. [actual] nujcpus is xaggpus
  108. [actual] nujcpus is lenzpus
  109. [actual] cubrpus is nujcpus
  110. [actual] cubrpus is lenzpus
  111. [actual] viwnpus is lenzpus
  112. [actual] x is viwnpus
  113. [actual] x is lenzpus
  114. [actual] lenzpus is lelkpus
  115. [actual] x is lelkpus
  116. [actual] lelkpus is babgpus and babrpus
  117. [actual] x is babgpus and babrpus
  118. [actual] lenzpus is fohjpus
  119. [planning] x is fohjpus
  120. [actual] fohjpus is babspus
  121. [planning] x is babspus
  122. [actual] x is babgpus and babrpus and babspus

=== 开始标准化和解析节点 ===
清洗后statements数: 122
标准化后节点数: 120
过滤掉的无效实体数: 2
标准化后的节点:
  1. [planning] x → babgpus and babrpus and babspus (原始: x is babgpus and babrpus and babspus)
  2. [actual] x → viwnpus (原始: x is viwnpus)
  3. [planning] viwnpus → babgpus (原始: viwnpus is babgpus)
  4. [planning] viwnpus → babrpus (原始: viwnpus is babrpus)
  5. [planning] viwnpus → babspus (原始: viwnpus is babspus)
  6. [actual] lerwpus → babgpus and rayspus (原始: lerwpus is babgpus and rayspus)
  7. [actual] x → relmpus and muqcpus (原始: x is relmpus and muqcpus)
  8. [actual] viwnpus → cubrpus (原始: viwnpus is cubrpus)
  9. [actual] viwnpus → cubrpus (原始: viwnpus is cubrpus)
  10. [actual] cubrpus → nujcpus (原始: cubrpus is nujcpus)
  11. [actual] cubrpus → nujcpus (原始: cubrpus is nujcpus)
  12. [actual] nujcpus → xaggpus and vopjpus (原始: nujcpus is xaggpus and vopjpus)
  13. [actual] nujcpus → xaggpus and vopjpus (原始: nujcpus is xaggpus and vopjpus)
  14. [actual] lelkpus → babgpus and babrpus and wifjpus (原始: lelkpus is babgpus and babrpus and wifjpus)
  15. [actual] fohjpus → babspus and terspus and gegrpus (原始: fohjpus is babspus and terspus and gegrpus)
  16. [actual] lenzpus → fohjpus and befqpus (原始: lenzpus is fohjpus and befqpus)
  17. [planning] viwnpus → lenzpus or lelkpus (原始: viwnpus is lenzpus or lelkpus)
  18. [actual] x → viwnpus (原始: x is viwnpus)
  19. [actual] viwnpus → cubrpus (原始: viwnpus is cubrpus)
  20. [actual] cubrpus → nujcpus (原始: cubrpus is nujcpus)
  21. [actual] nujcpus → xaggpus and vopjpus (原始: nujcpus is xaggpus and vopjpus)
  22. [actual] xaggpus → fawzpus and dimbpus (原始: xaggpus is fawzpus and dimbpus)
  23. [actual] xaggpus → fawzpus and dimbpus (原始: xaggpus is fawzpus and dimbpus)
  24. [actual] fawzpus → kanypus (原始: fawzpus is kanypus)
  25. [actual] fawzpus → kanypus (原始: fawzpus is kanypus)
  26. [actual] kanypus → jofxpus (原始: kanypus is jofxpus)
  27. [actual] kanypus → jofxpus (原始: kanypus is jofxpus)
  28. [actual] jofxpus → jepppus (原始: jofxpus is jepppus)
  29. [actual] jofxpus → jepppus (原始: jofxpus is jepppus)
  30. [actual] jepppus → fuscpus (原始: jepppus is fuscpus)
  31. [actual] jepppus → fuscpus (原始: jepppus is fuscpus)
  32. [actual] jepppus → lenzpus (原始: jepppus is lenzpus)
  33. [actual] jepppus → lenzpus (原始: jepppus is lenzpus)
  34. [actual] jofxpus → jepppus (原始: jofxpus is jepppus)
  35. [actual] jepppus → lenzpus (原始: jepppus is lenzpus)
  36. [actual] jofxpus → lenzpus (原始: jofxpus is lenzpus)
  37. [planning] jofxpus → lenzpus (原始: jofxpus is lenzpus)
  38. [actual] kanypus → jofxpus (原始: kanypus is jofxpus)
  39. [actual] kanypus → jepppus (原始: kanypus is jepppus)
  40. [actual] kanypus → jofxpus (原始: kanypus is jofxpus)
  41. [actual] jofxpus → jepppus (原始: jofxpus is jepppus)
  42. [actual] kanypus → jepppus (原始: kanypus is jepppus)
  43. [actual] jepppus → lenzpus (原始: jepppus is lenzpus)
  44. [actual] kanypus → lenzpus (原始: kanypus is lenzpus)
  45. [actual] fawzpus → kanypus (原始: fawzpus is kanypus)
  46. [actual] kanypus → lenzpus (原始: kanypus is lenzpus)
  47. [actual] fawzpus → lenzpus (原始: fawzpus is lenzpus)
  48. [actual] fawzpus → kanypus (原始: fawzpus is kanypus)
  49. [actual] kanypus → lenzpus (原始: kanypus is lenzpus)
  50. [actual] fawzpus → lenzpus (原始: fawzpus is lenzpus)
  51. [actual] xaggpus → fawzpus and dimbpus (原始: xaggpus is fawzpus and dimbpus)
  52. [actual] xaggpus → fawzpus (原始: xaggpus is fawzpus)
  53. [actual] fawzpus → lenzpus (原始: fawzpus is lenzpus)
  54. [actual] xaggpus → lenzpus (原始: xaggpus is lenzpus)
  55. [actual] nujcpus → xaggpus (原始: nujcpus is xaggpus)
  56. [actual] nujcpus → lenzpus (原始: nujcpus is lenzpus)
  57. [actual] cubrpus → nujcpus (原始: cubrpus is nujcpus)
  58. [actual] nujcpus → lenzpus (原始: nujcpus is lenzpus)
  59. [actual] cubrpus → lenzpus (原始: cubrpus is lenzpus)
  60. [actual] viwnpus → cubrpus (原始: viwnpus is cubrpus)
  61. [actual] cubrpus → lenzpus (原始: cubrpus is lenzpus)
  62. [actual] viwnpus → lenzpus (原始: viwnpus is lenzpus)
  63. [actual] x → viwnpus (原始: x is viwnpus)
  64. [actual] viwnpus → lenzpus (原始: viwnpus is lenzpus)
  65. [actual] x → lenzpus (原始: x is lenzpus)
  66. [actual] lenzpus → lelkpus and yiscpus (原始: lenzpus is lelkpus and yiscpus)
  67. [actual] lenzpus → lelkpus and yiscpus (原始: lenzpus is lelkpus and yiscpus)
  68. [actual] lenzpus → lelkpus and yiscpus (原始: lenzpus is lelkpus and yiscpus)
  69. [actual] x → lenzpus (原始: x is lenzpus)
  70. [actual] lenzpus → lelkpus (原始: lenzpus is lelkpus)
  71. [actual] x → lelkpus (原始: x is lelkpus)
  72. [actual] lelkpus → babgpus and babrpus and wifjpus (原始: lelkpus is babgpus and babrpus and wifjpus)
  73. [actual] lelkpus → babgpus and babrpus and wifjpus (原始: lelkpus is babgpus and babrpus and wifjpus)
  74. [actual] x → lelkpus (原始: x is lelkpus)
  75. [actual] lelkpus → babgpus (原始: lelkpus is babgpus)
  76. [actual] x → babgpus (原始: x is babgpus)
  77. [actual] lelkpus → babrpus (原始: lelkpus is babrpus)
  78. [actual] x → babrpus (原始: x is babrpus)
  79. [actual] x → babgpus (原始: x is babgpus)
  80. [actual] x → babrpus (原始: x is babrpus)
  81. [planning] x → babspus (原始: x is babspus)
  82. [actual] babspus → fohjpus and terspus and gegrpus (原始: babspus is fohjpus and terspus and gegrpus)
  83. [actual] lenzpus → fohjpus (原始: lenzpus is fohjpus)
  84. [actual] lenzpus → befqpus (原始: lenzpus is befqpus)
  85. [actual] lenzpus → fohjpus and befqpus (原始: lenzpus is fohjpus and befqpus)
  86. [actual] x → lenzpus (原始: x is lenzpus)
  87. [actual] lenzpus → fohjpus (原始: lenzpus is fohjpus)
  88. [actual] x → fohjpus (原始: x is fohjpus)
  89. [actual] fohjpus → babspus (原始: fohjpus is babspus)
  90. [actual] x → fohjpus (原始: x is fohjpus)
  91. [actual] fohjpus → babspus (原始: fohjpus is babspus)
  92. [actual] x → babspus (原始: x is babspus)
  93. [actual] x → babgpus and babrpus and babspus (原始: x is babgpus and babrpus and babspus)
  94. [actual] x → lenzpus (原始: x is lenzpus)
  95. [actual] jepppus → lenzpus (原始: jepppus is lenzpus)
  96. [actual] jepppus → lenzpus (原始: jepppus is lenzpus)
  97. [actual] kanypus → jofxpus (原始: kanypus is jofxpus)
  98. [actual] jofxpus → jepppus (原始: jofxpus is jepppus)
  99. [actual] kanypus → jepppus (原始: kanypus is jepppus)
  100. [actual] kanypus → lenzpus (原始: kanypus is lenzpus)
  101. [actual] fawzpus → kanypus (原始: fawzpus is kanypus)
  102. [actual] fawzpus → lenzpus (原始: fawzpus is lenzpus)
  103. [actual] xaggpus → fawzpus (原始: xaggpus is fawzpus)
  104. [actual] xaggpus → lenzpus (原始: xaggpus is lenzpus)
  105. [actual] nujcpus → xaggpus (原始: nujcpus is xaggpus)
  106. [actual] nujcpus → lenzpus (原始: nujcpus is lenzpus)
  107. [actual] cubrpus → nujcpus (原始: cubrpus is nujcpus)
  108. [actual] cubrpus → lenzpus (原始: cubrpus is lenzpus)
  109. [actual] viwnpus → lenzpus (原始: viwnpus is lenzpus)
  110. [actual] x → viwnpus (原始: x is viwnpus)
  111. [actual] x → lenzpus (原始: x is lenzpus)
  112. [actual] lenzpus → lelkpus (原始: lenzpus is lelkpus)
  113. [actual] x → lelkpus (原始: x is lelkpus)
  114. [actual] lelkpus → babgpus and babrpus (原始: lelkpus is babgpus and babrpus)
  115. [actual] x → babgpus and babrpus (原始: x is babgpus and babrpus)
  116. [actual] lenzpus → fohjpus (原始: lenzpus is fohjpus)
  117. [planning] x → fohjpus (原始: x is fohjpus)
  118. [actual] fohjpus → babspus (原始: fohjpus is babspus)
  119. [planning] x → babspus (原始: x is babspus)
  120. [actual] x → babgpus and babrpus and babspus (原始: x is babgpus and babrpus and babspus)

开始新的后处理...
[后处理] 从LoG数据文件中获取到图数据，节点数: 23
[后处理] 加载LoG图，包含 23 个节点
  LoG节点 0: x is babgpus and babrpus and babspus (规则: CE, 深度: 1)
  LoG节点 1: x is babgpus and babrpus and babspus and terspus (规则: MP, 深度: 2)
  LoG节点 2: x is kanypus (规则: MP, 深度: 3)
  LoG节点 3: kanypus is babgpus and babrpus and babspus and terspus (规则: MP, 深度: 3)
  LoG节点 4: x is xaggpus (规则: CE, 深度: 4)
  LoG节点 5: xaggpus is kanypus (规则: CE, 深度: 4)
  LoG节点 6: kanypus is lenzpus (规则: CE, 深度: 4)
  LoG节点 7: lenzpus is babgpus and babrpus and babspus and terspus (规则: CI, 深度: 4)
  LoG节点 8: x is xaggpus and vopjpus (规则: MP, 深度: 5)
  LoG节点 9: xaggpus is kanypus and jokkpus (规则: MP, 深度: 5)
  LoG节点 10: kanypus is lenzpus and fuscpus (规则: MP, 深度: 5)
  LoG节点 11: lenzpus is babgpus and babrpus (规则: MP, 深度: 5)
  LoG节点 12: lenzpus is babspus and terspus (规则: MP, 深度: 5)
  LoG节点 13: x is cubrpus (规则: MP, 深度: 6)
  LoG节点 14: cubrpus is xaggpus and vopjpus (规则: MP, 深度: 6)
  LoG节点 15: xaggpus is fawzpus (规则: CE, 深度: 6)
  LoG节点 16: fawzpus is kanypus and jokkpus (规则: CI, 深度: 6)
  LoG节点 17: kanypus is jepppus (规则: MP, 深度: 6)
  LoG节点 18: jepppus is lenzpus and fuscpus (规则: CI, 深度: 6)
  LoG节点 19: lenzpus is lelkpus (规则: CE, 深度: 6)
  LoG节点 20: lelkpus is babgpus and babrpus (规则: CE, 深度: 6)
  LoG节点 21: lenzpus is fohjpus (规则: CE, 深度: 6)
  LoG节点 22: fohjpus is babspus and terspus (规则: CE, 深度: 6)

============================================================
[后处理] 开始处理节点
============================================================
📊 初始状态:
   - 标准化节点数: 120
   - 初始条件数: 15
   - LoG图节点数: 23

📋 初始条件列表:
    1. lenzpus is lelkpus and yiscpus
    2. fawzpus is kanypus
    3. xaggpus is fawzpus and dimbpus
    4. jofxpus is jepppus
    5. fawzpus is jokkpus
    6. cubrpus is nujcpus
    7. fohjpus is babspus and terspus and gegrpus
    8. jepppus is fuscpus
    9. kanypus is jofxpus
   10. jepppus is lenzpus
   11. x is viwnpus
   12. nujcpus is xaggpus and vopjpus
   13. lenzpus is fohjpus and befqpus
   14. viwnpus is cubrpus
   15. lelkpus is babgpus and babrpus and wifjpus

🔧 构建初始Statement列表...
✅ 初始Statement列表构建完成，包含 15 个前提节点

🔍 开始处理actual节点...

   节点 1: x is viwnpus
      ↻ 重复节点，计数: 2

   节点 2: lerwpus is babgpus and rayspus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 3: x is relmpus and muqcpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 4: viwnpus is cubrpus
      ↻ 重复节点，计数: 2

   节点 5: viwnpus is cubrpus
      ↻ 重复节点，计数: 3

   节点 6: cubrpus is nujcpus
      ↻ 重复节点，计数: 2

   节点 7: cubrpus is nujcpus
      ↻ 重复节点，计数: 3

   节点 8: nujcpus is xaggpus and vopjpus
      ↻ 重复节点，计数: 2

   节点 9: nujcpus is xaggpus and vopjpus
      ↻ 重复节点，计数: 3

   节点 10: lelkpus is babgpus and babrpus and wifjpus
      ↻ 重复节点，计数: 2

   节点 11: fohjpus is babspus and terspus and gegrpus
      ↻ 重复节点，计数: 2

   节点 12: lenzpus is fohjpus and befqpus
      ↻ 重复节点，计数: 2

   节点 13: x is viwnpus
      ↻ 重复节点，计数: 3

   节点 14: viwnpus is cubrpus
      ↻ 重复节点，计数: 4

   节点 15: cubrpus is nujcpus
      ↻ 重复节点，计数: 4

   节点 16: nujcpus is xaggpus and vopjpus
      ↻ 重复节点，计数: 4

   节点 17: xaggpus is fawzpus and dimbpus
      ↻ 重复节点，计数: 2

   节点 18: xaggpus is fawzpus and dimbpus
      ↻ 重复节点，计数: 3

   节点 19: fawzpus is kanypus
      ↻ 重复节点，计数: 2

   节点 20: fawzpus is kanypus
      ↻ 重复节点，计数: 3

   节点 21: kanypus is jofxpus
      ↻ 重复节点，计数: 2

   节点 22: kanypus is jofxpus
      ↻ 重复节点，计数: 3

   节点 23: jofxpus is jepppus
      ↻ 重复节点，计数: 2

   节点 24: jofxpus is jepppus
      ↻ 重复节点，计数: 3

   节点 25: jepppus is fuscpus
      ↻ 重复节点，计数: 2

   节点 26: jepppus is fuscpus
      ↻ 重复节点，计数: 3

   节点 27: jepppus is lenzpus
      ↻ 重复节点，计数: 2

   节点 28: jepppus is lenzpus
      ↻ 重复节点，计数: 3

   节点 29: jofxpus is jepppus
      ↻ 重复节点，计数: 4

   节点 30: jepppus is lenzpus
      ↻ 重复节点，计数: 4

   节点 31: jofxpus is lenzpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: jofxpus is jepppus → jepppus is lenzpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: jofxpus is jepppus
  - 前提: jepppus is lenzpus

   节点 32: kanypus is jofxpus
      ↻ 重复节点，计数: 4

   节点 33: kanypus is jepppus
      🔍 验证新节点...
[后处理] 点亮LoG节点: kanypus is jepppus
      ✅ 验证成功 + LoG匹配

   节点 34: kanypus is jofxpus
      ↻ 重复节点，计数: 5

   节点 35: jofxpus is jepppus
      ↻ 重复节点，计数: 5

   节点 36: kanypus is jepppus
      ↻ 重复节点，计数: 2

   节点 37: jepppus is lenzpus
      ↻ 重复节点，计数: 5

   节点 38: kanypus is lenzpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: kanypus is lenzpus
[子树点亮]     └─ 点亮依赖节点: kanypus is lenzpus and fuscpus (深度5)
[子树点亮]     └─ 点亮依赖节点: jepppus is lenzpus and fuscpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 2 个节点
      ✅ 验证成功 + LoG匹配

   节点 39: fawzpus is kanypus
      ↻ 重复节点，计数: 4

   节点 40: kanypus is lenzpus
      ↻ 重复节点，计数: 2

   节点 41: fawzpus is lenzpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: fawzpus is kanypus → kanypus is lenzpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: fawzpus is kanypus
  - 前提: kanypus is lenzpus

   节点 42: fawzpus is kanypus
      ↻ 重复节点，计数: 5

   节点 43: kanypus is lenzpus
      ↻ 重复节点，计数: 3

   节点 44: fawzpus is lenzpus
      ↻ 重复节点，计数: 2

   节点 45: xaggpus is fawzpus and dimbpus
      ↻ 重复节点，计数: 4

   节点 46: xaggpus is fawzpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: xaggpus is fawzpus
      ✅ 验证成功 + LoG匹配

   节点 47: fawzpus is lenzpus
      ↻ 重复节点，计数: 3

   节点 48: xaggpus is lenzpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: xaggpus is fawzpus → fawzpus is lenzpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: xaggpus is fawzpus
  - 前提: fawzpus is lenzpus

   节点 49: nujcpus is xaggpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: nujcpus is xaggpus and vopjpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: nujcpus is xaggpus and vopjpus

   节点 50: nujcpus is lenzpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: nujcpus is xaggpus → xaggpus is lenzpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: nujcpus is xaggpus
  - 前提: xaggpus is lenzpus

   节点 51: cubrpus is nujcpus
      ↻ 重复节点，计数: 5

   节点 52: nujcpus is lenzpus
      ↻ 重复节点，计数: 2

   节点 53: cubrpus is lenzpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: cubrpus is nujcpus → nujcpus is lenzpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: cubrpus is nujcpus
  - 前提: nujcpus is lenzpus

   节点 54: viwnpus is cubrpus
      ↻ 重复节点，计数: 5

   节点 55: cubrpus is lenzpus
      ↻ 重复节点，计数: 2

   节点 56: viwnpus is lenzpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: viwnpus is cubrpus → cubrpus is lenzpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: viwnpus is cubrpus
  - 前提: cubrpus is lenzpus

   节点 57: x is viwnpus
      ↻ 重复节点，计数: 4

   节点 58: viwnpus is lenzpus
      ↻ 重复节点，计数: 2

   节点 59: x is lenzpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is viwnpus → viwnpus is lenzpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: x is viwnpus
  - 前提: viwnpus is lenzpus

   节点 60: lenzpus is lelkpus and yiscpus
      ↻ 重复节点，计数: 2

   节点 61: lenzpus is lelkpus and yiscpus
      ↻ 重复节点，计数: 3

   节点 62: lenzpus is lelkpus and yiscpus
      ↻ 重复节点，计数: 4

   节点 63: x is lenzpus
      ↻ 重复节点，计数: 2

   节点 64: lenzpus is lelkpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: lenzpus is lelkpus
      ✅ 验证成功 + LoG匹配

   节点 65: x is lelkpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is viwnpus → viwnpus is lelkpus
[后处理] 基于推理轨迹点亮节点，使用了 10 个前提条件:
  - 前提: x is viwnpus
  - 前提: viwnpus is cubrpus
  - 前提: cubrpus is nujcpus
  - 前提: nujcpus is xaggpus
  - 前提: xaggpus is fawzpus
  - 前提: fawzpus is kanypus
  - 前提: kanypus is jofxpus
  - 前提: jofxpus is jepppus
  - 前提: jepppus is lenzpus
  - 前提: lenzpus is lelkpus
  ✓ 点亮LoG节点: x is kanypus
[子树点亮]     └─ 点亮依赖节点: x is xaggpus (深度4)
[子树点亮]     └─ 点亮依赖节点: xaggpus is kanypus (深度4)
[子树点亮]     └─ 点亮依赖节点: x is xaggpus and vopjpus (深度5)
[子树点亮]     └─ 点亮依赖节点: xaggpus is kanypus and jokkpus (深度5)
[子树点亮]     └─ 点亮依赖节点: x is cubrpus (深度6)
[子树点亮]     └─ 点亮依赖节点: cubrpus is xaggpus and vopjpus (深度6)
[子树点亮]     └─ 点亮依赖节点: fawzpus is kanypus and jokkpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 7 个节点
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 66: lelkpus is babgpus and babrpus and wifjpus
      ↻ 重复节点，计数: 3

   节点 67: lelkpus is babgpus and babrpus and wifjpus
      ↻ 重复节点，计数: 4

   节点 68: x is lelkpus
      ↻ 重复节点，计数: 2

   节点 69: lelkpus is babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: lelkpus is babgpus and babrpus and wifjpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: lelkpus is babgpus and babrpus and wifjpus
  ✓ 点亮LoG节点: lelkpus is babgpus and babrpus
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 70: x is babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is viwnpus → viwnpus is babgpus
[后处理] 基于推理轨迹点亮节点，使用了 11 个前提条件:
  - 前提: x is viwnpus
  - 前提: viwnpus is cubrpus
  - 前提: cubrpus is nujcpus
  - 前提: nujcpus is xaggpus
  - 前提: xaggpus is fawzpus
  - 前提: fawzpus is kanypus
  - 前提: kanypus is jofxpus
  - 前提: jofxpus is jepppus
  - 前提: jepppus is lenzpus
  - 前提: lenzpus is lelkpus
  - 前提: lelkpus is babgpus

   节点 71: lelkpus is babrpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: lelkpus is babgpus and babrpus and wifjpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: lelkpus is babgpus and babrpus and wifjpus

   节点 72: x is babrpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is viwnpus → viwnpus is babrpus
[后处理] 基于推理轨迹点亮节点，使用了 11 个前提条件:
  - 前提: x is viwnpus
  - 前提: viwnpus is cubrpus
  - 前提: cubrpus is nujcpus
  - 前提: nujcpus is xaggpus
  - 前提: xaggpus is fawzpus
  - 前提: fawzpus is kanypus
  - 前提: kanypus is jofxpus
  - 前提: jofxpus is jepppus
  - 前提: jepppus is lenzpus
  - 前提: lenzpus is lelkpus
  - 前提: lelkpus is babrpus

   节点 73: x is babgpus
      ↻ 重复节点，计数: 2

   节点 74: x is babrpus
      ↻ 重复节点，计数: 2

   节点 75: babspus is fohjpus and terspus and gegrpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 76: lenzpus is fohjpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: lenzpus is fohjpus
      ✅ 验证成功 + LoG匹配

   节点 77: lenzpus is befqpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: lenzpus is fohjpus and befqpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: lenzpus is fohjpus and befqpus

   节点 78: lenzpus is fohjpus and befqpus
      ↻ 重复节点，计数: 3

   节点 79: x is lenzpus
      ↻ 重复节点，计数: 3

   节点 80: lenzpus is fohjpus
      ↻ 重复节点，计数: 2

   节点 81: x is fohjpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is viwnpus → viwnpus is fohjpus
[后处理] 基于推理轨迹点亮节点，使用了 10 个前提条件:
  - 前提: x is viwnpus
  - 前提: viwnpus is cubrpus
  - 前提: cubrpus is nujcpus
  - 前提: nujcpus is xaggpus
  - 前提: xaggpus is fawzpus
  - 前提: fawzpus is kanypus
  - 前提: kanypus is jofxpus
  - 前提: jofxpus is jepppus
  - 前提: jepppus is lenzpus
  - 前提: lenzpus is fohjpus

   节点 82: fohjpus is babspus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: fohjpus is babspus and terspus and gegrpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: fohjpus is babspus and terspus and gegrpus
  ✓ 点亮LoG节点: fohjpus is babspus and terspus
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 83: x is fohjpus
      ↻ 重复节点，计数: 2

   节点 84: fohjpus is babspus
      ↻ 重复节点，计数: 2

   节点 85: x is babspus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is viwnpus → viwnpus is babspus
[后处理] 基于推理轨迹点亮节点，使用了 11 个前提条件:
  - 前提: x is viwnpus
  - 前提: viwnpus is cubrpus
  - 前提: cubrpus is nujcpus
  - 前提: nujcpus is xaggpus
  - 前提: xaggpus is fawzpus
  - 前提: fawzpus is kanypus
  - 前提: kanypus is jofxpus
  - 前提: jofxpus is jepppus
  - 前提: jepppus is lenzpus
  - 前提: lenzpus is fohjpus
  - 前提: fohjpus is babspus

   节点 86: x is babgpus and babrpus and babspus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is babgpus and babrpus and babspus
[子树点亮]     └─ 点亮依赖节点: x is babgpus and babrpus and babspus and terspus (深度2)
[子树点亮]     └─ 点亮依赖节点: kanypus is babgpus and babrpus and babspus and terspus (深度3)
[子树点亮]     └─ 点亮依赖节点: lenzpus is babgpus and babrpus and babspus and terspus (深度4)
[子树点亮]     └─ 点亮依赖节点: lenzpus is babgpus and babrpus (深度5)
[子树点亮]     └─ 点亮依赖节点: lenzpus is babspus and terspus (深度5)
[后处理]   └─ 自动点亮依赖子树: 5 个节点
      ✅ 验证成功 + LoG匹配

   节点 87: x is lenzpus
      ↻ 重复节点，计数: 4

   节点 88: jepppus is lenzpus
      ↻ 重复节点，计数: 6

   节点 89: jepppus is lenzpus
      ↻ 重复节点，计数: 7

   节点 90: kanypus is jofxpus
      ↻ 重复节点，计数: 6

   节点 91: jofxpus is jepppus
      ↻ 重复节点，计数: 6

   节点 92: kanypus is jepppus
      ↻ 重复节点，计数: 3

   节点 93: kanypus is lenzpus
      ↻ 重复节点，计数: 4

   节点 94: fawzpus is kanypus
      ↻ 重复节点，计数: 6

   节点 95: fawzpus is lenzpus
      ↻ 重复节点，计数: 4

   节点 96: xaggpus is fawzpus
      ↻ 重复节点，计数: 2

   节点 97: xaggpus is lenzpus
      ↻ 重复节点，计数: 2

   节点 98: nujcpus is xaggpus
      ↻ 重复节点，计数: 2

   节点 99: nujcpus is lenzpus
      ↻ 重复节点，计数: 3

   节点 100: cubrpus is nujcpus
      ↻ 重复节点，计数: 6

   节点 101: cubrpus is lenzpus
      ↻ 重复节点，计数: 3

   节点 102: viwnpus is lenzpus
      ↻ 重复节点，计数: 3

   节点 103: x is viwnpus
      ↻ 重复节点，计数: 5

   节点 104: x is lenzpus
      ↻ 重复节点，计数: 5

   节点 105: lenzpus is lelkpus
      ↻ 重复节点，计数: 2

   节点 106: x is lelkpus
      ↻ 重复节点，计数: 3

   节点 107: lelkpus is babgpus and babrpus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 108: x is babgpus and babrpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is viwnpus → viwnpus is babgpus and babrpus
[后处理] 基于推理轨迹点亮节点，使用了 11 个前提条件:
  - 前提: x is viwnpus
  - 前提: viwnpus is cubrpus
  - 前提: cubrpus is nujcpus
  - 前提: nujcpus is xaggpus
  - 前提: xaggpus is fawzpus
  - 前提: fawzpus is kanypus
  - 前提: kanypus is jofxpus
  - 前提: jofxpus is jepppus
  - 前提: jepppus is lenzpus
  - 前提: lenzpus is lelkpus
  - 前提: lelkpus is babgpus and babrpus

   节点 109: lenzpus is fohjpus
      ↻ 重复节点，计数: 3

   节点 110: fohjpus is babspus
      ↻ 重复节点，计数: 3

   节点 111: x is babgpus and babrpus and babspus
      ↻ 重复节点，计数: 2

🔍 分析推理路径完整性...

============================================================
[后处理] 处理完成
============================================================
📈 处理统计:
   - 处理的actual节点: 111
   - 新增节点: 28
   - 更新已存在节点: 83
   - 点亮的LoG节点: 23

🎯 推理质量统计:
   - 完美推理: 20 (节点正确 + 路径正确)
   - 部分推理: 8 (节点正确 + 路径部分错误)
   - 无效推理: 0 (节点错误或路径完全错误)
[LoG分析] LoG图: 23节点, 15前提, 复杂度1-15

📊 === Statement列表分析 ===
📈 节点统计:
   - 总节点数: 43
   - 前提节点: 15
   - 推理节点: 25
   - 幻觉节点: 3
   - 点亮LoG节点: 23

❌ 幻觉节点详情:
   - lerwpus is babgpus and rayspus (出现1次)
   - x is relmpus and muqcpus (出现1次)
   - babspus is fohjpus and terspus and gegrpus (出现1次)

✅ 推理节点详情:
   🟢 jofxpus is lenzpus (出现1次, 质量:perfect)
   🟢 kanypus is jepppus (出现3次, 质量:perfect)
   🟢 kanypus is lenzpus (出现4次, 质量:perfect)
   🟢 fawzpus is lenzpus (出现4次, 质量:perfect)
   🟢 xaggpus is fawzpus (出现2次, 质量:perfect)
   🟢 xaggpus is lenzpus (出现2次, 质量:perfect)
   🟢 nujcpus is xaggpus (出现2次, 质量:perfect)
   🟢 nujcpus is lenzpus (出现3次, 质量:perfect)
   🟢 cubrpus is lenzpus (出现3次, 质量:perfect)
   🟢 viwnpus is lenzpus (出现3次, 质量:perfect)
   🟡 x is lenzpus (出现5次, 质量:partial)
      ⚠️  无效依赖: ['x is relmpus and muqcpus']
   🟢 lenzpus is lelkpus (出现2次, 质量:perfect)
   🟡 x is lelkpus (出现3次, 质量:partial)
      ⚠️  无效依赖: ['x is relmpus and muqcpus']
   🟢 lelkpus is babgpus (出现1次, 质量:perfect)
   🟡 x is babgpus (出现2次, 质量:partial)
      ⚠️  无效依赖: ['x is relmpus and muqcpus']
   🟢 lelkpus is babrpus (出现1次, 质量:perfect)
   🟡 x is babrpus (出现2次, 质量:partial)
      ⚠️  无效依赖: ['x is relmpus and muqcpus']
   🟢 lenzpus is fohjpus (出现3次, 质量:perfect)
   🟢 lenzpus is befqpus (出现1次, 质量:perfect)
   🟡 x is fohjpus (出现2次, 质量:partial)
      ⚠️  无效依赖: ['x is relmpus and muqcpus']
   🟢 fohjpus is babspus (出现3次, 质量:perfect)
   🟡 x is babspus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['x is relmpus and muqcpus']
   🟡 x is babgpus and babrpus and babspus (出现2次, 质量:partial)
      ⚠️  无效依赖: ['x is relmpus and muqcpus']
   🟢 lelkpus is babgpus and babrpus (出现1次, 质量:perfect)
   🟡 x is babgpus and babrpus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['x is relmpus and muqcpus']

🔥 点亮的LoG节点:
   - kanypus is lenzpus
   - x is kanypus
   - x is cubrpus
   - xaggpus is kanypus
   - kanypus is lenzpus and fuscpus
   - jepppus is lenzpus and fuscpus
   - fawzpus is kanypus and jokkpus
   - lelkpus is babgpus and babrpus
   - fohjpus is babspus and terspus
   - lenzpus is babgpus and babrpus and babspus and terspus
   - kanypus is babgpus and babrpus and babspus and terspus
   - lenzpus is babgpus and babrpus
   - xaggpus is fawzpus
   - x is xaggpus and vopjpus
   - xaggpus is kanypus and jokkpus
   - kanypus is jepppus
   - x is babgpus and babrpus and babspus
   - lenzpus is babspus and terspus
   - cubrpus is xaggpus and vopjpus
   - lenzpus is fohjpus
   - x is xaggpus
   - x is babgpus and babrpus and babspus and terspus
   - lenzpus is lelkpus

============================================================
📊 计算评估指标
============================================================

🎯 计算Coverage指标...
   深度Coverage: 6/6 = 100.00%
   最深点亮节点: x is babgpus and babrpus and babspus (第6层)
   节点Coverage: 23/23 = 100.00%
   前提条件Coverage: 14/15 = 93.33%
   各推理层点亮比例:
     第1层: 10/10 = 100.00%
     第2层: 5/5 = 100.00%
     第3层: 4/4 = 100.00%
     第4层: 2/2 = 100.00%
     第5层: 1/1 = 100.00%
     第6层: 1/1 = 100.00%

🎯 计算Precision指标...
   Error Rate: 3/28 = 10.71%
   可推导节点: 25/28
   Strict Error Rate: 11/28 = 39.29%
   严格有效节点: 17/28

   详细分析:
     完美推理: 20 (71.43%)
     部分推理: 8 (28.57%)
     无效推理: 0 (0.00%)

================================================================================
处理记录 18/50
================================================================================
记录索引: 17
问题状态: correct
📁 从缓存加载提取结果: evaluation_results.LoG_6.deepseek-reasoner_record_17.json
✅ 使用缓存结果:
   - 句子数: 85
   - 提取的语句数: 78
   - 初始条件数: 14

=== Statement提取完成 ===
总句子数: 85
成功提取: 85
失败提取: 0
总statements数: 78

=== 开始清洗Statement格式 ===
原始statements数: 78
清洗后statements数: 75
过滤掉的statements数: 3
清洗后的statements:
  1. [actual] pihcpus is taxvpus
  2. [actual] pihcpus is fapwpus
  3. [actual] giqrpus is kiwcpus
  4. [actual] zorkpus is difypus and vozmpus
  5. [actual] zorkpus is difypus and vozmpus
  6. [actual] gexgpus is pihcpus
  7. [actual] duwbpus is bocfpus and vaqgpus and kahvpus
  8. [actual] xoghpus is giqrpus and goxwpus
  9. [actual] rosnpus is babgpus
  10. [actual] x is gexgpus
  11. [actual] kiwcpus is duwbpus and lirrpus
  12. [actual] fapwpus is zorkpus
  13. [actual] niblpus is xoghpus
  14. [actual] difypus is niblpus
  15. [actual] duwbpus is rosnpus
  16. [planning] x is babgpus
  17. [planning] x is babgpus
  18. [actual] x is gexgpus
  19. [actual] x is gexgpus
  20. [actual] gexgpus is pihcpus
  21. [actual] gexgpus is pihcpus
  22. [actual] x is pihcpus
  23. [actual] pihcpus is fapwpus
  24. [actual] x is fapwpus through pihcpus
  25. [actual] fapwpus is zorkpus
  26. [actual] x is zorkpus through fapwpus
  27. [actual] zorkpus is difypus and vozmpus
  28. [actual] x is difypus and vozmpus
  29. [actual] difypus is niblpus
  30. [actual] x is niblpus through difypus
  31. [actual] niblpus is xoghpus
  32. [actual] x is xoghpus through niblpus
  33. [actual] xoghpus is giqrpus and goxwpus
  34. [actual] x is giqrpus and goxwpus
  35. [actual] giqrpus is kiwcpus
  36. [actual] x is kiwcpus through giqrpus
  37. [actual] kiwcpus is duwbpus and lirrpus
  38. [actual] x is duwbpus and lirrpus
  39. [actual] duwbpus is rosnpus
  40. [actual] x is rosnpus through duwbpus
  41. [actual] rosnpus is babgpus
  42. [actual] x is babgpus
  43. [actual] x is babgpus
  44. [actual] x is gexgpus
  45. [actual] gexgpus is pihcpus
  46. [planning] x is pihcpus
  47. [actual] pihcpus is fapwpus
  48. [actual] x is fapwpus
  49. [actual] fapwpus is zorkpus
  50. [planning] x is zorkpus
  51. [actual] zorkpus is difypus
  52. [actual] x is difypus and vozmpus
  53. [actual] difypus is niblpus
  54. [actual] x is niblpus
  55. [actual] niblpus is xoghpus
  56. [actual] x is xoghpus
  57. [actual] xoghpus is giqrpus
  58. [actual] x is giqrpus
  59. [actual] x is goxwpus
  60. [actual] giqrpus is kiwcpus
  61. [planning] x is kiwcpus
  62. [actual] kiwcpus is duwbpus
  63. [actual] x is duwbpus and lirrpus
  64. [actual] duwbpus is rosnpus
  65. [planning] x is rosnpus
  66. [actual] rosnpus is babgpus
  67. [actual] x is babgpus
  68. [actual] x is babgpus
  69. [actual] duwbpus is bocfpus and vaqgpus and kahvpus
  70. [actual] kiwcpus is duwbpus and lirrpus
  71. [actual] kiwcpus is duwbpus
  72. [actual] x is duwbpus
  73. [actual] duwbpus is rosnpus
  74. [actual] rosnpus is babgpus
  75. [actual] x is babgpus

=== 开始标准化和解析节点 ===
清洗后statements数: 75
标准化后节点数: 69
过滤掉的无效实体数: 6
标准化后的节点:
  1. [actual] pihcpus → taxvpus (原始: pihcpus is taxvpus)
  2. [actual] pihcpus → fapwpus (原始: pihcpus is fapwpus)
  3. [actual] giqrpus → kiwcpus (原始: giqrpus is kiwcpus)
  4. [actual] zorkpus → difypus and vozmpus (原始: zorkpus is difypus and vozmpus)
  5. [actual] zorkpus → difypus and vozmpus (原始: zorkpus is difypus and vozmpus)
  6. [actual] gexgpus → pihcpus (原始: gexgpus is pihcpus)
  7. [actual] duwbpus → bocfpus and vaqgpus and kahvpus (原始: duwbpus is bocfpus and vaqgpus and kahvpus)
  8. [actual] xoghpus → giqrpus and goxwpus (原始: xoghpus is giqrpus and goxwpus)
  9. [actual] rosnpus → babgpus (原始: rosnpus is babgpus)
  10. [actual] x → gexgpus (原始: x is gexgpus)
  11. [actual] kiwcpus → duwbpus and lirrpus (原始: kiwcpus is duwbpus and lirrpus)
  12. [actual] fapwpus → zorkpus (原始: fapwpus is zorkpus)
  13. [actual] niblpus → xoghpus (原始: niblpus is xoghpus)
  14. [actual] difypus → niblpus (原始: difypus is niblpus)
  15. [actual] duwbpus → rosnpus (原始: duwbpus is rosnpus)
  16. [planning] x → babgpus (原始: x is babgpus)
  17. [planning] x → babgpus (原始: x is babgpus)
  18. [actual] x → gexgpus (原始: x is gexgpus)
  19. [actual] x → gexgpus (原始: x is gexgpus)
  20. [actual] gexgpus → pihcpus (原始: gexgpus is pihcpus)
  21. [actual] gexgpus → pihcpus (原始: gexgpus is pihcpus)
  22. [actual] x → pihcpus (原始: x is pihcpus)
  23. [actual] pihcpus → fapwpus (原始: pihcpus is fapwpus)
  24. [actual] fapwpus → zorkpus (原始: fapwpus is zorkpus)
  25. [actual] zorkpus → difypus and vozmpus (原始: zorkpus is difypus and vozmpus)
  26. [actual] x → difypus and vozmpus (原始: x is difypus and vozmpus)
  27. [actual] difypus → niblpus (原始: difypus is niblpus)
  28. [actual] niblpus → xoghpus (原始: niblpus is xoghpus)
  29. [actual] xoghpus → giqrpus and goxwpus (原始: xoghpus is giqrpus and goxwpus)
  30. [actual] x → giqrpus and goxwpus (原始: x is giqrpus and goxwpus)
  31. [actual] giqrpus → kiwcpus (原始: giqrpus is kiwcpus)
  32. [actual] kiwcpus → duwbpus and lirrpus (原始: kiwcpus is duwbpus and lirrpus)
  33. [actual] x → duwbpus and lirrpus (原始: x is duwbpus and lirrpus)
  34. [actual] duwbpus → rosnpus (原始: duwbpus is rosnpus)
  35. [actual] rosnpus → babgpus (原始: rosnpus is babgpus)
  36. [actual] x → babgpus (原始: x is babgpus)
  37. [actual] x → babgpus (原始: x is babgpus)
  38. [actual] x → gexgpus (原始: x is gexgpus)
  39. [actual] gexgpus → pihcpus (原始: gexgpus is pihcpus)
  40. [planning] x → pihcpus (原始: x is pihcpus)
  41. [actual] pihcpus → fapwpus (原始: pihcpus is fapwpus)
  42. [actual] x → fapwpus (原始: x is fapwpus)
  43. [actual] fapwpus → zorkpus (原始: fapwpus is zorkpus)
  44. [planning] x → zorkpus (原始: x is zorkpus)
  45. [actual] zorkpus → difypus (原始: zorkpus is difypus)
  46. [actual] x → difypus and vozmpus (原始: x is difypus and vozmpus)
  47. [actual] difypus → niblpus (原始: difypus is niblpus)
  48. [actual] x → niblpus (原始: x is niblpus)
  49. [actual] niblpus → xoghpus (原始: niblpus is xoghpus)
  50. [actual] x → xoghpus (原始: x is xoghpus)
  51. [actual] xoghpus → giqrpus (原始: xoghpus is giqrpus)
  52. [actual] x → giqrpus (原始: x is giqrpus)
  53. [actual] x → goxwpus (原始: x is goxwpus)
  54. [actual] giqrpus → kiwcpus (原始: giqrpus is kiwcpus)
  55. [planning] x → kiwcpus (原始: x is kiwcpus)
  56. [actual] kiwcpus → duwbpus (原始: kiwcpus is duwbpus)
  57. [actual] x → duwbpus and lirrpus (原始: x is duwbpus and lirrpus)
  58. [actual] duwbpus → rosnpus (原始: duwbpus is rosnpus)
  59. [planning] x → rosnpus (原始: x is rosnpus)
  60. [actual] rosnpus → babgpus (原始: rosnpus is babgpus)
  61. [actual] x → babgpus (原始: x is babgpus)
  62. [actual] x → babgpus (原始: x is babgpus)
  63. [actual] duwbpus → bocfpus and vaqgpus and kahvpus (原始: duwbpus is bocfpus and vaqgpus and kahvpus)
  64. [actual] kiwcpus → duwbpus and lirrpus (原始: kiwcpus is duwbpus and lirrpus)
  65. [actual] kiwcpus → duwbpus (原始: kiwcpus is duwbpus)
  66. [actual] x → duwbpus (原始: x is duwbpus)
  67. [actual] duwbpus → rosnpus (原始: duwbpus is rosnpus)
  68. [actual] rosnpus → babgpus (原始: rosnpus is babgpus)
  69. [actual] x → babgpus (原始: x is babgpus)

开始新的后处理...
[后处理] 从LoG数据文件中获取到图数据，节点数: 20
[后处理] 加载LoG图，包含 20 个节点
  LoG节点 0: x is babgpus (规则: CE, 深度: 1)
  LoG节点 1: x is babgpus and bocfpus (规则: MP, 深度: 2)
  LoG节点 2: x is giqrpus (规则: MP, 深度: 3)
  LoG节点 3: giqrpus is babgpus and bocfpus (规则: CE, 深度: 3)
  LoG节点 4: x is fapwpus (规则: CE, 深度: 4)
  LoG节点 5: fapwpus is giqrpus (规则: MP, 深度: 4)
  LoG节点 6: giqrpus is babgpus and bocfpus and vaqgpus (规则: MP, 深度: 4)
  LoG节点 7: x is fapwpus and taxvpus (规则: MP, 深度: 5)
  LoG节点 8: fapwpus is difypus (规则: CE, 深度: 5)
  LoG节点 9: difypus is giqrpus (规则: MP, 深度: 5)
  LoG节点 10: giqrpus is duwbpus (规则: CE, 深度: 5)
  LoG节点 11: duwbpus is babgpus and bocfpus and vaqgpus (规则: CI, 深度: 5)
  LoG节点 12: x is pihcpus (规则: MP, 深度: 6)
  LoG节点 13: pihcpus is fapwpus and taxvpus (规则: CI, 深度: 6)
  LoG节点 14: fapwpus is difypus and vozmpus (规则: MP, 深度: 6)
  LoG节点 15: difypus is xoghpus (规则: MP, 深度: 6)
  LoG节点 16: xoghpus is giqrpus (规则: CE, 深度: 6)
  LoG节点 17: giqrpus is duwbpus and lirrpus (规则: MP, 深度: 6)
  LoG节点 18: duwbpus is babgpus (规则: MP, 深度: 6)
  LoG节点 19: duwbpus is bocfpus and vaqgpus (规则: CE, 深度: 6)

============================================================
[后处理] 开始处理节点
============================================================
📊 初始状态:
   - 标准化节点数: 69
   - 初始条件数: 14
   - LoG图节点数: 20

📋 初始条件列表:
    1. pihcpus is taxvpus
    2. pihcpus is fapwpus
    3. giqrpus is kiwcpus
    4. zorkpus is difypus and vozmpus
    5. gexgpus is pihcpus
    6. duwbpus is bocfpus and vaqgpus and kahvpus
    7. xoghpus is giqrpus and goxwpus
    8. rosnpus is babgpus
    9. x is gexgpus
   10. kiwcpus is duwbpus and lirrpus
   11. fapwpus is zorkpus
   12. niblpus is xoghpus
   13. difypus is niblpus
   14. duwbpus is rosnpus

🔧 构建初始Statement列表...
✅ 初始Statement列表构建完成，包含 14 个前提节点

🔍 开始处理actual节点...

   节点 1: pihcpus is taxvpus
      ↻ 重复节点，计数: 2

   节点 2: pihcpus is fapwpus
      ↻ 重复节点，计数: 2

   节点 3: giqrpus is kiwcpus
      ↻ 重复节点，计数: 2

   节点 4: zorkpus is difypus and vozmpus
      ↻ 重复节点，计数: 2

   节点 5: zorkpus is difypus and vozmpus
      ↻ 重复节点，计数: 3

   节点 6: gexgpus is pihcpus
      ↻ 重复节点，计数: 2

   节点 7: duwbpus is bocfpus and vaqgpus and kahvpus
      ↻ 重复节点，计数: 2

   节点 8: xoghpus is giqrpus and goxwpus
      ↻ 重复节点，计数: 2

   节点 9: rosnpus is babgpus
      ↻ 重复节点，计数: 2

   节点 10: x is gexgpus
      ↻ 重复节点，计数: 2

   节点 11: kiwcpus is duwbpus and lirrpus
      ↻ 重复节点，计数: 2

   节点 12: fapwpus is zorkpus
      ↻ 重复节点，计数: 2

   节点 13: niblpus is xoghpus
      ↻ 重复节点，计数: 2

   节点 14: difypus is niblpus
      ↻ 重复节点，计数: 2

   节点 15: duwbpus is rosnpus
      ↻ 重复节点，计数: 2

   节点 16: x is gexgpus
      ↻ 重复节点，计数: 3

   节点 17: x is gexgpus
      ↻ 重复节点，计数: 4

   节点 18: gexgpus is pihcpus
      ↻ 重复节点，计数: 3

   节点 19: gexgpus is pihcpus
      ↻ 重复节点，计数: 4

   节点 20: x is pihcpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is pihcpus
      ✅ 验证成功 + LoG匹配

   节点 21: pihcpus is fapwpus
      ↻ 重复节点，计数: 3

   节点 22: fapwpus is zorkpus
      ↻ 重复节点，计数: 3

   节点 23: zorkpus is difypus and vozmpus
      ↻ 重复节点，计数: 4

   节点 24: x is difypus and vozmpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is gexgpus → gexgpus is difypus and vozmpus
[后处理] 基于推理轨迹点亮节点，使用了 5 个前提条件:
  - 前提: x is gexgpus
  - 前提: gexgpus is pihcpus
  - 前提: pihcpus is fapwpus
  - 前提: fapwpus is zorkpus
  - 前提: zorkpus is difypus and vozmpus
  ✓ 点亮LoG节点: x is fapwpus
[子树点亮]     └─ 点亮依赖节点: x is fapwpus and taxvpus (深度5)
[子树点亮]     └─ 点亮依赖节点: pihcpus is fapwpus and taxvpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 2 个节点
  ✓ 点亮LoG节点: fapwpus is difypus
[子树点亮]     └─ 点亮依赖节点: fapwpus is difypus and vozmpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 1 个节点
[后处理] 通过推理轨迹额外点亮了 2 个LoG节点

   节点 25: difypus is niblpus
      ↻ 重复节点，计数: 3

   节点 26: niblpus is xoghpus
      ↻ 重复节点，计数: 3

   节点 27: xoghpus is giqrpus and goxwpus
      ↻ 重复节点，计数: 3

   节点 28: x is giqrpus and goxwpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is gexgpus → gexgpus is giqrpus and goxwpus
[后处理] 基于推理轨迹点亮节点，使用了 8 个前提条件:
  - 前提: x is gexgpus
  - 前提: gexgpus is pihcpus
  - 前提: pihcpus is fapwpus
  - 前提: fapwpus is zorkpus
  - 前提: zorkpus is difypus and vozmpus
  - 前提: difypus is niblpus
  - 前提: niblpus is xoghpus
  - 前提: xoghpus is giqrpus and goxwpus
  ✓ 点亮LoG节点: x is giqrpus
[子树点亮]     └─ 点亮依赖节点: fapwpus is giqrpus (深度4)
[子树点亮]     └─ 点亮依赖节点: difypus is giqrpus (深度5)
[子树点亮]     └─ 点亮依赖节点: difypus is xoghpus (深度6)
[子树点亮]     └─ 点亮依赖节点: xoghpus is giqrpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 4 个节点
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 29: giqrpus is kiwcpus
      ↻ 重复节点，计数: 3

   节点 30: kiwcpus is duwbpus and lirrpus
      ↻ 重复节点，计数: 3

   节点 31: x is duwbpus and lirrpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is gexgpus → gexgpus is duwbpus and lirrpus
[后处理] 基于推理轨迹点亮节点，使用了 10 个前提条件:
  - 前提: x is gexgpus
  - 前提: gexgpus is pihcpus
  - 前提: pihcpus is fapwpus
  - 前提: fapwpus is zorkpus
  - 前提: zorkpus is difypus and vozmpus
  - 前提: difypus is niblpus
  - 前提: niblpus is xoghpus
  - 前提: xoghpus is giqrpus and goxwpus
  - 前提: giqrpus is kiwcpus
  - 前提: kiwcpus is duwbpus and lirrpus
  ✓ 点亮LoG节点: giqrpus is duwbpus
[子树点亮]     └─ 点亮依赖节点: giqrpus is duwbpus and lirrpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 1 个节点
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 32: duwbpus is rosnpus
      ↻ 重复节点，计数: 3

   节点 33: rosnpus is babgpus
      ↻ 重复节点，计数: 3

   节点 34: x is babgpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is babgpus
[子树点亮]     └─ 点亮依赖节点: x is babgpus and bocfpus (深度2)
[子树点亮]     └─ 点亮依赖节点: giqrpus is babgpus and bocfpus (深度3)
[子树点亮]     └─ 点亮依赖节点: giqrpus is babgpus and bocfpus and vaqgpus (深度4)
[子树点亮]     └─ 点亮依赖节点: duwbpus is babgpus and bocfpus and vaqgpus (深度5)
[子树点亮]     └─ 点亮依赖节点: duwbpus is babgpus (深度6)
[子树点亮]     └─ 点亮依赖节点: duwbpus is bocfpus and vaqgpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 6 个节点
      ✅ 验证成功 + LoG匹配

   节点 35: x is babgpus
      ↻ 重复节点，计数: 2

   节点 36: x is gexgpus
      ↻ 重复节点，计数: 5

   节点 37: gexgpus is pihcpus
      ↻ 重复节点，计数: 5

   节点 38: pihcpus is fapwpus
      ↻ 重复节点，计数: 4

   节点 39: x is fapwpus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 40: fapwpus is zorkpus
      ↻ 重复节点，计数: 4

   节点 41: zorkpus is difypus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: zorkpus is difypus and vozmpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: zorkpus is difypus and vozmpus

   节点 42: x is difypus and vozmpus
      ↻ 重复节点，计数: 2

   节点 43: difypus is niblpus
      ↻ 重复节点，计数: 4

   节点 44: x is niblpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is gexgpus → gexgpus is niblpus
[后处理] 基于推理轨迹点亮节点，使用了 6 个前提条件:
  - 前提: x is gexgpus
  - 前提: gexgpus is pihcpus
  - 前提: pihcpus is fapwpus
  - 前提: fapwpus is zorkpus
  - 前提: zorkpus is difypus
  - 前提: difypus is niblpus

   节点 45: niblpus is xoghpus
      ↻ 重复节点，计数: 4

   节点 46: x is xoghpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is gexgpus → gexgpus is xoghpus
[后处理] 基于推理轨迹点亮节点，使用了 7 个前提条件:
  - 前提: x is gexgpus
  - 前提: gexgpus is pihcpus
  - 前提: pihcpus is fapwpus
  - 前提: fapwpus is zorkpus
  - 前提: zorkpus is difypus
  - 前提: difypus is niblpus
  - 前提: niblpus is xoghpus

   节点 47: xoghpus is giqrpus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 48: x is giqrpus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 49: x is goxwpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: x is giqrpus and goxwpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: x is giqrpus and goxwpus

   节点 50: giqrpus is kiwcpus
      ↻ 重复节点，计数: 4

   节点 51: kiwcpus is duwbpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: kiwcpus is duwbpus and lirrpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: kiwcpus is duwbpus and lirrpus

   节点 52: x is duwbpus and lirrpus
      ↻ 重复节点，计数: 2

   节点 53: duwbpus is rosnpus
      ↻ 重复节点，计数: 4

   节点 54: rosnpus is babgpus
      ↻ 重复节点，计数: 4

   节点 55: x is babgpus
      ↻ 重复节点，计数: 3

   节点 56: x is babgpus
      ↻ 重复节点，计数: 4

   节点 57: duwbpus is bocfpus and vaqgpus and kahvpus
      ↻ 重复节点，计数: 3

   节点 58: kiwcpus is duwbpus and lirrpus
      ↻ 重复节点，计数: 4

   节点 59: kiwcpus is duwbpus
      ↻ 重复节点，计数: 2

   节点 60: x is duwbpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: x is duwbpus and lirrpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: x is duwbpus and lirrpus

   节点 61: duwbpus is rosnpus
      ↻ 重复节点，计数: 5

   节点 62: rosnpus is babgpus
      ↻ 重复节点，计数: 5

   节点 63: x is babgpus
      ↻ 重复节点，计数: 5

🔍 分析推理路径完整性...

============================================================
[后处理] 处理完成
============================================================
📈 处理统计:
   - 处理的actual节点: 63
   - 新增节点: 14
   - 更新已存在节点: 49
   - 点亮的LoG节点: 20

🎯 推理质量统计:
   - 完美推理: 14 (节点正确 + 路径正确)
   - 部分推理: 0 (节点正确 + 路径部分错误)
   - 无效推理: 0 (节点错误或路径完全错误)
[LoG分析] LoG图: 20节点, 14前提, 复杂度1-14

📊 === Statement列表分析 ===
📈 节点统计:
   - 总节点数: 28
   - 前提节点: 14
   - 推理节点: 14
   - 幻觉节点: 0
   - 点亮LoG节点: 20

✅ 推理节点详情:
   🟢 x is pihcpus (出现1次, 质量:perfect)
   🟢 x is difypus and vozmpus (出现2次, 质量:perfect)
   🟢 x is giqrpus and goxwpus (出现1次, 质量:perfect)
   🟢 x is duwbpus and lirrpus (出现2次, 质量:perfect)
   🟢 x is babgpus (出现5次, 质量:perfect)
   🟢 x is fapwpus (出现1次, 质量:perfect)
   🟢 zorkpus is difypus (出现1次, 质量:perfect)
   🟢 x is niblpus (出现1次, 质量:perfect)
   🟢 x is xoghpus (出现1次, 质量:perfect)
   🟢 xoghpus is giqrpus (出现1次, 质量:perfect)
   🟢 x is giqrpus (出现1次, 质量:perfect)
   🟢 x is goxwpus (出现1次, 质量:perfect)
   🟢 kiwcpus is duwbpus (出现2次, 质量:perfect)
   🟢 x is duwbpus (出现1次, 质量:perfect)

🔥 点亮的LoG节点:
   - x is babgpus and bocfpus
   - giqrpus is duwbpus
   - duwbpus is babgpus and bocfpus and vaqgpus
   - difypus is giqrpus
   - difypus is xoghpus
   - x is fapwpus
   - x is babgpus
   - fapwpus is difypus and vozmpus
   - pihcpus is fapwpus and taxvpus
   - duwbpus is bocfpus and vaqgpus
   - giqrpus is babgpus and bocfpus
   - giqrpus is duwbpus and lirrpus
   - duwbpus is babgpus
   - fapwpus is giqrpus
   - x is pihcpus
   - xoghpus is giqrpus
   - x is fapwpus and taxvpus
   - fapwpus is difypus
   - giqrpus is babgpus and bocfpus and vaqgpus
   - x is giqrpus

============================================================
📊 计算评估指标
============================================================

🎯 计算Coverage指标...
   深度Coverage: 6/6 = 100.00%
   最深点亮节点: x is babgpus (第6层)
   节点Coverage: 20/20 = 100.00%
   前提条件Coverage: 14/14 = 100.00%
   各推理层点亮比例:
     第1层: 8/8 = 100.00%
     第2层: 5/5 = 100.00%
     第3层: 3/3 = 100.00%
     第4层: 2/2 = 100.00%
     第5层: 1/1 = 100.00%
     第6层: 1/1 = 100.00%

🎯 计算Precision指标...
   Error Rate: 0/14 = 0.00%
   可推导节点: 14/14
   Strict Error Rate: 0/14 = 0.00%
   严格有效节点: 14/14

   详细分析:
     完美推理: 14 (100.00%)
     部分推理: 0 (0.00%)
     无效推理: 0 (0.00%)

================================================================================
处理记录 19/50
================================================================================
记录索引: 18
问题状态: correct
📁 从缓存加载提取结果: evaluation_results.LoG_6.deepseek-reasoner_record_18.json
✅ 使用缓存结果:
   - 句子数: 83
   - 提取的语句数: 102
   - 初始条件数: 22

=== Statement提取完成 ===
总句子数: 83
成功提取: 83
失败提取: 0
总statements数: 102

=== 开始清洗Statement格式 ===
原始statements数: 102
清洗后statements数: 74
过滤掉的statements数: 28
清洗后的statements:
  1. [planning] x is babgpus
  2. [planning] x is babrpus
  3. [actual] jagtpus is zucxpus
  4. [actual] dancpus is vezypus
  5. [actual] dihnpus is mazvpus
  6. [actual] gofkpus is hakdpus
  7. [actual] yurppus is fegfpus
  8. [actual] zucxpus is winhpus and fajfpus
  9. [actual] winhpus is cuygpus
  10. [actual] hoxjpus is dancpus and zejlpus
  11. [actual] buhppus is pigcpus and wiknpus
  12. [actual] fegfpus is jagtpus and fiyjpus and vidkpus
  13. [actual] gehlpus is yurppus and cufypus
  14. [actual] gofkpus is babrpus
  15. [actual] pigcpus is gengpus
  16. [actual] vezypus is tekvpus and lowcpus
  17. [actual] mazvpus is pikhpus
  18. [actual] x is gehlpus and haczpus
  19. [actual] pikhpus is davjpus and yoklpus
  20. [actual] bijzpus is dihnpus
  21. [actual] cuygpus is buhppus
  22. [actual] davjpus is hoxjpus
  23. [actual] tekvpus is gofkpus and juvrpus
  24. [actual] gengpus is bijzpus
  25. [planning] x is babgpus
  26. [planning] x is babrpus
  27. [actual] gofkpus is babrpus
  28. [planning] x is babrpus
  29. [planning] x is babgpus
  30. [planning] x is babrpus
  31. [planning] x is babgpus
  32. [planning] x is babrpus
  33. [actual] x is gehlpus and haczpus
  34. [actual] x is gehlpus and haczpus
  35. [planning] x is babrpus
  36. [actual] gofkpus is babrpus
  37. [planning] x is gofkpus
  38. [planning] x is babrpus
  39. [planning] x is babrpus
  40. [actual] x is gehlpus
  41. [actual] x is gehlpus and haczpus
  42. [actual] gehlpus is yurppus and cufypus
  43. [actual] yurppus is fegfpus
  44. [actual] fegfpus is jagtpus and fiyjpus and vidkpus
  45. [actual] jagtpus is zucxpus
  46. [actual] zucxpus is winhpus and fajfpus
  47. [actual] winhpus is cuygpus
  48. [actual] cuygpus is buhppus
  49. [actual] buhppus is pigcpus and wiknpus
  50. [actual] pigcpus is gengpus
  51. [actual] gengpus is bijzpus
  52. [actual] bijzpus is dihnpus
  53. [actual] dihnpus is mazvpus
  54. [actual] mazvpus is pikhpus
  55. [actual] pikhpus is davjpus and yoklpus
  56. [actual] davjpus is hoxjpus
  57. [actual] hoxjpus is dancpus and zejlpus
  58. [actual] dancpus is vezypus
  59. [actual] vezypus is tekvpus and lowcpus
  60. [actual] tekvpus is gofkpus and juvrpus
  61. [actual] gofkpus is babrpus
  62. [actual] gehlpus is babrpus
  63. [actual] x is gehlpus
  64. [actual] x is babrpus
  65. [planning] x is babgpus
  66. [planning] x is babrpus
  67. [actual] x is babrpus
  68. [planning] x is babgpus or babrpus
  69. [actual] x is babrpus
  70. [actual] x is gehlpus and haczpus
  71. [actual] x is gehlpus
  72. [actual] gehlpus is babrpus
  73. [actual] x is babrpus
  74. [actual] x is babrpus

=== 开始标准化和解析节点 ===
清洗后statements数: 74
标准化后节点数: 74
过滤掉的无效实体数: 0
标准化后的节点:
  1. [planning] x → babgpus (原始: x is babgpus)
  2. [planning] x → babrpus (原始: x is babrpus)
  3. [actual] jagtpus → zucxpus (原始: jagtpus is zucxpus)
  4. [actual] dancpus → vezypus (原始: dancpus is vezypus)
  5. [actual] dihnpus → mazvpus (原始: dihnpus is mazvpus)
  6. [actual] gofkpus → hakdpus (原始: gofkpus is hakdpus)
  7. [actual] yurppus → fegfpus (原始: yurppus is fegfpus)
  8. [actual] zucxpus → winhpus and fajfpus (原始: zucxpus is winhpus and fajfpus)
  9. [actual] winhpus → cuygpus (原始: winhpus is cuygpus)
  10. [actual] hoxjpus → dancpus and zejlpus (原始: hoxjpus is dancpus and zejlpus)
  11. [actual] buhppus → pigcpus and wiknpus (原始: buhppus is pigcpus and wiknpus)
  12. [actual] fegfpus → jagtpus and fiyjpus and vidkpus (原始: fegfpus is jagtpus and fiyjpus and vidkpus)
  13. [actual] gehlpus → yurppus and cufypus (原始: gehlpus is yurppus and cufypus)
  14. [actual] gofkpus → babrpus (原始: gofkpus is babrpus)
  15. [actual] pigcpus → gengpus (原始: pigcpus is gengpus)
  16. [actual] vezypus → tekvpus and lowcpus (原始: vezypus is tekvpus and lowcpus)
  17. [actual] mazvpus → pikhpus (原始: mazvpus is pikhpus)
  18. [actual] x → gehlpus and haczpus (原始: x is gehlpus and haczpus)
  19. [actual] pikhpus → davjpus and yoklpus (原始: pikhpus is davjpus and yoklpus)
  20. [actual] bijzpus → dihnpus (原始: bijzpus is dihnpus)
  21. [actual] cuygpus → buhppus (原始: cuygpus is buhppus)
  22. [actual] davjpus → hoxjpus (原始: davjpus is hoxjpus)
  23. [actual] tekvpus → gofkpus and juvrpus (原始: tekvpus is gofkpus and juvrpus)
  24. [actual] gengpus → bijzpus (原始: gengpus is bijzpus)
  25. [planning] x → babgpus (原始: x is babgpus)
  26. [planning] x → babrpus (原始: x is babrpus)
  27. [actual] gofkpus → babrpus (原始: gofkpus is babrpus)
  28. [planning] x → babrpus (原始: x is babrpus)
  29. [planning] x → babgpus (原始: x is babgpus)
  30. [planning] x → babrpus (原始: x is babrpus)
  31. [planning] x → babgpus (原始: x is babgpus)
  32. [planning] x → babrpus (原始: x is babrpus)
  33. [actual] x → gehlpus and haczpus (原始: x is gehlpus and haczpus)
  34. [actual] x → gehlpus and haczpus (原始: x is gehlpus and haczpus)
  35. [planning] x → babrpus (原始: x is babrpus)
  36. [actual] gofkpus → babrpus (原始: gofkpus is babrpus)
  37. [planning] x → gofkpus (原始: x is gofkpus)
  38. [planning] x → babrpus (原始: x is babrpus)
  39. [planning] x → babrpus (原始: x is babrpus)
  40. [actual] x → gehlpus (原始: x is gehlpus)
  41. [actual] x → gehlpus and haczpus (原始: x is gehlpus and haczpus)
  42. [actual] gehlpus → yurppus and cufypus (原始: gehlpus is yurppus and cufypus)
  43. [actual] yurppus → fegfpus (原始: yurppus is fegfpus)
  44. [actual] fegfpus → jagtpus and fiyjpus and vidkpus (原始: fegfpus is jagtpus and fiyjpus and vidkpus)
  45. [actual] jagtpus → zucxpus (原始: jagtpus is zucxpus)
  46. [actual] zucxpus → winhpus and fajfpus (原始: zucxpus is winhpus and fajfpus)
  47. [actual] winhpus → cuygpus (原始: winhpus is cuygpus)
  48. [actual] cuygpus → buhppus (原始: cuygpus is buhppus)
  49. [actual] buhppus → pigcpus and wiknpus (原始: buhppus is pigcpus and wiknpus)
  50. [actual] pigcpus → gengpus (原始: pigcpus is gengpus)
  51. [actual] gengpus → bijzpus (原始: gengpus is bijzpus)
  52. [actual] bijzpus → dihnpus (原始: bijzpus is dihnpus)
  53. [actual] dihnpus → mazvpus (原始: dihnpus is mazvpus)
  54. [actual] mazvpus → pikhpus (原始: mazvpus is pikhpus)
  55. [actual] pikhpus → davjpus and yoklpus (原始: pikhpus is davjpus and yoklpus)
  56. [actual] davjpus → hoxjpus (原始: davjpus is hoxjpus)
  57. [actual] hoxjpus → dancpus and zejlpus (原始: hoxjpus is dancpus and zejlpus)
  58. [actual] dancpus → vezypus (原始: dancpus is vezypus)
  59. [actual] vezypus → tekvpus and lowcpus (原始: vezypus is tekvpus and lowcpus)
  60. [actual] tekvpus → gofkpus and juvrpus (原始: tekvpus is gofkpus and juvrpus)
  61. [actual] gofkpus → babrpus (原始: gofkpus is babrpus)
  62. [actual] gehlpus → babrpus (原始: gehlpus is babrpus)
  63. [actual] x → gehlpus (原始: x is gehlpus)
  64. [actual] x → babrpus (原始: x is babrpus)
  65. [planning] x → babgpus (原始: x is babgpus)
  66. [planning] x → babrpus (原始: x is babrpus)
  67. [actual] x → babrpus (原始: x is babrpus)
  68. [planning] x → babgpus or babrpus (原始: x is babgpus or babrpus)
  69. [actual] x → babrpus (原始: x is babrpus)
  70. [actual] x → gehlpus and haczpus (原始: x is gehlpus and haczpus)
  71. [actual] x → gehlpus (原始: x is gehlpus)
  72. [actual] gehlpus → babrpus (原始: gehlpus is babrpus)
  73. [actual] x → babrpus (原始: x is babrpus)
  74. [actual] x → babrpus (原始: x is babrpus)

开始新的后处理...
[后处理] 从LoG数据文件中获取到图数据，节点数: 33
[后处理] 加载LoG图，包含 33 个节点
  LoG节点 0: x is babgpus or babrpus (规则: MP, 深度: 1)
  LoG节点 1: x is davjpus (规则: MP, 深度: 2)
  LoG节点 2: davjpus is babgpus or babrpus (规则: DI, 深度: 2)
  LoG节点 3: x is jagtpus (规则: CE, 深度: 3)
  LoG节点 4: jagtpus is davjpus (规则: MP, 深度: 3)
  LoG节点 5: davjpus is babrpus (规则: MP, 深度: 3)
  LoG节点 6: x is jagtpus and fiyjpus (规则: MP, 深度: 4)
  LoG节点 7: jagtpus is pigcpus (规则: MP, 深度: 4)
  LoG节点 8: pigcpus is davjpus (规则: MP, 深度: 4)
  LoG节点 9: davjpus is tekvpus (规则: MP, 深度: 4)
  LoG节点 10: tekvpus is babrpus (规则: CE, 深度: 4)
  LoG节点 11: x is yurppus (规则: MP, 深度: 5)
  LoG节点 12: yurppus is jagtpus and fiyjpus (规则: CE, 深度: 5)
  LoG节点 13: jagtpus is winhpus (规则: CE, 深度: 5)
  LoG节点 14: winhpus is pigcpus (规则: MP, 深度: 5)
  LoG节点 15: pigcpus is mazvpus (规则: MP, 深度: 5)
  LoG节点 16: mazvpus is davjpus (规则: CE, 深度: 5)
  LoG节点 17: davjpus is dancpus (规则: CE, 深度: 5)
  LoG节点 18: dancpus is tekvpus (规则: CE, 深度: 5)
  LoG节点 19: tekvpus is babrpus and hakdpus (规则: MP, 深度: 5)
  LoG节点 20: x is gehlpus (规则: CE, 深度: 6)
  LoG节点 21: gehlpus is yurppus (规则: CE, 深度: 6)
  LoG节点 22: yurppus is jagtpus and fiyjpus and vidkpus (规则: MP, 深度: 6)
  LoG节点 23: jagtpus is winhpus and fajfpus (规则: MP, 深度: 6)
  LoG节点 24: winhpus is buhppus (规则: MP, 深度: 6)
  LoG节点 25: buhppus is pigcpus (规则: CE, 深度: 6)
  LoG节点 26: pigcpus is bijzpus (规则: MP, 深度: 6)
  LoG节点 27: bijzpus is mazvpus (规则: MP, 深度: 6)
  LoG节点 28: mazvpus is davjpus and yoklpus (规则: MP, 深度: 6)
  LoG节点 29: davjpus is dancpus and zejlpus (规则: MP, 深度: 6)
  LoG节点 30: dancpus is tekvpus and lowcpus (规则: MP, 深度: 6)
  LoG节点 31: tekvpus is gofkpus (规则: CE, 深度: 6)
  LoG节点 32: gofkpus is babrpus and hakdpus (规则: CI, 深度: 6)

============================================================
[后处理] 开始处理节点
============================================================
📊 初始状态:
   - 标准化节点数: 74
   - 初始条件数: 22
   - LoG图节点数: 33

📋 初始条件列表:
    1. jagtpus is zucxpus
    2. dancpus is vezypus
    3. dihnpus is mazvpus
    4. gofkpus is hakdpus
    5. yurppus is fegfpus
    6. zucxpus is winhpus and fajfpus
    7. winhpus is cuygpus
    8. hoxjpus is dancpus and zejlpus
    9. buhppus is pigcpus and wiknpus
   10. fegfpus is jagtpus and fiyjpus and vidkpus
   11. gehlpus is yurppus and cufypus
   12. gofkpus is babrpus
   13. pigcpus is gengpus
   14. vezypus is tekvpus and lowcpus
   15. mazvpus is pikhpus
   16. x is gehlpus and haczpus
   17. pikhpus is davjpus and yoklpus
   18. bijzpus is dihnpus
   19. cuygpus is buhppus
   20. davjpus is hoxjpus
   21. tekvpus is gofkpus and juvrpus
   22. gengpus is bijzpus

🔧 构建初始Statement列表...
✅ 初始Statement列表构建完成，包含 22 个前提节点

🔍 开始处理actual节点...

   节点 1: jagtpus is zucxpus
      ↻ 重复节点，计数: 2

   节点 2: dancpus is vezypus
      ↻ 重复节点，计数: 2

   节点 3: dihnpus is mazvpus
      ↻ 重复节点，计数: 2

   节点 4: gofkpus is hakdpus
      ↻ 重复节点，计数: 2

   节点 5: yurppus is fegfpus
      ↻ 重复节点，计数: 2

   节点 6: zucxpus is winhpus and fajfpus
      ↻ 重复节点，计数: 2

   节点 7: winhpus is cuygpus
      ↻ 重复节点，计数: 2

   节点 8: hoxjpus is dancpus and zejlpus
      ↻ 重复节点，计数: 2

   节点 9: buhppus is pigcpus and wiknpus
      ↻ 重复节点，计数: 2

   节点 10: fegfpus is jagtpus and fiyjpus and vidkpus
      ↻ 重复节点，计数: 2

   节点 11: gehlpus is yurppus and cufypus
      ↻ 重复节点，计数: 2

   节点 12: gofkpus is babrpus
      ↻ 重复节点，计数: 2

   节点 13: pigcpus is gengpus
      ↻ 重复节点，计数: 2

   节点 14: vezypus is tekvpus and lowcpus
      ↻ 重复节点，计数: 2

   节点 15: mazvpus is pikhpus
      ↻ 重复节点，计数: 2

   节点 16: x is gehlpus and haczpus
      ↻ 重复节点，计数: 2

   节点 17: pikhpus is davjpus and yoklpus
      ↻ 重复节点，计数: 2

   节点 18: bijzpus is dihnpus
      ↻ 重复节点，计数: 2

   节点 19: cuygpus is buhppus
      ↻ 重复节点，计数: 2

   节点 20: davjpus is hoxjpus
      ↻ 重复节点，计数: 2

   节点 21: tekvpus is gofkpus and juvrpus
      ↻ 重复节点，计数: 2

   节点 22: gengpus is bijzpus
      ↻ 重复节点，计数: 2

   节点 23: gofkpus is babrpus
      ↻ 重复节点，计数: 3

   节点 24: x is gehlpus and haczpus
      ↻ 重复节点，计数: 3

   节点 25: x is gehlpus and haczpus
      ↻ 重复节点，计数: 4

   节点 26: gofkpus is babrpus
      ↻ 重复节点，计数: 4

   节点 27: x is gehlpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is gehlpus
      ✅ 验证成功 + LoG匹配

   节点 28: x is gehlpus and haczpus
      ↻ 重复节点，计数: 5

   节点 29: gehlpus is yurppus and cufypus
      ↻ 重复节点，计数: 3

   节点 30: yurppus is fegfpus
      ↻ 重复节点，计数: 3

   节点 31: fegfpus is jagtpus and fiyjpus and vidkpus
      ↻ 重复节点，计数: 3

   节点 32: jagtpus is zucxpus
      ↻ 重复节点，计数: 3

   节点 33: zucxpus is winhpus and fajfpus
      ↻ 重复节点，计数: 3

   节点 34: winhpus is cuygpus
      ↻ 重复节点，计数: 3

   节点 35: cuygpus is buhppus
      ↻ 重复节点，计数: 3

   节点 36: buhppus is pigcpus and wiknpus
      ↻ 重复节点，计数: 3

   节点 37: pigcpus is gengpus
      ↻ 重复节点，计数: 3

   节点 38: gengpus is bijzpus
      ↻ 重复节点，计数: 3

   节点 39: bijzpus is dihnpus
      ↻ 重复节点，计数: 3

   节点 40: dihnpus is mazvpus
      ↻ 重复节点，计数: 3

   节点 41: mazvpus is pikhpus
      ↻ 重复节点，计数: 3

   节点 42: pikhpus is davjpus and yoklpus
      ↻ 重复节点，计数: 3

   节点 43: davjpus is hoxjpus
      ↻ 重复节点，计数: 3

   节点 44: hoxjpus is dancpus and zejlpus
      ↻ 重复节点，计数: 3

   节点 45: dancpus is vezypus
      ↻ 重复节点，计数: 3

   节点 46: vezypus is tekvpus and lowcpus
      ↻ 重复节点，计数: 3

   节点 47: tekvpus is gofkpus and juvrpus
      ↻ 重复节点，计数: 3

   节点 48: gofkpus is babrpus
      ↻ 重复节点，计数: 5

   节点 49: gehlpus is babrpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP+CE
      📋 推理路径: MP+CE规则: gehlpus is yurppus → yurppus is babrpus
[后处理] 基于推理轨迹点亮节点，使用了 20 个前提条件:
  - 前提: gehlpus is yurppus and cufypus
  - 前提: yurppus is fegfpus
  - 前提: fegfpus is jagtpus and fiyjpus and vidkpus
  - 前提: jagtpus is zucxpus
  - 前提: zucxpus is winhpus and fajfpus
  - 前提: winhpus is cuygpus
  - 前提: cuygpus is buhppus
  - 前提: buhppus is pigcpus and wiknpus
  - 前提: pigcpus is gengpus
  - 前提: gengpus is bijzpus
  - 前提: bijzpus is dihnpus
  - 前提: dihnpus is mazvpus
  - 前提: mazvpus is pikhpus
  - 前提: pikhpus is davjpus and yoklpus
  - 前提: davjpus is hoxjpus
  - 前提: hoxjpus is dancpus and zejlpus
  - 前提: dancpus is vezypus
  - 前提: vezypus is tekvpus and lowcpus
  - 前提: tekvpus is gofkpus and juvrpus
  - 前提: gofkpus is babrpus
  ✓ 点亮LoG节点: davjpus is babgpus or babrpus
[子树点亮]     └─ 点亮依赖节点: davjpus is babrpus (深度3)
[子树点亮]     └─ 点亮依赖节点: davjpus is tekvpus (深度4)
[子树点亮]     └─ 点亮依赖节点: tekvpus is babrpus (深度4)
[子树点亮]     └─ 点亮依赖节点: davjpus is dancpus (深度5)
[子树点亮]     └─ 点亮依赖节点: dancpus is tekvpus (深度5)
[子树点亮]     └─ 点亮依赖节点: tekvpus is babrpus and hakdpus (深度5)
[子树点亮]     └─ 点亮依赖节点: davjpus is dancpus and zejlpus (深度6)
[子树点亮]     └─ 点亮依赖节点: dancpus is tekvpus and lowcpus (深度6)
[子树点亮]     └─ 点亮依赖节点: tekvpus is gofkpus (深度6)
[子树点亮]     └─ 点亮依赖节点: gofkpus is babrpus and hakdpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 10 个节点
  ✓ 点亮LoG节点: jagtpus is davjpus
[子树点亮]     └─ 点亮依赖节点: jagtpus is pigcpus (深度4)
[子树点亮]     └─ 点亮依赖节点: pigcpus is davjpus (深度4)
[子树点亮]     └─ 点亮依赖节点: jagtpus is winhpus (深度5)
[子树点亮]     └─ 点亮依赖节点: winhpus is pigcpus (深度5)
[子树点亮]     └─ 点亮依赖节点: pigcpus is mazvpus (深度5)
[子树点亮]     └─ 点亮依赖节点: mazvpus is davjpus (深度5)
[子树点亮]     └─ 点亮依赖节点: jagtpus is winhpus and fajfpus (深度6)
[子树点亮]     └─ 点亮依赖节点: winhpus is buhppus (深度6)
[子树点亮]     └─ 点亮依赖节点: buhppus is pigcpus (深度6)
[子树点亮]     └─ 点亮依赖节点: pigcpus is bijzpus (深度6)
[子树点亮]     └─ 点亮依赖节点: bijzpus is mazvpus (深度6)
[子树点亮]     └─ 点亮依赖节点: mazvpus is davjpus and yoklpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 12 个节点
  ✓ 点亮LoG节点: yurppus is jagtpus and fiyjpus
[子树点亮]     └─ 点亮依赖节点: yurppus is jagtpus and fiyjpus and vidkpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 1 个节点
  ✓ 点亮LoG节点: gehlpus is yurppus
[后处理] 通过推理轨迹额外点亮了 4 个LoG节点

   节点 50: x is gehlpus
      ↻ 重复节点，计数: 2

   节点 51: x is babrpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is gehlpus → gehlpus is babrpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: x is gehlpus
  - 前提: gehlpus is babrpus
  ✓ 点亮LoG节点: x is babgpus or babrpus
[子树点亮]     └─ 点亮依赖节点: x is davjpus (深度2)
[子树点亮]     └─ 点亮依赖节点: x is jagtpus (深度3)
[子树点亮]     └─ 点亮依赖节点: x is jagtpus and fiyjpus (深度4)
[子树点亮]     └─ 点亮依赖节点: x is yurppus (深度5)
[后处理]   └─ 自动点亮依赖子树: 4 个节点
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 52: x is babrpus
      ↻ 重复节点，计数: 2

   节点 53: x is babrpus
      ↻ 重复节点，计数: 3

   节点 54: x is gehlpus and haczpus
      ↻ 重复节点，计数: 6

   节点 55: x is gehlpus
      ↻ 重复节点，计数: 3

   节点 56: gehlpus is babrpus
      ↻ 重复节点，计数: 2

   节点 57: x is babrpus
      ↻ 重复节点，计数: 4

   节点 58: x is babrpus
      ↻ 重复节点，计数: 5

🔍 分析推理路径完整性...

============================================================
[后处理] 处理完成
============================================================
📈 处理统计:
   - 处理的actual节点: 58
   - 新增节点: 3
   - 更新已存在节点: 55
   - 点亮的LoG节点: 33

🎯 推理质量统计:
   - 完美推理: 3 (节点正确 + 路径正确)
   - 部分推理: 0 (节点正确 + 路径部分错误)
   - 无效推理: 0 (节点错误或路径完全错误)
[LoG分析] LoG图: 33节点, 22前提, 复杂度1-22

📊 === Statement列表分析 ===
📈 节点统计:
   - 总节点数: 25
   - 前提节点: 22
   - 推理节点: 3
   - 幻觉节点: 0
   - 点亮LoG节点: 33

✅ 推理节点详情:
   🟢 x is gehlpus (出现3次, 质量:perfect)
   🟢 gehlpus is babrpus (出现2次, 质量:perfect)
   🟢 x is babrpus (出现5次, 质量:perfect)

🔥 点亮的LoG节点:
   - mazvpus is davjpus
   - jagtpus is pigcpus
   - winhpus is buhppus
   - x is jagtpus
   - dancpus is tekvpus and lowcpus
   - jagtpus is winhpus
   - pigcpus is davjpus
   - x is jagtpus and fiyjpus
   - x is davjpus
   - gofkpus is babrpus and hakdpus
   - winhpus is pigcpus
   - yurppus is jagtpus and fiyjpus and vidkpus
   - bijzpus is mazvpus
   - davjpus is tekvpus
   - dancpus is tekvpus
   - pigcpus is mazvpus
   - x is babgpus or babrpus
   - x is yurppus
   - jagtpus is davjpus
   - mazvpus is davjpus and yoklpus
   - yurppus is jagtpus and fiyjpus
   - pigcpus is bijzpus
   - jagtpus is winhpus and fajfpus
   - gehlpus is yurppus
   - davjpus is dancpus and zejlpus
   - davjpus is babgpus or babrpus
   - buhppus is pigcpus
   - davjpus is dancpus
   - tekvpus is gofkpus
   - tekvpus is babrpus and hakdpus
   - davjpus is babrpus
   - x is gehlpus
   - tekvpus is babrpus

============================================================
📊 计算评估指标
============================================================

🎯 计算Coverage指标...
   深度Coverage: 6/6 = 100.00%
   最深点亮节点: x is babgpus or babrpus (第6层)
   节点Coverage: 33/33 = 100.00%
   前提条件Coverage: 22/22 = 100.00%
   各推理层点亮比例:
     第1层: 13/13 = 100.00%
     第2层: 9/9 = 100.00%
     第3层: 5/5 = 100.00%
     第4层: 3/3 = 100.00%
     第5层: 2/2 = 100.00%
     第6层: 1/1 = 100.00%

🎯 计算Precision指标...
   Error Rate: 0/3 = 0.00%
   可推导节点: 3/3
   Strict Error Rate: 0/3 = 0.00%
   严格有效节点: 3/3

   详细分析:
     完美推理: 3 (100.00%)
     部分推理: 0 (0.00%)
     无效推理: 0 (0.00%)

================================================================================
处理记录 20/50
================================================================================
记录索引: 19
问题状态: correct
📁 从缓存加载提取结果: evaluation_results.LoG_6.deepseek-reasoner_record_19.json
✅ 使用缓存结果:
   - 句子数: 199
   - 提取的语句数: 204
   - 初始条件数: 31

=== Statement提取完成 ===
总句子数: 199
成功提取: 199
失败提取: 0
总statements数: 204

=== 开始清洗Statement格式 ===
原始statements数: 204
清洗后statements数: 194
过滤掉的statements数: 10
清洗后的statements:
  1. [planning] x is babgpus
  2. [planning] x is babrpus
  3. [planning] x is babspus
  4. [planning] x is babgpus
  5. [planning] x is babrpus
  6. [planning] x is babspus
  7. [actual] x is zohgpus
  8. [actual] x is zohgpus
  9. [actual] x is zohgpus
  10. [actual] zohgpus is kobvpus and nehgpus
  11. [actual] zohgpus is kobvpus and nehgpus
  12. [planning] zohgpus is a subset of both kobvpus and nehgpus
  13. [planning] zohgpus is a member of both kobvpus and nehgpus
  14. [planning] x is babgpus
  15. [planning] x is the others
  16. [actual] seljpus is jefypus
  17. [actual] lucypus is jutdpus and lurmpus
  18. [actual] kizcpus is lahkpus
  19. [actual] yabmpus is babgpus and luzrpus
  20. [actual] kokxpus is yabmpus
  21. [actual] kenzpus is kizcpus and katfpus
  22. [actual] kadkpus is bagqpus
  23. [actual] maplpus is sasqpus and reqypus
  24. [actual] zahbpus is hatkpus
  25. [actual] zohgpus is kobvpus and nehgpus
  26. [actual] jefypus is kadkpus and dacxpus
  27. [actual] tujbpus is gitfpus and mujvpus
  28. [actual] vexnpus is lucypus
  29. [actual] hatkpus is metqpus
  30. [actual] jutdpus is zahbpus
  31. [actual] xunjpus is vexnpus
  32. [actual] yarkpus is forwpus
  33. [actual] lahkpus is seljpus
  34. [actual] rezspus is xunjpus and gajkpus
  35. [actual] qibbpus is kenzpus and nekwpus
  36. [actual] vijwpus is kokxpus
  37. [actual] sasqpus is tujbpus
  38. [actual] raygpus is maplpus
  39. [actual] kamkpus is vijwpus and jusdpus
  40. [actual] metqpus is kamkpus
  41. [actual] x is zohgpus
  42. [actual] forwpus is qibbpus
  43. [actual] bagqpus is lehnpus
  44. [actual] lehnpus is rezspus
  45. [actual] kobvpus is raygpus and wusjpus
  46. [actual] gitfpus is yarkpus
  47. [actual] yabmpus is babgpus
  48. [actual] luzrpus is babgpus
  49. [planning] x is babgpus
  50. [actual] x is zohgpus
  51. [actual] x is zohgpus
  52. [actual] zohgpus is kobvpus and nehgpus
  53. [actual] x is kobvpus and nehgpus
  54. [actual] kobvpus is raygpus and wusjpus
  55. [actual] kobvpus is raygpus and wusjpus
  56. [actual] x is zohgpus
  57. [actual] zohgpus is kobvpus
  58. [actual] x is kobvpus
  59. [planning] x is raygpus
  60. [planning] x is wusjpus
  61. [actual] raygpus is maplpus
  62. [actual] raygpus is maplpus
  63. [actual] x is maplpus through raygpus
  64. [actual] maplpus is sasqpus and reqypus
  65. [actual] maplpus is sasqpus and reqypus
  66. [actual] sasqpus is tujbpus
  67. [actual] sasqpus is tujbpus
  68. [actual] tujbpus is gitfpus and mujvpus
  69. [actual] tujbpus is gitfpus and mujvpus
  70. [actual] gitfpus is yarkpus
  71. [actual] gitfpus is yarkpus
  72. [actual] yarkpus is forwpus
  73. [actual] yarkpus is forwpus
  74. [actual] forwpus is qibbpus
  75. [actual] forwpus is qibbpus
  76. [actual] qibbpus is kenzpus and nekwpus
  77. [actual] qibbpus is kenzpus and nekwpus
  78. [actual] kenzpus is kizcpus and katfpus
  79. [actual] kenzpus is kizcpus and katfpus
  80. [actual] kizcpus is lahkpus
  81. [actual] kizcpus is lahkpus
  82. [actual] lahkpus is seljpus
  83. [actual] lakhpus is seljpus
  84. [actual] seljpus is jefypus
  85. [actual] seljpus is jefypus
  86. [actual] jefypus is kadkpus and dacxpus
  87. [actual] jefypus is kadkpus and dacxpus
  88. [actual] kadkpus is bagqpus
  89. [actual] kadkpus is bagqpus
  90. [actual] bagqpus is lehnpus
  91. [actual] bagqpus is lehnpus
  92. [actual] lehnpus is rezspus
  93. [actual] lehnpus is rezspus
  94. [actual] rezspus is xunjpus and gajkpus
  95. [actual] rezspus is xunjpus and gajkpus
  96. [actual] xunjpus is vexnpus
  97. [actual] xunjpus is vexnpus
  98. [actual] vexnpus is lucypus
  99. [actual] vexnpus is lucypus
  100. [actual] lucypus is jutdpus and lurmpus
  101. [actual] lucypus is jutdpus and lurmpus
  102. [actual] jutdpus is zahbpus
  103. [actual] jutdpus is zahbpus
  104. [actual] zahbpus is hatkpus
  105. [actual] zahbpus is hatkpus
  106. [actual] hatkpus is metqpus
  107. [actual] hatkpus is metqpus
  108. [actual] metqpus is kamkpus
  109. [actual] metqpus is kamkpus
  110. [actual] kamkpus is vijwpus and jusdpus
  111. [actual] kamkpus is vijwpus and jusdpus
  112. [actual] vijwpus is kokxpus
  113. [actual] vijwpus is kokxpus
  114. [actual] kokxpus is yabmpus
  115. [actual] kokxpus is yabmpus
  116. [actual] yabmpus is babgpus and luzrpus
  117. [actual] yabmpus is babgpus and luzrpus
  118. [actual] yabmpus is babgpus
  119. [planning] x is yabmpus
  120. [planning] x is babgpus
  121. [actual] x is zohgpus
  122. [actual] zohgpus is kobvpus and nehgpus
  123. [planning] x is kobvpus
  124. [actual] kobvpus is raygpus and wusjpus
  125. [planning] x is raygpus
  126. [actual] raygpus is maplpus
  127. [planning] x is maplpus
  128. [actual] maplpus is sasqpus and reqypus
  129. [actual] x is sasqpus
  130. [planning] x is sasqpus
  131. [actual] sasqpus is tujbpus
  132. [planning] x is tujbpus
  133. [actual] tujbpus is gitfpus and mujvpus
  134. [actual] x is gitfpus and mujvpus
  135. [actual] gitfpus is yarkpus
  136. [actual] x is yarkpus
  137. [actual] yarkpus is forwpus
  138. [planning] x is forwpus
  139. [actual] forwpus is qibbpus
  140. [actual] x is qibbpus
  141. [actual] qibbpus is kenzpus and nekwpus
  142. [planning] x is kenzpus and nekwpus
  143. [actual] kenzpus is kizcpus and katfpus
  144. [actual] x is kizcpus and katfpus
  145. [actual] kizcpus is lahkpus
  146. [planning] x is lahkpus
  147. [actual] lahkpus is seljpus
  148. [planning] x is seljpus
  149. [actual] seljpus is jefypus
  150. [planning] x is jefypus
  151. [actual] jefypus is kadkpus and dacxpus
  152. [actual] x is kadkpus and dacxpus
  153. [actual] kadkpus is bagqpus
  154. [planning] x is bagqpus
  155. [actual] bagqpus is lehnpus
  156. [planning] x is lehnpus
  157. [actual] lehnpus is rezspus
  158. [planning] x is rezspus
  159. [actual] rezspus is xunjpus and gajkpus
  160. [actual] x is xunjpus and gajkpus
  161. [actual] xunjpus is vexnpus
  162. [actual] x is vexnpus
  163. [actual] vexnpus is lucypus
  164. [actual] x is lucypus
  165. [actual] lucypus is jutdpus and lurmpus
  166. [actual] x is jutdpus and lurmpus
  167. [actual] jutdpus is zahbpus
  168. [planning] x is zahbpus
  169. [actual] zahbpus is hatkpus
  170. [actual] x is hatkpus
  171. [actual] hatkpus is metqpus
  172. [planning] x is metqpus
  173. [actual] metqpus is kamkpus
  174. [planning] x is kamkpus
  175. [actual] kamkpus is vijwpus and jusdpus
  176. [planning] x is vijwpus and jusdpus
  177. [actual] vijwpus is kokxpus
  178. [actual] x is kokxpus
  179. [actual] kokxpus is yabmpus
  180. [actual] x is yabmpus
  181. [actual] yabmpus is babgpus and luzrpus
  182. [planning] x is babgpus
  183. [actual] x is babgpus
  184. [planning] x is babgpus
  185. [planning] x is babrpus
  186. [planning] x is babspus
  187. [actual] x is babgpus
  188. [planning] x is babgpus
  189. [actual] x is babgpus
  190. [actual] x is babgpus or babrpus or babspus
  191. [planning] nehgpus is A
  192. [actual] nehgpus is zohgpus and kobvpus
  193. [planning] nehgpus is a terminal category or something
  194. [actual] x is babgpus

=== 开始标准化和解析节点 ===
清洗后statements数: 194
标准化后节点数: 188
过滤掉的无效实体数: 6
标准化后的节点:
  1. [planning] x → babgpus (原始: x is babgpus)
  2. [planning] x → babrpus (原始: x is babrpus)
  3. [planning] x → babspus (原始: x is babspus)
  4. [planning] x → babgpus (原始: x is babgpus)
  5. [planning] x → babrpus (原始: x is babrpus)
  6. [planning] x → babspus (原始: x is babspus)
  7. [actual] x → zohgpus (原始: x is zohgpus)
  8. [actual] x → zohgpus (原始: x is zohgpus)
  9. [actual] x → zohgpus (原始: x is zohgpus)
  10. [actual] zohgpus → kobvpus and nehgpus (原始: zohgpus is kobvpus and nehgpus)
  11. [actual] zohgpus → kobvpus and nehgpus (原始: zohgpus is kobvpus and nehgpus)
  12. [planning] x → babgpus (原始: x is babgpus)
  13. [actual] seljpus → jefypus (原始: seljpus is jefypus)
  14. [actual] lucypus → jutdpus and lurmpus (原始: lucypus is jutdpus and lurmpus)
  15. [actual] kizcpus → lahkpus (原始: kizcpus is lahkpus)
  16. [actual] yabmpus → babgpus and luzrpus (原始: yabmpus is babgpus and luzrpus)
  17. [actual] kokxpus → yabmpus (原始: kokxpus is yabmpus)
  18. [actual] kenzpus → kizcpus and katfpus (原始: kenzpus is kizcpus and katfpus)
  19. [actual] kadkpus → bagqpus (原始: kadkpus is bagqpus)
  20. [actual] maplpus → sasqpus and reqypus (原始: maplpus is sasqpus and reqypus)
  21. [actual] zahbpus → hatkpus (原始: zahbpus is hatkpus)
  22. [actual] zohgpus → kobvpus and nehgpus (原始: zohgpus is kobvpus and nehgpus)
  23. [actual] jefypus → kadkpus and dacxpus (原始: jefypus is kadkpus and dacxpus)
  24. [actual] tujbpus → gitfpus and mujvpus (原始: tujbpus is gitfpus and mujvpus)
  25. [actual] vexnpus → lucypus (原始: vexnpus is lucypus)
  26. [actual] hatkpus → metqpus (原始: hatkpus is metqpus)
  27. [actual] jutdpus → zahbpus (原始: jutdpus is zahbpus)
  28. [actual] xunjpus → vexnpus (原始: xunjpus is vexnpus)
  29. [actual] yarkpus → forwpus (原始: yarkpus is forwpus)
  30. [actual] lahkpus → seljpus (原始: lahkpus is seljpus)
  31. [actual] rezspus → xunjpus and gajkpus (原始: rezspus is xunjpus and gajkpus)
  32. [actual] qibbpus → kenzpus and nekwpus (原始: qibbpus is kenzpus and nekwpus)
  33. [actual] vijwpus → kokxpus (原始: vijwpus is kokxpus)
  34. [actual] sasqpus → tujbpus (原始: sasqpus is tujbpus)
  35. [actual] raygpus → maplpus (原始: raygpus is maplpus)
  36. [actual] kamkpus → vijwpus and jusdpus (原始: kamkpus is vijwpus and jusdpus)
  37. [actual] metqpus → kamkpus (原始: metqpus is kamkpus)
  38. [actual] x → zohgpus (原始: x is zohgpus)
  39. [actual] forwpus → qibbpus (原始: forwpus is qibbpus)
  40. [actual] bagqpus → lehnpus (原始: bagqpus is lehnpus)
  41. [actual] lehnpus → rezspus (原始: lehnpus is rezspus)
  42. [actual] kobvpus → raygpus and wusjpus (原始: kobvpus is raygpus and wusjpus)
  43. [actual] gitfpus → yarkpus (原始: gitfpus is yarkpus)
  44. [actual] yabmpus → babgpus (原始: yabmpus is babgpus)
  45. [actual] luzrpus → babgpus (原始: luzrpus is babgpus)
  46. [planning] x → babgpus (原始: x is babgpus)
  47. [actual] x → zohgpus (原始: x is zohgpus)
  48. [actual] x → zohgpus (原始: x is zohgpus)
  49. [actual] zohgpus → kobvpus and nehgpus (原始: zohgpus is kobvpus and nehgpus)
  50. [actual] x → kobvpus and nehgpus (原始: x is kobvpus and nehgpus)
  51. [actual] kobvpus → raygpus and wusjpus (原始: kobvpus is raygpus and wusjpus)
  52. [actual] kobvpus → raygpus and wusjpus (原始: kobvpus is raygpus and wusjpus)
  53. [actual] x → zohgpus (原始: x is zohgpus)
  54. [actual] zohgpus → kobvpus (原始: zohgpus is kobvpus)
  55. [actual] x → kobvpus (原始: x is kobvpus)
  56. [planning] x → raygpus (原始: x is raygpus)
  57. [planning] x → wusjpus (原始: x is wusjpus)
  58. [actual] raygpus → maplpus (原始: raygpus is maplpus)
  59. [actual] raygpus → maplpus (原始: raygpus is maplpus)
  60. [actual] maplpus → sasqpus and reqypus (原始: maplpus is sasqpus and reqypus)
  61. [actual] maplpus → sasqpus and reqypus (原始: maplpus is sasqpus and reqypus)
  62. [actual] sasqpus → tujbpus (原始: sasqpus is tujbpus)
  63. [actual] sasqpus → tujbpus (原始: sasqpus is tujbpus)
  64. [actual] tujbpus → gitfpus and mujvpus (原始: tujbpus is gitfpus and mujvpus)
  65. [actual] tujbpus → gitfpus and mujvpus (原始: tujbpus is gitfpus and mujvpus)
  66. [actual] gitfpus → yarkpus (原始: gitfpus is yarkpus)
  67. [actual] gitfpus → yarkpus (原始: gitfpus is yarkpus)
  68. [actual] yarkpus → forwpus (原始: yarkpus is forwpus)
  69. [actual] yarkpus → forwpus (原始: yarkpus is forwpus)
  70. [actual] forwpus → qibbpus (原始: forwpus is qibbpus)
  71. [actual] forwpus → qibbpus (原始: forwpus is qibbpus)
  72. [actual] qibbpus → kenzpus and nekwpus (原始: qibbpus is kenzpus and nekwpus)
  73. [actual] qibbpus → kenzpus and nekwpus (原始: qibbpus is kenzpus and nekwpus)
  74. [actual] kenzpus → kizcpus and katfpus (原始: kenzpus is kizcpus and katfpus)
  75. [actual] kenzpus → kizcpus and katfpus (原始: kenzpus is kizcpus and katfpus)
  76. [actual] kizcpus → lahkpus (原始: kizcpus is lahkpus)
  77. [actual] kizcpus → lahkpus (原始: kizcpus is lahkpus)
  78. [actual] lahkpus → seljpus (原始: lahkpus is seljpus)
  79. [actual] lakhpus → seljpus (原始: lakhpus is seljpus)
  80. [actual] seljpus → jefypus (原始: seljpus is jefypus)
  81. [actual] seljpus → jefypus (原始: seljpus is jefypus)
  82. [actual] jefypus → kadkpus and dacxpus (原始: jefypus is kadkpus and dacxpus)
  83. [actual] jefypus → kadkpus and dacxpus (原始: jefypus is kadkpus and dacxpus)
  84. [actual] kadkpus → bagqpus (原始: kadkpus is bagqpus)
  85. [actual] kadkpus → bagqpus (原始: kadkpus is bagqpus)
  86. [actual] bagqpus → lehnpus (原始: bagqpus is lehnpus)
  87. [actual] bagqpus → lehnpus (原始: bagqpus is lehnpus)
  88. [actual] lehnpus → rezspus (原始: lehnpus is rezspus)
  89. [actual] lehnpus → rezspus (原始: lehnpus is rezspus)
  90. [actual] rezspus → xunjpus and gajkpus (原始: rezspus is xunjpus and gajkpus)
  91. [actual] rezspus → xunjpus and gajkpus (原始: rezspus is xunjpus and gajkpus)
  92. [actual] xunjpus → vexnpus (原始: xunjpus is vexnpus)
  93. [actual] xunjpus → vexnpus (原始: xunjpus is vexnpus)
  94. [actual] vexnpus → lucypus (原始: vexnpus is lucypus)
  95. [actual] vexnpus → lucypus (原始: vexnpus is lucypus)
  96. [actual] lucypus → jutdpus and lurmpus (原始: lucypus is jutdpus and lurmpus)
  97. [actual] lucypus → jutdpus and lurmpus (原始: lucypus is jutdpus and lurmpus)
  98. [actual] jutdpus → zahbpus (原始: jutdpus is zahbpus)
  99. [actual] jutdpus → zahbpus (原始: jutdpus is zahbpus)
  100. [actual] zahbpus → hatkpus (原始: zahbpus is hatkpus)
  101. [actual] zahbpus → hatkpus (原始: zahbpus is hatkpus)
  102. [actual] hatkpus → metqpus (原始: hatkpus is metqpus)
  103. [actual] hatkpus → metqpus (原始: hatkpus is metqpus)
  104. [actual] metqpus → kamkpus (原始: metqpus is kamkpus)
  105. [actual] metqpus → kamkpus (原始: metqpus is kamkpus)
  106. [actual] kamkpus → vijwpus and jusdpus (原始: kamkpus is vijwpus and jusdpus)
  107. [actual] kamkpus → vijwpus and jusdpus (原始: kamkpus is vijwpus and jusdpus)
  108. [actual] vijwpus → kokxpus (原始: vijwpus is kokxpus)
  109. [actual] vijwpus → kokxpus (原始: vijwpus is kokxpus)
  110. [actual] kokxpus → yabmpus (原始: kokxpus is yabmpus)
  111. [actual] kokxpus → yabmpus (原始: kokxpus is yabmpus)
  112. [actual] yabmpus → babgpus and luzrpus (原始: yabmpus is babgpus and luzrpus)
  113. [actual] yabmpus → babgpus and luzrpus (原始: yabmpus is babgpus and luzrpus)
  114. [actual] yabmpus → babgpus (原始: yabmpus is babgpus)
  115. [planning] x → yabmpus (原始: x is yabmpus)
  116. [planning] x → babgpus (原始: x is babgpus)
  117. [actual] x → zohgpus (原始: x is zohgpus)
  118. [actual] zohgpus → kobvpus and nehgpus (原始: zohgpus is kobvpus and nehgpus)
  119. [planning] x → kobvpus (原始: x is kobvpus)
  120. [actual] kobvpus → raygpus and wusjpus (原始: kobvpus is raygpus and wusjpus)
  121. [planning] x → raygpus (原始: x is raygpus)
  122. [actual] raygpus → maplpus (原始: raygpus is maplpus)
  123. [planning] x → maplpus (原始: x is maplpus)
  124. [actual] maplpus → sasqpus and reqypus (原始: maplpus is sasqpus and reqypus)
  125. [actual] x → sasqpus (原始: x is sasqpus)
  126. [planning] x → sasqpus (原始: x is sasqpus)
  127. [actual] sasqpus → tujbpus (原始: sasqpus is tujbpus)
  128. [planning] x → tujbpus (原始: x is tujbpus)
  129. [actual] tujbpus → gitfpus and mujvpus (原始: tujbpus is gitfpus and mujvpus)
  130. [actual] x → gitfpus and mujvpus (原始: x is gitfpus and mujvpus)
  131. [actual] gitfpus → yarkpus (原始: gitfpus is yarkpus)
  132. [actual] x → yarkpus (原始: x is yarkpus)
  133. [actual] yarkpus → forwpus (原始: yarkpus is forwpus)
  134. [planning] x → forwpus (原始: x is forwpus)
  135. [actual] forwpus → qibbpus (原始: forwpus is qibbpus)
  136. [actual] x → qibbpus (原始: x is qibbpus)
  137. [actual] qibbpus → kenzpus and nekwpus (原始: qibbpus is kenzpus and nekwpus)
  138. [planning] x → kenzpus and nekwpus (原始: x is kenzpus and nekwpus)
  139. [actual] kenzpus → kizcpus and katfpus (原始: kenzpus is kizcpus and katfpus)
  140. [actual] x → kizcpus and katfpus (原始: x is kizcpus and katfpus)
  141. [actual] kizcpus → lahkpus (原始: kizcpus is lahkpus)
  142. [planning] x → lahkpus (原始: x is lahkpus)
  143. [actual] lahkpus → seljpus (原始: lahkpus is seljpus)
  144. [planning] x → seljpus (原始: x is seljpus)
  145. [actual] seljpus → jefypus (原始: seljpus is jefypus)
  146. [planning] x → jefypus (原始: x is jefypus)
  147. [actual] jefypus → kadkpus and dacxpus (原始: jefypus is kadkpus and dacxpus)
  148. [actual] x → kadkpus and dacxpus (原始: x is kadkpus and dacxpus)
  149. [actual] kadkpus → bagqpus (原始: kadkpus is bagqpus)
  150. [planning] x → bagqpus (原始: x is bagqpus)
  151. [actual] bagqpus → lehnpus (原始: bagqpus is lehnpus)
  152. [planning] x → lehnpus (原始: x is lehnpus)
  153. [actual] lehnpus → rezspus (原始: lehnpus is rezspus)
  154. [planning] x → rezspus (原始: x is rezspus)
  155. [actual] rezspus → xunjpus and gajkpus (原始: rezspus is xunjpus and gajkpus)
  156. [actual] x → xunjpus and gajkpus (原始: x is xunjpus and gajkpus)
  157. [actual] xunjpus → vexnpus (原始: xunjpus is vexnpus)
  158. [actual] x → vexnpus (原始: x is vexnpus)
  159. [actual] vexnpus → lucypus (原始: vexnpus is lucypus)
  160. [actual] x → lucypus (原始: x is lucypus)
  161. [actual] lucypus → jutdpus and lurmpus (原始: lucypus is jutdpus and lurmpus)
  162. [actual] x → jutdpus and lurmpus (原始: x is jutdpus and lurmpus)
  163. [actual] jutdpus → zahbpus (原始: jutdpus is zahbpus)
  164. [planning] x → zahbpus (原始: x is zahbpus)
  165. [actual] zahbpus → hatkpus (原始: zahbpus is hatkpus)
  166. [actual] x → hatkpus (原始: x is hatkpus)
  167. [actual] hatkpus → metqpus (原始: hatkpus is metqpus)
  168. [planning] x → metqpus (原始: x is metqpus)
  169. [actual] metqpus → kamkpus (原始: metqpus is kamkpus)
  170. [planning] x → kamkpus (原始: x is kamkpus)
  171. [actual] kamkpus → vijwpus and jusdpus (原始: kamkpus is vijwpus and jusdpus)
  172. [planning] x → vijwpus and jusdpus (原始: x is vijwpus and jusdpus)
  173. [actual] vijwpus → kokxpus (原始: vijwpus is kokxpus)
  174. [actual] x → kokxpus (原始: x is kokxpus)
  175. [actual] kokxpus → yabmpus (原始: kokxpus is yabmpus)
  176. [actual] x → yabmpus (原始: x is yabmpus)
  177. [actual] yabmpus → babgpus and luzrpus (原始: yabmpus is babgpus and luzrpus)
  178. [planning] x → babgpus (原始: x is babgpus)
  179. [actual] x → babgpus (原始: x is babgpus)
  180. [planning] x → babgpus (原始: x is babgpus)
  181. [planning] x → babrpus (原始: x is babrpus)
  182. [planning] x → babspus (原始: x is babspus)
  183. [actual] x → babgpus (原始: x is babgpus)
  184. [planning] x → babgpus (原始: x is babgpus)
  185. [actual] x → babgpus (原始: x is babgpus)
  186. [actual] x → babgpus or babrpus or babspus (原始: x is babgpus or babrpus or babspus)
  187. [actual] nehgpus → zohgpus and kobvpus (原始: nehgpus is zohgpus and kobvpus)
  188. [actual] x → babgpus (原始: x is babgpus)

开始新的后处理...
[后处理] 从LoG数据文件中获取到图数据，节点数: 42
[后处理] 加载LoG图，包含 42 个节点
  LoG节点 0: x is babgpus or babrpus or babspus (规则: MP, 深度: 1)
  LoG节点 1: x is kenzpus (规则: MP, 深度: 2)
  LoG节点 2: kenzpus is babgpus or babrpus or babspus (规则: MP, 深度: 2)
  LoG节点 3: x is sasqpus (规则: CE, 深度: 3)
  LoG节点 4: sasqpus is kenzpus (规则: CE, 深度: 3)
  LoG节点 5: kenzpus is xunjpus (规则: MP, 深度: 3)
  LoG节点 6: xunjpus is babgpus or babrpus or babspus (规则: MP, 深度: 3)
  LoG节点 7: x is sasqpus and reqypus (规则: MP, 深度: 4)
  LoG节点 8: sasqpus is kenzpus and nekwpus (规则: MP, 深度: 4)
  LoG节点 9: kenzpus is kadkpus (规则: MP, 深度: 4)
  LoG节点 10: kadkpus is xunjpus (规则: CE, 深度: 4)
  LoG节点 11: xunjpus is kamkpus (规则: MP, 深度: 4)
  LoG节点 12: kamkpus is babgpus or babrpus or babspus (规则: MP, 深度: 4)
  LoG节点 13: x is kobvpus (规则: CE, 深度: 5)
  LoG节点 14: kobvpus is sasqpus and reqypus (规则: MP, 深度: 5)
  LoG节点 15: sasqpus is gitfpus (规则: CE, 深度: 5)
  LoG节点 16: gitfpus is kenzpus and nekwpus (规则: MP, 深度: 5)
  LoG节点 17: kenzpus is seljpus (规则: MP, 深度: 5)
  LoG节点 18: seljpus is kadkpus (规则: CE, 深度: 5)
  LoG节点 19: kadkpus is xunjpus and gajkpus (规则: MP, 深度: 5)
  LoG节点 20: xunjpus is jutdpus (规则: MP, 深度: 5)
  LoG节点 21: jutdpus is kamkpus (规则: MP, 深度: 5)
  LoG节点 22: kamkpus is yabmpus (规则: MP, 深度: 5)
  LoG节点 23: yabmpus is babgpus or babrpus or babspus (规则: DI, 深度: 5)
  LoG节点 24: x is kobvpus and nehgpus (规则: MP, 深度: 6)
  LoG节点 25: kobvpus is raygpus (规则: CE, 深度: 6)
  LoG节点 26: raygpus is sasqpus and reqypus (规则: MP, 深度: 6)
  LoG节点 27: sasqpus is gitfpus and mujvpus (规则: MP, 深度: 6)
  LoG节点 28: gitfpus is forwpus (规则: MP, 深度: 6)
  LoG节点 29: forwpus is kenzpus and nekwpus (规则: MP, 深度: 6)
  LoG节点 30: kenzpus is kizcpus (规则: CE, 深度: 6)
  LoG节点 31: kizcpus is seljpus (规则: MP, 深度: 6)
  LoG节点 32: seljpus is kadkpus and dacxpus (规则: MP, 深度: 6)
  LoG节点 33: kadkpus is lehnpus (规则: MP, 深度: 6)
  LoG节点 34: lehnpus is xunjpus and gajkpus (规则: MP, 深度: 6)
  LoG节点 35: xunjpus is lucypus (规则: MP, 深度: 6)
  LoG节点 36: lucypus is jutdpus (规则: CE, 深度: 6)
  LoG节点 37: jutdpus is hatkpus (规则: MP, 深度: 6)
  LoG节点 38: hatkpus is kamkpus (规则: MP, 深度: 6)
  LoG节点 39: kamkpus is vijwpus (规则: CE, 深度: 6)
  LoG节点 40: vijwpus is yabmpus (规则: MP, 深度: 6)
  LoG节点 41: yabmpus is babgpus (规则: CE, 深度: 6)

============================================================
[后处理] 开始处理节点
============================================================
📊 初始状态:
   - 标准化节点数: 188
   - 初始条件数: 31
   - LoG图节点数: 42

📋 初始条件列表:
    1. seljpus is jefypus
    2. lucypus is jutdpus and lurmpus
    3. kizcpus is lahkpus
    4. yabmpus is babgpus and luzrpus
    5. kokxpus is yabmpus
    6. kenzpus is kizcpus and katfpus
    7. kadkpus is bagqpus
    8. maplpus is sasqpus and reqypus
    9. zahbpus is hatkpus
   10. zohgpus is kobvpus and nehgpus
   11. jefypus is kadkpus and dacxpus
   12. tujbpus is gitfpus and mujvpus
   13. vexnpus is lucypus
   14. hatkpus is metqpus
   15. jutdpus is zahbpus
   16. xunjpus is vexnpus
   17. yarkpus is forwpus
   18. lahkpus is seljpus
   19. rezspus is xunjpus and gajkpus
   20. qibbpus is kenzpus and nekwpus
   21. vijwpus is kokxpus
   22. sasqpus is tujbpus
   23. raygpus is maplpus
   24. kamkpus is vijwpus and jusdpus
   25. metqpus is kamkpus
   26. x is zohgpus
   27. forwpus is qibbpus
   28. bagqpus is lehnpus
   29. lehnpus is rezspus
   30. kobvpus is raygpus and wusjpus
   31. gitfpus is yarkpus

🔧 构建初始Statement列表...
✅ 初始Statement列表构建完成，包含 31 个前提节点

🔍 开始处理actual节点...

   节点 1: x is zohgpus
      ↻ 重复节点，计数: 2

   节点 2: x is zohgpus
      ↻ 重复节点，计数: 3

   节点 3: x is zohgpus
      ↻ 重复节点，计数: 4

   节点 4: zohgpus is kobvpus and nehgpus
      ↻ 重复节点，计数: 2

   节点 5: zohgpus is kobvpus and nehgpus
      ↻ 重复节点，计数: 3

   节点 6: seljpus is jefypus
      ↻ 重复节点，计数: 2

   节点 7: lucypus is jutdpus and lurmpus
      ↻ 重复节点，计数: 2

   节点 8: kizcpus is lahkpus
      ↻ 重复节点，计数: 2

   节点 9: yabmpus is babgpus and luzrpus
      ↻ 重复节点，计数: 2

   节点 10: kokxpus is yabmpus
      ↻ 重复节点，计数: 2

   节点 11: kenzpus is kizcpus and katfpus
      ↻ 重复节点，计数: 2

   节点 12: kadkpus is bagqpus
      ↻ 重复节点，计数: 2

   节点 13: maplpus is sasqpus and reqypus
      ↻ 重复节点，计数: 2

   节点 14: zahbpus is hatkpus
      ↻ 重复节点，计数: 2

   节点 15: zohgpus is kobvpus and nehgpus
      ↻ 重复节点，计数: 4

   节点 16: jefypus is kadkpus and dacxpus
      ↻ 重复节点，计数: 2

   节点 17: tujbpus is gitfpus and mujvpus
      ↻ 重复节点，计数: 2

   节点 18: vexnpus is lucypus
      ↻ 重复节点，计数: 2

   节点 19: hatkpus is metqpus
      ↻ 重复节点，计数: 2

   节点 20: jutdpus is zahbpus
      ↻ 重复节点，计数: 2

   节点 21: xunjpus is vexnpus
      ↻ 重复节点，计数: 2

   节点 22: yarkpus is forwpus
      ↻ 重复节点，计数: 2

   节点 23: lahkpus is seljpus
      ↻ 重复节点，计数: 2

   节点 24: rezspus is xunjpus and gajkpus
      ↻ 重复节点，计数: 2

   节点 25: qibbpus is kenzpus and nekwpus
      ↻ 重复节点，计数: 2

   节点 26: vijwpus is kokxpus
      ↻ 重复节点，计数: 2

   节点 27: sasqpus is tujbpus
      ↻ 重复节点，计数: 2

   节点 28: raygpus is maplpus
      ↻ 重复节点，计数: 2

   节点 29: kamkpus is vijwpus and jusdpus
      ↻ 重复节点，计数: 2

   节点 30: metqpus is kamkpus
      ↻ 重复节点，计数: 2

   节点 31: x is zohgpus
      ↻ 重复节点，计数: 5

   节点 32: forwpus is qibbpus
      ↻ 重复节点，计数: 2

   节点 33: bagqpus is lehnpus
      ↻ 重复节点，计数: 2

   节点 34: lehnpus is rezspus
      ↻ 重复节点，计数: 2

   节点 35: kobvpus is raygpus and wusjpus
      ↻ 重复节点，计数: 2

   节点 36: gitfpus is yarkpus
      ↻ 重复节点，计数: 2

   节点 37: yabmpus is babgpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: yabmpus is babgpus
      ✅ 验证成功 + LoG匹配

   节点 38: luzrpus is babgpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 39: x is zohgpus
      ↻ 重复节点，计数: 6

   节点 40: x is zohgpus
      ↻ 重复节点，计数: 7

   节点 41: zohgpus is kobvpus and nehgpus
      ↻ 重复节点，计数: 5

   节点 42: x is kobvpus and nehgpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is kobvpus and nehgpus
      ✅ 验证成功 + LoG匹配

   节点 43: kobvpus is raygpus and wusjpus
      ↻ 重复节点，计数: 3

   节点 44: kobvpus is raygpus and wusjpus
      ↻ 重复节点，计数: 4

   节点 45: x is zohgpus
      ↻ 重复节点，计数: 8

   节点 46: zohgpus is kobvpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: zohgpus is kobvpus and nehgpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: zohgpus is kobvpus and nehgpus

   节点 47: x is kobvpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is kobvpus
      ✅ 验证成功 + LoG匹配

   节点 48: raygpus is maplpus
      ↻ 重复节点，计数: 3

   节点 49: raygpus is maplpus
      ↻ 重复节点，计数: 4

   节点 50: maplpus is sasqpus and reqypus
      ↻ 重复节点，计数: 3

   节点 51: maplpus is sasqpus and reqypus
      ↻ 重复节点，计数: 4

   节点 52: sasqpus is tujbpus
      ↻ 重复节点，计数: 3

   节点 53: sasqpus is tujbpus
      ↻ 重复节点，计数: 4

   节点 54: tujbpus is gitfpus and mujvpus
      ↻ 重复节点，计数: 3

   节点 55: tujbpus is gitfpus and mujvpus
      ↻ 重复节点，计数: 4

   节点 56: gitfpus is yarkpus
      ↻ 重复节点，计数: 3

   节点 57: gitfpus is yarkpus
      ↻ 重复节点，计数: 4

   节点 58: yarkpus is forwpus
      ↻ 重复节点，计数: 3

   节点 59: yarkpus is forwpus
      ↻ 重复节点，计数: 4

   节点 60: forwpus is qibbpus
      ↻ 重复节点，计数: 3

   节点 61: forwpus is qibbpus
      ↻ 重复节点，计数: 4

   节点 62: qibbpus is kenzpus and nekwpus
      ↻ 重复节点，计数: 3

   节点 63: qibbpus is kenzpus and nekwpus
      ↻ 重复节点，计数: 4

   节点 64: kenzpus is kizcpus and katfpus
      ↻ 重复节点，计数: 3

   节点 65: kenzpus is kizcpus and katfpus
      ↻ 重复节点，计数: 4

   节点 66: kizcpus is lahkpus
      ↻ 重复节点，计数: 3

   节点 67: kizcpus is lahkpus
      ↻ 重复节点，计数: 4

   节点 68: lahkpus is seljpus
      ↻ 重复节点，计数: 3

   节点 69: lakhpus is seljpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 70: seljpus is jefypus
      ↻ 重复节点，计数: 3

   节点 71: seljpus is jefypus
      ↻ 重复节点，计数: 4

   节点 72: jefypus is kadkpus and dacxpus
      ↻ 重复节点，计数: 3

   节点 73: jefypus is kadkpus and dacxpus
      ↻ 重复节点，计数: 4

   节点 74: kadkpus is bagqpus
      ↻ 重复节点，计数: 3

   节点 75: kadkpus is bagqpus
      ↻ 重复节点，计数: 4

   节点 76: bagqpus is lehnpus
      ↻ 重复节点，计数: 3

   节点 77: bagqpus is lehnpus
      ↻ 重复节点，计数: 4

   节点 78: lehnpus is rezspus
      ↻ 重复节点，计数: 3

   节点 79: lehnpus is rezspus
      ↻ 重复节点，计数: 4

   节点 80: rezspus is xunjpus and gajkpus
      ↻ 重复节点，计数: 3

   节点 81: rezspus is xunjpus and gajkpus
      ↻ 重复节点，计数: 4

   节点 82: xunjpus is vexnpus
      ↻ 重复节点，计数: 3

   节点 83: xunjpus is vexnpus
      ↻ 重复节点，计数: 4

   节点 84: vexnpus is lucypus
      ↻ 重复节点，计数: 3

   节点 85: vexnpus is lucypus
      ↻ 重复节点，计数: 4

   节点 86: lucypus is jutdpus and lurmpus
      ↻ 重复节点，计数: 3

   节点 87: lucypus is jutdpus and lurmpus
      ↻ 重复节点，计数: 4

   节点 88: jutdpus is zahbpus
      ↻ 重复节点，计数: 3

   节点 89: jutdpus is zahbpus
      ↻ 重复节点，计数: 4

   节点 90: zahbpus is hatkpus
      ↻ 重复节点，计数: 3

   节点 91: zahbpus is hatkpus
      ↻ 重复节点，计数: 4

   节点 92: hatkpus is metqpus
      ↻ 重复节点，计数: 3

   节点 93: hatkpus is metqpus
      ↻ 重复节点，计数: 4

   节点 94: metqpus is kamkpus
      ↻ 重复节点，计数: 3

   节点 95: metqpus is kamkpus
      ↻ 重复节点，计数: 4

   节点 96: kamkpus is vijwpus and jusdpus
      ↻ 重复节点，计数: 3

   节点 97: kamkpus is vijwpus and jusdpus
      ↻ 重复节点，计数: 4

   节点 98: vijwpus is kokxpus
      ↻ 重复节点，计数: 3

   节点 99: vijwpus is kokxpus
      ↻ 重复节点，计数: 4

   节点 100: kokxpus is yabmpus
      ↻ 重复节点，计数: 3

   节点 101: kokxpus is yabmpus
      ↻ 重复节点，计数: 4

   节点 102: yabmpus is babgpus and luzrpus
      ↻ 重复节点，计数: 3

   节点 103: yabmpus is babgpus and luzrpus
      ↻ 重复节点，计数: 4

   节点 104: yabmpus is babgpus
      ↻ 重复节点，计数: 2

   节点 105: x is zohgpus
      ↻ 重复节点，计数: 9

   节点 106: zohgpus is kobvpus and nehgpus
      ↻ 重复节点，计数: 6

   节点 107: kobvpus is raygpus and wusjpus
      ↻ 重复节点，计数: 5

   节点 108: raygpus is maplpus
      ↻ 重复节点，计数: 5

   节点 109: maplpus is sasqpus and reqypus
      ↻ 重复节点，计数: 5

   节点 110: x is sasqpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is sasqpus
[子树点亮]     └─ 点亮依赖节点: x is sasqpus and reqypus (深度4)
[子树点亮]     └─ 点亮依赖节点: kobvpus is sasqpus and reqypus (深度5)
[子树点亮]     └─ 点亮依赖节点: kobvpus is raygpus (深度6)
[子树点亮]     └─ 点亮依赖节点: raygpus is sasqpus and reqypus (深度6)
[后处理]   └─ 自动点亮依赖子树: 4 个节点
      ✅ 验证成功 + LoG匹配

   节点 111: sasqpus is tujbpus
      ↻ 重复节点，计数: 5

   节点 112: tujbpus is gitfpus and mujvpus
      ↻ 重复节点，计数: 5

   节点 113: x is gitfpus and mujvpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is zohgpus → zohgpus is gitfpus and mujvpus
[后处理] 基于推理轨迹点亮节点，使用了 7 个前提条件:
  - 前提: x is zohgpus
  - 前提: zohgpus is kobvpus
  - 前提: kobvpus is raygpus and wusjpus
  - 前提: raygpus is maplpus
  - 前提: maplpus is sasqpus and reqypus
  - 前提: sasqpus is tujbpus
  - 前提: tujbpus is gitfpus and mujvpus
  ✓ 点亮LoG节点: sasqpus is gitfpus
[子树点亮]     └─ 点亮依赖节点: sasqpus is gitfpus and mujvpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 1 个节点
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 114: gitfpus is yarkpus
      ↻ 重复节点，计数: 5

   节点 115: x is yarkpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is zohgpus → zohgpus is yarkpus
[后处理] 基于推理轨迹点亮节点，使用了 8 个前提条件:
  - 前提: x is zohgpus
  - 前提: zohgpus is kobvpus
  - 前提: kobvpus is raygpus and wusjpus
  - 前提: raygpus is maplpus
  - 前提: maplpus is sasqpus and reqypus
  - 前提: sasqpus is tujbpus
  - 前提: tujbpus is gitfpus and mujvpus
  - 前提: gitfpus is yarkpus

   节点 116: yarkpus is forwpus
      ↻ 重复节点，计数: 5

   节点 117: forwpus is qibbpus
      ↻ 重复节点，计数: 5

   节点 118: x is qibbpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is zohgpus → zohgpus is qibbpus
[后处理] 基于推理轨迹点亮节点，使用了 10 个前提条件:
  - 前提: x is zohgpus
  - 前提: zohgpus is kobvpus
  - 前提: kobvpus is raygpus and wusjpus
  - 前提: raygpus is maplpus
  - 前提: maplpus is sasqpus and reqypus
  - 前提: sasqpus is tujbpus
  - 前提: tujbpus is gitfpus and mujvpus
  - 前提: gitfpus is yarkpus
  - 前提: yarkpus is forwpus
  - 前提: forwpus is qibbpus
  ✓ 点亮LoG节点: gitfpus is forwpus
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 119: qibbpus is kenzpus and nekwpus
      ↻ 重复节点，计数: 5

   节点 120: kenzpus is kizcpus and katfpus
      ↻ 重复节点，计数: 5

   节点 121: x is kizcpus and katfpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is zohgpus → zohgpus is kizcpus and katfpus
[后处理] 基于推理轨迹点亮节点，使用了 12 个前提条件:
  - 前提: x is zohgpus
  - 前提: zohgpus is kobvpus
  - 前提: kobvpus is raygpus and wusjpus
  - 前提: raygpus is maplpus
  - 前提: maplpus is sasqpus and reqypus
  - 前提: sasqpus is tujbpus
  - 前提: tujbpus is gitfpus and mujvpus
  - 前提: gitfpus is yarkpus
  - 前提: yarkpus is forwpus
  - 前提: forwpus is qibbpus
  - 前提: qibbpus is kenzpus and nekwpus
  - 前提: kenzpus is kizcpus and katfpus
  ✓ 点亮LoG节点: x is kenzpus
[子树点亮]     └─ 点亮依赖节点: sasqpus is kenzpus (深度3)
[子树点亮]     └─ 点亮依赖节点: sasqpus is kenzpus and nekwpus (深度4)
[子树点亮]     └─ 点亮依赖节点: gitfpus is kenzpus and nekwpus (深度5)
[子树点亮]     └─ 点亮依赖节点: forwpus is kenzpus and nekwpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 4 个节点
  ✓ 点亮LoG节点: kenzpus is kizcpus
[后处理] 通过推理轨迹额外点亮了 2 个LoG节点

   节点 122: kizcpus is lahkpus
      ↻ 重复节点，计数: 5

   节点 123: lahkpus is seljpus
      ↻ 重复节点，计数: 4

   节点 124: seljpus is jefypus
      ↻ 重复节点，计数: 5

   节点 125: jefypus is kadkpus and dacxpus
      ↻ 重复节点，计数: 5

   节点 126: x is kadkpus and dacxpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is zohgpus → zohgpus is kadkpus and dacxpus
[后处理] 基于推理轨迹点亮节点，使用了 16 个前提条件:
  - 前提: x is zohgpus
  - 前提: zohgpus is kobvpus
  - 前提: kobvpus is raygpus and wusjpus
  - 前提: raygpus is maplpus
  - 前提: maplpus is sasqpus and reqypus
  - 前提: sasqpus is tujbpus
  - 前提: tujbpus is gitfpus and mujvpus
  - 前提: gitfpus is yarkpus
  - 前提: yarkpus is forwpus
  - 前提: forwpus is qibbpus
  - 前提: qibbpus is kenzpus and nekwpus
  - 前提: kenzpus is kizcpus and katfpus
  - 前提: kizcpus is lahkpus
  - 前提: lahkpus is seljpus
  - 前提: seljpus is jefypus
  - 前提: jefypus is kadkpus and dacxpus
  ✓ 点亮LoG节点: kenzpus is kadkpus
[子树点亮]     └─ 点亮依赖节点: kenzpus is seljpus (深度5)
[子树点亮]     └─ 点亮依赖节点: seljpus is kadkpus (深度5)
[子树点亮]     └─ 点亮依赖节点: kizcpus is seljpus (深度6)
[子树点亮]     └─ 点亮依赖节点: seljpus is kadkpus and dacxpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 4 个节点
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 127: kadkpus is bagqpus
      ↻ 重复节点，计数: 5

   节点 128: bagqpus is lehnpus
      ↻ 重复节点，计数: 5

   节点 129: lehnpus is rezspus
      ↻ 重复节点，计数: 5

   节点 130: rezspus is xunjpus and gajkpus
      ↻ 重复节点，计数: 5

   节点 131: x is xunjpus and gajkpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is zohgpus → zohgpus is xunjpus and gajkpus
[后处理] 基于推理轨迹点亮节点，使用了 20 个前提条件:
  - 前提: x is zohgpus
  - 前提: zohgpus is kobvpus
  - 前提: kobvpus is raygpus and wusjpus
  - 前提: raygpus is maplpus
  - 前提: maplpus is sasqpus and reqypus
  - 前提: sasqpus is tujbpus
  - 前提: tujbpus is gitfpus and mujvpus
  - 前提: gitfpus is yarkpus
  - 前提: yarkpus is forwpus
  - 前提: forwpus is qibbpus
  - 前提: qibbpus is kenzpus and nekwpus
  - 前提: kenzpus is kizcpus and katfpus
  - 前提: kizcpus is lahkpus
  - 前提: lahkpus is seljpus
  - 前提: seljpus is jefypus
  - 前提: jefypus is kadkpus and dacxpus
  - 前提: kadkpus is bagqpus
  - 前提: bagqpus is lehnpus
  - 前提: lehnpus is rezspus
  - 前提: rezspus is xunjpus and gajkpus
  ✓ 点亮LoG节点: kenzpus is xunjpus
[子树点亮]     └─ 点亮依赖节点: kadkpus is xunjpus (深度4)
[子树点亮]     └─ 点亮依赖节点: kadkpus is xunjpus and gajkpus (深度5)
[子树点亮]     └─ 点亮依赖节点: kadkpus is lehnpus (深度6)
[子树点亮]     └─ 点亮依赖节点: lehnpus is xunjpus and gajkpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 4 个节点
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 132: xunjpus is vexnpus
      ↻ 重复节点，计数: 5

   节点 133: x is vexnpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is zohgpus → zohgpus is vexnpus
[后处理] 基于推理轨迹点亮节点，使用了 21 个前提条件:
  - 前提: x is zohgpus
  - 前提: zohgpus is kobvpus
  - 前提: kobvpus is raygpus and wusjpus
  - 前提: raygpus is maplpus
  - 前提: maplpus is sasqpus and reqypus
  - 前提: sasqpus is tujbpus
  - 前提: tujbpus is gitfpus and mujvpus
  - 前提: gitfpus is yarkpus
  - 前提: yarkpus is forwpus
  - 前提: forwpus is qibbpus
  - 前提: qibbpus is kenzpus and nekwpus
  - 前提: kenzpus is kizcpus and katfpus
  - 前提: kizcpus is lahkpus
  - 前提: lahkpus is seljpus
  - 前提: seljpus is jefypus
  - 前提: jefypus is kadkpus and dacxpus
  - 前提: kadkpus is bagqpus
  - 前提: bagqpus is lehnpus
  - 前提: lehnpus is rezspus
  - 前提: rezspus is xunjpus and gajkpus
  - 前提: xunjpus is vexnpus

   节点 134: vexnpus is lucypus
      ↻ 重复节点，计数: 5

   节点 135: x is lucypus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is zohgpus → zohgpus is lucypus
[后处理] 基于推理轨迹点亮节点，使用了 22 个前提条件:
  - 前提: x is zohgpus
  - 前提: zohgpus is kobvpus
  - 前提: kobvpus is raygpus and wusjpus
  - 前提: raygpus is maplpus
  - 前提: maplpus is sasqpus and reqypus
  - 前提: sasqpus is tujbpus
  - 前提: tujbpus is gitfpus and mujvpus
  - 前提: gitfpus is yarkpus
  - 前提: yarkpus is forwpus
  - 前提: forwpus is qibbpus
  - 前提: qibbpus is kenzpus and nekwpus
  - 前提: kenzpus is kizcpus and katfpus
  - 前提: kizcpus is lahkpus
  - 前提: lahkpus is seljpus
  - 前提: seljpus is jefypus
  - 前提: jefypus is kadkpus and dacxpus
  - 前提: kadkpus is bagqpus
  - 前提: bagqpus is lehnpus
  - 前提: lehnpus is rezspus
  - 前提: rezspus is xunjpus and gajkpus
  - 前提: xunjpus is vexnpus
  - 前提: vexnpus is lucypus
  ✓ 点亮LoG节点: xunjpus is lucypus
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 136: lucypus is jutdpus and lurmpus
      ↻ 重复节点，计数: 5

   节点 137: x is jutdpus and lurmpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is zohgpus → zohgpus is jutdpus and lurmpus
[后处理] 基于推理轨迹点亮节点，使用了 23 个前提条件:
  - 前提: x is zohgpus
  - 前提: zohgpus is kobvpus
  - 前提: kobvpus is raygpus and wusjpus
  - 前提: raygpus is maplpus
  - 前提: maplpus is sasqpus and reqypus
  - 前提: sasqpus is tujbpus
  - 前提: tujbpus is gitfpus and mujvpus
  - 前提: gitfpus is yarkpus
  - 前提: yarkpus is forwpus
  - 前提: forwpus is qibbpus
  - 前提: qibbpus is kenzpus and nekwpus
  - 前提: kenzpus is kizcpus and katfpus
  - 前提: kizcpus is lahkpus
  - 前提: lahkpus is seljpus
  - 前提: seljpus is jefypus
  - 前提: jefypus is kadkpus and dacxpus
  - 前提: kadkpus is bagqpus
  - 前提: bagqpus is lehnpus
  - 前提: lehnpus is rezspus
  - 前提: rezspus is xunjpus and gajkpus
  - 前提: xunjpus is vexnpus
  - 前提: vexnpus is lucypus
  - 前提: lucypus is jutdpus and lurmpus
  ✓ 点亮LoG节点: xunjpus is jutdpus
[子树点亮]     └─ 点亮依赖节点: lucypus is jutdpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 1 个节点
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 138: jutdpus is zahbpus
      ↻ 重复节点，计数: 5

   节点 139: zahbpus is hatkpus
      ↻ 重复节点，计数: 5

   节点 140: x is hatkpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is zohgpus → zohgpus is hatkpus
[后处理] 基于推理轨迹点亮节点，使用了 25 个前提条件:
  - 前提: x is zohgpus
  - 前提: zohgpus is kobvpus
  - 前提: kobvpus is raygpus and wusjpus
  - 前提: raygpus is maplpus
  - 前提: maplpus is sasqpus and reqypus
  - 前提: sasqpus is tujbpus
  - 前提: tujbpus is gitfpus and mujvpus
  - 前提: gitfpus is yarkpus
  - 前提: yarkpus is forwpus
  - 前提: forwpus is qibbpus
  - 前提: qibbpus is kenzpus and nekwpus
  - 前提: kenzpus is kizcpus and katfpus
  - 前提: kizcpus is lahkpus
  - 前提: lahkpus is seljpus
  - 前提: seljpus is jefypus
  - 前提: jefypus is kadkpus and dacxpus
  - 前提: kadkpus is bagqpus
  - 前提: bagqpus is lehnpus
  - 前提: lehnpus is rezspus
  - 前提: rezspus is xunjpus and gajkpus
  - 前提: xunjpus is vexnpus
  - 前提: vexnpus is lucypus
  - 前提: lucypus is jutdpus and lurmpus
  - 前提: jutdpus is zahbpus
  - 前提: zahbpus is hatkpus
  ✓ 点亮LoG节点: jutdpus is hatkpus
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 141: hatkpus is metqpus
      ↻ 重复节点，计数: 5

   节点 142: metqpus is kamkpus
      ↻ 重复节点，计数: 5

   节点 143: kamkpus is vijwpus and jusdpus
      ↻ 重复节点，计数: 5

   节点 144: vijwpus is kokxpus
      ↻ 重复节点，计数: 5

   节点 145: x is kokxpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is zohgpus → zohgpus is kokxpus
[后处理] 基于推理轨迹点亮节点，使用了 29 个前提条件:
  - 前提: x is zohgpus
  - 前提: zohgpus is kobvpus
  - 前提: kobvpus is raygpus and wusjpus
  - 前提: raygpus is maplpus
  - 前提: maplpus is sasqpus and reqypus
  - 前提: sasqpus is tujbpus
  - 前提: tujbpus is gitfpus and mujvpus
  - 前提: gitfpus is yarkpus
  - 前提: yarkpus is forwpus
  - 前提: forwpus is qibbpus
  - 前提: qibbpus is kenzpus and nekwpus
  - 前提: kenzpus is kizcpus and katfpus
  - 前提: kizcpus is lahkpus
  - 前提: lahkpus is seljpus
  - 前提: seljpus is jefypus
  - 前提: jefypus is kadkpus and dacxpus
  - 前提: kadkpus is bagqpus
  - 前提: bagqpus is lehnpus
  - 前提: lehnpus is rezspus
  - 前提: rezspus is xunjpus and gajkpus
  - 前提: xunjpus is vexnpus
  - 前提: vexnpus is lucypus
  - 前提: lucypus is jutdpus and lurmpus
  - 前提: jutdpus is zahbpus
  - 前提: zahbpus is hatkpus
  - 前提: hatkpus is metqpus
  - 前提: metqpus is kamkpus
  - 前提: kamkpus is vijwpus and jusdpus
  - 前提: vijwpus is kokxpus
  ✓ 点亮LoG节点: xunjpus is kamkpus
[子树点亮]     └─ 点亮依赖节点: jutdpus is kamkpus (深度5)
[子树点亮]     └─ 点亮依赖节点: hatkpus is kamkpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 2 个节点
  ✓ 点亮LoG节点: kamkpus is vijwpus
[后处理] 通过推理轨迹额外点亮了 2 个LoG节点

   节点 146: kokxpus is yabmpus
      ↻ 重复节点，计数: 5

   节点 147: x is yabmpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is zohgpus → zohgpus is yabmpus
[后处理] 基于推理轨迹点亮节点，使用了 30 个前提条件:
  - 前提: x is zohgpus
  - 前提: zohgpus is kobvpus
  - 前提: kobvpus is raygpus and wusjpus
  - 前提: raygpus is maplpus
  - 前提: maplpus is sasqpus and reqypus
  - 前提: sasqpus is tujbpus
  - 前提: tujbpus is gitfpus and mujvpus
  - 前提: gitfpus is yarkpus
  - 前提: yarkpus is forwpus
  - 前提: forwpus is qibbpus
  - 前提: qibbpus is kenzpus and nekwpus
  - 前提: kenzpus is kizcpus and katfpus
  - 前提: kizcpus is lahkpus
  - 前提: lahkpus is seljpus
  - 前提: seljpus is jefypus
  - 前提: jefypus is kadkpus and dacxpus
  - 前提: kadkpus is bagqpus
  - 前提: bagqpus is lehnpus
  - 前提: lehnpus is rezspus
  - 前提: rezspus is xunjpus and gajkpus
  - 前提: xunjpus is vexnpus
  - 前提: vexnpus is lucypus
  - 前提: lucypus is jutdpus and lurmpus
  - 前提: jutdpus is zahbpus
  - 前提: zahbpus is hatkpus
  - 前提: hatkpus is metqpus
  - 前提: metqpus is kamkpus
  - 前提: kamkpus is vijwpus and jusdpus
  - 前提: vijwpus is kokxpus
  - 前提: kokxpus is yabmpus
  ✓ 点亮LoG节点: kamkpus is yabmpus
[子树点亮]     └─ 点亮依赖节点: vijwpus is yabmpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 1 个节点
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 148: yabmpus is babgpus and luzrpus
      ↻ 重复节点，计数: 5

   节点 149: x is babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is zohgpus → zohgpus is babgpus
[后处理] 基于推理轨迹点亮节点，使用了 31 个前提条件:
  - 前提: x is zohgpus
  - 前提: zohgpus is kobvpus
  - 前提: kobvpus is raygpus and wusjpus
  - 前提: raygpus is maplpus
  - 前提: maplpus is sasqpus and reqypus
  - 前提: sasqpus is tujbpus
  - 前提: tujbpus is gitfpus and mujvpus
  - 前提: gitfpus is yarkpus
  - 前提: yarkpus is forwpus
  - 前提: forwpus is qibbpus
  - 前提: qibbpus is kenzpus and nekwpus
  - 前提: kenzpus is kizcpus and katfpus
  - 前提: kizcpus is lahkpus
  - 前提: lahkpus is seljpus
  - 前提: seljpus is jefypus
  - 前提: jefypus is kadkpus and dacxpus
  - 前提: kadkpus is bagqpus
  - 前提: bagqpus is lehnpus
  - 前提: lehnpus is rezspus
  - 前提: rezspus is xunjpus and gajkpus
  - 前提: xunjpus is vexnpus
  - 前提: vexnpus is lucypus
  - 前提: lucypus is jutdpus and lurmpus
  - 前提: jutdpus is zahbpus
  - 前提: zahbpus is hatkpus
  - 前提: hatkpus is metqpus
  - 前提: metqpus is kamkpus
  - 前提: kamkpus is vijwpus and jusdpus
  - 前提: vijwpus is kokxpus
  - 前提: kokxpus is yabmpus
  - 前提: yabmpus is babgpus
  ✓ 点亮LoG节点: x is babgpus or babrpus or babspus
[子树点亮]     └─ 点亮依赖节点: kenzpus is babgpus or babrpus or babspus (深度2)
[子树点亮]     └─ 点亮依赖节点: xunjpus is babgpus or babrpus or babspus (深度3)
[子树点亮]     └─ 点亮依赖节点: kamkpus is babgpus or babrpus or babspus (深度4)
[子树点亮]     └─ 点亮依赖节点: yabmpus is babgpus or babrpus or babspus (深度5)
[后处理]   └─ 自动点亮依赖子树: 4 个节点
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 150: x is babgpus
      ↻ 重复节点，计数: 2

   节点 151: x is babgpus
      ↻ 重复节点，计数: 3

   节点 152: x is babgpus or babrpus or babspus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 153: nehgpus is zohgpus and kobvpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 154: x is babgpus
      ↻ 重复节点，计数: 4

🔍 分析推理路径完整性...

============================================================
[后处理] 处理完成
============================================================
📈 处理统计:
   - 处理的actual节点: 154
   - 新增节点: 22
   - 更新已存在节点: 132
   - 点亮的LoG节点: 42

🎯 推理质量统计:
   - 完美推理: 20 (节点正确 + 路径正确)
   - 部分推理: 2 (节点正确 + 路径部分错误)
   - 无效推理: 0 (节点错误或路径完全错误)
[LoG分析] LoG图: 42节点, 31前提, 复杂度1-31

📊 === Statement列表分析 ===
📈 节点统计:
   - 总节点数: 53
   - 前提节点: 31
   - 推理节点: 19
   - 幻觉节点: 3
   - 点亮LoG节点: 42

❌ 幻觉节点详情:
   - luzrpus is babgpus (出现1次)
   - lakhpus is seljpus (出现1次)
   - nehgpus is zohgpus and kobvpus (出现1次)

✅ 推理节点详情:
   🟡 yabmpus is babgpus (出现2次, 质量:partial)
      ⚠️  无效依赖: ['luzrpus is babgpus']
   🟢 x is kobvpus and nehgpus (出现1次, 质量:perfect)
   🟢 zohgpus is kobvpus (出现1次, 质量:perfect)
   🟢 x is kobvpus (出现1次, 质量:perfect)
   🟢 x is sasqpus (出现1次, 质量:perfect)
   🟢 x is gitfpus and mujvpus (出现1次, 质量:perfect)
   🟢 x is yarkpus (出现1次, 质量:perfect)
   🟢 x is qibbpus (出现1次, 质量:perfect)
   🟢 x is kizcpus and katfpus (出现1次, 质量:perfect)
   🟢 x is kadkpus and dacxpus (出现1次, 质量:perfect)
   🟢 x is xunjpus and gajkpus (出现1次, 质量:perfect)
   🟢 x is vexnpus (出现1次, 质量:perfect)
   🟢 x is lucypus (出现1次, 质量:perfect)
   🟢 x is jutdpus and lurmpus (出现1次, 质量:perfect)
   🟢 x is hatkpus (出现1次, 质量:perfect)
   🟢 x is kokxpus (出现1次, 质量:perfect)
   🟢 x is yabmpus (出现1次, 质量:perfect)
   🟡 x is babgpus (出现4次, 质量:partial)
      ⚠️  无效依赖: ['luzrpus is babgpus']
   🟢 x is babgpus or babrpus or babspus (出现1次, 质量:perfect)

🔥 点亮的LoG节点:
   - kobvpus is raygpus
   - xunjpus is kamkpus
   - x is kobvpus
   - yabmpus is babgpus
   - kadkpus is xunjpus and gajkpus
   - xunjpus is lucypus
   - x is sasqpus and reqypus
   - kizcpus is seljpus
   - kamkpus is babgpus or babrpus or babspus
   - kenzpus is kadkpus
   - kobvpus is sasqpus and reqypus
   - kenzpus is seljpus
   - gitfpus is forwpus
   - sasqpus is kenzpus and nekwpus
   - kamkpus is yabmpus
   - kenzpus is babgpus or babrpus or babspus
   - sasqpus is gitfpus and mujvpus
   - kamkpus is vijwpus
   - sasqpus is kenzpus
   - seljpus is kadkpus
   - lehnpus is xunjpus and gajkpus
   - jutdpus is hatkpus
   - xunjpus is jutdpus
   - seljpus is kadkpus and dacxpus
   - kadkpus is xunjpus
   - kadkpus is lehnpus
   - sasqpus is gitfpus
   - x is sasqpus
   - x is babgpus or babrpus or babspus
   - x is kobvpus and nehgpus
   - gitfpus is kenzpus and nekwpus
   - xunjpus is babgpus or babrpus or babspus
   - hatkpus is kamkpus
   - jutdpus is kamkpus
   - lucypus is jutdpus
   - kenzpus is xunjpus
   - yabmpus is babgpus or babrpus or babspus
   - raygpus is sasqpus and reqypus
   - kenzpus is kizcpus
   - vijwpus is yabmpus
   - x is kenzpus
   - forwpus is kenzpus and nekwpus

============================================================
📊 计算评估指标
============================================================

🎯 计算Coverage指标...
   深度Coverage: 6/6 = 100.00%
   最深点亮节点: x is babgpus or babrpus or babspus (第6层)
   节点Coverage: 42/42 = 100.00%
   前提条件Coverage: 31/31 = 100.00%
   各推理层点亮比例:
     第1层: 18/18 = 100.00%
     第2层: 11/11 = 100.00%
     第3层: 6/6 = 100.00%
     第4层: 4/4 = 100.00%
     第5层: 2/2 = 100.00%
     第6层: 1/1 = 100.00%

🎯 计算Precision指标...
   Error Rate: 3/22 = 13.64%
   可推导节点: 19/22
   Strict Error Rate: 5/22 = 22.73%
   严格有效节点: 17/22

   详细分析:
     完美推理: 20 (90.91%)
     部分推理: 2 (9.09%)
     无效推理: 0 (0.00%)

================================================================================
处理记录 21/50
================================================================================
记录索引: 20
问题状态: correct
📁 从缓存加载提取结果: evaluation_results.LoG_6.deepseek-reasoner_record_20.json
✅ 使用缓存结果:
   - 句子数: 100
   - 提取的语句数: 133
   - 初始条件数: 12

=== Statement提取完成 ===
总句子数: 100
成功提取: 99
失败提取: 1
总statements数: 133

=== 开始清洗Statement格式 ===
原始statements数: 133
清洗后statements数: 97
过滤掉的statements数: 36
清洗后的statements:
  1. [planning] x is babgpus
  2. [actual] borzpus is nevtpus
  3. [actual] borzpus is nevtpus
  4. [actual] zetspus is babgpus
  5. [actual] borzpus is lagwpus
  6. [actual] x is mesdpus and kuwqpus
  7. [actual] zetspus is pahgpus and yupgpus
  8. [actual] qurkpus is ginxpus
  9. [actual] nevtpus is yoynpus
  10. [actual] qurkpus is lugmpus
  11. [actual] ginxpus is borzpus and yoycpus
  12. [actual] mesdpus is qipppus and kujgpus and ciwnpus
  13. [actual] qipppus is qurkpus and gazqpus
  14. [actual] yoynpus is zetspus
  15. [planning] x is babgpus
  16. [actual] zetspus is babgpus
  17. [planning] x is related to zetspus
  18. [actual] x is mesdpus and kuwqpus
  19. [actual] x is mesdpus and kuwqpus
  20. [planning] mesdpus is babgpus
  21. [planning] kuwqpus is babgpus
  22. [actual] zetspus is babgpus
  23. [actual] babgpus is zetspus
  24. [planning] x is babgpus
  25. [planning] x is zetspus or directly to babgpus
  26. [actual] yoynpus is zetspus
  27. [actual] yoynpus is zetspus
  28. [actual] nevtpus is yoynpus
  29. [actual] borzpus is nevtpus
  30. [actual] borzpus is nevtpus
  31. [actual] ginxpus is borzpus and yoycpus
  32. [actual] ginxpus is borzpus
  33. [actual] qurkpus is ginxpus
  34. [actual] qurkpus is ginxpus
  35. [actual] qipppus is qurkpus and gazqpus
  36. [actual] mesdpus is qipppus and kujgpus and ciwnpus
  37. [planning] mesdpus is qipppus
  38. [actual] x is mesdpus
  39. [actual] x is mesdpus
  40. [actual] qurkpus is ginxpus
  41. [actual] borzpus is nevtpus
  42. [actual] nevtpus is yoynpus
  43. [actual] yoynpus is zetspus
  44. [actual] zetspus is babgpus
  45. [actual] x is mesdpus
  46. [actual] mesdpus is a chain
  47. [planning] x is babgpus
  48. [planning] x is directly in babgpus
  49. [planning] x is babgpus
  50. [planning] x is babgpus
  51. [planning] x is babgpus
  52. [actual] yoynpus is zetspus
  53. [actual] yoynpus is zetspus
  54. [actual] nevtpus is yoynpus
  55. [actual] nevtpus is yoynpus
  56. [actual] borzpus is nevtpus
  57. [actual] borzpus is nevtpus
  58. [actual] ginxpus is borzpus and yoycpus
  59. [planning] ginxpus is borzpus
  60. [actual] ginxpus is borzpus and yoycpus
  61. [planning] ginxpus is borzpus
  62. [actual] ginxpus is borzpus and yoycpus
  63. [actual] borzpus is ginxpus
  64. [actual] yoycpus is ginxpus
  65. [actual] borzpus is nevtpus
  66. [actual] borzpus is nevtpus
  67. [actual] nevtpus is nevtpus and contains borzpus
  68. [actual] qurkpus is ginxpus
  69. [actual] qipppus is qurkpus and gazqpus
  70. [actual] mesdpus is qipppus and kujgpus and ciwnpus
  71. [actual] qipppus is mesdpus
  72. [actual] kujgpus is mesdpus
  73. [actual] ciwnpus is mesdpus
  74. [actual] x is mesdpus and kuwqpus
  75. [planning] x is babgpus
  76. [actual] x is babgpus
  77. [actual] zetspus is babgpus
  78. [actual] yoynpus is zetspus
  79. [actual] nevtpus is yoynpus
  80. [actual] ginxpus is borzpus
  81. [actual] qurkpus is ginxpus
  82. [planning] ginxpus is qurkpus
  83. [actual] qurkpus is qipppus
  84. [actual] mesdpus is qipppus
  85. [planning] mesdpus is qipppus
  86. [actual] x is mesdpus
  87. [actual] x is babgpus
  88. [planning] x is babgpus
  89. [actual] x is babgpus
  90. [actual] zetspus is pahgpus and yupgpus
  91. [actual] borzpus is lagwpus
  92. [planning] borzpus is lagwpus
  93. [actual] qurkpus is lugmpus
  94. [planning] qurkpus is lugmpus
  95. [actual] ginxpus is yoycpus
  96. [planning] yoycpus is babgpus
  97. [actual] x is babgpus

=== 开始标准化和解析节点 ===
清洗后statements数: 97
标准化后节点数: 92
过滤掉的无效实体数: 5
标准化后的节点:
  1. [planning] x → babgpus (原始: x is babgpus)
  2. [actual] borzpus → nevtpus (原始: borzpus is nevtpus)
  3. [actual] borzpus → nevtpus (原始: borzpus is nevtpus)
  4. [actual] zetspus → babgpus (原始: zetspus is babgpus)
  5. [actual] borzpus → lagwpus (原始: borzpus is lagwpus)
  6. [actual] x → mesdpus and kuwqpus (原始: x is mesdpus and kuwqpus)
  7. [actual] zetspus → pahgpus and yupgpus (原始: zetspus is pahgpus and yupgpus)
  8. [actual] qurkpus → ginxpus (原始: qurkpus is ginxpus)
  9. [actual] nevtpus → yoynpus (原始: nevtpus is yoynpus)
  10. [actual] qurkpus → lugmpus (原始: qurkpus is lugmpus)
  11. [actual] ginxpus → borzpus and yoycpus (原始: ginxpus is borzpus and yoycpus)
  12. [actual] mesdpus → qipppus and kujgpus and ciwnpus (原始: mesdpus is qipppus and kujgpus and ciwnpus)
  13. [actual] qipppus → qurkpus and gazqpus (原始: qipppus is qurkpus and gazqpus)
  14. [actual] yoynpus → zetspus (原始: yoynpus is zetspus)
  15. [planning] x → babgpus (原始: x is babgpus)
  16. [actual] zetspus → babgpus (原始: zetspus is babgpus)
  17. [actual] x → mesdpus and kuwqpus (原始: x is mesdpus and kuwqpus)
  18. [actual] x → mesdpus and kuwqpus (原始: x is mesdpus and kuwqpus)
  19. [planning] mesdpus → babgpus (原始: mesdpus is babgpus)
  20. [planning] kuwqpus → babgpus (原始: kuwqpus is babgpus)
  21. [actual] zetspus → babgpus (原始: zetspus is babgpus)
  22. [actual] babgpus → zetspus (原始: babgpus is zetspus)
  23. [planning] x → babgpus (原始: x is babgpus)
  24. [actual] yoynpus → zetspus (原始: yoynpus is zetspus)
  25. [actual] yoynpus → zetspus (原始: yoynpus is zetspus)
  26. [actual] nevtpus → yoynpus (原始: nevtpus is yoynpus)
  27. [actual] borzpus → nevtpus (原始: borzpus is nevtpus)
  28. [actual] borzpus → nevtpus (原始: borzpus is nevtpus)
  29. [actual] ginxpus → borzpus and yoycpus (原始: ginxpus is borzpus and yoycpus)
  30. [actual] ginxpus → borzpus (原始: ginxpus is borzpus)
  31. [actual] qurkpus → ginxpus (原始: qurkpus is ginxpus)
  32. [actual] qurkpus → ginxpus (原始: qurkpus is ginxpus)
  33. [actual] qipppus → qurkpus and gazqpus (原始: qipppus is qurkpus and gazqpus)
  34. [actual] mesdpus → qipppus and kujgpus and ciwnpus (原始: mesdpus is qipppus and kujgpus and ciwnpus)
  35. [planning] mesdpus → qipppus (原始: mesdpus is qipppus)
  36. [actual] x → mesdpus (原始: x is mesdpus)
  37. [actual] x → mesdpus (原始: x is mesdpus)
  38. [actual] qurkpus → ginxpus (原始: qurkpus is ginxpus)
  39. [actual] borzpus → nevtpus (原始: borzpus is nevtpus)
  40. [actual] nevtpus → yoynpus (原始: nevtpus is yoynpus)
  41. [actual] yoynpus → zetspus (原始: yoynpus is zetspus)
  42. [actual] zetspus → babgpus (原始: zetspus is babgpus)
  43. [actual] x → mesdpus (原始: x is mesdpus)
  44. [planning] x → babgpus (原始: x is babgpus)
  45. [planning] x → babgpus (原始: x is babgpus)
  46. [planning] x → babgpus (原始: x is babgpus)
  47. [planning] x → babgpus (原始: x is babgpus)
  48. [actual] yoynpus → zetspus (原始: yoynpus is zetspus)
  49. [actual] yoynpus → zetspus (原始: yoynpus is zetspus)
  50. [actual] nevtpus → yoynpus (原始: nevtpus is yoynpus)
  51. [actual] nevtpus → yoynpus (原始: nevtpus is yoynpus)
  52. [actual] borzpus → nevtpus (原始: borzpus is nevtpus)
  53. [actual] borzpus → nevtpus (原始: borzpus is nevtpus)
  54. [actual] ginxpus → borzpus and yoycpus (原始: ginxpus is borzpus and yoycpus)
  55. [planning] ginxpus → borzpus (原始: ginxpus is borzpus)
  56. [actual] ginxpus → borzpus and yoycpus (原始: ginxpus is borzpus and yoycpus)
  57. [planning] ginxpus → borzpus (原始: ginxpus is borzpus)
  58. [actual] ginxpus → borzpus and yoycpus (原始: ginxpus is borzpus and yoycpus)
  59. [actual] borzpus → ginxpus (原始: borzpus is ginxpus)
  60. [actual] yoycpus → ginxpus (原始: yoycpus is ginxpus)
  61. [actual] borzpus → nevtpus (原始: borzpus is nevtpus)
  62. [actual] borzpus → nevtpus (原始: borzpus is nevtpus)
  63. [actual] qurkpus → ginxpus (原始: qurkpus is ginxpus)
  64. [actual] qipppus → qurkpus and gazqpus (原始: qipppus is qurkpus and gazqpus)
  65. [actual] mesdpus → qipppus and kujgpus and ciwnpus (原始: mesdpus is qipppus and kujgpus and ciwnpus)
  66. [actual] qipppus → mesdpus (原始: qipppus is mesdpus)
  67. [actual] kujgpus → mesdpus (原始: kujgpus is mesdpus)
  68. [actual] ciwnpus → mesdpus (原始: ciwnpus is mesdpus)
  69. [actual] x → mesdpus and kuwqpus (原始: x is mesdpus and kuwqpus)
  70. [planning] x → babgpus (原始: x is babgpus)
  71. [actual] x → babgpus (原始: x is babgpus)
  72. [actual] zetspus → babgpus (原始: zetspus is babgpus)
  73. [actual] yoynpus → zetspus (原始: yoynpus is zetspus)
  74. [actual] nevtpus → yoynpus (原始: nevtpus is yoynpus)
  75. [actual] ginxpus → borzpus (原始: ginxpus is borzpus)
  76. [actual] qurkpus → ginxpus (原始: qurkpus is ginxpus)
  77. [planning] ginxpus → qurkpus (原始: ginxpus is qurkpus)
  78. [actual] qurkpus → qipppus (原始: qurkpus is qipppus)
  79. [actual] mesdpus → qipppus (原始: mesdpus is qipppus)
  80. [planning] mesdpus → qipppus (原始: mesdpus is qipppus)
  81. [actual] x → mesdpus (原始: x is mesdpus)
  82. [actual] x → babgpus (原始: x is babgpus)
  83. [planning] x → babgpus (原始: x is babgpus)
  84. [actual] x → babgpus (原始: x is babgpus)
  85. [actual] zetspus → pahgpus and yupgpus (原始: zetspus is pahgpus and yupgpus)
  86. [actual] borzpus → lagwpus (原始: borzpus is lagwpus)
  87. [planning] borzpus → lagwpus (原始: borzpus is lagwpus)
  88. [actual] qurkpus → lugmpus (原始: qurkpus is lugmpus)
  89. [planning] qurkpus → lugmpus (原始: qurkpus is lugmpus)
  90. [actual] ginxpus → yoycpus (原始: ginxpus is yoycpus)
  91. [planning] yoycpus → babgpus (原始: yoycpus is babgpus)
  92. [actual] x → babgpus (原始: x is babgpus)

开始新的后处理...
[后处理] 从LoG数据文件中获取到图数据，节点数: 20
[后处理] 加载LoG图，包含 20 个节点
  LoG节点 0: x is babgpus (规则: CE, 深度: 1)
  LoG节点 1: x is babgpus and pahgpus (规则: MP, 深度: 2)
  LoG节点 2: x is ginxpus (规则: MP, 深度: 3)
  LoG节点 3: ginxpus is babgpus and pahgpus (规则: MP, 深度: 3)
  LoG节点 4: x is qipppus (规则: CE, 深度: 4)
  LoG节点 5: qipppus is ginxpus (规则: CE, 深度: 4)
  LoG节点 6: ginxpus is nevtpus (规则: CE, 深度: 4)
  LoG节点 7: nevtpus is babgpus and pahgpus (规则: CE, 深度: 4)
  LoG节点 8: x is qipppus and kujgpus (规则: MP, 深度: 5)
  LoG节点 9: qipppus is ginxpus and lugmpus (规则: MP, 深度: 5)
  LoG节点 10: ginxpus is nevtpus and lagwpus (规则: MP, 深度: 5)
  LoG节点 11: nevtpus is babgpus and pahgpus and yupgpus (规则: MP, 深度: 5)
  LoG节点 12: x is mesdpus (规则: CE, 深度: 6)
  LoG节点 13: mesdpus is qipppus and kujgpus (规则: CE, 深度: 6)
  LoG节点 14: qipppus is qurkpus (规则: CE, 深度: 6)
  LoG节点 15: qurkpus is ginxpus and lugmpus (规则: CI, 深度: 6)
  LoG节点 16: ginxpus is borzpus (规则: CE, 深度: 6)
  LoG节点 17: borzpus is nevtpus and lagwpus (规则: CI, 深度: 6)
  LoG节点 18: nevtpus is zetspus (规则: MP, 深度: 6)
  LoG节点 19: zetspus is babgpus and pahgpus and yupgpus (规则: CI, 深度: 6)

============================================================
[后处理] 开始处理节点
============================================================
📊 初始状态:
   - 标准化节点数: 92
   - 初始条件数: 12
   - LoG图节点数: 20

📋 初始条件列表:
    1. borzpus is nevtpus
    2. zetspus is babgpus
    3. borzpus is lagwpus
    4. x is mesdpus and kuwqpus
    5. zetspus is pahgpus and yupgpus
    6. qurkpus is ginxpus
    7. nevtpus is yoynpus
    8. qurkpus is lugmpus
    9. ginxpus is borzpus and yoycpus
   10. mesdpus is qipppus and kujgpus and ciwnpus
   11. qipppus is qurkpus and gazqpus
   12. yoynpus is zetspus

🔧 构建初始Statement列表...
✅ 初始Statement列表构建完成，包含 12 个前提节点

🔍 开始处理actual节点...

   节点 1: borzpus is nevtpus
      ↻ 重复节点，计数: 2

   节点 2: borzpus is nevtpus
      ↻ 重复节点，计数: 3

   节点 3: zetspus is babgpus
      ↻ 重复节点，计数: 2

   节点 4: borzpus is lagwpus
      ↻ 重复节点，计数: 2

   节点 5: x is mesdpus and kuwqpus
      ↻ 重复节点，计数: 2

   节点 6: zetspus is pahgpus and yupgpus
      ↻ 重复节点，计数: 2

   节点 7: qurkpus is ginxpus
      ↻ 重复节点，计数: 2

   节点 8: nevtpus is yoynpus
      ↻ 重复节点，计数: 2

   节点 9: qurkpus is lugmpus
      ↻ 重复节点，计数: 2

   节点 10: ginxpus is borzpus and yoycpus
      ↻ 重复节点，计数: 2

   节点 11: mesdpus is qipppus and kujgpus and ciwnpus
      ↻ 重复节点，计数: 2

   节点 12: qipppus is qurkpus and gazqpus
      ↻ 重复节点，计数: 2

   节点 13: yoynpus is zetspus
      ↻ 重复节点，计数: 2

   节点 14: zetspus is babgpus
      ↻ 重复节点，计数: 3

   节点 15: x is mesdpus and kuwqpus
      ↻ 重复节点，计数: 3

   节点 16: x is mesdpus and kuwqpus
      ↻ 重复节点，计数: 4

   节点 17: zetspus is babgpus
      ↻ 重复节点，计数: 4

   节点 18: babgpus is zetspus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 19: yoynpus is zetspus
      ↻ 重复节点，计数: 3

   节点 20: yoynpus is zetspus
      ↻ 重复节点，计数: 4

   节点 21: nevtpus is yoynpus
      ↻ 重复节点，计数: 3

   节点 22: borzpus is nevtpus
      ↻ 重复节点，计数: 4

   节点 23: borzpus is nevtpus
      ↻ 重复节点，计数: 5

   节点 24: ginxpus is borzpus and yoycpus
      ↻ 重复节点，计数: 3

   节点 25: ginxpus is borzpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: ginxpus is borzpus
      ✅ 验证成功 + LoG匹配

   节点 26: qurkpus is ginxpus
      ↻ 重复节点，计数: 3

   节点 27: qurkpus is ginxpus
      ↻ 重复节点，计数: 4

   节点 28: qipppus is qurkpus and gazqpus
      ↻ 重复节点，计数: 3

   节点 29: mesdpus is qipppus and kujgpus and ciwnpus
      ↻ 重复节点，计数: 3

   节点 30: x is mesdpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is mesdpus
      ✅ 验证成功 + LoG匹配

   节点 31: x is mesdpus
      ↻ 重复节点，计数: 2

   节点 32: qurkpus is ginxpus
      ↻ 重复节点，计数: 5

   节点 33: borzpus is nevtpus
      ↻ 重复节点，计数: 6

   节点 34: nevtpus is yoynpus
      ↻ 重复节点，计数: 4

   节点 35: yoynpus is zetspus
      ↻ 重复节点，计数: 5

   节点 36: zetspus is babgpus
      ↻ 重复节点，计数: 5

   节点 37: x is mesdpus
      ↻ 重复节点，计数: 3

   节点 38: yoynpus is zetspus
      ↻ 重复节点，计数: 6

   节点 39: yoynpus is zetspus
      ↻ 重复节点，计数: 7

   节点 40: nevtpus is yoynpus
      ↻ 重复节点，计数: 5

   节点 41: nevtpus is yoynpus
      ↻ 重复节点，计数: 6

   节点 42: borzpus is nevtpus
      ↻ 重复节点，计数: 7

   节点 43: borzpus is nevtpus
      ↻ 重复节点，计数: 8

   节点 44: ginxpus is borzpus and yoycpus
      ↻ 重复节点，计数: 4

   节点 45: ginxpus is borzpus and yoycpus
      ↻ 重复节点，计数: 5

   节点 46: ginxpus is borzpus and yoycpus
      ↻ 重复节点，计数: 6

   节点 47: borzpus is ginxpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 48: yoycpus is ginxpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 49: borzpus is nevtpus
      ↻ 重复节点，计数: 9

   节点 50: borzpus is nevtpus
      ↻ 重复节点，计数: 10

   节点 51: qurkpus is ginxpus
      ↻ 重复节点，计数: 6

   节点 52: qipppus is qurkpus and gazqpus
      ↻ 重复节点，计数: 4

   节点 53: mesdpus is qipppus and kujgpus and ciwnpus
      ↻ 重复节点，计数: 4

   节点 54: qipppus is mesdpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 55: kujgpus is mesdpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 56: ciwnpus is mesdpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 57: x is mesdpus and kuwqpus
      ↻ 重复节点，计数: 5

   节点 58: x is babgpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is babgpus
[子树点亮]     └─ 点亮依赖节点: x is babgpus and pahgpus (深度2)
[子树点亮]     └─ 点亮依赖节点: x is ginxpus (深度3)
[子树点亮]     └─ 点亮依赖节点: ginxpus is babgpus and pahgpus (深度3)
[子树点亮]     └─ 点亮依赖节点: x is qipppus (深度4)
[子树点亮]     └─ 点亮依赖节点: qipppus is ginxpus (深度4)
[子树点亮]     └─ 点亮依赖节点: ginxpus is nevtpus (深度4)
[子树点亮]     └─ 点亮依赖节点: nevtpus is babgpus and pahgpus (深度4)
[子树点亮]     └─ 点亮依赖节点: x is qipppus and kujgpus (深度5)
[子树点亮]     └─ 点亮依赖节点: qipppus is ginxpus and lugmpus (深度5)
[子树点亮]     └─ 点亮依赖节点: ginxpus is nevtpus and lagwpus (深度5)
[子树点亮]     └─ 点亮依赖节点: nevtpus is babgpus and pahgpus and yupgpus (深度5)
[子树点亮]     └─ 点亮依赖节点: mesdpus is qipppus and kujgpus (深度6)
[子树点亮]     └─ 点亮依赖节点: qipppus is qurkpus (深度6)
[子树点亮]     └─ 点亮依赖节点: qurkpus is ginxpus and lugmpus (深度6)
[子树点亮]     └─ 点亮依赖节点: borzpus is nevtpus and lagwpus (深度6)
[子树点亮]     └─ 点亮依赖节点: nevtpus is zetspus (深度6)
[子树点亮]     └─ 点亮依赖节点: zetspus is babgpus and pahgpus and yupgpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 17 个节点
      ✅ 验证成功 + LoG匹配

   节点 59: zetspus is babgpus
      ↻ 重复节点，计数: 6

   节点 60: yoynpus is zetspus
      ↻ 重复节点，计数: 8

   节点 61: nevtpus is yoynpus
      ↻ 重复节点，计数: 7

   节点 62: ginxpus is borzpus
      ↻ 重复节点，计数: 2

   节点 63: qurkpus is ginxpus
      ↻ 重复节点，计数: 7

   节点 64: qurkpus is qipppus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 65: mesdpus is qipppus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: mesdpus is qipppus and kujgpus and ciwnpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: mesdpus is qipppus and kujgpus and ciwnpus

   节点 66: x is mesdpus
      ↻ 重复节点，计数: 4

   节点 67: x is babgpus
      ↻ 重复节点，计数: 2

   节点 68: x is babgpus
      ↻ 重复节点，计数: 3

   节点 69: zetspus is pahgpus and yupgpus
      ↻ 重复节点，计数: 3

   节点 70: borzpus is lagwpus
      ↻ 重复节点，计数: 3

   节点 71: qurkpus is lugmpus
      ↻ 重复节点，计数: 3

   节点 72: ginxpus is yoycpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: ginxpus is borzpus and yoycpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: ginxpus is borzpus and yoycpus

   节点 73: x is babgpus
      ↻ 重复节点，计数: 4

🔍 分析推理路径完整性...

============================================================
[后处理] 处理完成
============================================================
📈 处理统计:
   - 处理的actual节点: 73
   - 新增节点: 12
   - 更新已存在节点: 61
   - 点亮的LoG节点: 20

🎯 推理质量统计:
   - 完美推理: 5 (节点正确 + 路径正确)
   - 部分推理: 7 (节点正确 + 路径部分错误)
   - 无效推理: 0 (节点错误或路径完全错误)
[LoG分析] LoG图: 20节点, 12前提, 复杂度1-12

📊 === Statement列表分析 ===
📈 节点统计:
   - 总节点数: 24
   - 前提节点: 12
   - 推理节点: 5
   - 幻觉节点: 7
   - 点亮LoG节点: 20

❌ 幻觉节点详情:
   - babgpus is zetspus (出现1次)
   - borzpus is ginxpus (出现1次)
   - yoycpus is ginxpus (出现1次)
   - qipppus is mesdpus (出现1次)
   - kujgpus is mesdpus (出现1次)
   - ciwnpus is mesdpus (出现1次)
   - qurkpus is qipppus (出现1次)

✅ 推理节点详情:
   🟢 ginxpus is borzpus (出现2次, 质量:perfect)
   🟡 x is mesdpus (出现4次, 质量:partial)
      ⚠️  无效依赖: ['qipppus is mesdpus', 'kujgpus is mesdpus', 'ciwnpus is mesdpus']
   🟢 x is babgpus (出现4次, 质量:perfect)
   🟡 mesdpus is qipppus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['qurkpus is qipppus']
   🟢 ginxpus is yoycpus (出现1次, 质量:perfect)

🔥 点亮的LoG节点:
   - nevtpus is zetspus
   - x is babgpus and pahgpus
   - zetspus is babgpus and pahgpus and yupgpus
   - nevtpus is babgpus and pahgpus and yupgpus
   - ginxpus is borzpus
   - ginxpus is babgpus and pahgpus
   - x is babgpus
   - qurkpus is ginxpus and lugmpus
   - x is qipppus and kujgpus
   - x is qipppus
   - qipppus is qurkpus
   - x is mesdpus
   - nevtpus is babgpus and pahgpus
   - ginxpus is nevtpus
   - x is ginxpus
   - qipppus is ginxpus and lugmpus
   - borzpus is nevtpus and lagwpus
   - ginxpus is nevtpus and lagwpus
   - qipppus is ginxpus
   - mesdpus is qipppus and kujgpus

============================================================
📊 计算评估指标
============================================================

🎯 计算Coverage指标...
   深度Coverage: 6/6 = 100.00%
   最深点亮节点: x is babgpus (第6层)
   节点Coverage: 20/20 = 100.00%
   前提条件Coverage: 12/12 = 100.00%
   各推理层点亮比例:
     第1层: 8/8 = 100.00%
     第2层: 4/4 = 100.00%
     第3层: 4/4 = 100.00%
     第4层: 2/2 = 100.00%
     第5层: 1/1 = 100.00%
     第6层: 1/1 = 100.00%

🎯 计算Precision指标...
   Error Rate: 7/12 = 58.33%
   可推导节点: 5/12
   Strict Error Rate: 9/12 = 75.00%
   严格有效节点: 3/12

   详细分析:
     完美推理: 5 (41.67%)
     部分推理: 7 (58.33%)
     无效推理: 0 (0.00%)

================================================================================
处理记录 22/50
================================================================================
记录索引: 21
问题状态: correct
📁 从缓存加载提取结果: evaluation_results.LoG_6.deepseek-reasoner_record_21.json
✅ 使用缓存结果:
   - 句子数: 70
   - 提取的语句数: 102
   - 初始条件数: 22

=== Statement提取完成 ===
总句子数: 70
成功提取: 70
失败提取: 0
总statements数: 102

=== 开始清洗Statement格式 ===
原始statements数: 102
清洗后statements数: 98
过滤掉的statements数: 4
清洗后的statements:
  1. [planning] x is babgpus
  2. [planning] x is babrpus
  3. [planning] x is babspus
  4. [actual] x is fahnpus
  5. [actual] x is fahnpus
  6. [actual] x is gujkpus and mujspus
  7. [actual] x is gujkpus and mujspus
  8. [planning] x is babgpus
  9. [planning] x is babrpus
  10. [planning] x is babspus
  11. [actual] wobypus is babgpus
  12. [actual] puwhpus is wobypus
  13. [actual] puwhpus is wobypus and wobypus is babgpus
  14. [planning] puwhpus is babgpus
  15. [actual] wobypus is babgpus
  16. [actual] wobypus is a type of babgpus
  17. [actual] wobypus is babgpus
  18. [planning] wobypus is babgpus
  19. [actual] puwhpus is wobypus
  20. [planning] puwhpus is babgpus
  21. [actual] wobypus is babgpus
  22. [actual] puwhpus is wobypus
  23. [actual] wobypus is babgpus
  24. [planning] puwhpus is babgpus
  25. [planning] wobypus is a category that contains puwhpus
  26. [planning] wobypus is babgpus
  27. [planning] puwhpus is babgpus
  28. [actual] puwhpus is babrpus
  29. [actual] puwhpus is babrpus and defhpus
  30. [actual] puwhpus is a member of babrpus category
  31. [actual] hofspus is babspus and nerqpus and pifppus and kanfpus
  32. [actual] quyjpus is hofspus
  33. [actual] hofspus is babspus
  34. [actual] quyjpus is babspus
  35. [planning] x is these categories
  36. [actual] x is fahnpus and gujkpus and mujspus
  37. [actual] x is fahnpus
  38. [actual] fahnpus is feygpus
  39. [actual] x is feygpus
  40. [actual] feygpus is zufgpus
  41. [planning] x is zufgpus
  42. [actual] zufgpus is qohvpus
  43. [actual] x is qohvpus
  44. [actual] qohvpus is pikvpus
  45. [planning] x is pikvpus
  46. [actual] pikvpus is vazxpus and siwrpus
  47. [actual] x is vazxpus and siwrpus
  48. [actual] vazxpus is quyjpus
  49. [actual] x is quyjpus
  50. [actual] quyjpus is hofspus
  51. [planning] x is hofspus
  52. [actual] hofspus is babspus and nerqpus and pifppus and kanfpus
  53. [actual] x is hofspus
  54. [actual] x is babspus
  55. [actual] x is babspus
  56. [actual] x is gujkpus
  57. [actual] x is gujkpus and mujspus
  58. [actual] gujkpus is kidqpus and qopcpus and jinkpus
  59. [actual] kidqpus is qonbpus
  60. [actual] gujkpus is kidqpus
  61. [actual] gujkpus is qonbpus
  62. [actual] qonbpus is henppus and silypus
  63. [actual] gujkpus is henppus
  64. [actual] henppus is larmpus
  65. [planning] gujkpus is larmpus
  66. [actual] larmpus is sijvpus and fitlpus
  67. [actual] gujkpus is sijvpus and fitlpus
  68. [actual] sijvpus is farrpus and dolypus
  69. [actual] gujkpus is farrpus and dolypus
  70. [actual] farrpus is nalrpus
  71. [actual] gujkpus is nalrpus
  72. [actual] nalrpus is puwhpus
  73. [actual] gujkpus is puwhpus
  74. [actual] puwhpus is wobypus
  75. [planning] gujkpus is wobypus
  76. [actual] wobypus is babgpus
  77. [actual] gujkpus is babgpus
  78. [actual] x is gujkpus
  79. [actual] gujkpus is babgpus
  80. [actual] x is babgpus
  81. [actual] x is babgpus
  82. [actual] gujkpus is puwhpus
  83. [actual] puwhpus is babrpus
  84. [actual] gujkpus is babrpus
  85. [actual] x is gujkpus
  86. [actual] x is babrpus
  87. [actual] x is babspus
  88. [actual] x is babgpus
  89. [actual] x is babrpus
  90. [actual] x is babgpus and babrpus and babspus
  91. [actual] x is fahnpus
  92. [actual] x is quyjpus and babspus
  93. [actual] x is babgpus
  94. [actual] x is babrpus
  95. [planning] x is gujkpus
  96. [actual] x is fahnpus and gujkpus
  97. [actual] x is all three categories
  98. [planning] x is babgpus and babrpus and babspus

=== 开始标准化和解析节点 ===
清洗后statements数: 98
标准化后节点数: 92
过滤掉的无效实体数: 6
标准化后的节点:
  1. [planning] x → babgpus (原始: x is babgpus)
  2. [planning] x → babrpus (原始: x is babrpus)
  3. [planning] x → babspus (原始: x is babspus)
  4. [actual] x → fahnpus (原始: x is fahnpus)
  5. [actual] x → fahnpus (原始: x is fahnpus)
  6. [actual] x → gujkpus and mujspus (原始: x is gujkpus and mujspus)
  7. [actual] x → gujkpus and mujspus (原始: x is gujkpus and mujspus)
  8. [planning] x → babgpus (原始: x is babgpus)
  9. [planning] x → babrpus (原始: x is babrpus)
  10. [planning] x → babspus (原始: x is babspus)
  11. [actual] wobypus → babgpus (原始: wobypus is babgpus)
  12. [actual] puwhpus → wobypus (原始: puwhpus is wobypus)
  13. [planning] puwhpus → babgpus (原始: puwhpus is babgpus)
  14. [actual] wobypus → babgpus (原始: wobypus is babgpus)
  15. [actual] wobypus → babgpus (原始: wobypus is babgpus)
  16. [planning] wobypus → babgpus (原始: wobypus is babgpus)
  17. [actual] puwhpus → wobypus (原始: puwhpus is wobypus)
  18. [planning] puwhpus → babgpus (原始: puwhpus is babgpus)
  19. [actual] wobypus → babgpus (原始: wobypus is babgpus)
  20. [actual] puwhpus → wobypus (原始: puwhpus is wobypus)
  21. [actual] wobypus → babgpus (原始: wobypus is babgpus)
  22. [planning] puwhpus → babgpus (原始: puwhpus is babgpus)
  23. [planning] wobypus → babgpus (原始: wobypus is babgpus)
  24. [planning] puwhpus → babgpus (原始: puwhpus is babgpus)
  25. [actual] puwhpus → babrpus (原始: puwhpus is babrpus)
  26. [actual] puwhpus → babrpus and defhpus (原始: puwhpus is babrpus and defhpus)
  27. [actual] hofspus → babspus and nerqpus and pifppus and kanfpus (原始: hofspus is babspus and nerqpus and pifppus and kanfpus)
  28. [actual] quyjpus → hofspus (原始: quyjpus is hofspus)
  29. [actual] hofspus → babspus (原始: hofspus is babspus)
  30. [actual] quyjpus → babspus (原始: quyjpus is babspus)
  31. [actual] x → fahnpus and gujkpus and mujspus (原始: x is fahnpus and gujkpus and mujspus)
  32. [actual] x → fahnpus (原始: x is fahnpus)
  33. [actual] fahnpus → feygpus (原始: fahnpus is feygpus)
  34. [actual] x → feygpus (原始: x is feygpus)
  35. [actual] feygpus → zufgpus (原始: feygpus is zufgpus)
  36. [planning] x → zufgpus (原始: x is zufgpus)
  37. [actual] zufgpus → qohvpus (原始: zufgpus is qohvpus)
  38. [actual] x → qohvpus (原始: x is qohvpus)
  39. [actual] qohvpus → pikvpus (原始: qohvpus is pikvpus)
  40. [planning] x → pikvpus (原始: x is pikvpus)
  41. [actual] pikvpus → vazxpus and siwrpus (原始: pikvpus is vazxpus and siwrpus)
  42. [actual] x → vazxpus and siwrpus (原始: x is vazxpus and siwrpus)
  43. [actual] vazxpus → quyjpus (原始: vazxpus is quyjpus)
  44. [actual] x → quyjpus (原始: x is quyjpus)
  45. [actual] quyjpus → hofspus (原始: quyjpus is hofspus)
  46. [planning] x → hofspus (原始: x is hofspus)
  47. [actual] hofspus → babspus and nerqpus and pifppus and kanfpus (原始: hofspus is babspus and nerqpus and pifppus and kanfpus)
  48. [actual] x → hofspus (原始: x is hofspus)
  49. [actual] x → babspus (原始: x is babspus)
  50. [actual] x → babspus (原始: x is babspus)
  51. [actual] x → gujkpus (原始: x is gujkpus)
  52. [actual] x → gujkpus and mujspus (原始: x is gujkpus and mujspus)
  53. [actual] gujkpus → kidqpus and qopcpus and jinkpus (原始: gujkpus is kidqpus and qopcpus and jinkpus)
  54. [actual] kidqpus → qonbpus (原始: kidqpus is qonbpus)
  55. [actual] gujkpus → kidqpus (原始: gujkpus is kidqpus)
  56. [actual] gujkpus → qonbpus (原始: gujkpus is qonbpus)
  57. [actual] qonbpus → henppus and silypus (原始: qonbpus is henppus and silypus)
  58. [actual] gujkpus → henppus (原始: gujkpus is henppus)
  59. [actual] henppus → larmpus (原始: henppus is larmpus)
  60. [planning] gujkpus → larmpus (原始: gujkpus is larmpus)
  61. [actual] larmpus → sijvpus and fitlpus (原始: larmpus is sijvpus and fitlpus)
  62. [actual] gujkpus → sijvpus and fitlpus (原始: gujkpus is sijvpus and fitlpus)
  63. [actual] sijvpus → farrpus and dolypus (原始: sijvpus is farrpus and dolypus)
  64. [actual] gujkpus → farrpus and dolypus (原始: gujkpus is farrpus and dolypus)
  65. [actual] farrpus → nalrpus (原始: farrpus is nalrpus)
  66. [actual] gujkpus → nalrpus (原始: gujkpus is nalrpus)
  67. [actual] nalrpus → puwhpus (原始: nalrpus is puwhpus)
  68. [actual] gujkpus → puwhpus (原始: gujkpus is puwhpus)
  69. [actual] puwhpus → wobypus (原始: puwhpus is wobypus)
  70. [planning] gujkpus → wobypus (原始: gujkpus is wobypus)
  71. [actual] wobypus → babgpus (原始: wobypus is babgpus)
  72. [actual] gujkpus → babgpus (原始: gujkpus is babgpus)
  73. [actual] x → gujkpus (原始: x is gujkpus)
  74. [actual] gujkpus → babgpus (原始: gujkpus is babgpus)
  75. [actual] x → babgpus (原始: x is babgpus)
  76. [actual] x → babgpus (原始: x is babgpus)
  77. [actual] gujkpus → puwhpus (原始: gujkpus is puwhpus)
  78. [actual] puwhpus → babrpus (原始: puwhpus is babrpus)
  79. [actual] gujkpus → babrpus (原始: gujkpus is babrpus)
  80. [actual] x → gujkpus (原始: x is gujkpus)
  81. [actual] x → babrpus (原始: x is babrpus)
  82. [actual] x → babspus (原始: x is babspus)
  83. [actual] x → babgpus (原始: x is babgpus)
  84. [actual] x → babrpus (原始: x is babrpus)
  85. [actual] x → babgpus and babrpus and babspus (原始: x is babgpus and babrpus and babspus)
  86. [actual] x → fahnpus (原始: x is fahnpus)
  87. [actual] x → quyjpus and babspus (原始: x is quyjpus and babspus)
  88. [actual] x → babgpus (原始: x is babgpus)
  89. [actual] x → babrpus (原始: x is babrpus)
  90. [planning] x → gujkpus (原始: x is gujkpus)
  91. [actual] x → fahnpus and gujkpus (原始: x is fahnpus and gujkpus)
  92. [planning] x → babgpus and babrpus and babspus (原始: x is babgpus and babrpus and babspus)

开始新的后处理...
[后处理] 从LoG数据文件中获取到图数据，节点数: 33
[后处理] 加载LoG图，包含 33 个节点
  LoG节点 0: x is babgpus and babrpus and babspus (规则: CI, 深度: 1)
  LoG节点 1: x is babgpus and babrpus (规则: MP, 深度: 2)
  LoG节点 2: x is babspus (规则: CE, 深度: 2)
  LoG节点 3: x is sijvpus (规则: MP, 深度: 3)
  LoG节点 4: sijvpus is babgpus and babrpus (规则: CE, 深度: 3)
  LoG节点 5: x is babspus and nerqpus (规则: MP, 深度: 3)
  LoG节点 6: x is kidqpus (规则: CE, 深度: 4)
  LoG节点 7: kidqpus is sijvpus (规则: MP, 深度: 4)
  LoG节点 8: sijvpus is babgpus and babrpus and saqhpus (规则: MP, 深度: 4)
  LoG节点 9: x is vazxpus (规则: MP, 深度: 4)
  LoG节点 10: vazxpus is babspus and nerqpus (规则: CE, 深度: 4)
  LoG节点 11: x is kidqpus and qopcpus (规则: MP, 深度: 5)
  LoG节点 12: kidqpus is henppus (规则: CE, 深度: 5)
  LoG节点 13: henppus is sijvpus (规则: CE, 深度: 5)
  LoG节点 14: sijvpus is puwhpus (规则: MP, 深度: 5)
  LoG节点 15: puwhpus is babgpus and babrpus and saqhpus (规则: CI, 深度: 5)
  LoG节点 16: x is qohvpus (规则: MP, 深度: 5)
  LoG节点 17: qohvpus is vazxpus (规则: CE, 深度: 5)
  LoG节点 18: vazxpus is babspus and nerqpus and pifppus (规则: MP, 深度: 5)
  LoG节点 19: x is gujkpus (规则: CE, 深度: 6)
  LoG节点 20: gujkpus is kidqpus and qopcpus (规则: CE, 深度: 6)
  LoG节点 21: kidqpus is henppus and silypus (规则: MP, 深度: 6)
  LoG节点 22: henppus is sijvpus and fitlpus (规则: MP, 深度: 6)
  LoG节点 23: sijvpus is farrpus (规则: CE, 深度: 6)
  LoG节点 24: farrpus is puwhpus (规则: MP, 深度: 6)
  LoG节点 25: puwhpus is babgpus (规则: MP, 深度: 6)
  LoG节点 26: puwhpus is babrpus (规则: CE, 深度: 6)
  LoG节点 27: puwhpus is saqhpus (规则: CE, 深度: 6)
  LoG节点 28: x is feygpus (规则: MP, 深度: 6)
  LoG节点 29: feygpus is qohvpus (规则: MP, 深度: 6)
  LoG节点 30: qohvpus is vazxpus and siwrpus (规则: MP, 深度: 6)
  LoG节点 31: vazxpus is hofspus (规则: MP, 深度: 6)
  LoG节点 32: hofspus is babspus and nerqpus and pifppus (规则: CE, 深度: 6)

============================================================
[后处理] 开始处理节点
============================================================
📊 初始状态:
   - 标准化节点数: 92
   - 初始条件数: 22
   - LoG图节点数: 33

📋 初始条件列表:
    1. qonbpus is henppus and silypus
    2. gujkpus is kidqpus and qopcpus and jinkpus
    3. fahnpus is feygpus
    4. puwhpus is wobypus
    5. nalrpus is puwhpus
    6. puwhpus is saqhpus and teyjpus
    7. feygpus is zufgpus
    8. quyjpus is hofspus
    9. henppus is larmpus
   10. hofspus is babspus and nerqpus and pifppus and kanfpus
   11. farrpus is nalrpus
   12. zufgpus is qohvpus
   13. puwhpus is babrpus and defhpus
   14. wobypus is babgpus
   15. x is fahnpus
   16. qohvpus is pikvpus
   17. x is gujkpus and mujspus
   18. pikvpus is vazxpus and siwrpus
   19. vazxpus is quyjpus
   20. sijvpus is farrpus and dolypus
   21. kidqpus is qonbpus
   22. larmpus is sijvpus and fitlpus

🔧 构建初始Statement列表...
✅ 初始Statement列表构建完成，包含 22 个前提节点

🔍 开始处理actual节点...

   节点 1: x is fahnpus
      ↻ 重复节点，计数: 2

   节点 2: x is fahnpus
      ↻ 重复节点，计数: 3

   节点 3: x is gujkpus and mujspus
      ↻ 重复节点，计数: 2

   节点 4: x is gujkpus and mujspus
      ↻ 重复节点，计数: 3

   节点 5: wobypus is babgpus
      ↻ 重复节点，计数: 2

   节点 6: puwhpus is wobypus
      ↻ 重复节点，计数: 2

   节点 7: wobypus is babgpus
      ↻ 重复节点，计数: 3

   节点 8: wobypus is babgpus
      ↻ 重复节点，计数: 4

   节点 9: puwhpus is wobypus
      ↻ 重复节点，计数: 3

   节点 10: wobypus is babgpus
      ↻ 重复节点，计数: 5

   节点 11: puwhpus is wobypus
      ↻ 重复节点，计数: 4

   节点 12: wobypus is babgpus
      ↻ 重复节点，计数: 6

   节点 13: puwhpus is babrpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: puwhpus is babrpus
      ✅ 验证成功 + LoG匹配

   节点 14: puwhpus is babrpus and defhpus
      ↻ 重复节点，计数: 2

   节点 15: hofspus is babspus and nerqpus and pifppus and kanfpus
      ↻ 重复节点，计数: 2

   节点 16: quyjpus is hofspus
      ↻ 重复节点，计数: 2

   节点 17: hofspus is babspus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: hofspus is babspus and nerqpus and pifppus and kanfpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: hofspus is babspus and nerqpus and pifppus and kanfpus
  ✓ 点亮LoG节点: hofspus is babspus and nerqpus and pifppus
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 18: quyjpus is babspus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: quyjpus is hofspus → hofspus is babspus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: quyjpus is hofspus
  - 前提: hofspus is babspus

   节点 19: x is fahnpus and gujkpus and mujspus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CI
      📋 推理路径: CI规则: x is fahnpus → x is gujkpus → x is mujspus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: x is fahnpus
  - 前提: x is gujkpus and mujspus
  ✓ 点亮LoG节点: x is gujkpus
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 20: x is fahnpus
      ↻ 重复节点，计数: 4

   节点 21: fahnpus is feygpus
      ↻ 重复节点，计数: 2

   节点 22: x is feygpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is feygpus
      ✅ 验证成功 + LoG匹配

   节点 23: feygpus is zufgpus
      ↻ 重复节点，计数: 2

   节点 24: zufgpus is qohvpus
      ↻ 重复节点，计数: 2

   节点 25: x is qohvpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is qohvpus
[子树点亮]     └─ 点亮依赖节点: feygpus is qohvpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 1 个节点
      ✅ 验证成功 + LoG匹配

   节点 26: qohvpus is pikvpus
      ↻ 重复节点，计数: 2

   节点 27: pikvpus is vazxpus and siwrpus
      ↻ 重复节点，计数: 2

   节点 28: x is vazxpus and siwrpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is fahnpus → fahnpus is vazxpus and siwrpus
[后处理] 基于推理轨迹点亮节点，使用了 6 个前提条件:
  - 前提: x is fahnpus
  - 前提: fahnpus is feygpus
  - 前提: feygpus is zufgpus
  - 前提: zufgpus is qohvpus
  - 前提: qohvpus is pikvpus
  - 前提: pikvpus is vazxpus and siwrpus
  ✓ 点亮LoG节点: x is vazxpus
[子树点亮]     └─ 点亮依赖节点: qohvpus is vazxpus (深度5)
[子树点亮]     └─ 点亮依赖节点: qohvpus is vazxpus and siwrpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 2 个节点
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 29: vazxpus is quyjpus
      ↻ 重复节点，计数: 2

   节点 30: x is quyjpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is fahnpus → fahnpus is quyjpus
[后处理] 基于推理轨迹点亮节点，使用了 7 个前提条件:
  - 前提: x is fahnpus
  - 前提: fahnpus is feygpus
  - 前提: feygpus is zufgpus
  - 前提: zufgpus is qohvpus
  - 前提: qohvpus is pikvpus
  - 前提: pikvpus is vazxpus and siwrpus
  - 前提: vazxpus is quyjpus

   节点 31: quyjpus is hofspus
      ↻ 重复节点，计数: 3

   节点 32: hofspus is babspus and nerqpus and pifppus and kanfpus
      ↻ 重复节点，计数: 3

   节点 33: x is hofspus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is fahnpus → fahnpus is hofspus
[后处理] 基于推理轨迹点亮节点，使用了 8 个前提条件:
  - 前提: x is fahnpus
  - 前提: fahnpus is feygpus
  - 前提: feygpus is zufgpus
  - 前提: zufgpus is qohvpus
  - 前提: qohvpus is pikvpus
  - 前提: pikvpus is vazxpus and siwrpus
  - 前提: vazxpus is quyjpus
  - 前提: quyjpus is hofspus
  ✓ 点亮LoG节点: vazxpus is hofspus
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 34: x is babspus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is babspus
[子树点亮]     └─ 点亮依赖节点: x is babspus and nerqpus (深度3)
[子树点亮]     └─ 点亮依赖节点: vazxpus is babspus and nerqpus (深度4)
[子树点亮]     └─ 点亮依赖节点: vazxpus is babspus and nerqpus and pifppus (深度5)
[后处理]   └─ 自动点亮依赖子树: 3 个节点
      ✅ 验证成功 + LoG匹配

   节点 35: x is babspus
      ↻ 重复节点，计数: 2

   节点 36: x is gujkpus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 37: x is gujkpus and mujspus
      ↻ 重复节点，计数: 4

   节点 38: gujkpus is kidqpus and qopcpus and jinkpus
      ↻ 重复节点，计数: 2

   节点 39: kidqpus is qonbpus
      ↻ 重复节点，计数: 2

   节点 40: gujkpus is kidqpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: gujkpus is kidqpus and qopcpus and jinkpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: gujkpus is kidqpus and qopcpus and jinkpus
  ✓ 点亮LoG节点: gujkpus is kidqpus and qopcpus
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 41: gujkpus is qonbpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: gujkpus is kidqpus → kidqpus is qonbpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: gujkpus is kidqpus
  - 前提: kidqpus is qonbpus

   节点 42: qonbpus is henppus and silypus
      ↻ 重复节点，计数: 2

   节点 43: gujkpus is henppus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: gujkpus is kidqpus → kidqpus is henppus
[后处理] 基于推理轨迹点亮节点，使用了 3 个前提条件:
  - 前提: gujkpus is kidqpus
  - 前提: kidqpus is qonbpus
  - 前提: qonbpus is henppus and silypus
  ✓ 点亮LoG节点: kidqpus is henppus
[子树点亮]     └─ 点亮依赖节点: kidqpus is henppus and silypus (深度6)
[后处理]   └─ 自动点亮依赖子树: 1 个节点
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 44: henppus is larmpus
      ↻ 重复节点，计数: 2

   节点 45: larmpus is sijvpus and fitlpus
      ↻ 重复节点，计数: 2

   节点 46: gujkpus is sijvpus and fitlpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: gujkpus is kidqpus → kidqpus is sijvpus and fitlpus
[后处理] 基于推理轨迹点亮节点，使用了 5 个前提条件:
  - 前提: gujkpus is kidqpus
  - 前提: kidqpus is qonbpus
  - 前提: qonbpus is henppus and silypus
  - 前提: henppus is larmpus
  - 前提: larmpus is sijvpus and fitlpus
  ✓ 点亮LoG节点: kidqpus is sijvpus
[子树点亮]     └─ 点亮依赖节点: henppus is sijvpus (深度5)
[子树点亮]     └─ 点亮依赖节点: henppus is sijvpus and fitlpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 2 个节点
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 47: sijvpus is farrpus and dolypus
      ↻ 重复节点，计数: 2

   节点 48: gujkpus is farrpus and dolypus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: gujkpus is kidqpus → kidqpus is farrpus and dolypus
[后处理] 基于推理轨迹点亮节点，使用了 6 个前提条件:
  - 前提: gujkpus is kidqpus
  - 前提: kidqpus is qonbpus
  - 前提: qonbpus is henppus and silypus
  - 前提: henppus is larmpus
  - 前提: larmpus is sijvpus and fitlpus
  - 前提: sijvpus is farrpus and dolypus
  ✓ 点亮LoG节点: sijvpus is farrpus
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 49: farrpus is nalrpus
      ↻ 重复节点，计数: 2

   节点 50: gujkpus is nalrpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: gujkpus is kidqpus → kidqpus is nalrpus
[后处理] 基于推理轨迹点亮节点，使用了 7 个前提条件:
  - 前提: gujkpus is kidqpus
  - 前提: kidqpus is qonbpus
  - 前提: qonbpus is henppus and silypus
  - 前提: henppus is larmpus
  - 前提: larmpus is sijvpus and fitlpus
  - 前提: sijvpus is farrpus and dolypus
  - 前提: farrpus is nalrpus

   节点 51: nalrpus is puwhpus
      ↻ 重复节点，计数: 2

   节点 52: gujkpus is puwhpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: gujkpus is kidqpus → kidqpus is puwhpus
[后处理] 基于推理轨迹点亮节点，使用了 8 个前提条件:
  - 前提: gujkpus is kidqpus
  - 前提: kidqpus is qonbpus
  - 前提: qonbpus is henppus and silypus
  - 前提: henppus is larmpus
  - 前提: larmpus is sijvpus and fitlpus
  - 前提: sijvpus is farrpus and dolypus
  - 前提: farrpus is nalrpus
  - 前提: nalrpus is puwhpus
  ✓ 点亮LoG节点: sijvpus is puwhpus
[子树点亮]     └─ 点亮依赖节点: farrpus is puwhpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 1 个节点
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 53: puwhpus is wobypus
      ↻ 重复节点，计数: 5

   节点 54: wobypus is babgpus
      ↻ 重复节点，计数: 7

   节点 55: gujkpus is babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: gujkpus is kidqpus → kidqpus is babgpus
[后处理] 基于推理轨迹点亮节点，使用了 10 个前提条件:
  - 前提: gujkpus is kidqpus
  - 前提: kidqpus is qonbpus
  - 前提: qonbpus is henppus and silypus
  - 前提: henppus is larmpus
  - 前提: larmpus is sijvpus and fitlpus
  - 前提: sijvpus is farrpus and dolypus
  - 前提: farrpus is nalrpus
  - 前提: nalrpus is puwhpus
  - 前提: puwhpus is wobypus
  - 前提: wobypus is babgpus
  ✓ 点亮LoG节点: puwhpus is babgpus
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 56: x is gujkpus
      ↻ 重复节点，计数: 2

   节点 57: gujkpus is babgpus
      ↻ 重复节点，计数: 2

   节点 58: x is babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is gujkpus → gujkpus is babgpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: x is gujkpus
  - 前提: gujkpus is babgpus

   节点 59: x is babgpus
      ↻ 重复节点，计数: 2

   节点 60: gujkpus is puwhpus
      ↻ 重复节点，计数: 2

   节点 61: puwhpus is babrpus
      ↻ 重复节点，计数: 2

   节点 62: gujkpus is babrpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: gujkpus is kidqpus → kidqpus is babrpus
[后处理] 基于推理轨迹点亮节点，使用了 9 个前提条件:
  - 前提: gujkpus is kidqpus
  - 前提: kidqpus is qonbpus
  - 前提: qonbpus is henppus and silypus
  - 前提: henppus is larmpus
  - 前提: larmpus is sijvpus and fitlpus
  - 前提: sijvpus is farrpus and dolypus
  - 前提: farrpus is nalrpus
  - 前提: nalrpus is puwhpus
  - 前提: puwhpus is babrpus

   节点 63: x is gujkpus
      ↻ 重复节点，计数: 3

   节点 64: x is babrpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is gujkpus → gujkpus is babrpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: x is gujkpus
  - 前提: gujkpus is babrpus

   节点 65: x is babspus
      ↻ 重复节点，计数: 3

   节点 66: x is babgpus
      ↻ 重复节点，计数: 3

   节点 67: x is babrpus
      ↻ 重复节点，计数: 2

   节点 68: x is babgpus and babrpus and babspus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is babgpus and babrpus and babspus
[子树点亮]     └─ 点亮依赖节点: x is babgpus and babrpus (深度2)
[子树点亮]     └─ 点亮依赖节点: x is sijvpus (深度3)
[子树点亮]     └─ 点亮依赖节点: sijvpus is babgpus and babrpus (深度3)
[子树点亮]     └─ 点亮依赖节点: x is kidqpus (深度4)
[子树点亮]     └─ 点亮依赖节点: sijvpus is babgpus and babrpus and saqhpus (深度4)
[子树点亮]     └─ 点亮依赖节点: x is kidqpus and qopcpus (深度5)
[子树点亮]     └─ 点亮依赖节点: puwhpus is babgpus and babrpus and saqhpus (深度5)
[子树点亮]     └─ 点亮依赖节点: puwhpus is saqhpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 8 个节点
      ✅ 验证成功 + LoG匹配

   节点 69: x is fahnpus
      ↻ 重复节点，计数: 5

   节点 70: x is quyjpus and babspus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is fahnpus → fahnpus is quyjpus and babspus
[后处理] 基于推理轨迹点亮节点，使用了 8 个前提条件:
  - 前提: x is fahnpus
  - 前提: fahnpus is feygpus
  - 前提: feygpus is zufgpus
  - 前提: zufgpus is qohvpus
  - 前提: qohvpus is pikvpus
  - 前提: pikvpus is vazxpus and siwrpus
  - 前提: vazxpus is quyjpus
  - 前提: quyjpus is babspus

   节点 71: x is babgpus
      ↻ 重复节点，计数: 4

   节点 72: x is babrpus
      ↻ 重复节点，计数: 3

   节点 73: x is fahnpus and gujkpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CI
      📋 推理路径: CI规则: x is fahnpus → x is gujkpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: x is fahnpus
  - 前提: x is gujkpus

🔍 分析推理路径完整性...

============================================================
[后处理] 处理完成
============================================================
📈 处理统计:
   - 处理的actual节点: 73
   - 新增节点: 25
   - 更新已存在节点: 48
   - 点亮的LoG节点: 33

🎯 推理质量统计:
   - 完美推理: 25 (节点正确 + 路径正确)
   - 部分推理: 0 (节点正确 + 路径部分错误)
   - 无效推理: 0 (节点错误或路径完全错误)
[LoG分析] LoG图: 33节点, 22前提, 复杂度1-22

📊 === Statement列表分析 ===
📈 节点统计:
   - 总节点数: 47
   - 前提节点: 22
   - 推理节点: 25
   - 幻觉节点: 0
   - 点亮LoG节点: 33

✅ 推理节点详情:
   🟢 puwhpus is babrpus (出现2次, 质量:perfect)
   🟢 hofspus is babspus (出现1次, 质量:perfect)
   🟢 quyjpus is babspus (出现1次, 质量:perfect)
   🟢 x is fahnpus and gujkpus and mujspus (出现1次, 质量:perfect)
   🟢 x is feygpus (出现1次, 质量:perfect)
   🟢 x is qohvpus (出现1次, 质量:perfect)
   🟢 x is vazxpus and siwrpus (出现1次, 质量:perfect)
   🟢 x is quyjpus (出现1次, 质量:perfect)
   🟢 x is hofspus (出现1次, 质量:perfect)
   🟢 x is babspus (出现3次, 质量:perfect)
   🟢 x is gujkpus (出现3次, 质量:perfect)
   🟢 gujkpus is kidqpus (出现1次, 质量:perfect)
   🟢 gujkpus is qonbpus (出现1次, 质量:perfect)
   🟢 gujkpus is henppus (出现1次, 质量:perfect)
   🟢 gujkpus is sijvpus and fitlpus (出现1次, 质量:perfect)
   🟢 gujkpus is farrpus and dolypus (出现1次, 质量:perfect)
   🟢 gujkpus is nalrpus (出现1次, 质量:perfect)
   🟢 gujkpus is puwhpus (出现2次, 质量:perfect)
   🟢 gujkpus is babgpus (出现2次, 质量:perfect)
   🟢 x is babgpus (出现4次, 质量:perfect)
   🟢 gujkpus is babrpus (出现1次, 质量:perfect)
   🟢 x is babrpus (出现3次, 质量:perfect)
   🟢 x is babgpus and babrpus and babspus (出现1次, 质量:perfect)
   🟢 x is quyjpus and babspus (出现1次, 质量:perfect)
   🟢 x is fahnpus and gujkpus (出现1次, 质量:perfect)

🔥 点亮的LoG节点:
   - x is babspus
   - x is gujkpus
   - x is kidqpus and qopcpus
   - vazxpus is babspus and nerqpus and pifppus
   - sijvpus is puwhpus
   - qohvpus is vazxpus
   - vazxpus is hofspus
   - x is babspus and nerqpus
   - puwhpus is babrpus
   - x is feygpus
   - feygpus is qohvpus
   - henppus is sijvpus
   - puwhpus is saqhpus
   - x is kidqpus
   - gujkpus is kidqpus and qopcpus
   - henppus is sijvpus and fitlpus
   - kidqpus is sijvpus
   - sijvpus is babgpus and babrpus and saqhpus
   - puwhpus is babgpus
   - qohvpus is vazxpus and siwrpus
   - x is babgpus and babrpus and babspus
   - vazxpus is babspus and nerqpus
   - x is babgpus and babrpus
   - sijvpus is babgpus and babrpus
   - x is sijvpus
   - x is vazxpus
   - kidqpus is henppus
   - sijvpus is farrpus
   - x is qohvpus
   - farrpus is puwhpus
   - puwhpus is babgpus and babrpus and saqhpus
   - kidqpus is henppus and silypus
   - hofspus is babspus and nerqpus and pifppus

============================================================
📊 计算评估指标
============================================================

🎯 计算Coverage指标...
   深度Coverage: 6/6 = 100.00%
   最深点亮节点: x is babgpus and babrpus and babspus (第6层)
   节点Coverage: 33/33 = 100.00%
   前提条件Coverage: 21/22 = 95.45%
   各推理层点亮比例:
     第1层: 14/14 = 100.00%
     第2层: 8/8 = 100.00%
     第3层: 5/5 = 100.00%
     第4层: 3/3 = 100.00%
     第5层: 2/2 = 100.00%
     第6层: 1/1 = 100.00%

🎯 计算Precision指标...
   Error Rate: 0/25 = 0.00%
   可推导节点: 25/25
   Strict Error Rate: 0/25 = 0.00%
   严格有效节点: 25/25

   详细分析:
     完美推理: 25 (100.00%)
     部分推理: 0 (0.00%)
     无效推理: 0 (0.00%)

================================================================================
处理记录 23/50
================================================================================
记录索引: 22
问题状态: correct
📁 从缓存加载提取结果: evaluation_results.LoG_6.deepseek-reasoner_record_22.json
✅ 使用缓存结果:
   - 句子数: 102
   - 提取的语句数: 129
   - 初始条件数: 15

=== Statement提取完成 ===
总句子数: 102
成功提取: 102
失败提取: 0
总statements数: 129

=== 开始清洗Statement格式 ===
原始statements数: 129
清洗后statements数: 117
过滤掉的statements数: 12
清洗后的statements:
  1. [planning] x is babgpus
  2. [planning] x is babrpus
  3. [actual] roxmpus is xabfpus
  4. [actual] zodnpus is xiktpus
  5. [actual] xiktpus is gixkpus
  6. [actual] x is hucxpus
  7. [actual] korlpus is difypus
  8. [actual] gowlpus is zenppus
  9. [actual] pelbpus is zodnpus
  10. [actual] zenppus is korlpus and gexgpus
  11. [actual] hucxpus is gowlpus and hevppus
  12. [actual] xiktpus is micrpus
  13. [actual] xabfpus is qimtpus and bufspus and puxqpus
  14. [actual] qimtpus is pelbpus and mebspus
  15. [actual] gixkpus is cifnpus
  16. [actual] micrpus is babrpus
  17. [actual] difypus is roxmpus
  18. [planning] x is babgpus
  19. [planning] x is babrpus
  20. [actual] x is hucxpus
  21. [actual] x is hucxpus
  22. [actual] hucxpus is gowlpus and hevppus
  23. [actual] hucxpus is gowlpus and hevppus
  24. [planning] hucxpus is a subset of gowlpus and hevppus
  25. [actual] hucxpus is gowlpus
  26. [actual] gowlpus is a broader category that contains hucxpus
  27. [actual] hucxpus is hevppus
  28. [actual] gowlpus is zenppus
  29. [actual] gowlpus is zenppus
  30. [actual] zenppus is korlpus and gexgpus
  31. [actual] zenppus is korlpus and gexgpus
  32. [actual] korlpus is difypus
  33. [actual] korlpus is difypus
  34. [actual] difypus is roxmpus
  35. [actual] difypus is roxmpus
  36. [actual] roxmpus is xabfpus
  37. [actual] roxmpus is xabfpus
  38. [actual] xabfpus is qimtpus and bufspus and puxqpus
  39. [actual] xabfpus is qimtpus and bufspus and puxqpus
  40. [actual] qimtpus is pelbpus and mebspus
  41. [actual] qimtpus is pelbpus and mebspus
  42. [actual] pelbpus is zodnpus
  43. [actual] pelbpus is zodnpus
  44. [actual] zodnpus is xiktpus
  45. [actual] zodnpus is xiktpus
  46. [actual] xiktpus is gixkpus
  47. [actual] xiktpus is micrpus
  48. [actual] xiktpus is gixkpus and micrpus
  49. [actual] micrpus is babrpus
  50. [actual] micrpus is babrpus
  51. [actual] gixkpus is cifnpus
  52. [actual] gixkpus is cifnpus
  53. [actual] x is hucxpus
  54. [actual] hucxpus is gowlpus
  55. [actual] gowlpus is zenppus
  56. [actual] zenppus is korlpus
  57. [actual] korlpus is difypus
  58. [actual] difypus is roxmpus
  59. [actual] roxmpus is xabfpus
  60. [actual] xabfpus is qimtpus
  61. [actual] qimtpus is pelbpus
  62. [actual] pelbpus is zodnpus
  63. [actual] zodnpus is xiktpus
  64. [actual] xiktpus is micrpus
  65. [actual] micrpus is babrpus
  66. [actual] x is hucxpus
  67. [actual] x is babrpus
  68. [planning] x is babgpus
  69. [planning] x is babrpus
  70. [actual] x is babrpus
  71. [actual] x is hucxpus
  72. [actual] hucxpus is gowlpus
  73. [planning] x is gowlpus
  74. [actual] hucxpus is gowlpus
  75. [actual] x is hucxpus
  76. [actual] x is gowlpus
  77. [actual] gowlpus is zenppus
  78. [planning] x is zenppus
  79. [actual] zenppus is korlpus and gexgpus
  80. [planning] x is korlpus
  81. [actual] korlpus is difypus
  82. [planning] x is difypus
  83. [actual] difypus is roxmpus
  84. [planning] x is roxmpus
  85. [actual] roxmpus is xabfpus
  86. [planning] x is xabfpus
  87. [actual] xabfpus is qimtpus and bufspus and puxqpus
  88. [planning] x is qimtpus
  89. [actual] qimtpus is pelbpus and mebspus
  90. [actual] qimtpus is pelbpus
  91. [planning] x is pelbpus
  92. [actual] pelbpus is zodnpus
  93. [planning] x is zodnpus
  94. [actual] zodnpus is xiktpus
  95. [actual] zodnpus is xiktpus
  96. [actual] x is xiktpus
  97. [actual] xiktpus is micrpus
  98. [planning] x is micrpus
  99. [actual] micrpus is babrpus
  100. [planning] x is babrpus
  101. [actual] x is babrpus
  102. [planning] x is babrpus
  103. [planning] x is babgpus
  104. [planning] x is babrpus
  105. [planning] x is babgpus
  106. [actual] x is babrpus
  107. [actual] x is babrpus
  108. [actual] x is babgpus or babrpus
  109. [planning] babrpus is true
  110. [planning] babrpus is the OR
  111. [planning] x is babgpus
  112. [planning] x is babrpus
  113. [actual] x is babrpus
  114. [planning] x is babrpus
  115. [actual] x is babrpus
  116. [actual] x is babrpus
  117. [planning] x is babgpus

=== 开始标准化和解析节点 ===
清洗后statements数: 117
标准化后节点数: 113
过滤掉的无效实体数: 4
标准化后的节点:
  1. [planning] x → babgpus (原始: x is babgpus)
  2. [planning] x → babrpus (原始: x is babrpus)
  3. [actual] roxmpus → xabfpus (原始: roxmpus is xabfpus)
  4. [actual] zodnpus → xiktpus (原始: zodnpus is xiktpus)
  5. [actual] xiktpus → gixkpus (原始: xiktpus is gixkpus)
  6. [actual] x → hucxpus (原始: x is hucxpus)
  7. [actual] korlpus → difypus (原始: korlpus is difypus)
  8. [actual] gowlpus → zenppus (原始: gowlpus is zenppus)
  9. [actual] pelbpus → zodnpus (原始: pelbpus is zodnpus)
  10. [actual] zenppus → korlpus and gexgpus (原始: zenppus is korlpus and gexgpus)
  11. [actual] hucxpus → gowlpus and hevppus (原始: hucxpus is gowlpus and hevppus)
  12. [actual] xiktpus → micrpus (原始: xiktpus is micrpus)
  13. [actual] xabfpus → qimtpus and bufspus and puxqpus (原始: xabfpus is qimtpus and bufspus and puxqpus)
  14. [actual] qimtpus → pelbpus and mebspus (原始: qimtpus is pelbpus and mebspus)
  15. [actual] gixkpus → cifnpus (原始: gixkpus is cifnpus)
  16. [actual] micrpus → babrpus (原始: micrpus is babrpus)
  17. [actual] difypus → roxmpus (原始: difypus is roxmpus)
  18. [planning] x → babgpus (原始: x is babgpus)
  19. [planning] x → babrpus (原始: x is babrpus)
  20. [actual] x → hucxpus (原始: x is hucxpus)
  21. [actual] x → hucxpus (原始: x is hucxpus)
  22. [actual] hucxpus → gowlpus and hevppus (原始: hucxpus is gowlpus and hevppus)
  23. [actual] hucxpus → gowlpus and hevppus (原始: hucxpus is gowlpus and hevppus)
  24. [actual] hucxpus → gowlpus (原始: hucxpus is gowlpus)
  25. [actual] hucxpus → hevppus (原始: hucxpus is hevppus)
  26. [actual] gowlpus → zenppus (原始: gowlpus is zenppus)
  27. [actual] gowlpus → zenppus (原始: gowlpus is zenppus)
  28. [actual] zenppus → korlpus and gexgpus (原始: zenppus is korlpus and gexgpus)
  29. [actual] zenppus → korlpus and gexgpus (原始: zenppus is korlpus and gexgpus)
  30. [actual] korlpus → difypus (原始: korlpus is difypus)
  31. [actual] korlpus → difypus (原始: korlpus is difypus)
  32. [actual] difypus → roxmpus (原始: difypus is roxmpus)
  33. [actual] difypus → roxmpus (原始: difypus is roxmpus)
  34. [actual] roxmpus → xabfpus (原始: roxmpus is xabfpus)
  35. [actual] roxmpus → xabfpus (原始: roxmpus is xabfpus)
  36. [actual] xabfpus → qimtpus and bufspus and puxqpus (原始: xabfpus is qimtpus and bufspus and puxqpus)
  37. [actual] xabfpus → qimtpus and bufspus and puxqpus (原始: xabfpus is qimtpus and bufspus and puxqpus)
  38. [actual] qimtpus → pelbpus and mebspus (原始: qimtpus is pelbpus and mebspus)
  39. [actual] qimtpus → pelbpus and mebspus (原始: qimtpus is pelbpus and mebspus)
  40. [actual] pelbpus → zodnpus (原始: pelbpus is zodnpus)
  41. [actual] pelbpus → zodnpus (原始: pelbpus is zodnpus)
  42. [actual] zodnpus → xiktpus (原始: zodnpus is xiktpus)
  43. [actual] zodnpus → xiktpus (原始: zodnpus is xiktpus)
  44. [actual] xiktpus → gixkpus (原始: xiktpus is gixkpus)
  45. [actual] xiktpus → micrpus (原始: xiktpus is micrpus)
  46. [actual] xiktpus → gixkpus and micrpus (原始: xiktpus is gixkpus and micrpus)
  47. [actual] micrpus → babrpus (原始: micrpus is babrpus)
  48. [actual] micrpus → babrpus (原始: micrpus is babrpus)
  49. [actual] gixkpus → cifnpus (原始: gixkpus is cifnpus)
  50. [actual] gixkpus → cifnpus (原始: gixkpus is cifnpus)
  51. [actual] x → hucxpus (原始: x is hucxpus)
  52. [actual] hucxpus → gowlpus (原始: hucxpus is gowlpus)
  53. [actual] gowlpus → zenppus (原始: gowlpus is zenppus)
  54. [actual] zenppus → korlpus (原始: zenppus is korlpus)
  55. [actual] korlpus → difypus (原始: korlpus is difypus)
  56. [actual] difypus → roxmpus (原始: difypus is roxmpus)
  57. [actual] roxmpus → xabfpus (原始: roxmpus is xabfpus)
  58. [actual] xabfpus → qimtpus (原始: xabfpus is qimtpus)
  59. [actual] qimtpus → pelbpus (原始: qimtpus is pelbpus)
  60. [actual] pelbpus → zodnpus (原始: pelbpus is zodnpus)
  61. [actual] zodnpus → xiktpus (原始: zodnpus is xiktpus)
  62. [actual] xiktpus → micrpus (原始: xiktpus is micrpus)
  63. [actual] micrpus → babrpus (原始: micrpus is babrpus)
  64. [actual] x → hucxpus (原始: x is hucxpus)
  65. [actual] x → babrpus (原始: x is babrpus)
  66. [planning] x → babgpus (原始: x is babgpus)
  67. [planning] x → babrpus (原始: x is babrpus)
  68. [actual] x → babrpus (原始: x is babrpus)
  69. [actual] x → hucxpus (原始: x is hucxpus)
  70. [actual] hucxpus → gowlpus (原始: hucxpus is gowlpus)
  71. [planning] x → gowlpus (原始: x is gowlpus)
  72. [actual] hucxpus → gowlpus (原始: hucxpus is gowlpus)
  73. [actual] x → hucxpus (原始: x is hucxpus)
  74. [actual] x → gowlpus (原始: x is gowlpus)
  75. [actual] gowlpus → zenppus (原始: gowlpus is zenppus)
  76. [planning] x → zenppus (原始: x is zenppus)
  77. [actual] zenppus → korlpus and gexgpus (原始: zenppus is korlpus and gexgpus)
  78. [planning] x → korlpus (原始: x is korlpus)
  79. [actual] korlpus → difypus (原始: korlpus is difypus)
  80. [planning] x → difypus (原始: x is difypus)
  81. [actual] difypus → roxmpus (原始: difypus is roxmpus)
  82. [planning] x → roxmpus (原始: x is roxmpus)
  83. [actual] roxmpus → xabfpus (原始: roxmpus is xabfpus)
  84. [planning] x → xabfpus (原始: x is xabfpus)
  85. [actual] xabfpus → qimtpus and bufspus and puxqpus (原始: xabfpus is qimtpus and bufspus and puxqpus)
  86. [planning] x → qimtpus (原始: x is qimtpus)
  87. [actual] qimtpus → pelbpus and mebspus (原始: qimtpus is pelbpus and mebspus)
  88. [actual] qimtpus → pelbpus (原始: qimtpus is pelbpus)
  89. [planning] x → pelbpus (原始: x is pelbpus)
  90. [actual] pelbpus → zodnpus (原始: pelbpus is zodnpus)
  91. [planning] x → zodnpus (原始: x is zodnpus)
  92. [actual] zodnpus → xiktpus (原始: zodnpus is xiktpus)
  93. [actual] zodnpus → xiktpus (原始: zodnpus is xiktpus)
  94. [actual] x → xiktpus (原始: x is xiktpus)
  95. [actual] xiktpus → micrpus (原始: xiktpus is micrpus)
  96. [planning] x → micrpus (原始: x is micrpus)
  97. [actual] micrpus → babrpus (原始: micrpus is babrpus)
  98. [planning] x → babrpus (原始: x is babrpus)
  99. [actual] x → babrpus (原始: x is babrpus)
  100. [planning] x → babrpus (原始: x is babrpus)
  101. [planning] x → babgpus (原始: x is babgpus)
  102. [planning] x → babrpus (原始: x is babrpus)
  103. [planning] x → babgpus (原始: x is babgpus)
  104. [actual] x → babrpus (原始: x is babrpus)
  105. [actual] x → babrpus (原始: x is babrpus)
  106. [actual] x → babgpus or babrpus (原始: x is babgpus or babrpus)
  107. [planning] x → babgpus (原始: x is babgpus)
  108. [planning] x → babrpus (原始: x is babrpus)
  109. [actual] x → babrpus (原始: x is babrpus)
  110. [planning] x → babrpus (原始: x is babrpus)
  111. [actual] x → babrpus (原始: x is babrpus)
  112. [actual] x → babrpus (原始: x is babrpus)
  113. [planning] x → babgpus (原始: x is babgpus)

开始新的后处理...
[后处理] 从LoG数据文件中获取到图数据，节点数: 21
[后处理] 加载LoG图，包含 21 个节点
  LoG节点 0: x is babgpus or babrpus (规则: MP, 深度: 1)
  LoG节点 1: x is qimtpus (规则: CE, 深度: 2)
  LoG节点 2: qimtpus is babgpus or babrpus (规则: DI, 深度: 2)
  LoG节点 3: x is qimtpus and bufspus (规则: MP, 深度: 3)
  LoG节点 4: qimtpus is babrpus (规则: CE, 深度: 3)
  LoG节点 5: x is korlpus (规则: MP, 深度: 4)
  LoG节点 6: korlpus is qimtpus and bufspus (规则: CE, 深度: 4)
  LoG节点 7: qimtpus is babrpus and cifnpus (规则: MP, 深度: 4)
  LoG节点 8: x is gowlpus (规则: CE, 深度: 5)
  LoG节点 9: gowlpus is korlpus (规则: CE, 深度: 5)
  LoG节点 10: korlpus is qimtpus and bufspus and puxqpus (规则: MP, 深度: 5)
  LoG节点 11: qimtpus is xiktpus (规则: MP, 深度: 5)
  LoG节点 12: xiktpus is babrpus and cifnpus (规则: CI, 深度: 5)
  LoG节点 13: x is gowlpus and hevppus (规则: MP, 深度: 6)
  LoG节点 14: gowlpus is korlpus and gexgpus (规则: MP, 深度: 6)
  LoG节点 15: korlpus is roxmpus (规则: MP, 深度: 6)
  LoG节点 16: roxmpus is qimtpus and bufspus and puxqpus (规则: MP, 深度: 6)
  LoG节点 17: qimtpus is pelbpus (规则: CE, 深度: 6)
  LoG节点 18: pelbpus is xiktpus (规则: MP, 深度: 6)
  LoG节点 19: xiktpus is babrpus (规则: MP, 深度: 6)
  LoG节点 20: xiktpus is cifnpus (规则: MP, 深度: 6)

============================================================
[后处理] 开始处理节点
============================================================
📊 初始状态:
   - 标准化节点数: 113
   - 初始条件数: 15
   - LoG图节点数: 21

📋 初始条件列表:
    1. roxmpus is xabfpus
    2. zodnpus is xiktpus
    3. xiktpus is gixkpus
    4. x is hucxpus
    5. korlpus is difypus
    6. gowlpus is zenppus
    7. pelbpus is zodnpus
    8. zenppus is korlpus and gexgpus
    9. hucxpus is gowlpus and hevppus
   10. xiktpus is micrpus
   11. xabfpus is qimtpus and bufspus and puxqpus
   12. qimtpus is pelbpus and mebspus
   13. gixkpus is cifnpus
   14. micrpus is babrpus
   15. difypus is roxmpus

🔧 构建初始Statement列表...
✅ 初始Statement列表构建完成，包含 15 个前提节点

🔍 开始处理actual节点...

   节点 1: roxmpus is xabfpus
      ↻ 重复节点，计数: 2

   节点 2: zodnpus is xiktpus
      ↻ 重复节点，计数: 2

   节点 3: xiktpus is gixkpus
      ↻ 重复节点，计数: 2

   节点 4: x is hucxpus
      ↻ 重复节点，计数: 2

   节点 5: korlpus is difypus
      ↻ 重复节点，计数: 2

   节点 6: gowlpus is zenppus
      ↻ 重复节点，计数: 2

   节点 7: pelbpus is zodnpus
      ↻ 重复节点，计数: 2

   节点 8: zenppus is korlpus and gexgpus
      ↻ 重复节点，计数: 2

   节点 9: hucxpus is gowlpus and hevppus
      ↻ 重复节点，计数: 2

   节点 10: xiktpus is micrpus
      ↻ 重复节点，计数: 2

   节点 11: xabfpus is qimtpus and bufspus and puxqpus
      ↻ 重复节点，计数: 2

   节点 12: qimtpus is pelbpus and mebspus
      ↻ 重复节点，计数: 2

   节点 13: gixkpus is cifnpus
      ↻ 重复节点，计数: 2

   节点 14: micrpus is babrpus
      ↻ 重复节点，计数: 2

   节点 15: difypus is roxmpus
      ↻ 重复节点，计数: 2

   节点 16: x is hucxpus
      ↻ 重复节点，计数: 3

   节点 17: x is hucxpus
      ↻ 重复节点，计数: 4

   节点 18: hucxpus is gowlpus and hevppus
      ↻ 重复节点，计数: 3

   节点 19: hucxpus is gowlpus and hevppus
      ↻ 重复节点，计数: 4

   节点 20: hucxpus is gowlpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: hucxpus is gowlpus and hevppus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: hucxpus is gowlpus and hevppus

   节点 21: hucxpus is hevppus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: hucxpus is gowlpus and hevppus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: hucxpus is gowlpus and hevppus

   节点 22: gowlpus is zenppus
      ↻ 重复节点，计数: 3

   节点 23: gowlpus is zenppus
      ↻ 重复节点，计数: 4

   节点 24: zenppus is korlpus and gexgpus
      ↻ 重复节点，计数: 3

   节点 25: zenppus is korlpus and gexgpus
      ↻ 重复节点，计数: 4

   节点 26: korlpus is difypus
      ↻ 重复节点，计数: 3

   节点 27: korlpus is difypus
      ↻ 重复节点，计数: 4

   节点 28: difypus is roxmpus
      ↻ 重复节点，计数: 3

   节点 29: difypus is roxmpus
      ↻ 重复节点，计数: 4

   节点 30: roxmpus is xabfpus
      ↻ 重复节点，计数: 3

   节点 31: roxmpus is xabfpus
      ↻ 重复节点，计数: 4

   节点 32: xabfpus is qimtpus and bufspus and puxqpus
      ↻ 重复节点，计数: 3

   节点 33: xabfpus is qimtpus and bufspus and puxqpus
      ↻ 重复节点，计数: 4

   节点 34: qimtpus is pelbpus and mebspus
      ↻ 重复节点，计数: 3

   节点 35: qimtpus is pelbpus and mebspus
      ↻ 重复节点，计数: 4

   节点 36: pelbpus is zodnpus
      ↻ 重复节点，计数: 3

   节点 37: pelbpus is zodnpus
      ↻ 重复节点，计数: 4

   节点 38: zodnpus is xiktpus
      ↻ 重复节点，计数: 3

   节点 39: zodnpus is xiktpus
      ↻ 重复节点，计数: 4

   节点 40: xiktpus is gixkpus
      ↻ 重复节点，计数: 3

   节点 41: xiktpus is micrpus
      ↻ 重复节点，计数: 3

   节点 42: xiktpus is gixkpus and micrpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CI
      📋 推理路径: CI规则: xiktpus is gixkpus → xiktpus is micrpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: xiktpus is gixkpus
  - 前提: xiktpus is micrpus

   节点 43: micrpus is babrpus
      ↻ 重复节点，计数: 3

   节点 44: micrpus is babrpus
      ↻ 重复节点，计数: 4

   节点 45: gixkpus is cifnpus
      ↻ 重复节点，计数: 3

   节点 46: gixkpus is cifnpus
      ↻ 重复节点，计数: 4

   节点 47: x is hucxpus
      ↻ 重复节点，计数: 5

   节点 48: hucxpus is gowlpus
      ↻ 重复节点，计数: 2

   节点 49: gowlpus is zenppus
      ↻ 重复节点，计数: 5

   节点 50: zenppus is korlpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: zenppus is korlpus and gexgpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: zenppus is korlpus and gexgpus

   节点 51: korlpus is difypus
      ↻ 重复节点，计数: 5

   节点 52: difypus is roxmpus
      ↻ 重复节点，计数: 5

   节点 53: roxmpus is xabfpus
      ↻ 重复节点，计数: 5

   节点 54: xabfpus is qimtpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: xabfpus is qimtpus and bufspus and puxqpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: xabfpus is qimtpus and bufspus and puxqpus

   节点 55: qimtpus is pelbpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: qimtpus is pelbpus
      ✅ 验证成功 + LoG匹配

   节点 56: pelbpus is zodnpus
      ↻ 重复节点，计数: 5

   节点 57: zodnpus is xiktpus
      ↻ 重复节点，计数: 5

   节点 58: xiktpus is micrpus
      ↻ 重复节点，计数: 4

   节点 59: micrpus is babrpus
      ↻ 重复节点，计数: 5

   节点 60: x is hucxpus
      ↻ 重复节点，计数: 6

   节点 61: x is babrpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is hucxpus → hucxpus is babrpus
[后处理] 基于推理轨迹点亮节点，使用了 13 个前提条件:
  - 前提: x is hucxpus
  - 前提: hucxpus is gowlpus
  - 前提: gowlpus is zenppus
  - 前提: zenppus is korlpus
  - 前提: korlpus is difypus
  - 前提: difypus is roxmpus
  - 前提: roxmpus is xabfpus
  - 前提: xabfpus is qimtpus
  - 前提: qimtpus is pelbpus
  - 前提: pelbpus is zodnpus
  - 前提: zodnpus is xiktpus
  - 前提: xiktpus is micrpus
  - 前提: micrpus is babrpus
  ✓ 点亮LoG节点: x is babgpus or babrpus
[子树点亮]     └─ 点亮依赖节点: x is qimtpus (深度2)
[子树点亮]     └─ 点亮依赖节点: qimtpus is babgpus or babrpus (深度2)
[子树点亮]     └─ 点亮依赖节点: x is qimtpus and bufspus (深度3)
[子树点亮]     └─ 点亮依赖节点: qimtpus is babrpus (深度3)
[子树点亮]     └─ 点亮依赖节点: x is korlpus (深度4)
[子树点亮]     └─ 点亮依赖节点: korlpus is qimtpus and bufspus (深度4)
[子树点亮]     └─ 点亮依赖节点: qimtpus is babrpus and cifnpus (深度4)
[子树点亮]     └─ 点亮依赖节点: x is gowlpus (深度5)
[子树点亮]     └─ 点亮依赖节点: gowlpus is korlpus (深度5)
[子树点亮]     └─ 点亮依赖节点: korlpus is qimtpus and bufspus and puxqpus (深度5)
[子树点亮]     └─ 点亮依赖节点: qimtpus is xiktpus (深度5)
[子树点亮]     └─ 点亮依赖节点: xiktpus is babrpus and cifnpus (深度5)
[子树点亮]     └─ 点亮依赖节点: x is gowlpus and hevppus (深度6)
[子树点亮]     └─ 点亮依赖节点: gowlpus is korlpus and gexgpus (深度6)
[子树点亮]     └─ 点亮依赖节点: korlpus is roxmpus (深度6)
[子树点亮]     └─ 点亮依赖节点: roxmpus is qimtpus and bufspus and puxqpus (深度6)
[子树点亮]     └─ 点亮依赖节点: pelbpus is xiktpus (深度6)
[子树点亮]     └─ 点亮依赖节点: xiktpus is babrpus (深度6)
[子树点亮]     └─ 点亮依赖节点: xiktpus is cifnpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 19 个节点
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 62: x is babrpus
      ↻ 重复节点，计数: 2

   节点 63: x is hucxpus
      ↻ 重复节点，计数: 7

   节点 64: hucxpus is gowlpus
      ↻ 重复节点，计数: 3

   节点 65: hucxpus is gowlpus
      ↻ 重复节点，计数: 4

   节点 66: x is hucxpus
      ↻ 重复节点，计数: 8

   节点 67: x is gowlpus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 68: gowlpus is zenppus
      ↻ 重复节点，计数: 6

   节点 69: zenppus is korlpus and gexgpus
      ↻ 重复节点，计数: 5

   节点 70: korlpus is difypus
      ↻ 重复节点，计数: 6

   节点 71: difypus is roxmpus
      ↻ 重复节点，计数: 6

   节点 72: roxmpus is xabfpus
      ↻ 重复节点，计数: 6

   节点 73: xabfpus is qimtpus and bufspus and puxqpus
      ↻ 重复节点，计数: 5

   节点 74: qimtpus is pelbpus and mebspus
      ↻ 重复节点，计数: 5

   节点 75: qimtpus is pelbpus
      ↻ 重复节点，计数: 2

   节点 76: pelbpus is zodnpus
      ↻ 重复节点，计数: 6

   节点 77: zodnpus is xiktpus
      ↻ 重复节点，计数: 6

   节点 78: zodnpus is xiktpus
      ↻ 重复节点，计数: 7

   节点 79: x is xiktpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is hucxpus → hucxpus is xiktpus
[后处理] 基于推理轨迹点亮节点，使用了 11 个前提条件:
  - 前提: x is hucxpus
  - 前提: hucxpus is gowlpus
  - 前提: gowlpus is zenppus
  - 前提: zenppus is korlpus
  - 前提: korlpus is difypus
  - 前提: difypus is roxmpus
  - 前提: roxmpus is xabfpus
  - 前提: xabfpus is qimtpus
  - 前提: qimtpus is pelbpus
  - 前提: pelbpus is zodnpus
  - 前提: zodnpus is xiktpus

   节点 80: xiktpus is micrpus
      ↻ 重复节点，计数: 5

   节点 81: micrpus is babrpus
      ↻ 重复节点，计数: 6

   节点 82: x is babrpus
      ↻ 重复节点，计数: 3

   节点 83: x is babrpus
      ↻ 重复节点，计数: 4

   节点 84: x is babrpus
      ↻ 重复节点，计数: 5

   节点 85: x is babgpus or babrpus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 86: x is babrpus
      ↻ 重复节点，计数: 6

   节点 87: x is babrpus
      ↻ 重复节点，计数: 7

   节点 88: x is babrpus
      ↻ 重复节点，计数: 8

🔍 分析推理路径完整性...

============================================================
[后处理] 处理完成
============================================================
📈 处理统计:
   - 处理的actual节点: 88
   - 新增节点: 10
   - 更新已存在节点: 78
   - 点亮的LoG节点: 21

🎯 推理质量统计:
   - 完美推理: 10 (节点正确 + 路径正确)
   - 部分推理: 0 (节点正确 + 路径部分错误)
   - 无效推理: 0 (节点错误或路径完全错误)
[LoG分析] LoG图: 21节点, 15前提, 复杂度1-15

📊 === Statement列表分析 ===
📈 节点统计:
   - 总节点数: 25
   - 前提节点: 15
   - 推理节点: 10
   - 幻觉节点: 0
   - 点亮LoG节点: 21

✅ 推理节点详情:
   🟢 hucxpus is gowlpus (出现4次, 质量:perfect)
   🟢 hucxpus is hevppus (出现1次, 质量:perfect)
   🟢 xiktpus is gixkpus and micrpus (出现1次, 质量:perfect)
   🟢 zenppus is korlpus (出现1次, 质量:perfect)
   🟢 xabfpus is qimtpus (出现1次, 质量:perfect)
   🟢 qimtpus is pelbpus (出现2次, 质量:perfect)
   🟢 x is babrpus (出现8次, 质量:perfect)
   🟢 x is gowlpus (出现1次, 质量:perfect)
   🟢 x is xiktpus (出现1次, 质量:perfect)
   🟢 x is babgpus or babrpus (出现1次, 质量:perfect)

🔥 点亮的LoG节点:
   - korlpus is roxmpus
   - korlpus is qimtpus and bufspus
   - korlpus is qimtpus and bufspus and puxqpus
   - x is gowlpus and hevppus
   - qimtpus is pelbpus
   - roxmpus is qimtpus and bufspus and puxqpus
   - x is gowlpus
   - gowlpus is korlpus and gexgpus
   - gowlpus is korlpus
   - xiktpus is babrpus
   - x is qimtpus and bufspus
   - x is babgpus or babrpus
   - x is qimtpus
   - qimtpus is babrpus
   - xiktpus is cifnpus
   - xiktpus is babrpus and cifnpus
   - pelbpus is xiktpus
   - qimtpus is xiktpus
   - x is korlpus
   - qimtpus is babrpus and cifnpus
   - qimtpus is babgpus or babrpus

============================================================
📊 计算评估指标
============================================================

🎯 计算Coverage指标...
   深度Coverage: 6/6 = 100.00%
   最深点亮节点: x is babgpus or babrpus (第6层)
   节点Coverage: 21/21 = 100.00%
   前提条件Coverage: 15/15 = 100.00%
   各推理层点亮比例:
     第1层: 8/8 = 100.00%
     第2层: 5/5 = 100.00%
     第3层: 3/3 = 100.00%
     第4层: 2/2 = 100.00%
     第5层: 2/2 = 100.00%
     第6层: 1/1 = 100.00%

🎯 计算Precision指标...
   Error Rate: 0/10 = 0.00%
   可推导节点: 10/10
   Strict Error Rate: 0/10 = 0.00%
   严格有效节点: 10/10

   详细分析:
     完美推理: 10 (100.00%)
     部分推理: 0 (0.00%)
     无效推理: 0 (0.00%)

================================================================================
处理记录 24/50
================================================================================
记录索引: 23
问题状态: correct
📁 从缓存加载提取结果: evaluation_results.LoG_6.deepseek-reasoner_record_23.json
✅ 使用缓存结果:
   - 句子数: 72
   - 提取的语句数: 110
   - 初始条件数: 16

=== Statement提取完成 ===
总句子数: 72
成功提取: 72
失败提取: 0
总statements数: 110

=== 开始清洗Statement格式 ===
原始statements数: 110
清洗后statements数: 100
过滤掉的statements数: 10
清洗后的statements:
  1. [planning] x is babgpus
  2. [actual] x is qabmpus
  3. [actual] x is a type of qabmpus
  4. [planning] qabmpus is babgpus
  5. [actual] nidmpus is babgpus
  6. [actual] nidmpus is tefjpus
  7. [planning] x is babgpus
  8. [actual] gixrpus is nidmpus
  9. [actual] nidmpus is babgpus
  10. [actual] gixrpus is babgpus
  11. [actual] x is qabmpus
  12. [actual] gixrpus is gixxpus and yacypus
  13. [actual] nidmpus is babgpus and tefjpus
  14. [actual] cavvpus is keclpus and wuxgpus and capjpus
  15. [actual] x is qabmpus
  16. [actual] siybpus is mitgpus and necypus
  17. [actual] buftpus is hizvpus and xanwpus
  18. [actual] gixrpus is nidmpus
  19. [actual] gixrpus is babgpus
  20. [actual] nidmpus is babgpus
  21. [actual] qabmpus is tanrpus and baphpus
  22. [actual] mitgpus is quffpus and wojvpus and sehcpus
  23. [actual] tanrpus is cavvpus
  24. [actual] qabmpus is tanrpus
  25. [actual] tanrpus is cavvpus
  26. [actual] qabmpus is cavvpus
  27. [actual] tirppus is gixrpus and luldpus
  28. [actual] quffpus is buftpus
  29. [actual] mitgpus is quffpus
  30. [actual] mitgpus is buftpus
  31. [actual] keclpus is runkpus
  32. [actual] cavvpus is keclpus
  33. [actual] cavvpus is runkpus
  34. [actual] hizvpus is tirppus
  35. [actual] buftpus is hizvpus
  36. [actual] buftpus is tirppus
  37. [actual] runkpus is siybpus and tazrpus
  38. [actual] gixxpus is sahzpus and voylpus
  39. [planning] x is babgpus
  40. [actual] x is qabmpus
  41. [planning] qabmpus is babgpus
  42. [planning] qabmpus is babgpus
  43. [actual] qabmpus is tanrpus and baphpus
  44. [actual] tanrpus is cavvpus
  45. [actual] qabmpus is cavvpus
  46. [actual] cavvpus is keclpus and wuxgpus and capjpus
  47. [actual] keclpus is runkpus
  48. [actual] runkpus is siybpus and tazrpus
  49. [actual] siybpus is mitgpus and necypus
  50. [actual] mitgpus is quffpus and wojvpus and sehcpus
  51. [actual] quffpus is buftpus
  52. [actual] buftpus is hizvpus and xanwpus
  53. [actual] hizvpus is tirppus
  54. [actual] tirppus is gixrpus and luldpus
  55. [actual] gixrpus is nidmpus
  56. [actual] nidmpus is babgpus and tefjpus
  57. [planning] cavvpus is babgpus
  58. [actual] cavvpus is keclpus
  59. [actual] keclpus is runkpus
  60. [actual] runkpus is siybpus
  61. [actual] siybpus is mitgpus
  62. [actual] mitgpus is quffpus
  63. [actual] quffpus is buftpus
  64. [actual] buftpus is hizvpus
  65. [actual] hizvpus is tirppus
  66. [actual] tirppus is gixrpus
  67. [actual] gixrpus is nidmpus
  68. [actual] nidmpus is babgpus
  69. [actual] cavvpus is keclpus
  70. [actual] keclpus is runkpus
  71. [actual] nidmpus is babgpus
  72. [planning] cavvpus is babgpus
  73. [actual] cavvpus is babgpus
  74. [actual] cavvpus is keclpus
  75. [actual] keclpus is runkpus
  76. [actual] runkpus is siybpus
  77. [actual] siybpus is mitgpus
  78. [actual] mitgpus is quffpus
  79. [actual] quffpus is buftpus
  80. [actual] buftpus is hizvpus
  81. [actual] hizvpus is tirppus
  82. [actual] tirppus is gixrpus
  83. [actual] gixrpus is nidmpus
  84. [actual] nidmpus is babgpus
  85. [actual] cavvpus is babgpus
  86. [actual] qabmpus is tanrpus
  87. [actual] tanrpus is cavvpus
  88. [actual] qabmpus is cavvpus
  89. [actual] cavvpus is babgpus
  90. [actual] qabmpus is babgpus
  91. [actual] x is qabmpus
  92. [actual] x is babgpus
  93. [actual] x is babgpus
  94. [actual] gixrpus is nidmpus
  95. [actual] nidmpus is babgpus
  96. [actual] gixrpus is babgpus
  97. [actual] tanrpus is cavvpus
  98. [planning] qabmpus is baphpus
  99. [actual] x is babgpus
  100. [planning] x is babgpus

=== 开始标准化和解析节点 ===
清洗后statements数: 100
标准化后节点数: 99
过滤掉的无效实体数: 1
标准化后的节点:
  1. [planning] x → babgpus (原始: x is babgpus)
  2. [actual] x → qabmpus (原始: x is qabmpus)
  3. [planning] qabmpus → babgpus (原始: qabmpus is babgpus)
  4. [actual] nidmpus → babgpus (原始: nidmpus is babgpus)
  5. [actual] nidmpus → tefjpus (原始: nidmpus is tefjpus)
  6. [planning] x → babgpus (原始: x is babgpus)
  7. [actual] gixrpus → nidmpus (原始: gixrpus is nidmpus)
  8. [actual] nidmpus → babgpus (原始: nidmpus is babgpus)
  9. [actual] gixrpus → babgpus (原始: gixrpus is babgpus)
  10. [actual] x → qabmpus (原始: x is qabmpus)
  11. [actual] gixrpus → gixxpus and yacypus (原始: gixrpus is gixxpus and yacypus)
  12. [actual] nidmpus → babgpus and tefjpus (原始: nidmpus is babgpus and tefjpus)
  13. [actual] cavvpus → keclpus and wuxgpus and capjpus (原始: cavvpus is keclpus and wuxgpus and capjpus)
  14. [actual] x → qabmpus (原始: x is qabmpus)
  15. [actual] siybpus → mitgpus and necypus (原始: siybpus is mitgpus and necypus)
  16. [actual] buftpus → hizvpus and xanwpus (原始: buftpus is hizvpus and xanwpus)
  17. [actual] gixrpus → nidmpus (原始: gixrpus is nidmpus)
  18. [actual] gixrpus → babgpus (原始: gixrpus is babgpus)
  19. [actual] nidmpus → babgpus (原始: nidmpus is babgpus)
  20. [actual] qabmpus → tanrpus and baphpus (原始: qabmpus is tanrpus and baphpus)
  21. [actual] mitgpus → quffpus and wojvpus and sehcpus (原始: mitgpus is quffpus and wojvpus and sehcpus)
  22. [actual] tanrpus → cavvpus (原始: tanrpus is cavvpus)
  23. [actual] qabmpus → tanrpus (原始: qabmpus is tanrpus)
  24. [actual] tanrpus → cavvpus (原始: tanrpus is cavvpus)
  25. [actual] qabmpus → cavvpus (原始: qabmpus is cavvpus)
  26. [actual] tirppus → gixrpus and luldpus (原始: tirppus is gixrpus and luldpus)
  27. [actual] quffpus → buftpus (原始: quffpus is buftpus)
  28. [actual] mitgpus → quffpus (原始: mitgpus is quffpus)
  29. [actual] mitgpus → buftpus (原始: mitgpus is buftpus)
  30. [actual] keclpus → runkpus (原始: keclpus is runkpus)
  31. [actual] cavvpus → keclpus (原始: cavvpus is keclpus)
  32. [actual] cavvpus → runkpus (原始: cavvpus is runkpus)
  33. [actual] hizvpus → tirppus (原始: hizvpus is tirppus)
  34. [actual] buftpus → hizvpus (原始: buftpus is hizvpus)
  35. [actual] buftpus → tirppus (原始: buftpus is tirppus)
  36. [actual] runkpus → siybpus and tazrpus (原始: runkpus is siybpus and tazrpus)
  37. [actual] gixxpus → sahzpus and voylpus (原始: gixxpus is sahzpus and voylpus)
  38. [planning] x → babgpus (原始: x is babgpus)
  39. [actual] x → qabmpus (原始: x is qabmpus)
  40. [planning] qabmpus → babgpus (原始: qabmpus is babgpus)
  41. [planning] qabmpus → babgpus (原始: qabmpus is babgpus)
  42. [actual] qabmpus → tanrpus and baphpus (原始: qabmpus is tanrpus and baphpus)
  43. [actual] tanrpus → cavvpus (原始: tanrpus is cavvpus)
  44. [actual] qabmpus → cavvpus (原始: qabmpus is cavvpus)
  45. [actual] cavvpus → keclpus and wuxgpus and capjpus (原始: cavvpus is keclpus and wuxgpus and capjpus)
  46. [actual] keclpus → runkpus (原始: keclpus is runkpus)
  47. [actual] runkpus → siybpus and tazrpus (原始: runkpus is siybpus and tazrpus)
  48. [actual] siybpus → mitgpus and necypus (原始: siybpus is mitgpus and necypus)
  49. [actual] mitgpus → quffpus and wojvpus and sehcpus (原始: mitgpus is quffpus and wojvpus and sehcpus)
  50. [actual] quffpus → buftpus (原始: quffpus is buftpus)
  51. [actual] buftpus → hizvpus and xanwpus (原始: buftpus is hizvpus and xanwpus)
  52. [actual] hizvpus → tirppus (原始: hizvpus is tirppus)
  53. [actual] tirppus → gixrpus and luldpus (原始: tirppus is gixrpus and luldpus)
  54. [actual] gixrpus → nidmpus (原始: gixrpus is nidmpus)
  55. [actual] nidmpus → babgpus and tefjpus (原始: nidmpus is babgpus and tefjpus)
  56. [planning] cavvpus → babgpus (原始: cavvpus is babgpus)
  57. [actual] cavvpus → keclpus (原始: cavvpus is keclpus)
  58. [actual] keclpus → runkpus (原始: keclpus is runkpus)
  59. [actual] runkpus → siybpus (原始: runkpus is siybpus)
  60. [actual] siybpus → mitgpus (原始: siybpus is mitgpus)
  61. [actual] mitgpus → quffpus (原始: mitgpus is quffpus)
  62. [actual] quffpus → buftpus (原始: quffpus is buftpus)
  63. [actual] buftpus → hizvpus (原始: buftpus is hizvpus)
  64. [actual] hizvpus → tirppus (原始: hizvpus is tirppus)
  65. [actual] tirppus → gixrpus (原始: tirppus is gixrpus)
  66. [actual] gixrpus → nidmpus (原始: gixrpus is nidmpus)
  67. [actual] nidmpus → babgpus (原始: nidmpus is babgpus)
  68. [actual] cavvpus → keclpus (原始: cavvpus is keclpus)
  69. [actual] keclpus → runkpus (原始: keclpus is runkpus)
  70. [actual] nidmpus → babgpus (原始: nidmpus is babgpus)
  71. [planning] cavvpus → babgpus (原始: cavvpus is babgpus)
  72. [actual] cavvpus → babgpus (原始: cavvpus is babgpus)
  73. [actual] cavvpus → keclpus (原始: cavvpus is keclpus)
  74. [actual] keclpus → runkpus (原始: keclpus is runkpus)
  75. [actual] runkpus → siybpus (原始: runkpus is siybpus)
  76. [actual] siybpus → mitgpus (原始: siybpus is mitgpus)
  77. [actual] mitgpus → quffpus (原始: mitgpus is quffpus)
  78. [actual] quffpus → buftpus (原始: quffpus is buftpus)
  79. [actual] buftpus → hizvpus (原始: buftpus is hizvpus)
  80. [actual] hizvpus → tirppus (原始: hizvpus is tirppus)
  81. [actual] tirppus → gixrpus (原始: tirppus is gixrpus)
  82. [actual] gixrpus → nidmpus (原始: gixrpus is nidmpus)
  83. [actual] nidmpus → babgpus (原始: nidmpus is babgpus)
  84. [actual] cavvpus → babgpus (原始: cavvpus is babgpus)
  85. [actual] qabmpus → tanrpus (原始: qabmpus is tanrpus)
  86. [actual] tanrpus → cavvpus (原始: tanrpus is cavvpus)
  87. [actual] qabmpus → cavvpus (原始: qabmpus is cavvpus)
  88. [actual] cavvpus → babgpus (原始: cavvpus is babgpus)
  89. [actual] qabmpus → babgpus (原始: qabmpus is babgpus)
  90. [actual] x → qabmpus (原始: x is qabmpus)
  91. [actual] x → babgpus (原始: x is babgpus)
  92. [actual] x → babgpus (原始: x is babgpus)
  93. [actual] gixrpus → nidmpus (原始: gixrpus is nidmpus)
  94. [actual] nidmpus → babgpus (原始: nidmpus is babgpus)
  95. [actual] gixrpus → babgpus (原始: gixrpus is babgpus)
  96. [actual] tanrpus → cavvpus (原始: tanrpus is cavvpus)
  97. [planning] qabmpus → baphpus (原始: qabmpus is baphpus)
  98. [actual] x → babgpus (原始: x is babgpus)
  99. [planning] x → babgpus (原始: x is babgpus)

开始新的后处理...
[后处理] 从LoG数据文件中获取到图数据，节点数: 28
[后处理] 加载LoG图，包含 28 个节点
  LoG节点 0: x is babgpus (规则: MP, 深度: 1)
  LoG节点 1: x is quffpus (规则: MP, 深度: 2)
  LoG节点 2: quffpus is babgpus (规则: CE, 深度: 2)
  LoG节点 3: x is keclpus (规则: CE, 深度: 3)
  LoG节点 4: keclpus is quffpus (规则: CE, 深度: 3)
  LoG节点 5: quffpus is babgpus and sahzpus (规则: MP, 深度: 3)
  LoG节点 6: x is keclpus and wuxgpus (规则: MP, 深度: 4)
  LoG节点 7: keclpus is quffpus and wojvpus (规则: MP, 深度: 4)
  LoG节点 8: quffpus is gixrpus (规则: MP, 深度: 4)
  LoG节点 9: gixrpus is babgpus and sahzpus (规则: CI, 深度: 4)
  LoG节点 10: x is tanrpus (规则: CE, 深度: 5)
  LoG节点 11: tanrpus is keclpus and wuxgpus (规则: CE, 深度: 5)
  LoG节点 12: keclpus is siybpus (规则: CE, 深度: 5)
  LoG节点 13: siybpus is quffpus and wojvpus (规则: MP, 深度: 5)
  LoG节点 14: quffpus is hizvpus (规则: CE, 深度: 5)
  LoG节点 15: hizvpus is gixrpus (规则: CE, 深度: 5)
  LoG节点 16: gixrpus is babgpus (规则: CE, 深度: 5)
  LoG节点 17: gixrpus is sahzpus (规则: MP, 深度: 5)
  LoG节点 18: x is tanrpus and baphpus (规则: MP, 深度: 6)
  LoG节点 19: tanrpus is keclpus and wuxgpus and capjpus (规则: MP, 深度: 6)
  LoG节点 20: keclpus is siybpus and tazrpus (规则: MP, 深度: 6)
  LoG节点 21: siybpus is mitgpus (规则: CE, 深度: 6)
  LoG节点 22: mitgpus is quffpus and wojvpus (规则: CE, 深度: 6)
  LoG节点 23: quffpus is hizvpus and xanwpus (规则: MP, 深度: 6)
  LoG节点 24: hizvpus is gixrpus and luldpus (规则: MP, 深度: 6)
  LoG节点 25: gixrpus is babgpus and tefjpus (规则: MP, 深度: 6)
  LoG节点 26: gixrpus is gixxpus (规则: CE, 深度: 6)
  LoG节点 27: gixxpus is sahzpus (规则: CE, 深度: 6)

============================================================
[后处理] 开始处理节点
============================================================
📊 初始状态:
   - 标准化节点数: 99
   - 初始条件数: 16
   - LoG图节点数: 28

📋 初始条件列表:
    1. gixrpus is gixxpus and yacypus
    2. nidmpus is babgpus and tefjpus
    3. cavvpus is keclpus and wuxgpus and capjpus
    4. x is qabmpus
    5. siybpus is mitgpus and necypus
    6. buftpus is hizvpus and xanwpus
    7. gixrpus is nidmpus
    8. qabmpus is tanrpus and baphpus
    9. mitgpus is quffpus and wojvpus and sehcpus
   10. tanrpus is cavvpus
   11. tirppus is gixrpus and luldpus
   12. quffpus is buftpus
   13. keclpus is runkpus
   14. hizvpus is tirppus
   15. runkpus is siybpus and tazrpus
   16. gixxpus is sahzpus and voylpus

🔧 构建初始Statement列表...
✅ 初始Statement列表构建完成，包含 16 个前提节点

🔍 开始处理actual节点...

   节点 1: x is qabmpus
      ↻ 重复节点，计数: 2

   节点 2: nidmpus is babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: nidmpus is babgpus and tefjpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: nidmpus is babgpus and tefjpus

   节点 3: nidmpus is tefjpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: nidmpus is babgpus and tefjpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: nidmpus is babgpus and tefjpus

   节点 4: gixrpus is nidmpus
      ↻ 重复节点，计数: 2

   节点 5: nidmpus is babgpus
      ↻ 重复节点，计数: 2

   节点 6: gixrpus is babgpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: gixrpus is babgpus
[子树点亮]     └─ 点亮依赖节点: gixrpus is babgpus and tefjpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 1 个节点
      ✅ 验证成功 + LoG匹配

   节点 7: x is qabmpus
      ↻ 重复节点，计数: 3

   节点 8: gixrpus is gixxpus and yacypus
      ↻ 重复节点，计数: 2

   节点 9: nidmpus is babgpus and tefjpus
      ↻ 重复节点，计数: 2

   节点 10: cavvpus is keclpus and wuxgpus and capjpus
      ↻ 重复节点，计数: 2

   节点 11: x is qabmpus
      ↻ 重复节点，计数: 4

   节点 12: siybpus is mitgpus and necypus
      ↻ 重复节点，计数: 2

   节点 13: buftpus is hizvpus and xanwpus
      ↻ 重复节点，计数: 2

   节点 14: gixrpus is nidmpus
      ↻ 重复节点，计数: 3

   节点 15: gixrpus is babgpus
      ↻ 重复节点，计数: 2

   节点 16: nidmpus is babgpus
      ↻ 重复节点，计数: 3

   节点 17: qabmpus is tanrpus and baphpus
      ↻ 重复节点，计数: 2

   节点 18: mitgpus is quffpus and wojvpus and sehcpus
      ↻ 重复节点，计数: 2

   节点 19: tanrpus is cavvpus
      ↻ 重复节点，计数: 2

   节点 20: qabmpus is tanrpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: qabmpus is tanrpus and baphpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: qabmpus is tanrpus and baphpus

   节点 21: tanrpus is cavvpus
      ↻ 重复节点，计数: 3

   节点 22: qabmpus is cavvpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: qabmpus is tanrpus → tanrpus is cavvpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: qabmpus is tanrpus
  - 前提: tanrpus is cavvpus

   节点 23: tirppus is gixrpus and luldpus
      ↻ 重复节点，计数: 2

   节点 24: quffpus is buftpus
      ↻ 重复节点，计数: 2

   节点 25: mitgpus is quffpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: mitgpus is quffpus and wojvpus and sehcpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: mitgpus is quffpus and wojvpus and sehcpus
  ✓ 点亮LoG节点: mitgpus is quffpus and wojvpus
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 26: mitgpus is buftpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: mitgpus is quffpus → quffpus is buftpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: mitgpus is quffpus
  - 前提: quffpus is buftpus

   节点 27: keclpus is runkpus
      ↻ 重复节点，计数: 2

   节点 28: cavvpus is keclpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: cavvpus is keclpus and wuxgpus and capjpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: cavvpus is keclpus and wuxgpus and capjpus

   节点 29: cavvpus is runkpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: cavvpus is keclpus → keclpus is runkpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: cavvpus is keclpus
  - 前提: keclpus is runkpus

   节点 30: hizvpus is tirppus
      ↻ 重复节点，计数: 2

   节点 31: buftpus is hizvpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: buftpus is hizvpus and xanwpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: buftpus is hizvpus and xanwpus

   节点 32: buftpus is tirppus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: buftpus is hizvpus → hizvpus is tirppus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: buftpus is hizvpus
  - 前提: hizvpus is tirppus

   节点 33: runkpus is siybpus and tazrpus
      ↻ 重复节点，计数: 2

   节点 34: gixxpus is sahzpus and voylpus
      ↻ 重复节点，计数: 2

   节点 35: x is qabmpus
      ↻ 重复节点，计数: 5

   节点 36: qabmpus is tanrpus and baphpus
      ↻ 重复节点，计数: 3

   节点 37: tanrpus is cavvpus
      ↻ 重复节点，计数: 4

   节点 38: qabmpus is cavvpus
      ↻ 重复节点，计数: 2

   节点 39: cavvpus is keclpus and wuxgpus and capjpus
      ↻ 重复节点，计数: 3

   节点 40: keclpus is runkpus
      ↻ 重复节点，计数: 3

   节点 41: runkpus is siybpus and tazrpus
      ↻ 重复节点，计数: 3

   节点 42: siybpus is mitgpus and necypus
      ↻ 重复节点，计数: 3

   节点 43: mitgpus is quffpus and wojvpus and sehcpus
      ↻ 重复节点，计数: 3

   节点 44: quffpus is buftpus
      ↻ 重复节点，计数: 3

   节点 45: buftpus is hizvpus and xanwpus
      ↻ 重复节点，计数: 3

   节点 46: hizvpus is tirppus
      ↻ 重复节点，计数: 3

   节点 47: tirppus is gixrpus and luldpus
      ↻ 重复节点，计数: 3

   节点 48: gixrpus is nidmpus
      ↻ 重复节点，计数: 4

   节点 49: nidmpus is babgpus and tefjpus
      ↻ 重复节点，计数: 3

   节点 50: cavvpus is keclpus
      ↻ 重复节点，计数: 2

   节点 51: keclpus is runkpus
      ↻ 重复节点，计数: 4

   节点 52: runkpus is siybpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: runkpus is siybpus and tazrpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: runkpus is siybpus and tazrpus

   节点 53: siybpus is mitgpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: siybpus is mitgpus
      ✅ 验证成功 + LoG匹配

   节点 54: mitgpus is quffpus
      ↻ 重复节点，计数: 2

   节点 55: quffpus is buftpus
      ↻ 重复节点，计数: 4

   节点 56: buftpus is hizvpus
      ↻ 重复节点，计数: 2

   节点 57: hizvpus is tirppus
      ↻ 重复节点，计数: 4

   节点 58: tirppus is gixrpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: tirppus is gixrpus and luldpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: tirppus is gixrpus and luldpus

   节点 59: gixrpus is nidmpus
      ↻ 重复节点，计数: 5

   节点 60: nidmpus is babgpus
      ↻ 重复节点，计数: 4

   节点 61: cavvpus is keclpus
      ↻ 重复节点，计数: 3

   节点 62: keclpus is runkpus
      ↻ 重复节点，计数: 5

   节点 63: nidmpus is babgpus
      ↻ 重复节点，计数: 5

   节点 64: cavvpus is babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: cavvpus is keclpus → keclpus is babgpus
[后处理] 基于推理轨迹点亮节点，使用了 10 个前提条件:
  - 前提: cavvpus is keclpus
  - 前提: keclpus is runkpus
  - 前提: runkpus is siybpus
  - 前提: siybpus is mitgpus
  - 前提: mitgpus is quffpus
  - 前提: quffpus is buftpus
  - 前提: buftpus is hizvpus
  - 前提: hizvpus is tirppus
  - 前提: tirppus is gixrpus
  - 前提: gixrpus is babgpus
  ✓ 点亮LoG节点: quffpus is babgpus
[子树点亮]     └─ 点亮依赖节点: quffpus is babgpus and sahzpus (深度3)
[子树点亮]     └─ 点亮依赖节点: quffpus is gixrpus (深度4)
[子树点亮]     └─ 点亮依赖节点: gixrpus is babgpus and sahzpus (深度4)
[子树点亮]     └─ 点亮依赖节点: quffpus is hizvpus (深度5)
[子树点亮]     └─ 点亮依赖节点: hizvpus is gixrpus (深度5)
[子树点亮]     └─ 点亮依赖节点: gixrpus is sahzpus (深度5)
[子树点亮]     └─ 点亮依赖节点: quffpus is hizvpus and xanwpus (深度6)
[子树点亮]     └─ 点亮依赖节点: hizvpus is gixrpus and luldpus (深度6)
[子树点亮]     └─ 点亮依赖节点: gixrpus is gixxpus (深度6)
[子树点亮]     └─ 点亮依赖节点: gixxpus is sahzpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 10 个节点
  ✓ 点亮LoG节点: keclpus is quffpus
[子树点亮]     └─ 点亮依赖节点: keclpus is quffpus and wojvpus (深度4)
[子树点亮]     └─ 点亮依赖节点: keclpus is siybpus (深度5)
[子树点亮]     └─ 点亮依赖节点: siybpus is quffpus and wojvpus (深度5)
[子树点亮]     └─ 点亮依赖节点: keclpus is siybpus and tazrpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 4 个节点
[后处理] 通过推理轨迹额外点亮了 2 个LoG节点

   节点 65: cavvpus is keclpus
      ↻ 重复节点，计数: 4

   节点 66: keclpus is runkpus
      ↻ 重复节点，计数: 6

   节点 67: runkpus is siybpus
      ↻ 重复节点，计数: 2

   节点 68: siybpus is mitgpus
      ↻ 重复节点，计数: 2

   节点 69: mitgpus is quffpus
      ↻ 重复节点，计数: 3

   节点 70: quffpus is buftpus
      ↻ 重复节点，计数: 5

   节点 71: buftpus is hizvpus
      ↻ 重复节点，计数: 3

   节点 72: hizvpus is tirppus
      ↻ 重复节点，计数: 5

   节点 73: tirppus is gixrpus
      ↻ 重复节点，计数: 2

   节点 74: gixrpus is nidmpus
      ↻ 重复节点，计数: 6

   节点 75: nidmpus is babgpus
      ↻ 重复节点，计数: 6

   节点 76: cavvpus is babgpus
      ↻ 重复节点，计数: 2

   节点 77: qabmpus is tanrpus
      ↻ 重复节点，计数: 2

   节点 78: tanrpus is cavvpus
      ↻ 重复节点，计数: 5

   节点 79: qabmpus is cavvpus
      ↻ 重复节点，计数: 3

   节点 80: cavvpus is babgpus
      ↻ 重复节点，计数: 3

   节点 81: qabmpus is babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: qabmpus is tanrpus → tanrpus is babgpus
[后处理] 基于推理轨迹点亮节点，使用了 3 个前提条件:
  - 前提: qabmpus is tanrpus
  - 前提: tanrpus is cavvpus
  - 前提: cavvpus is babgpus

   节点 82: x is qabmpus
      ↻ 重复节点，计数: 6

   节点 83: x is babgpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is babgpus
[子树点亮]     └─ 点亮依赖节点: x is quffpus (深度2)
[子树点亮]     └─ 点亮依赖节点: x is keclpus (深度3)
[子树点亮]     └─ 点亮依赖节点: x is keclpus and wuxgpus (深度4)
[子树点亮]     └─ 点亮依赖节点: x is tanrpus (深度5)
[子树点亮]     └─ 点亮依赖节点: tanrpus is keclpus and wuxgpus (深度5)
[子树点亮]     └─ 点亮依赖节点: x is tanrpus and baphpus (深度6)
[子树点亮]     └─ 点亮依赖节点: tanrpus is keclpus and wuxgpus and capjpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 7 个节点
      ✅ 验证成功 + LoG匹配

   节点 84: x is babgpus
      ↻ 重复节点，计数: 2

   节点 85: gixrpus is nidmpus
      ↻ 重复节点，计数: 7

   节点 86: nidmpus is babgpus
      ↻ 重复节点，计数: 7

   节点 87: gixrpus is babgpus
      ↻ 重复节点，计数: 3

   节点 88: tanrpus is cavvpus
      ↻ 重复节点，计数: 6

   节点 89: x is babgpus
      ↻ 重复节点，计数: 3

🔍 分析推理路径完整性...

============================================================
[后处理] 处理完成
============================================================
📈 处理统计:
   - 处理的actual节点: 89
   - 新增节点: 17
   - 更新已存在节点: 72
   - 点亮的LoG节点: 28

🎯 推理质量统计:
   - 完美推理: 17 (节点正确 + 路径正确)
   - 部分推理: 0 (节点正确 + 路径部分错误)
   - 无效推理: 0 (节点错误或路径完全错误)
[LoG分析] LoG图: 28节点, 16前提, 复杂度1-16

📊 === Statement列表分析 ===
📈 节点统计:
   - 总节点数: 33
   - 前提节点: 16
   - 推理节点: 17
   - 幻觉节点: 0
   - 点亮LoG节点: 28

✅ 推理节点详情:
   🟢 nidmpus is babgpus (出现7次, 质量:perfect)
   🟢 nidmpus is tefjpus (出现1次, 质量:perfect)
   🟢 gixrpus is babgpus (出现3次, 质量:perfect)
   🟢 qabmpus is tanrpus (出现2次, 质量:perfect)
   🟢 qabmpus is cavvpus (出现3次, 质量:perfect)
   🟢 mitgpus is quffpus (出现3次, 质量:perfect)
   🟢 mitgpus is buftpus (出现1次, 质量:perfect)
   🟢 cavvpus is keclpus (出现4次, 质量:perfect)
   🟢 cavvpus is runkpus (出现1次, 质量:perfect)
   🟢 buftpus is hizvpus (出现3次, 质量:perfect)
   🟢 buftpus is tirppus (出现1次, 质量:perfect)
   🟢 runkpus is siybpus (出现2次, 质量:perfect)
   🟢 siybpus is mitgpus (出现2次, 质量:perfect)
   🟢 tirppus is gixrpus (出现2次, 质量:perfect)
   🟢 cavvpus is babgpus (出现3次, 质量:perfect)
   🟢 qabmpus is babgpus (出现1次, 质量:perfect)
   🟢 x is babgpus (出现3次, 质量:perfect)

🔥 点亮的LoG节点:
   - mitgpus is quffpus and wojvpus
   - quffpus is hizvpus
   - hizvpus is gixrpus
   - keclpus is quffpus
   - siybpus is mitgpus
   - keclpus is quffpus and wojvpus
   - quffpus is babgpus
   - x is tanrpus and baphpus
   - hizvpus is gixrpus and luldpus
   - gixrpus is sahzpus
   - x is quffpus
   - x is babgpus
   - tanrpus is keclpus and wuxgpus and capjpus
   - gixrpus is babgpus
   - gixxpus is sahzpus
   - x is keclpus
   - x is keclpus and wuxgpus
   - gixrpus is babgpus and tefjpus
   - quffpus is gixrpus
   - keclpus is siybpus and tazrpus
   - x is tanrpus
   - quffpus is hizvpus and xanwpus
   - siybpus is quffpus and wojvpus
   - tanrpus is keclpus and wuxgpus
   - quffpus is babgpus and sahzpus
   - keclpus is siybpus
   - gixrpus is babgpus and sahzpus
   - gixrpus is gixxpus

============================================================
📊 计算评估指标
============================================================

🎯 计算Coverage指标...
   深度Coverage: 6/6 = 100.00%
   最深点亮节点: x is babgpus (第6层)
   节点Coverage: 28/28 = 100.00%
   前提条件Coverage: 16/16 = 100.00%
   各推理层点亮比例:
     第1层: 10/10 = 100.00%
     第2层: 8/8 = 100.00%
     第3层: 4/4 = 100.00%
     第4层: 3/3 = 100.00%
     第5层: 2/2 = 100.00%
     第6层: 1/1 = 100.00%

🎯 计算Precision指标...
   Error Rate: 0/17 = 0.00%
   可推导节点: 17/17
   Strict Error Rate: 0/17 = 0.00%
   严格有效节点: 17/17

   详细分析:
     完美推理: 17 (100.00%)
     部分推理: 0 (0.00%)
     无效推理: 0 (0.00%)

================================================================================
处理记录 25/50
================================================================================
记录索引: 24
问题状态: correct
📁 从缓存加载提取结果: evaluation_results.LoG_6.deepseek-reasoner_record_24.json
✅ 使用缓存结果:
   - 句子数: 211
   - 提取的语句数: 281
   - 初始条件数: 24

=== Statement提取完成 ===
总句子数: 211
成功提取: 211
失败提取: 0
总statements数: 281

=== 开始清洗Statement格式 ===
原始statements数: 281
清洗后statements数: 188
过滤掉的statements数: 93
清洗后的statements:
  1. [planning] x is babgpus and babrpus
  2. [actual] x is johmpus and dacxpus
  3. [actual] x is a combination of johmpus and dacxpus
  4. [planning] johmpus is babgpus
  5. [planning] johmpus is babrpus
  6. [planning] dacxpus is babgpus
  7. [planning] dacxpus is babrpus
  8. [actual] tixypus is maldpus
  9. [actual] tulppus is sukbpus
  10. [actual] hiknpus is yectpus and poyrpus
  11. [actual] johmpus is qebgpus
  12. [actual] yijwpus is hiknpus and fufjpus
  13. [actual] moxwpus is wizvpus and palbpus
  14. [actual] bitjpus is yijwpus and jotzpus
  15. [actual] qemtpus is lorkpus
  16. [actual] tixypus is babrpus and pubwpus
  17. [actual] tixypus is babrpus and pubwpus
  18. [actual] yurxpus is tulppus
  19. [actual] maldpus is jubbpus
  20. [actual] lorkpus is moxwpus and qoyzpus and havtpus
  21. [actual] kilxpus is vemspus
  22. [actual] tixypus is babgpus and jabfpus
  23. [actual] tixypus is babgpus and jabfpus
  24. [actual] sukbpus is bitjpus
  25. [actual] wizvpus is lefzpus and fobzpus
  26. [actual] lekqpus is kilxpus
  27. [actual] lefzpus is lekqpus and junvpus
  28. [actual] yectpus is qemtpus
  29. [actual] x is johmpus and dacxpus
  30. [actual] fuxspus is dakkpus
  31. [actual] lefzpus is fuxspus
  32. [actual] lefzpus is lefzpus and fobzpus
  33. [actual] wizvpus is lefzpus and fobzpus
  34. [planning] wizvpus is lefzpus and fobzpus
  35. [actual] johmpus is yurxpus
  36. [actual] johmpus is yurxpus
  37. [actual] vemspus is tixypus and turtpus
  38. [actual] x is johmpus and dacxpus
  39. [actual] x is johmpus and dacxpus
  40. [actual] x is johmpus and dacxpus
  41. [actual] fuxspus is dakkpus
  42. [planning] x is babgpus and babrpus
  43. [actual] babgpus is tixypus
  44. [actual] babrpus is tixypus
  45. [actual] tixypus is babrpus and pubwpus
  46. [actual] tixypus is babgpus and jabfpus
  47. [actual] tixypus is babgpus
  48. [actual] tixypus is babrpus
  49. [actual] x is johmpus and dacxpus
  50. [planning] johmpus is related to tixypus
  51. [planning] johmpus is directly to babgpus and babrpus
  52. [actual] johmpus is qebgpus
  53. [actual] johmpus is yurxpus
  54. [actual] johmpus is yurxpus
  55. [actual] yurxpus is tulppus
  56. [actual] yurxpus is tulppus
  57. [actual] johmpus is yurxpus
  58. [actual] yurxpus is tulppus
  59. [actual] tulppus is sukbpus
  60. [actual] tulppus is sukbpus
  61. [actual] johmpus is sukbpus
  62. [actual] sukbpus is bitjpus
  63. [actual] sukbpus is bitjpus
  64. [actual] johmpus is bitjpus
  65. [actual] bitjpus is yijwpus and jotzpus
  66. [actual] bitjpus is yijwpus and jotzpus
  67. [actual] johmpus is bitjpus
  68. [planning] johmpus is yijwpus and jotzpus
  69. [planning] johmpus is bitjpus
  70. [actual] johmpus is bitjpus
  71. [planning] johmpus is tixypus
  72. [planning] johmpus is babgpus
  73. [planning] johmpus is babrpus
  74. [actual] yijwpus is hiknpus and fufjpus
  75. [actual] hiknpus is yectpus and poyrpus
  76. [actual] yectpus is qemtpus
  77. [actual] qemtpus is lorkpus
  78. [actual] lorkpus is moxwpus and qoyzpus and havtpus
  79. [actual] moxwpus is point 6
  80. [actual] moxwpus is wizvpus and palbpus
  81. [actual] wizvpus is lefzpus and fobzpus
  82. [actual] lefzpus is point 18
  83. [actual] lefzpus is lekqpus and junvpus
  84. [planning] lefzpus is fuxspus
  85. [planning] lefzpus is fuxspus
  86. [actual] lefzpus is fuxspus
  87. [actual] wizvpus is lefzpus and fobzpus
  88. [actual] lefzpus is fuxspus
  89. [planning] lefzpus is fuxspus
  90. [actual] wizvpus is lefzpus and fobzpus
  91. [actual] lefzpus is wizvpus
  92. [actual] lefzpus is lekqpus and junvpus
  93. [actual] lefzpus is lekqpus and junvpus
  94. [actual] lefzpus is fuxspus
  95. [actual] lefzpus is fuxspus
  96. [actual] fuxspus is dakkpus
  97. [actual] fuxspus is dakkpus
  98. [actual] lefzpus is fuxspus
  99. [actual] fuxspus is dakkpus
  100. [actual] lefzpus is lekqpus and junvpus
  101. [actual] lekqpus is kilxpus
  102. [actual] kilxpus is vemspus
  103. [actual] vemspus is tixypus and turtpus
  104. [actual] vemspus is tixypus and turtpus
  105. [actual] kilxpus is vemspus
  106. [actual] vemspus is tixypus and turtpus
  107. [actual] lekqpus is kilxpus
  108. [actual] kilxpus is vemspus
  109. [actual] vemspus is tixypus
  110. [actual] tixypus is turtpus
  111. [actual] lefzpus is lekqpus and junvpus
  112. [actual] lefzpus is tixypus
  113. [actual] lekqpus is tixypus
  114. [actual] lefzpus is tixypus
  115. [actual] johmpus is bitjpus
  116. [actual] yectpus is qemtpus
  117. [actual] yectpus is lorkpus
  118. [actual] tixypus is babgpus and babrpus
  119. [planning] johmpus is babgpus and babrpus
  120. [planning] johmpus is tixypus
  121. [actual] johmpus is bitjpus
  122. [actual] bitjpus is sukbpus
  123. [actual] sukbpus is tulppus
  124. [actual] tulppus is yurxpus
  125. [actual] johmpus is yurxpus
  126. [actual] yurxpus is tulppus
  127. [actual] tulppus is sukbpus
  128. [actual] sukbpus is bitjpus
  129. [actual] johmpus is bitjpus
  130. [planning] johmpus is bitjpus
  131. [actual] johmpus is a category that eventually contains tixypus
  132. [planning] johmpus is tixypus
  133. [actual] johmpus is yurxpus
  134. [actual] yurxpus is tulppus
  135. [actual] tulppus is sukbpus
  136. [actual] sukbpus is bitjpus
  137. [actual] bitjpus is yijwpus and jotzpus
  138. [planning] bitjpus is yijwpus and jotzpus
  139. [actual] bitjpus is yijwpus and jotzpus
  140. [actual] bitjpus is yijwpus and jotzpus
  141. [planning] bitjpus is yijwpus
  142. [planning] bitjpus is jotzpus
  143. [planning] bitjpus is yijwpus and jotzpus
  144. [actual] bitjpus is yijwpus and jotzpus
  145. [actual] bitjpus is yijwpus
  146. [actual] bitjpus is jotzpus
  147. [actual] hiknpus is yectpus and poyrpus
  148. [actual] hiknpus is yectpus
  149. [actual] yectpus is qemtpus
  150. [actual] vemspus is tixypus and turtpus
  151. [actual] tixypus is babgpus and jabfpus
  152. [actual] tixypus is babrpus and pubwpus
  153. [actual] tixypus is babgpus
  154. [actual] tixypus is babrpus
  155. [planning] johmpus is babgpus and babrpus
  156. [planning] johmpus is tixypus or something that is babgpus/babrpus
  157. [actual] bitjpus is yijwpus and jotzpus
  158. [actual] yijwpus is hiknpus and fufjpus
  159. [actual] hiknpus is yectpus and poyrpus
  160. [actual] yectpus is qemtpus
  161. [actual] qemtpus is lorkpus
  162. [actual] lorkpus is moxwpus and qoyzpus and havtpus
  163. [actual] moxwpus is wizvpus and palbpus
  164. [actual] wizvpus is lefzpus and fobzpus
  165. [actual] lefzpus is lekqpus and junvpus
  166. [actual] lekqpus is kilxpus
  167. [actual] kilxpus is vemspus
  168. [actual] vemspus is tixypus and turtpus
  169. [actual] johmpus is tixypus
  170. [actual] tixypus is babgpus and babrpus
  171. [planning] johmpus is babgpus and babrpus
  172. [actual] johmpus is babgpus and babrpus
  173. [actual] x is johmpus and dacxpus
  174. [actual] dacxpus is johmpus and dacxpus
  175. [planning] x is johmpus and dacxpus
  176. [planning] x is both johmpus and dacxpus
  177. [actual] x is johmpus and dacxpus
  178. [actual] x is johmpus
  179. [actual] johmpus is babgpus and babrpus
  180. [actual] x is babgpus and babrpus
  181. [actual] x is babgpus and babrpus
  182. [planning] x is babgpus and babrpus
  183. [actual] x is babgpus and babrpus
  184. [planning] x is babgpus
  185. [planning] x is babrpus
  186. [actual] x is dacxpus
  187. [planning] x is dacxpus
  188. [planning] x is babgpus and babrpus

=== 开始标准化和解析节点 ===
清洗后statements数: 188
标准化后节点数: 180
过滤掉的无效实体数: 8
标准化后的节点:
  1. [planning] x → babgpus and babrpus (原始: x is babgpus and babrpus)
  2. [actual] x → johmpus and dacxpus (原始: x is johmpus and dacxpus)
  3. [planning] johmpus → babgpus (原始: johmpus is babgpus)
  4. [planning] johmpus → babrpus (原始: johmpus is babrpus)
  5. [planning] dacxpus → babgpus (原始: dacxpus is babgpus)
  6. [planning] dacxpus → babrpus (原始: dacxpus is babrpus)
  7. [actual] tixypus → maldpus (原始: tixypus is maldpus)
  8. [actual] tulppus → sukbpus (原始: tulppus is sukbpus)
  9. [actual] hiknpus → yectpus and poyrpus (原始: hiknpus is yectpus and poyrpus)
  10. [actual] johmpus → qebgpus (原始: johmpus is qebgpus)
  11. [actual] yijwpus → hiknpus and fufjpus (原始: yijwpus is hiknpus and fufjpus)
  12. [actual] moxwpus → wizvpus and palbpus (原始: moxwpus is wizvpus and palbpus)
  13. [actual] bitjpus → yijwpus and jotzpus (原始: bitjpus is yijwpus and jotzpus)
  14. [actual] qemtpus → lorkpus (原始: qemtpus is lorkpus)
  15. [actual] tixypus → babrpus and pubwpus (原始: tixypus is babrpus and pubwpus)
  16. [actual] tixypus → babrpus and pubwpus (原始: tixypus is babrpus and pubwpus)
  17. [actual] yurxpus → tulppus (原始: yurxpus is tulppus)
  18. [actual] maldpus → jubbpus (原始: maldpus is jubbpus)
  19. [actual] lorkpus → moxwpus and qoyzpus and havtpus (原始: lorkpus is moxwpus and qoyzpus and havtpus)
  20. [actual] kilxpus → vemspus (原始: kilxpus is vemspus)
  21. [actual] tixypus → babgpus and jabfpus (原始: tixypus is babgpus and jabfpus)
  22. [actual] tixypus → babgpus and jabfpus (原始: tixypus is babgpus and jabfpus)
  23. [actual] sukbpus → bitjpus (原始: sukbpus is bitjpus)
  24. [actual] wizvpus → lefzpus and fobzpus (原始: wizvpus is lefzpus and fobzpus)
  25. [actual] lekqpus → kilxpus (原始: lekqpus is kilxpus)
  26. [actual] lefzpus → lekqpus and junvpus (原始: lefzpus is lekqpus and junvpus)
  27. [actual] yectpus → qemtpus (原始: yectpus is qemtpus)
  28. [actual] x → johmpus and dacxpus (原始: x is johmpus and dacxpus)
  29. [actual] fuxspus → dakkpus (原始: fuxspus is dakkpus)
  30. [actual] lefzpus → fuxspus (原始: lefzpus is fuxspus)
  31. [actual] lefzpus → lefzpus and fobzpus (原始: lefzpus is lefzpus and fobzpus)
  32. [actual] wizvpus → lefzpus and fobzpus (原始: wizvpus is lefzpus and fobzpus)
  33. [planning] wizvpus → lefzpus and fobzpus (原始: wizvpus is lefzpus and fobzpus)
  34. [actual] johmpus → yurxpus (原始: johmpus is yurxpus)
  35. [actual] johmpus → yurxpus (原始: johmpus is yurxpus)
  36. [actual] vemspus → tixypus and turtpus (原始: vemspus is tixypus and turtpus)
  37. [actual] x → johmpus and dacxpus (原始: x is johmpus and dacxpus)
  38. [actual] x → johmpus and dacxpus (原始: x is johmpus and dacxpus)
  39. [actual] x → johmpus and dacxpus (原始: x is johmpus and dacxpus)
  40. [actual] fuxspus → dakkpus (原始: fuxspus is dakkpus)
  41. [planning] x → babgpus and babrpus (原始: x is babgpus and babrpus)
  42. [actual] babgpus → tixypus (原始: babgpus is tixypus)
  43. [actual] babrpus → tixypus (原始: babrpus is tixypus)
  44. [actual] tixypus → babrpus and pubwpus (原始: tixypus is babrpus and pubwpus)
  45. [actual] tixypus → babgpus and jabfpus (原始: tixypus is babgpus and jabfpus)
  46. [actual] tixypus → babgpus (原始: tixypus is babgpus)
  47. [actual] tixypus → babrpus (原始: tixypus is babrpus)
  48. [actual] x → johmpus and dacxpus (原始: x is johmpus and dacxpus)
  49. [actual] johmpus → qebgpus (原始: johmpus is qebgpus)
  50. [actual] johmpus → yurxpus (原始: johmpus is yurxpus)
  51. [actual] johmpus → yurxpus (原始: johmpus is yurxpus)
  52. [actual] yurxpus → tulppus (原始: yurxpus is tulppus)
  53. [actual] yurxpus → tulppus (原始: yurxpus is tulppus)
  54. [actual] johmpus → yurxpus (原始: johmpus is yurxpus)
  55. [actual] yurxpus → tulppus (原始: yurxpus is tulppus)
  56. [actual] tulppus → sukbpus (原始: tulppus is sukbpus)
  57. [actual] tulppus → sukbpus (原始: tulppus is sukbpus)
  58. [actual] johmpus → sukbpus (原始: johmpus is sukbpus)
  59. [actual] sukbpus → bitjpus (原始: sukbpus is bitjpus)
  60. [actual] sukbpus → bitjpus (原始: sukbpus is bitjpus)
  61. [actual] johmpus → bitjpus (原始: johmpus is bitjpus)
  62. [actual] bitjpus → yijwpus and jotzpus (原始: bitjpus is yijwpus and jotzpus)
  63. [actual] bitjpus → yijwpus and jotzpus (原始: bitjpus is yijwpus and jotzpus)
  64. [actual] johmpus → bitjpus (原始: johmpus is bitjpus)
  65. [planning] johmpus → yijwpus and jotzpus (原始: johmpus is yijwpus and jotzpus)
  66. [planning] johmpus → bitjpus (原始: johmpus is bitjpus)
  67. [actual] johmpus → bitjpus (原始: johmpus is bitjpus)
  68. [planning] johmpus → tixypus (原始: johmpus is tixypus)
  69. [planning] johmpus → babgpus (原始: johmpus is babgpus)
  70. [planning] johmpus → babrpus (原始: johmpus is babrpus)
  71. [actual] yijwpus → hiknpus and fufjpus (原始: yijwpus is hiknpus and fufjpus)
  72. [actual] hiknpus → yectpus and poyrpus (原始: hiknpus is yectpus and poyrpus)
  73. [actual] yectpus → qemtpus (原始: yectpus is qemtpus)
  74. [actual] qemtpus → lorkpus (原始: qemtpus is lorkpus)
  75. [actual] lorkpus → moxwpus and qoyzpus and havtpus (原始: lorkpus is moxwpus and qoyzpus and havtpus)
  76. [actual] moxwpus → wizvpus and palbpus (原始: moxwpus is wizvpus and palbpus)
  77. [actual] wizvpus → lefzpus and fobzpus (原始: wizvpus is lefzpus and fobzpus)
  78. [actual] lefzpus → lekqpus and junvpus (原始: lefzpus is lekqpus and junvpus)
  79. [planning] lefzpus → fuxspus (原始: lefzpus is fuxspus)
  80. [planning] lefzpus → fuxspus (原始: lefzpus is fuxspus)
  81. [actual] lefzpus → fuxspus (原始: lefzpus is fuxspus)
  82. [actual] wizvpus → lefzpus and fobzpus (原始: wizvpus is lefzpus and fobzpus)
  83. [actual] lefzpus → fuxspus (原始: lefzpus is fuxspus)
  84. [planning] lefzpus → fuxspus (原始: lefzpus is fuxspus)
  85. [actual] wizvpus → lefzpus and fobzpus (原始: wizvpus is lefzpus and fobzpus)
  86. [actual] lefzpus → wizvpus (原始: lefzpus is wizvpus)
  87. [actual] lefzpus → lekqpus and junvpus (原始: lefzpus is lekqpus and junvpus)
  88. [actual] lefzpus → lekqpus and junvpus (原始: lefzpus is lekqpus and junvpus)
  89. [actual] lefzpus → fuxspus (原始: lefzpus is fuxspus)
  90. [actual] lefzpus → fuxspus (原始: lefzpus is fuxspus)
  91. [actual] fuxspus → dakkpus (原始: fuxspus is dakkpus)
  92. [actual] fuxspus → dakkpus (原始: fuxspus is dakkpus)
  93. [actual] lefzpus → fuxspus (原始: lefzpus is fuxspus)
  94. [actual] fuxspus → dakkpus (原始: fuxspus is dakkpus)
  95. [actual] lefzpus → lekqpus and junvpus (原始: lefzpus is lekqpus and junvpus)
  96. [actual] lekqpus → kilxpus (原始: lekqpus is kilxpus)
  97. [actual] kilxpus → vemspus (原始: kilxpus is vemspus)
  98. [actual] vemspus → tixypus and turtpus (原始: vemspus is tixypus and turtpus)
  99. [actual] vemspus → tixypus and turtpus (原始: vemspus is tixypus and turtpus)
  100. [actual] kilxpus → vemspus (原始: kilxpus is vemspus)
  101. [actual] vemspus → tixypus and turtpus (原始: vemspus is tixypus and turtpus)
  102. [actual] lekqpus → kilxpus (原始: lekqpus is kilxpus)
  103. [actual] kilxpus → vemspus (原始: kilxpus is vemspus)
  104. [actual] vemspus → tixypus (原始: vemspus is tixypus)
  105. [actual] tixypus → turtpus (原始: tixypus is turtpus)
  106. [actual] lefzpus → lekqpus and junvpus (原始: lefzpus is lekqpus and junvpus)
  107. [actual] lefzpus → tixypus (原始: lefzpus is tixypus)
  108. [actual] lekqpus → tixypus (原始: lekqpus is tixypus)
  109. [actual] lefzpus → tixypus (原始: lefzpus is tixypus)
  110. [actual] johmpus → bitjpus (原始: johmpus is bitjpus)
  111. [actual] yectpus → qemtpus (原始: yectpus is qemtpus)
  112. [actual] yectpus → lorkpus (原始: yectpus is lorkpus)
  113. [actual] tixypus → babgpus and babrpus (原始: tixypus is babgpus and babrpus)
  114. [planning] johmpus → babgpus and babrpus (原始: johmpus is babgpus and babrpus)
  115. [planning] johmpus → tixypus (原始: johmpus is tixypus)
  116. [actual] johmpus → bitjpus (原始: johmpus is bitjpus)
  117. [actual] bitjpus → sukbpus (原始: bitjpus is sukbpus)
  118. [actual] sukbpus → tulppus (原始: sukbpus is tulppus)
  119. [actual] tulppus → yurxpus (原始: tulppus is yurxpus)
  120. [actual] johmpus → yurxpus (原始: johmpus is yurxpus)
  121. [actual] yurxpus → tulppus (原始: yurxpus is tulppus)
  122. [actual] tulppus → sukbpus (原始: tulppus is sukbpus)
  123. [actual] sukbpus → bitjpus (原始: sukbpus is bitjpus)
  124. [actual] johmpus → bitjpus (原始: johmpus is bitjpus)
  125. [planning] johmpus → bitjpus (原始: johmpus is bitjpus)
  126. [planning] johmpus → tixypus (原始: johmpus is tixypus)
  127. [actual] johmpus → yurxpus (原始: johmpus is yurxpus)
  128. [actual] yurxpus → tulppus (原始: yurxpus is tulppus)
  129. [actual] tulppus → sukbpus (原始: tulppus is sukbpus)
  130. [actual] sukbpus → bitjpus (原始: sukbpus is bitjpus)
  131. [actual] bitjpus → yijwpus and jotzpus (原始: bitjpus is yijwpus and jotzpus)
  132. [planning] bitjpus → yijwpus and jotzpus (原始: bitjpus is yijwpus and jotzpus)
  133. [actual] bitjpus → yijwpus and jotzpus (原始: bitjpus is yijwpus and jotzpus)
  134. [actual] bitjpus → yijwpus and jotzpus (原始: bitjpus is yijwpus and jotzpus)
  135. [planning] bitjpus → yijwpus (原始: bitjpus is yijwpus)
  136. [planning] bitjpus → jotzpus (原始: bitjpus is jotzpus)
  137. [planning] bitjpus → yijwpus and jotzpus (原始: bitjpus is yijwpus and jotzpus)
  138. [actual] bitjpus → yijwpus and jotzpus (原始: bitjpus is yijwpus and jotzpus)
  139. [actual] bitjpus → yijwpus (原始: bitjpus is yijwpus)
  140. [actual] bitjpus → jotzpus (原始: bitjpus is jotzpus)
  141. [actual] hiknpus → yectpus and poyrpus (原始: hiknpus is yectpus and poyrpus)
  142. [actual] hiknpus → yectpus (原始: hiknpus is yectpus)
  143. [actual] yectpus → qemtpus (原始: yectpus is qemtpus)
  144. [actual] vemspus → tixypus and turtpus (原始: vemspus is tixypus and turtpus)
  145. [actual] tixypus → babgpus and jabfpus (原始: tixypus is babgpus and jabfpus)
  146. [actual] tixypus → babrpus and pubwpus (原始: tixypus is babrpus and pubwpus)
  147. [actual] tixypus → babgpus (原始: tixypus is babgpus)
  148. [actual] tixypus → babrpus (原始: tixypus is babrpus)
  149. [planning] johmpus → babgpus and babrpus (原始: johmpus is babgpus and babrpus)
  150. [actual] bitjpus → yijwpus and jotzpus (原始: bitjpus is yijwpus and jotzpus)
  151. [actual] yijwpus → hiknpus and fufjpus (原始: yijwpus is hiknpus and fufjpus)
  152. [actual] hiknpus → yectpus and poyrpus (原始: hiknpus is yectpus and poyrpus)
  153. [actual] yectpus → qemtpus (原始: yectpus is qemtpus)
  154. [actual] qemtpus → lorkpus (原始: qemtpus is lorkpus)
  155. [actual] lorkpus → moxwpus and qoyzpus and havtpus (原始: lorkpus is moxwpus and qoyzpus and havtpus)
  156. [actual] moxwpus → wizvpus and palbpus (原始: moxwpus is wizvpus and palbpus)
  157. [actual] wizvpus → lefzpus and fobzpus (原始: wizvpus is lefzpus and fobzpus)
  158. [actual] lefzpus → lekqpus and junvpus (原始: lefzpus is lekqpus and junvpus)
  159. [actual] lekqpus → kilxpus (原始: lekqpus is kilxpus)
  160. [actual] kilxpus → vemspus (原始: kilxpus is vemspus)
  161. [actual] vemspus → tixypus and turtpus (原始: vemspus is tixypus and turtpus)
  162. [actual] johmpus → tixypus (原始: johmpus is tixypus)
  163. [actual] tixypus → babgpus and babrpus (原始: tixypus is babgpus and babrpus)
  164. [planning] johmpus → babgpus and babrpus (原始: johmpus is babgpus and babrpus)
  165. [actual] johmpus → babgpus and babrpus (原始: johmpus is babgpus and babrpus)
  166. [actual] x → johmpus and dacxpus (原始: x is johmpus and dacxpus)
  167. [actual] dacxpus → johmpus and dacxpus (原始: dacxpus is johmpus and dacxpus)
  168. [planning] x → johmpus and dacxpus (原始: x is johmpus and dacxpus)
  169. [actual] x → johmpus and dacxpus (原始: x is johmpus and dacxpus)
  170. [actual] x → johmpus (原始: x is johmpus)
  171. [actual] johmpus → babgpus and babrpus (原始: johmpus is babgpus and babrpus)
  172. [actual] x → babgpus and babrpus (原始: x is babgpus and babrpus)
  173. [actual] x → babgpus and babrpus (原始: x is babgpus and babrpus)
  174. [planning] x → babgpus and babrpus (原始: x is babgpus and babrpus)
  175. [actual] x → babgpus and babrpus (原始: x is babgpus and babrpus)
  176. [planning] x → babgpus (原始: x is babgpus)
  177. [planning] x → babrpus (原始: x is babrpus)
  178. [actual] x → dacxpus (原始: x is dacxpus)
  179. [planning] x → dacxpus (原始: x is dacxpus)
  180. [planning] x → babgpus and babrpus (原始: x is babgpus and babrpus)

开始新的后处理...
[后处理] 从LoG数据文件中获取到图数据，节点数: 37
[后处理] 加载LoG图，包含 37 个节点
  LoG节点 0: x is babgpus and babrpus (规则: MP, 深度: 1)
  LoG节点 1: x is moxwpus (规则: MP, 深度: 2)
  LoG节点 2: moxwpus is babgpus and babrpus (规则: MP, 深度: 2)
  LoG节点 3: x is yijwpus (规则: MP, 深度: 3)
  LoG节点 4: yijwpus is moxwpus (规则: CE, 深度: 3)
  LoG节点 5: moxwpus is lekqpus (规则: CE, 深度: 3)
  LoG节点 6: lekqpus is babgpus and babrpus (规则: CE, 深度: 3)
  LoG节点 7: x is yurxpus (规则: CE, 深度: 4)
  LoG节点 8: yurxpus is yijwpus (规则: CE, 深度: 4)
  LoG节点 9: yijwpus is moxwpus and qoyzpus (规则: MP, 深度: 4)
  LoG节点 10: moxwpus is lekqpus and dakkpus (规则: MP, 深度: 4)
  LoG节点 11: lekqpus is babgpus and babrpus and jubbpus (规则: MP, 深度: 4)
  LoG节点 12: x is yurxpus and qebgpus (规则: MP, 深度: 5)
  LoG节点 13: yurxpus is yijwpus and jotzpus (规则: MP, 深度: 5)
  LoG节点 14: yijwpus is yectpus (规则: MP, 深度: 5)
  LoG节点 15: yectpus is moxwpus and qoyzpus (规则: MP, 深度: 5)
  LoG节点 16: moxwpus is lefzpus (规则: MP, 深度: 5)
  LoG节点 17: lefzpus is lekqpus and dakkpus (规则: CI, 深度: 5)
  LoG节点 18: lekqpus is tixypus (规则: MP, 深度: 5)
  LoG节点 19: tixypus is babgpus and babrpus and jubbpus (规则: CI, 深度: 5)
  LoG节点 20: x is johmpus (规则: CE, 深度: 6)
  LoG节点 21: johmpus is yurxpus and qebgpus (规则: CI, 深度: 6)
  LoG节点 22: yurxpus is sukbpus (规则: MP, 深度: 6)
  LoG节点 23: sukbpus is yijwpus and jotzpus (规则: MP, 深度: 6)
  LoG节点 24: yijwpus is hiknpus (规则: CE, 深度: 6)
  LoG节点 25: hiknpus is yectpus (规则: CE, 深度: 6)
  LoG节点 26: yectpus is lorkpus (规则: MP, 深度: 6)
  LoG节点 27: lorkpus is moxwpus and qoyzpus (规则: CE, 深度: 6)
  LoG节点 28: moxwpus is wizvpus (规则: CE, 深度: 6)
  LoG节点 29: wizvpus is lefzpus (规则: CE, 深度: 6)
  LoG节点 30: lefzpus is lekqpus (规则: CE, 深度: 6)
  LoG节点 31: lefzpus is dakkpus (规则: MP, 深度: 6)
  LoG节点 32: lekqpus is vemspus (规则: MP, 深度: 6)
  LoG节点 33: vemspus is tixypus (规则: CE, 深度: 6)
  LoG节点 34: tixypus is babgpus (规则: CE, 深度: 6)
  LoG节点 35: tixypus is babrpus (规则: CE, 深度: 6)
  LoG节点 36: tixypus is jubbpus (规则: MP, 深度: 6)

============================================================
[后处理] 开始处理节点
============================================================
📊 初始状态:
   - 标准化节点数: 180
   - 初始条件数: 24
   - LoG图节点数: 37

📋 初始条件列表:
    1. tixypus is maldpus
    2. tulppus is sukbpus
    3. hiknpus is yectpus and poyrpus
    4. johmpus is qebgpus
    5. yijwpus is hiknpus and fufjpus
    6. moxwpus is wizvpus and palbpus
    7. bitjpus is yijwpus and jotzpus
    8. qemtpus is lorkpus
    9. tixypus is babrpus and pubwpus
   10. yurxpus is tulppus
   11. maldpus is jubbpus
   12. lorkpus is moxwpus and qoyzpus and havtpus
   13. kilxpus is vemspus
   14. tixypus is babgpus and jabfpus
   15. sukbpus is bitjpus
   16. wizvpus is lefzpus and fobzpus
   17. lekqpus is kilxpus
   18. lefzpus is lekqpus and junvpus
   19. yectpus is qemtpus
   20. x is johmpus and dacxpus
   21. fuxspus is dakkpus
   22. lefzpus is fuxspus
   23. johmpus is yurxpus
   24. vemspus is tixypus and turtpus

🔧 构建初始Statement列表...
✅ 初始Statement列表构建完成，包含 24 个前提节点

🔍 开始处理actual节点...

   节点 1: x is johmpus and dacxpus
      ↻ 重复节点，计数: 2

   节点 2: tixypus is maldpus
      ↻ 重复节点，计数: 2

   节点 3: tulppus is sukbpus
      ↻ 重复节点，计数: 2

   节点 4: hiknpus is yectpus and poyrpus
      ↻ 重复节点，计数: 2

   节点 5: johmpus is qebgpus
      ↻ 重复节点，计数: 2

   节点 6: yijwpus is hiknpus and fufjpus
      ↻ 重复节点，计数: 2

   节点 7: moxwpus is wizvpus and palbpus
      ↻ 重复节点，计数: 2

   节点 8: bitjpus is yijwpus and jotzpus
      ↻ 重复节点，计数: 2

   节点 9: qemtpus is lorkpus
      ↻ 重复节点，计数: 2

   节点 10: tixypus is babrpus and pubwpus
      ↻ 重复节点，计数: 2

   节点 11: tixypus is babrpus and pubwpus
      ↻ 重复节点，计数: 3

   节点 12: yurxpus is tulppus
      ↻ 重复节点，计数: 2

   节点 13: maldpus is jubbpus
      ↻ 重复节点，计数: 2

   节点 14: lorkpus is moxwpus and qoyzpus and havtpus
      ↻ 重复节点，计数: 2

   节点 15: kilxpus is vemspus
      ↻ 重复节点，计数: 2

   节点 16: tixypus is babgpus and jabfpus
      ↻ 重复节点，计数: 2

   节点 17: tixypus is babgpus and jabfpus
      ↻ 重复节点，计数: 3

   节点 18: sukbpus is bitjpus
      ↻ 重复节点，计数: 2

   节点 19: wizvpus is lefzpus and fobzpus
      ↻ 重复节点，计数: 2

   节点 20: lekqpus is kilxpus
      ↻ 重复节点，计数: 2

   节点 21: lefzpus is lekqpus and junvpus
      ↻ 重复节点，计数: 2

   节点 22: yectpus is qemtpus
      ↻ 重复节点，计数: 2

   节点 23: x is johmpus and dacxpus
      ↻ 重复节点，计数: 3

   节点 24: fuxspus is dakkpus
      ↻ 重复节点，计数: 2

   节点 25: lefzpus is fuxspus
      ↻ 重复节点，计数: 2

   节点 26: lefzpus is lefzpus and fobzpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 27: wizvpus is lefzpus and fobzpus
      ↻ 重复节点，计数: 3

   节点 28: johmpus is yurxpus
      ↻ 重复节点，计数: 2

   节点 29: johmpus is yurxpus
      ↻ 重复节点，计数: 3

   节点 30: vemspus is tixypus and turtpus
      ↻ 重复节点，计数: 2

   节点 31: x is johmpus and dacxpus
      ↻ 重复节点，计数: 4

   节点 32: x is johmpus and dacxpus
      ↻ 重复节点，计数: 5

   节点 33: x is johmpus and dacxpus
      ↻ 重复节点，计数: 6

   节点 34: fuxspus is dakkpus
      ↻ 重复节点，计数: 3

   节点 35: babgpus is tixypus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 36: babrpus is tixypus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 37: tixypus is babrpus and pubwpus
      ↻ 重复节点，计数: 4

   节点 38: tixypus is babgpus and jabfpus
      ↻ 重复节点，计数: 4

   节点 39: tixypus is babgpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: tixypus is babgpus
      ✅ 验证成功 + LoG匹配

   节点 40: tixypus is babrpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: tixypus is babrpus
      ✅ 验证成功 + LoG匹配

   节点 41: x is johmpus and dacxpus
      ↻ 重复节点，计数: 7

   节点 42: johmpus is qebgpus
      ↻ 重复节点，计数: 3

   节点 43: johmpus is yurxpus
      ↻ 重复节点，计数: 4

   节点 44: johmpus is yurxpus
      ↻ 重复节点，计数: 5

   节点 45: yurxpus is tulppus
      ↻ 重复节点，计数: 3

   节点 46: yurxpus is tulppus
      ↻ 重复节点，计数: 4

   节点 47: johmpus is yurxpus
      ↻ 重复节点，计数: 6

   节点 48: yurxpus is tulppus
      ↻ 重复节点，计数: 5

   节点 49: tulppus is sukbpus
      ↻ 重复节点，计数: 3

   节点 50: tulppus is sukbpus
      ↻ 重复节点，计数: 4

   节点 51: johmpus is sukbpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: johmpus is yurxpus → yurxpus is sukbpus
[后处理] 基于推理轨迹点亮节点，使用了 3 个前提条件:
  - 前提: johmpus is yurxpus
  - 前提: yurxpus is tulppus
  - 前提: tulppus is sukbpus
  ✓ 点亮LoG节点: yurxpus is sukbpus
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 52: sukbpus is bitjpus
      ↻ 重复节点，计数: 3

   节点 53: sukbpus is bitjpus
      ↻ 重复节点，计数: 4

   节点 54: johmpus is bitjpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: johmpus is yurxpus → yurxpus is bitjpus
[后处理] 基于推理轨迹点亮节点，使用了 4 个前提条件:
  - 前提: johmpus is yurxpus
  - 前提: yurxpus is tulppus
  - 前提: tulppus is sukbpus
  - 前提: sukbpus is bitjpus

   节点 55: bitjpus is yijwpus and jotzpus
      ↻ 重复节点，计数: 3

   节点 56: bitjpus is yijwpus and jotzpus
      ↻ 重复节点，计数: 4

   节点 57: johmpus is bitjpus
      ↻ 重复节点，计数: 2

   节点 58: johmpus is bitjpus
      ↻ 重复节点，计数: 3

   节点 59: yijwpus is hiknpus and fufjpus
      ↻ 重复节点，计数: 3

   节点 60: hiknpus is yectpus and poyrpus
      ↻ 重复节点，计数: 3

   节点 61: yectpus is qemtpus
      ↻ 重复节点，计数: 3

   节点 62: qemtpus is lorkpus
      ↻ 重复节点，计数: 3

   节点 63: lorkpus is moxwpus and qoyzpus and havtpus
      ↻ 重复节点，计数: 3

   节点 64: moxwpus is wizvpus and palbpus
      ↻ 重复节点，计数: 3

   节点 65: wizvpus is lefzpus and fobzpus
      ↻ 重复节点，计数: 4

   节点 66: lefzpus is lekqpus and junvpus
      ↻ 重复节点，计数: 3

   节点 67: lefzpus is fuxspus
      ↻ 重复节点，计数: 3

   节点 68: wizvpus is lefzpus and fobzpus
      ↻ 重复节点，计数: 5

   节点 69: lefzpus is fuxspus
      ↻ 重复节点，计数: 4

   节点 70: wizvpus is lefzpus and fobzpus
      ↻ 重复节点，计数: 6

   节点 71: lefzpus is wizvpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 72: lefzpus is lekqpus and junvpus
      ↻ 重复节点，计数: 4

   节点 73: lefzpus is lekqpus and junvpus
      ↻ 重复节点，计数: 5

   节点 74: lefzpus is fuxspus
      ↻ 重复节点，计数: 5

   节点 75: lefzpus is fuxspus
      ↻ 重复节点，计数: 6

   节点 76: fuxspus is dakkpus
      ↻ 重复节点，计数: 4

   节点 77: fuxspus is dakkpus
      ↻ 重复节点，计数: 5

   节点 78: lefzpus is fuxspus
      ↻ 重复节点，计数: 7

   节点 79: fuxspus is dakkpus
      ↻ 重复节点，计数: 6

   节点 80: lefzpus is lekqpus and junvpus
      ↻ 重复节点，计数: 6

   节点 81: lekqpus is kilxpus
      ↻ 重复节点，计数: 3

   节点 82: kilxpus is vemspus
      ↻ 重复节点，计数: 3

   节点 83: vemspus is tixypus and turtpus
      ↻ 重复节点，计数: 3

   节点 84: vemspus is tixypus and turtpus
      ↻ 重复节点，计数: 4

   节点 85: kilxpus is vemspus
      ↻ 重复节点，计数: 4

   节点 86: vemspus is tixypus and turtpus
      ↻ 重复节点，计数: 5

   节点 87: lekqpus is kilxpus
      ↻ 重复节点，计数: 4

   节点 88: kilxpus is vemspus
      ↻ 重复节点，计数: 5

   节点 89: vemspus is tixypus
      🔍 验证新节点...
[后处理] 点亮LoG节点: vemspus is tixypus
      ✅ 验证成功 + LoG匹配

   节点 90: tixypus is turtpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 91: lefzpus is lekqpus and junvpus
      ↻ 重复节点，计数: 7

   节点 92: lefzpus is tixypus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP+CE
      📋 推理路径: MP+CE规则: lefzpus is lekqpus → lekqpus is tixypus
[后处理] 基于推理轨迹点亮节点，使用了 4 个前提条件:
  - 前提: lefzpus is lekqpus and junvpus
  - 前提: lekqpus is kilxpus
  - 前提: kilxpus is vemspus
  - 前提: vemspus is tixypus
  ✓ 点亮LoG节点: lekqpus is tixypus
[子树点亮]     └─ 点亮依赖节点: lekqpus is vemspus (深度6)
[后处理]   └─ 自动点亮依赖子树: 1 个节点
  ✓ 点亮LoG节点: lefzpus is lekqpus
[后处理] 通过推理轨迹额外点亮了 2 个LoG节点

   节点 93: lekqpus is tixypus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 94: lefzpus is tixypus
      ↻ 重复节点，计数: 2

   节点 95: johmpus is bitjpus
      ↻ 重复节点，计数: 4

   节点 96: yectpus is qemtpus
      ↻ 重复节点，计数: 4

   节点 97: yectpus is lorkpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: yectpus is lorkpus
      ✅ 验证成功 + LoG匹配

   节点 98: tixypus is babgpus and babrpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CI
      📋 推理路径: CI规则: tixypus is babgpus → tixypus is babrpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: tixypus is babgpus
  - 前提: tixypus is babrpus

   节点 99: johmpus is bitjpus
      ↻ 重复节点，计数: 5

   节点 100: bitjpus is sukbpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 101: sukbpus is tulppus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 102: tulppus is yurxpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 103: johmpus is yurxpus
      ↻ 重复节点，计数: 7

   节点 104: yurxpus is tulppus
      ↻ 重复节点，计数: 6

   节点 105: tulppus is sukbpus
      ↻ 重复节点，计数: 5

   节点 106: sukbpus is bitjpus
      ↻ 重复节点，计数: 5

   节点 107: johmpus is bitjpus
      ↻ 重复节点，计数: 6

   节点 108: johmpus is yurxpus
      ↻ 重复节点，计数: 8

   节点 109: yurxpus is tulppus
      ↻ 重复节点，计数: 7

   节点 110: tulppus is sukbpus
      ↻ 重复节点，计数: 6

   节点 111: sukbpus is bitjpus
      ↻ 重复节点，计数: 6

   节点 112: bitjpus is yijwpus and jotzpus
      ↻ 重复节点，计数: 5

   节点 113: bitjpus is yijwpus and jotzpus
      ↻ 重复节点，计数: 6

   节点 114: bitjpus is yijwpus and jotzpus
      ↻ 重复节点，计数: 7

   节点 115: bitjpus is yijwpus and jotzpus
      ↻ 重复节点，计数: 8

   节点 116: bitjpus is yijwpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: bitjpus is yijwpus and jotzpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: bitjpus is yijwpus and jotzpus

   节点 117: bitjpus is jotzpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: bitjpus is yijwpus and jotzpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: bitjpus is yijwpus and jotzpus

   节点 118: hiknpus is yectpus and poyrpus
      ↻ 重复节点，计数: 4

   节点 119: hiknpus is yectpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: hiknpus is yectpus
      ✅ 验证成功 + LoG匹配

   节点 120: yectpus is qemtpus
      ↻ 重复节点，计数: 5

   节点 121: vemspus is tixypus and turtpus
      ↻ 重复节点，计数: 6

   节点 122: tixypus is babgpus and jabfpus
      ↻ 重复节点，计数: 5

   节点 123: tixypus is babrpus and pubwpus
      ↻ 重复节点，计数: 5

   节点 124: tixypus is babgpus
      ↻ 重复节点，计数: 2

   节点 125: tixypus is babrpus
      ↻ 重复节点，计数: 2

   节点 126: bitjpus is yijwpus and jotzpus
      ↻ 重复节点，计数: 9

   节点 127: yijwpus is hiknpus and fufjpus
      ↻ 重复节点，计数: 4

   节点 128: hiknpus is yectpus and poyrpus
      ↻ 重复节点，计数: 5

   节点 129: yectpus is qemtpus
      ↻ 重复节点，计数: 6

   节点 130: qemtpus is lorkpus
      ↻ 重复节点，计数: 4

   节点 131: lorkpus is moxwpus and qoyzpus and havtpus
      ↻ 重复节点，计数: 4

   节点 132: moxwpus is wizvpus and palbpus
      ↻ 重复节点，计数: 4

   节点 133: wizvpus is lefzpus and fobzpus
      ↻ 重复节点，计数: 7

   节点 134: lefzpus is lekqpus and junvpus
      ↻ 重复节点，计数: 8

   节点 135: lekqpus is kilxpus
      ↻ 重复节点，计数: 5

   节点 136: kilxpus is vemspus
      ↻ 重复节点，计数: 6

   节点 137: vemspus is tixypus and turtpus
      ↻ 重复节点，计数: 7

   节点 138: johmpus is tixypus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: johmpus is yurxpus → yurxpus is tixypus
[后处理] 基于推理轨迹点亮节点，使用了 13 个前提条件:
  - 前提: johmpus is yurxpus
  - 前提: yurxpus is tulppus
  - 前提: tulppus is sukbpus
  - 前提: sukbpus is bitjpus
  - 前提: bitjpus is yijwpus
  - 前提: yijwpus is hiknpus and fufjpus
  - 前提: hiknpus is yectpus
  - 前提: yectpus is qemtpus
  - 前提: qemtpus is lorkpus
  - 前提: lorkpus is moxwpus and qoyzpus and havtpus
  - 前提: moxwpus is wizvpus and palbpus
  - 前提: wizvpus is lefzpus and fobzpus
  - 前提: lefzpus is tixypus
  ✓ 点亮LoG节点: yijwpus is moxwpus
[子树点亮]     └─ 点亮依赖节点: yijwpus is moxwpus and qoyzpus (深度4)
[子树点亮]     └─ 点亮依赖节点: yijwpus is yectpus (深度5)
[子树点亮]     └─ 点亮依赖节点: yectpus is moxwpus and qoyzpus (深度5)
[子树点亮]     └─ 点亮依赖节点: yijwpus is hiknpus (深度6)
[子树点亮]     └─ 点亮依赖节点: lorkpus is moxwpus and qoyzpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 5 个节点
  ✓ 点亮LoG节点: yurxpus is yijwpus
[子树点亮]     └─ 点亮依赖节点: yurxpus is yijwpus and jotzpus (深度5)
[子树点亮]     └─ 点亮依赖节点: sukbpus is yijwpus and jotzpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 2 个节点
  ✓ 点亮LoG节点: moxwpus is lefzpus
[子树点亮]     └─ 点亮依赖节点: moxwpus is wizvpus (深度6)
[子树点亮]     └─ 点亮依赖节点: wizvpus is lefzpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 2 个节点
[后处理] 通过推理轨迹额外点亮了 3 个LoG节点

   节点 139: tixypus is babgpus and babrpus
      ↻ 重复节点，计数: 2

   节点 140: johmpus is babgpus and babrpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: johmpus is yurxpus → yurxpus is babgpus and babrpus
[后处理] 基于推理轨迹点亮节点，使用了 15 个前提条件:
  - 前提: johmpus is yurxpus
  - 前提: yurxpus is tulppus
  - 前提: tulppus is sukbpus
  - 前提: sukbpus is bitjpus
  - 前提: bitjpus is yijwpus
  - 前提: yijwpus is hiknpus and fufjpus
  - 前提: hiknpus is yectpus
  - 前提: yectpus is qemtpus
  - 前提: qemtpus is lorkpus
  - 前提: lorkpus is moxwpus and qoyzpus and havtpus
  - 前提: moxwpus is wizvpus and palbpus
  - 前提: wizvpus is lefzpus and fobzpus
  - 前提: lefzpus is tixypus
  - 前提: tixypus is babgpus
  - 前提: tixypus is babrpus
  ✓ 点亮LoG节点: moxwpus is babgpus and babrpus
[子树点亮]     └─ 点亮依赖节点: moxwpus is lekqpus (深度3)
[子树点亮]     └─ 点亮依赖节点: lekqpus is babgpus and babrpus (深度3)
[子树点亮]     └─ 点亮依赖节点: moxwpus is lekqpus and dakkpus (深度4)
[子树点亮]     └─ 点亮依赖节点: lekqpus is babgpus and babrpus and jubbpus (深度4)
[子树点亮]     └─ 点亮依赖节点: lefzpus is lekqpus and dakkpus (深度5)
[子树点亮]     └─ 点亮依赖节点: tixypus is babgpus and babrpus and jubbpus (深度5)
[子树点亮]     └─ 点亮依赖节点: lefzpus is dakkpus (深度6)
[子树点亮]     └─ 点亮依赖节点: tixypus is jubbpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 8 个节点
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 141: x is johmpus and dacxpus
      ↻ 重复节点，计数: 8

   节点 142: dacxpus is johmpus and dacxpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 143: x is johmpus and dacxpus
      ↻ 重复节点，计数: 9

   节点 144: x is johmpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is johmpus
      ✅ 验证成功 + LoG匹配

   节点 145: johmpus is babgpus and babrpus
      ↻ 重复节点，计数: 2

   节点 146: x is babgpus and babrpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is babgpus and babrpus
[子树点亮]     └─ 点亮依赖节点: x is moxwpus (深度2)
[子树点亮]     └─ 点亮依赖节点: x is yijwpus (深度3)
[子树点亮]     └─ 点亮依赖节点: x is yurxpus (深度4)
[子树点亮]     └─ 点亮依赖节点: x is yurxpus and qebgpus (深度5)
[子树点亮]     └─ 点亮依赖节点: johmpus is yurxpus and qebgpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 5 个节点
      ✅ 验证成功 + LoG匹配

   节点 147: x is babgpus and babrpus
      ↻ 重复节点，计数: 2

   节点 148: x is babgpus and babrpus
      ↻ 重复节点，计数: 3

   节点 149: x is dacxpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: x is johmpus and dacxpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: x is johmpus and dacxpus

🔍 分析推理路径完整性...

============================================================
[后处理] 处理完成
============================================================
📈 处理统计:
   - 处理的actual节点: 149
   - 新增节点: 26
   - 更新已存在节点: 123
   - 点亮的LoG节点: 37

🎯 推理质量统计:
   - 完美推理: 12 (节点正确 + 路径正确)
   - 部分推理: 14 (节点正确 + 路径部分错误)
   - 无效推理: 0 (节点错误或路径完全错误)
[LoG分析] LoG图: 37节点, 24前提, 复杂度1-24

📊 === Statement列表分析 ===
📈 节点统计:
   - 总节点数: 50
   - 前提节点: 24
   - 推理节点: 17
   - 幻觉节点: 9
   - 点亮LoG节点: 37

❌ 幻觉节点详情:
   - lefzpus is lefzpus and fobzpus (出现1次)
   - babgpus is tixypus (出现1次)
   - babrpus is tixypus (出现1次)
   - lefzpus is wizvpus (出现1次)
   - tixypus is turtpus (出现1次)
   - bitjpus is sukbpus (出现1次)
   - sukbpus is tulppus (出现1次)
   - tulppus is yurxpus (出现1次)
   - dacxpus is johmpus and dacxpus (出现1次)

✅ 推理节点详情:
   🟡 tixypus is babgpus (出现2次, 质量:partial)
      ⚠️  无效依赖: ['tixypus is turtpus']
   🟡 tixypus is babrpus (出现2次, 质量:partial)
      ⚠️  无效依赖: ['tixypus is turtpus']
   🟡 johmpus is sukbpus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['bitjpus is sukbpus']
   🟢 johmpus is bitjpus (出现6次, 质量:perfect)
   🟡 vemspus is tixypus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['babgpus is tixypus', 'babrpus is tixypus']
   🟡 lefzpus is tixypus (出现2次, 质量:partial)
      ⚠️  无效依赖: ['lefzpus is lefzpus and fobzpus', 'lefzpus is wizvpus', 'babgpus is tixypus', 'babrpus is tixypus']
   🟡 lekqpus is tixypus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['babgpus is tixypus', 'babrpus is tixypus']
   🟢 yectpus is lorkpus (出现1次, 质量:perfect)
   🟡 tixypus is babgpus and babrpus (出现2次, 质量:partial)
      ⚠️  无效依赖: ['tixypus is turtpus']
   🟡 bitjpus is yijwpus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['bitjpus is sukbpus']
   🟡 bitjpus is jotzpus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['bitjpus is sukbpus']
   🟢 hiknpus is yectpus (出现1次, 质量:perfect)
   🟡 johmpus is tixypus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['babgpus is tixypus', 'babrpus is tixypus']
   🟢 johmpus is babgpus and babrpus (出现2次, 质量:perfect)
   🟢 x is johmpus (出现1次, 质量:perfect)
   🟢 x is babgpus and babrpus (出现3次, 质量:perfect)
   🟢 x is dacxpus (出现1次, 质量:perfect)

🔥 点亮的LoG节点:
   - vemspus is tixypus
   - moxwpus is lekqpus
   - moxwpus is lefzpus
   - lekqpus is tixypus
   - lorkpus is moxwpus and qoyzpus
   - yijwpus is moxwpus and qoyzpus
   - tixypus is babrpus
   - yijwpus is yectpus
   - tixypus is jubbpus
   - tixypus is babgpus
   - hiknpus is yectpus
   - moxwpus is wizvpus
   - tixypus is babgpus and babrpus and jubbpus
   - moxwpus is babgpus and babrpus
   - lefzpus is lekqpus and dakkpus
   - lekqpus is babgpus and babrpus and jubbpus
   - yectpus is lorkpus
   - x is babgpus and babrpus
   - x is yijwpus
   - x is yurxpus and qebgpus
   - yectpus is moxwpus and qoyzpus
   - x is yurxpus
   - lekqpus is vemspus
   - lekqpus is babgpus and babrpus
   - sukbpus is yijwpus and jotzpus
   - yijwpus is moxwpus
   - yurxpus is sukbpus
   - moxwpus is lekqpus and dakkpus
   - lefzpus is lekqpus
   - yurxpus is yijwpus and jotzpus
   - wizvpus is lefzpus
   - yurxpus is yijwpus
   - x is moxwpus
   - yijwpus is hiknpus
   - x is johmpus
   - lefzpus is dakkpus
   - johmpus is yurxpus and qebgpus

============================================================
📊 计算评估指标
============================================================

🎯 计算Coverage指标...
   深度Coverage: 6/6 = 100.00%
   最深点亮节点: x is babgpus and babrpus (第6层)
   节点Coverage: 37/37 = 100.00%
   前提条件Coverage: 24/24 = 100.00%
   各推理层点亮比例:
     第1层: 17/17 = 100.00%
     第2层: 8/8 = 100.00%
     第3层: 5/5 = 100.00%
     第4层: 4/4 = 100.00%
     第5层: 2/2 = 100.00%
     第6层: 1/1 = 100.00%

🎯 计算Precision指标...
   Error Rate: 9/26 = 34.62%
   可推导节点: 17/26
   Strict Error Rate: 19/26 = 73.08%
   严格有效节点: 7/26

   详细分析:
     完美推理: 12 (46.15%)
     部分推理: 14 (53.85%)
     无效推理: 0 (0.00%)

================================================================================
处理记录 26/50
================================================================================
记录索引: 25
问题状态: correct
📁 从缓存加载提取结果: evaluation_results.LoG_6.deepseek-reasoner_record_25.json
✅ 使用缓存结果:
   - 句子数: 106
   - 提取的语句数: 147
   - 初始条件数: 8

=== Statement提取完成 ===
总句子数: 106
成功提取: 105
失败提取: 1
总statements数: 147

=== 开始清洗Statement格式 ===
原始statements数: 147
清洗后statements数: 125
过滤掉的statements数: 22
清洗后的statements:
  1. [planning] x is babgpus
  2. [planning] x is babrpus
  3. [actual] luwspus is piwcpus
  4. [actual] piwcpus is babgpus and wujypus
  5. [actual] daftpus is luwspus and cevrpus
  6. [actual] yabypus is daftpus
  7. [actual] luwspus is rewspus
  8. [actual] x is hunspus
  9. [actual] rewspus is qewppus and vukwpus
  10. [actual] hunspus is yabypus and puhxpus
  11. [planning] x is babgpus
  12. [planning] x is babrpus
  13. [planning] babrpus is a typo or something
  14. [planning] x is babgpus
  15. [planning] x is babgpus
  16. [planning] x is babgpus or babrpus
  17. [planning] x is babgpus
  18. [actual] x is hunspus
  19. [actual] hunspus is yabypus
  20. [actual] hunspus is puhxpus
  21. [actual] x is hunspus
  22. [actual] hunspus is yabypus and puhxpus
  23. [planning] x is hunspus
  24. [actual] hunspus is yabypus and puhxpus
  25. [planning] hunspus is a category that contains yabypus and puhxpus
  26. [actual] hunspus is yabypus
  27. [planning] hunspus is yabypus and puhxpus
  28. [actual] luwspus is piwcpus
  29. [actual] piwcpus is babgpus and wujypus
  30. [planning] piwcpus is babgpus and wujypus
  31. [actual] piwcpus is a member of babgpus and wujypus
  32. [planning] piwcpus is babgpus and wujypus
  33. [actual] piwcpus is babgpus and wujypus
  34. [actual] piwcpus is babgpus and wujypus
  35. [planning] piwcpus is babgpus and wujypus
  36. [actual] daftpus is luwspus and cevrpus
  37. [planning] daftpus is luwspus
  38. [planning] daftpus is cevrpus
  39. [actual] luwspus is a category
  40. [actual] daftpus is a type of luwspus
  41. [actual] daftpus is a type of cevrpus
  42. [actual] yabypus is daftpus
  43. [actual] yabypus is a type of daftpus
  44. [actual] luwspus is rewspus
  45. [actual] rewspus is qewppus and vukwpus
  46. [planning] rewspus is qewppus
  47. [planning] rewspus is vukwpus
  48. [planning] x is babgpus
  49. [actual] x is hunspus
  50. [actual] hunspus is yabypus
  51. [planning] hunspus is babgpus
  52. [planning] yabypus is babgpus
  53. [actual] piwcpus is babgpus
  54. [actual] piwcpus is babgpus
  55. [planning] x is piwcpus
  56. [planning] x is babgpus
  57. [actual] x is hunspus
  58. [actual] hunspus is yabypus and puhxpus
  59. [actual] hunspus is yabypus
  60. [actual] hunspus is a type of puhxpus
  61. [actual] yabypus is daftpus
  62. [actual] yabypus is daftpus
  63. [actual] daftpus is luwspus and cevrpus
  64. [actual] daftpus is a type of luwspus
  65. [actual] daftpus is a type of cevrpus
  66. [actual] luwspus is piwcpus
  67. [actual] luwspus is piwcpus
  68. [actual] piwcpus is babgpus and wujypus
  69. [actual] piwcpus is a type of babgpus
  70. [actual] piwcpus is a type of wujypus
  71. [actual] luwspus is piwcpus
  72. [actual] piwcpus is babgpus
  73. [actual] luwspus is babgpus
  74. [planning] luwspus is babgpus
  75. [planning] luwspus is a type of piwcpus
  76. [planning] piwcpus is a type of babgpus
  77. [planning] luwspus is a type of babgpus
  78. [actual] daftpus is luwspus
  79. [actual] daftpus is a type of luwspus
  80. [actual] daftpus is a type of piwcpus
  81. [actual] daftpus is a type of babgpus
  82. [actual] yabypus is daftpus
  83. [actual] yabypus is a type of daftpus
  84. [actual] yabypus is a type of luwspus
  85. [actual] yabypus is a type of piwcpus
  86. [actual] yabypus is a type of babgpus
  87. [actual] hunspus is yabypus
  88. [planning] hunspus is a type of daftpus
  89. [planning] hunspus is a type of luwspus
  90. [planning] hunspus is a type of piwcpus
  91. [planning] hunspus is a type of babgpus
  92. [actual] x is hunspus
  93. [actual] x is a type of hunspus
  94. [planning] x is a type of babgpus
  95. [actual] x is hunspus
  96. [actual] hunspus is a category
  97. [actual] x is an instance of hunspus
  98. [actual] hunspus is a type of babgpus
  99. [planning] x is an instance of babgpus
  100. [planning] hunspus is a type of babgpus
  101. [actual] hunspus is yabypus
  102. [actual] yabypus is daftpus
  103. [actual] daftpus is luwspus
  104. [actual] luwspus is piwcpus
  105. [actual] piwcpus is babgpus
  106. [actual] hunspus is babgpus
  107. [actual] x is hunspus
  108. [actual] x is babgpus
  109. [planning] x is babgpus
  110. [planning] x is babrpus
  111. [actual] x is babgpus
  112. [actual] x is babgpus
  113. [planning] x is babrpus
  114. [planning] x is babgpus
  115. [planning] x is babrpus or x is babgpus
  116. [actual] luwspus is rewspus
  117. [planning] luwspus is babgpus
  118. [planning] rewspus is piwcpus
  119. [actual] rewspus is qewppus and vukwpus
  120. [planning] rewspus is babgpus
  121. [actual] hunspus is puhxpus
  122. [actual] x is babgpus
  123. [actual] x is babgpus or babrpus
  124. [planning] babrpus is unknown
  125. [actual] x is babgpus

=== 开始标准化和解析节点 ===
清洗后statements数: 125
标准化后节点数: 90
过滤掉的无效实体数: 35
标准化后的节点:
  1. [planning] x → babgpus (原始: x is babgpus)
  2. [planning] x → babrpus (原始: x is babrpus)
  3. [actual] luwspus → piwcpus (原始: luwspus is piwcpus)
  4. [actual] piwcpus → babgpus and wujypus (原始: piwcpus is babgpus and wujypus)
  5. [actual] daftpus → luwspus and cevrpus (原始: daftpus is luwspus and cevrpus)
  6. [actual] yabypus → daftpus (原始: yabypus is daftpus)
  7. [actual] luwspus → rewspus (原始: luwspus is rewspus)
  8. [actual] x → hunspus (原始: x is hunspus)
  9. [actual] rewspus → qewppus and vukwpus (原始: rewspus is qewppus and vukwpus)
  10. [actual] hunspus → yabypus and puhxpus (原始: hunspus is yabypus and puhxpus)
  11. [planning] x → babgpus (原始: x is babgpus)
  12. [planning] x → babrpus (原始: x is babrpus)
  13. [planning] x → babgpus (原始: x is babgpus)
  14. [planning] x → babgpus (原始: x is babgpus)
  15. [planning] x → babgpus or babrpus (原始: x is babgpus or babrpus)
  16. [planning] x → babgpus (原始: x is babgpus)
  17. [actual] x → hunspus (原始: x is hunspus)
  18. [actual] hunspus → yabypus (原始: hunspus is yabypus)
  19. [actual] hunspus → puhxpus (原始: hunspus is puhxpus)
  20. [actual] x → hunspus (原始: x is hunspus)
  21. [actual] hunspus → yabypus and puhxpus (原始: hunspus is yabypus and puhxpus)
  22. [planning] x → hunspus (原始: x is hunspus)
  23. [actual] hunspus → yabypus and puhxpus (原始: hunspus is yabypus and puhxpus)
  24. [actual] hunspus → yabypus (原始: hunspus is yabypus)
  25. [planning] hunspus → yabypus and puhxpus (原始: hunspus is yabypus and puhxpus)
  26. [actual] luwspus → piwcpus (原始: luwspus is piwcpus)
  27. [actual] piwcpus → babgpus and wujypus (原始: piwcpus is babgpus and wujypus)
  28. [planning] piwcpus → babgpus and wujypus (原始: piwcpus is babgpus and wujypus)
  29. [planning] piwcpus → babgpus and wujypus (原始: piwcpus is babgpus and wujypus)
  30. [actual] piwcpus → babgpus and wujypus (原始: piwcpus is babgpus and wujypus)
  31. [actual] piwcpus → babgpus and wujypus (原始: piwcpus is babgpus and wujypus)
  32. [planning] piwcpus → babgpus and wujypus (原始: piwcpus is babgpus and wujypus)
  33. [actual] daftpus → luwspus and cevrpus (原始: daftpus is luwspus and cevrpus)
  34. [planning] daftpus → luwspus (原始: daftpus is luwspus)
  35. [planning] daftpus → cevrpus (原始: daftpus is cevrpus)
  36. [actual] yabypus → daftpus (原始: yabypus is daftpus)
  37. [actual] luwspus → rewspus (原始: luwspus is rewspus)
  38. [actual] rewspus → qewppus and vukwpus (原始: rewspus is qewppus and vukwpus)
  39. [planning] rewspus → qewppus (原始: rewspus is qewppus)
  40. [planning] rewspus → vukwpus (原始: rewspus is vukwpus)
  41. [planning] x → babgpus (原始: x is babgpus)
  42. [actual] x → hunspus (原始: x is hunspus)
  43. [actual] hunspus → yabypus (原始: hunspus is yabypus)
  44. [planning] hunspus → babgpus (原始: hunspus is babgpus)
  45. [planning] yabypus → babgpus (原始: yabypus is babgpus)
  46. [actual] piwcpus → babgpus (原始: piwcpus is babgpus)
  47. [actual] piwcpus → babgpus (原始: piwcpus is babgpus)
  48. [planning] x → piwcpus (原始: x is piwcpus)
  49. [planning] x → babgpus (原始: x is babgpus)
  50. [actual] x → hunspus (原始: x is hunspus)
  51. [actual] hunspus → yabypus and puhxpus (原始: hunspus is yabypus and puhxpus)
  52. [actual] hunspus → yabypus (原始: hunspus is yabypus)
  53. [actual] yabypus → daftpus (原始: yabypus is daftpus)
  54. [actual] yabypus → daftpus (原始: yabypus is daftpus)
  55. [actual] daftpus → luwspus and cevrpus (原始: daftpus is luwspus and cevrpus)
  56. [actual] luwspus → piwcpus (原始: luwspus is piwcpus)
  57. [actual] luwspus → piwcpus (原始: luwspus is piwcpus)
  58. [actual] piwcpus → babgpus and wujypus (原始: piwcpus is babgpus and wujypus)
  59. [actual] luwspus → piwcpus (原始: luwspus is piwcpus)
  60. [actual] piwcpus → babgpus (原始: piwcpus is babgpus)
  61. [actual] luwspus → babgpus (原始: luwspus is babgpus)
  62. [planning] luwspus → babgpus (原始: luwspus is babgpus)
  63. [actual] daftpus → luwspus (原始: daftpus is luwspus)
  64. [actual] yabypus → daftpus (原始: yabypus is daftpus)
  65. [actual] hunspus → yabypus (原始: hunspus is yabypus)
  66. [actual] x → hunspus (原始: x is hunspus)
  67. [actual] x → hunspus (原始: x is hunspus)
  68. [actual] hunspus → yabypus (原始: hunspus is yabypus)
  69. [actual] yabypus → daftpus (原始: yabypus is daftpus)
  70. [actual] daftpus → luwspus (原始: daftpus is luwspus)
  71. [actual] luwspus → piwcpus (原始: luwspus is piwcpus)
  72. [actual] piwcpus → babgpus (原始: piwcpus is babgpus)
  73. [actual] hunspus → babgpus (原始: hunspus is babgpus)
  74. [actual] x → hunspus (原始: x is hunspus)
  75. [actual] x → babgpus (原始: x is babgpus)
  76. [planning] x → babgpus (原始: x is babgpus)
  77. [planning] x → babrpus (原始: x is babrpus)
  78. [actual] x → babgpus (原始: x is babgpus)
  79. [actual] x → babgpus (原始: x is babgpus)
  80. [planning] x → babrpus (原始: x is babrpus)
  81. [planning] x → babgpus (原始: x is babgpus)
  82. [actual] luwspus → rewspus (原始: luwspus is rewspus)
  83. [planning] luwspus → babgpus (原始: luwspus is babgpus)
  84. [planning] rewspus → piwcpus (原始: rewspus is piwcpus)
  85. [actual] rewspus → qewppus and vukwpus (原始: rewspus is qewppus and vukwpus)
  86. [planning] rewspus → babgpus (原始: rewspus is babgpus)
  87. [actual] hunspus → puhxpus (原始: hunspus is puhxpus)
  88. [actual] x → babgpus (原始: x is babgpus)
  89. [actual] x → babgpus or babrpus (原始: x is babgpus or babrpus)
  90. [actual] x → babgpus (原始: x is babgpus)

开始新的后处理...
[后处理] 从LoG数据文件中获取到图数据，节点数: 13
[后处理] 加载LoG图，包含 13 个节点
  LoG节点 0: x is babgpus or babrpus (规则: DI, 深度: 1)
  LoG节点 1: x is babgpus (规则: CE, 深度: 2)
  LoG节点 2: x is babgpus and qewppus (规则: MP, 深度: 3)
  LoG节点 3: x is luwspus (规则: MP, 深度: 4)
  LoG节点 4: luwspus is babgpus and qewppus (规则: CI, 深度: 4)
  LoG节点 5: x is yabypus (规则: CE, 深度: 5)
  LoG节点 6: yabypus is luwspus (规则: CE, 深度: 5)
  LoG节点 7: luwspus is babgpus (规则: CE, 深度: 5)
  LoG节点 8: luwspus is qewppus (规则: CE, 深度: 5)
  LoG节点 9: x is yabypus and puhxpus (规则: MP, 深度: 6)
  LoG节点 10: yabypus is luwspus and cevrpus (规则: MP, 深度: 6)
  LoG节点 11: luwspus is babgpus and wujypus (规则: MP, 深度: 6)
  LoG节点 12: luwspus is qewppus and vukwpus (规则: MP, 深度: 6)

============================================================
[后处理] 开始处理节点
============================================================
📊 初始状态:
   - 标准化节点数: 90
   - 初始条件数: 8
   - LoG图节点数: 13

📋 初始条件列表:
    1. luwspus is piwcpus
    2. piwcpus is babgpus and wujypus
    3. daftpus is luwspus and cevrpus
    4. yabypus is daftpus
    5. luwspus is rewspus
    6. x is hunspus
    7. rewspus is qewppus and vukwpus
    8. hunspus is yabypus and puhxpus

🔧 构建初始Statement列表...
✅ 初始Statement列表构建完成，包含 8 个前提节点

🔍 开始处理actual节点...

   节点 1: luwspus is piwcpus
      ↻ 重复节点，计数: 2

   节点 2: piwcpus is babgpus and wujypus
      ↻ 重复节点，计数: 2

   节点 3: daftpus is luwspus and cevrpus
      ↻ 重复节点，计数: 2

   节点 4: yabypus is daftpus
      ↻ 重复节点，计数: 2

   节点 5: luwspus is rewspus
      ↻ 重复节点，计数: 2

   节点 6: x is hunspus
      ↻ 重复节点，计数: 2

   节点 7: rewspus is qewppus and vukwpus
      ↻ 重复节点，计数: 2

   节点 8: hunspus is yabypus and puhxpus
      ↻ 重复节点，计数: 2

   节点 9: x is hunspus
      ↻ 重复节点，计数: 3

   节点 10: hunspus is yabypus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: hunspus is yabypus and puhxpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: hunspus is yabypus and puhxpus

   节点 11: hunspus is puhxpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: hunspus is yabypus and puhxpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: hunspus is yabypus and puhxpus

   节点 12: x is hunspus
      ↻ 重复节点，计数: 4

   节点 13: hunspus is yabypus and puhxpus
      ↻ 重复节点，计数: 3

   节点 14: hunspus is yabypus and puhxpus
      ↻ 重复节点，计数: 4

   节点 15: hunspus is yabypus
      ↻ 重复节点，计数: 2

   节点 16: luwspus is piwcpus
      ↻ 重复节点，计数: 3

   节点 17: piwcpus is babgpus and wujypus
      ↻ 重复节点，计数: 3

   节点 18: piwcpus is babgpus and wujypus
      ↻ 重复节点，计数: 4

   节点 19: piwcpus is babgpus and wujypus
      ↻ 重复节点，计数: 5

   节点 20: daftpus is luwspus and cevrpus
      ↻ 重复节点，计数: 3

   节点 21: yabypus is daftpus
      ↻ 重复节点，计数: 3

   节点 22: luwspus is rewspus
      ↻ 重复节点，计数: 3

   节点 23: rewspus is qewppus and vukwpus
      ↻ 重复节点，计数: 3

   节点 24: x is hunspus
      ↻ 重复节点，计数: 5

   节点 25: hunspus is yabypus
      ↻ 重复节点，计数: 3

   节点 26: piwcpus is babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: piwcpus is babgpus and wujypus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: piwcpus is babgpus and wujypus

   节点 27: piwcpus is babgpus
      ↻ 重复节点，计数: 2

   节点 28: x is hunspus
      ↻ 重复节点，计数: 6

   节点 29: hunspus is yabypus and puhxpus
      ↻ 重复节点，计数: 5

   节点 30: hunspus is yabypus
      ↻ 重复节点，计数: 4

   节点 31: yabypus is daftpus
      ↻ 重复节点，计数: 4

   节点 32: yabypus is daftpus
      ↻ 重复节点，计数: 5

   节点 33: daftpus is luwspus and cevrpus
      ↻ 重复节点，计数: 4

   节点 34: luwspus is piwcpus
      ↻ 重复节点，计数: 4

   节点 35: luwspus is piwcpus
      ↻ 重复节点，计数: 5

   节点 36: piwcpus is babgpus and wujypus
      ↻ 重复节点，计数: 6

   节点 37: luwspus is piwcpus
      ↻ 重复节点，计数: 6

   节点 38: piwcpus is babgpus
      ↻ 重复节点，计数: 3

   节点 39: luwspus is babgpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: luwspus is babgpus
[子树点亮]     └─ 点亮依赖节点: luwspus is babgpus and wujypus (深度6)
[后处理]   └─ 自动点亮依赖子树: 1 个节点
      ✅ 验证成功 + LoG匹配

   节点 40: daftpus is luwspus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: daftpus is luwspus and cevrpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: daftpus is luwspus and cevrpus

   节点 41: yabypus is daftpus
      ↻ 重复节点，计数: 6

   节点 42: hunspus is yabypus
      ↻ 重复节点，计数: 5

   节点 43: x is hunspus
      ↻ 重复节点，计数: 7

   节点 44: x is hunspus
      ↻ 重复节点，计数: 8

   节点 45: hunspus is yabypus
      ↻ 重复节点，计数: 6

   节点 46: yabypus is daftpus
      ↻ 重复节点，计数: 7

   节点 47: daftpus is luwspus
      ↻ 重复节点，计数: 2

   节点 48: luwspus is piwcpus
      ↻ 重复节点，计数: 7

   节点 49: piwcpus is babgpus
      ↻ 重复节点，计数: 4

   节点 50: hunspus is babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: hunspus is yabypus → yabypus is babgpus
[后处理] 基于推理轨迹点亮节点，使用了 4 个前提条件:
  - 前提: hunspus is yabypus
  - 前提: yabypus is daftpus
  - 前提: daftpus is luwspus
  - 前提: luwspus is babgpus
  ✓ 点亮LoG节点: yabypus is luwspus
[子树点亮]     └─ 点亮依赖节点: yabypus is luwspus and cevrpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 1 个节点
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 51: x is hunspus
      ↻ 重复节点，计数: 9

   节点 52: x is babgpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is babgpus
[子树点亮]     └─ 点亮依赖节点: x is babgpus and qewppus (深度3)
[子树点亮]     └─ 点亮依赖节点: x is luwspus (深度4)
[子树点亮]     └─ 点亮依赖节点: luwspus is babgpus and qewppus (深度4)
[子树点亮]     └─ 点亮依赖节点: x is yabypus (深度5)
[子树点亮]     └─ 点亮依赖节点: luwspus is qewppus (深度5)
[子树点亮]     └─ 点亮依赖节点: x is yabypus and puhxpus (深度6)
[子树点亮]     └─ 点亮依赖节点: luwspus is qewppus and vukwpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 7 个节点
      ✅ 验证成功 + LoG匹配

   节点 53: x is babgpus
      ↻ 重复节点，计数: 2

   节点 54: x is babgpus
      ↻ 重复节点，计数: 3

   节点 55: luwspus is rewspus
      ↻ 重复节点，计数: 4

   节点 56: rewspus is qewppus and vukwpus
      ↻ 重复节点，计数: 4

   节点 57: hunspus is puhxpus
      ↻ 重复节点，计数: 2

   节点 58: x is babgpus
      ↻ 重复节点，计数: 4

   节点 59: x is babgpus or babrpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is babgpus or babrpus
      ✅ 验证成功 + LoG匹配

   节点 60: x is babgpus
      ↻ 重复节点，计数: 5

🔍 分析推理路径完整性...

============================================================
[后处理] 处理完成
============================================================
📈 处理统计:
   - 处理的actual节点: 60
   - 新增节点: 8
   - 更新已存在节点: 52
   - 点亮的LoG节点: 13

🎯 推理质量统计:
   - 完美推理: 8 (节点正确 + 路径正确)
   - 部分推理: 0 (节点正确 + 路径部分错误)
   - 无效推理: 0 (节点错误或路径完全错误)
[LoG分析] LoG图: 13节点, 8前提, 复杂度1-8

📊 === Statement列表分析 ===
📈 节点统计:
   - 总节点数: 16
   - 前提节点: 8
   - 推理节点: 8
   - 幻觉节点: 0
   - 点亮LoG节点: 13

✅ 推理节点详情:
   🟢 hunspus is yabypus (出现6次, 质量:perfect)
   🟢 hunspus is puhxpus (出现2次, 质量:perfect)
   🟢 piwcpus is babgpus (出现4次, 质量:perfect)
   🟢 luwspus is babgpus (出现1次, 质量:perfect)
   🟢 daftpus is luwspus (出现2次, 质量:perfect)
   🟢 hunspus is babgpus (出现1次, 质量:perfect)
   🟢 x is babgpus (出现5次, 质量:perfect)
   🟢 x is babgpus or babrpus (出现1次, 质量:perfect)

🔥 点亮的LoG节点:
   - x is luwspus
   - luwspus is qewppus
   - yabypus is luwspus and cevrpus
   - x is yabypus and puhxpus
   - luwspus is babgpus and qewppus
   - luwspus is qewppus and vukwpus
   - x is babgpus
   - luwspus is babgpus
   - x is yabypus
   - x is babgpus or babrpus
   - luwspus is babgpus and wujypus
   - yabypus is luwspus
   - x is babgpus and qewppus

============================================================
📊 计算评估指标
============================================================

🎯 计算Coverage指标...
   深度Coverage: 6/6 = 100.00%
   最深点亮节点: x is babgpus or babrpus (第6层)
   节点Coverage: 13/13 = 100.00%
   前提条件Coverage: 8/8 = 100.00%
   各推理层点亮比例:
     第1层: 4/4 = 100.00%
     第2层: 4/4 = 100.00%
     第3层: 2/2 = 100.00%
     第4层: 1/1 = 100.00%
     第5层: 1/1 = 100.00%
     第6层: 1/1 = 100.00%

🎯 计算Precision指标...
   Error Rate: 0/8 = 0.00%
   可推导节点: 8/8
   Strict Error Rate: 0/8 = 0.00%
   严格有效节点: 8/8

   详细分析:
     完美推理: 8 (100.00%)
     部分推理: 0 (0.00%)
     无效推理: 0 (0.00%)

================================================================================
处理记录 27/50
================================================================================
记录索引: 26
问题状态: correct
📁 从缓存加载提取结果: evaluation_results.LoG_6.deepseek-reasoner_record_26.json
✅ 使用缓存结果:
   - 句子数: 57
   - 提取的语句数: 69
   - 初始条件数: 19

=== Statement提取完成 ===
总句子数: 57
成功提取: 57
失败提取: 0
总statements数: 69

=== 开始清洗Statement格式 ===
原始statements数: 69
清洗后statements数: 63
过滤掉的statements数: 6
清洗后的statements:
  1. [planning] x is babgpus
  2. [actual] x is qajrpus
  3. [planning] qajrpus is babgpus
  4. [actual] padjpus is lezkpus
  5. [actual] rugxpus is terspus and toqhpus
  6. [actual] qajrpus is runmpus
  7. [actual] bitspus is rugxpus
  8. [actual] lezkpus is kelvpus
  9. [actual] quwgpus is xubvpus and qalxpus and logwpus
  10. [actual] marfpus is babgpus and winmpus
  11. [actual] diwkpus is padjpus
  12. [actual] runmpus is kogypus
  13. [actual] xubvpus is bitspus and fabdpus
  14. [actual] qugqpus is jopzpus and xanspus and pexlpus
  15. [actual] depypus is qugqpus
  16. [actual] terspus is marfpus and vevtpus
  17. [actual] pinspus is quwgpus
  18. [actual] jopzpus is diwkpus
  19. [actual] kogypus is depypus
  20. [actual] x is qajrpus
  21. [actual] kelvpus is pinspus
  22. [actual] marfpus is sukxpus
  23. [planning] x is babgpus
  24. [actual] x is qajrpus
  25. [actual] qajrpus is runmpus
  26. [actual] x is runmpus
  27. [actual] runmpus is kogypus
  28. [planning] x is kogypus
  29. [actual] kogypus is depypus
  30. [planning] x is depypus
  31. [actual] depypus is qugqpus
  32. [planning] x is qugqpus
  33. [actual] qugqpus is jopzpus and xanspus and pexlpus
  34. [actual] x is jopzpus
  35. [actual] jopzpus is diwkpus
  36. [planning] x is diwkpus
  37. [actual] diwkpus is padjpus
  38. [actual] x is padjpus
  39. [actual] padjpus is lezkpus
  40. [planning] x is lezkpus
  41. [actual] lezkpus is kelvpus
  42. [planning] x is kelvpus
  43. [actual] kelvpus is pinspus
  44. [planning] x is pinspus
  45. [actual] pinspus is quwgpus
  46. [planning] x is quwgpus
  47. [actual] quwgpus is xubvpus and qalxpus and logwpus
  48. [actual] x is xubvpus
  49. [actual] xubvpus is bitspus and fabdpus
  50. [actual] x is bitspus
  51. [actual] bitspus is rugxpus
  52. [planning] x is rugxpus
  53. [actual] rugxpus is terspus and toqhpus
  54. [actual] x is terspus
  55. [actual] terspus is marfpus and vevtpus
  56. [actual] x is marfpus
  57. [actual] marfpus is babgpus and winmpus
  58. [actual] x is marfpus
  59. [actual] marfpus is babgpus
  60. [actual] x is babgpus
  61. [actual] x is babgpus
  62. [actual] x is babgpus
  63. [actual] marfpus is babgpus

=== 开始标准化和解析节点 ===
清洗后statements数: 63
标准化后节点数: 63
过滤掉的无效实体数: 0
标准化后的节点:
  1. [planning] x → babgpus (原始: x is babgpus)
  2. [actual] x → qajrpus (原始: x is qajrpus)
  3. [planning] qajrpus → babgpus (原始: qajrpus is babgpus)
  4. [actual] padjpus → lezkpus (原始: padjpus is lezkpus)
  5. [actual] rugxpus → terspus and toqhpus (原始: rugxpus is terspus and toqhpus)
  6. [actual] qajrpus → runmpus (原始: qajrpus is runmpus)
  7. [actual] bitspus → rugxpus (原始: bitspus is rugxpus)
  8. [actual] lezkpus → kelvpus (原始: lezkpus is kelvpus)
  9. [actual] quwgpus → xubvpus and qalxpus and logwpus (原始: quwgpus is xubvpus and qalxpus and logwpus)
  10. [actual] marfpus → babgpus and winmpus (原始: marfpus is babgpus and winmpus)
  11. [actual] diwkpus → padjpus (原始: diwkpus is padjpus)
  12. [actual] runmpus → kogypus (原始: runmpus is kogypus)
  13. [actual] xubvpus → bitspus and fabdpus (原始: xubvpus is bitspus and fabdpus)
  14. [actual] qugqpus → jopzpus and xanspus and pexlpus (原始: qugqpus is jopzpus and xanspus and pexlpus)
  15. [actual] depypus → qugqpus (原始: depypus is qugqpus)
  16. [actual] terspus → marfpus and vevtpus (原始: terspus is marfpus and vevtpus)
  17. [actual] pinspus → quwgpus (原始: pinspus is quwgpus)
  18. [actual] jopzpus → diwkpus (原始: jopzpus is diwkpus)
  19. [actual] kogypus → depypus (原始: kogypus is depypus)
  20. [actual] x → qajrpus (原始: x is qajrpus)
  21. [actual] kelvpus → pinspus (原始: kelvpus is pinspus)
  22. [actual] marfpus → sukxpus (原始: marfpus is sukxpus)
  23. [planning] x → babgpus (原始: x is babgpus)
  24. [actual] x → qajrpus (原始: x is qajrpus)
  25. [actual] qajrpus → runmpus (原始: qajrpus is runmpus)
  26. [actual] x → runmpus (原始: x is runmpus)
  27. [actual] runmpus → kogypus (原始: runmpus is kogypus)
  28. [planning] x → kogypus (原始: x is kogypus)
  29. [actual] kogypus → depypus (原始: kogypus is depypus)
  30. [planning] x → depypus (原始: x is depypus)
  31. [actual] depypus → qugqpus (原始: depypus is qugqpus)
  32. [planning] x → qugqpus (原始: x is qugqpus)
  33. [actual] qugqpus → jopzpus and xanspus and pexlpus (原始: qugqpus is jopzpus and xanspus and pexlpus)
  34. [actual] x → jopzpus (原始: x is jopzpus)
  35. [actual] jopzpus → diwkpus (原始: jopzpus is diwkpus)
  36. [planning] x → diwkpus (原始: x is diwkpus)
  37. [actual] diwkpus → padjpus (原始: diwkpus is padjpus)
  38. [actual] x → padjpus (原始: x is padjpus)
  39. [actual] padjpus → lezkpus (原始: padjpus is lezkpus)
  40. [planning] x → lezkpus (原始: x is lezkpus)
  41. [actual] lezkpus → kelvpus (原始: lezkpus is kelvpus)
  42. [planning] x → kelvpus (原始: x is kelvpus)
  43. [actual] kelvpus → pinspus (原始: kelvpus is pinspus)
  44. [planning] x → pinspus (原始: x is pinspus)
  45. [actual] pinspus → quwgpus (原始: pinspus is quwgpus)
  46. [planning] x → quwgpus (原始: x is quwgpus)
  47. [actual] quwgpus → xubvpus and qalxpus and logwpus (原始: quwgpus is xubvpus and qalxpus and logwpus)
  48. [actual] x → xubvpus (原始: x is xubvpus)
  49. [actual] xubvpus → bitspus and fabdpus (原始: xubvpus is bitspus and fabdpus)
  50. [actual] x → bitspus (原始: x is bitspus)
  51. [actual] bitspus → rugxpus (原始: bitspus is rugxpus)
  52. [planning] x → rugxpus (原始: x is rugxpus)
  53. [actual] rugxpus → terspus and toqhpus (原始: rugxpus is terspus and toqhpus)
  54. [actual] x → terspus (原始: x is terspus)
  55. [actual] terspus → marfpus and vevtpus (原始: terspus is marfpus and vevtpus)
  56. [actual] x → marfpus (原始: x is marfpus)
  57. [actual] marfpus → babgpus and winmpus (原始: marfpus is babgpus and winmpus)
  58. [actual] x → marfpus (原始: x is marfpus)
  59. [actual] marfpus → babgpus (原始: marfpus is babgpus)
  60. [actual] x → babgpus (原始: x is babgpus)
  61. [actual] x → babgpus (原始: x is babgpus)
  62. [actual] x → babgpus (原始: x is babgpus)
  63. [actual] marfpus → babgpus (原始: marfpus is babgpus)

开始新的后处理...
[后处理] 从LoG数据文件中获取到图数据，节点数: 27
[后处理] 加载LoG图，包含 27 个节点
  LoG节点 0: x is babgpus (规则: MP, 深度: 1)
  LoG节点 1: x is xubvpus (规则: MP, 深度: 2)
  LoG节点 2: xubvpus is babgpus (规则: CE, 深度: 2)
  LoG节点 3: x is jopzpus (规则: CE, 深度: 3)
  LoG节点 4: jopzpus is xubvpus (规则: CE, 深度: 3)
  LoG节点 5: xubvpus is babgpus and winmpus (规则: MP, 深度: 3)
  LoG节点 6: x is jopzpus and xanspus (规则: MP, 深度: 4)
  LoG节点 7: jopzpus is xubvpus and qalxpus (规则: MP, 深度: 4)
  LoG节点 8: xubvpus is terspus (规则: CE, 深度: 4)
  LoG节点 9: terspus is babgpus and winmpus (规则: CE, 深度: 4)
  LoG节点 10: x is depypus (规则: MP, 深度: 5)
  LoG节点 11: depypus is jopzpus and xanspus (规则: CE, 深度: 5)
  LoG节点 12: jopzpus is kelvpus (规则: MP, 深度: 5)
  LoG节点 13: kelvpus is xubvpus and qalxpus (规则: MP, 深度: 5)
  LoG节点 14: xubvpus is terspus and toqhpus (规则: MP, 深度: 5)
  LoG节点 15: terspus is babgpus and winmpus and sukxpus (规则: MP, 深度: 5)
  LoG节点 16: x is runmpus (规则: MP, 深度: 6)
  LoG节点 17: runmpus is depypus (规则: MP, 深度: 6)
  LoG节点 18: depypus is jopzpus and xanspus and pexlpus (规则: MP, 深度: 6)
  LoG节点 19: jopzpus is padjpus (规则: MP, 深度: 6)
  LoG节点 20: padjpus is kelvpus (规则: MP, 深度: 6)
  LoG节点 21: kelvpus is quwgpus (规则: MP, 深度: 6)
  LoG节点 22: quwgpus is xubvpus and qalxpus (规则: CE, 深度: 6)
  LoG节点 23: xubvpus is bitspus (规则: CE, 深度: 6)
  LoG节点 24: bitspus is terspus and toqhpus (规则: MP, 深度: 6)
  LoG节点 25: terspus is marfpus (规则: CE, 深度: 6)
  LoG节点 26: marfpus is babgpus and winmpus and sukxpus (规则: CI, 深度: 6)

============================================================
[后处理] 开始处理节点
============================================================
📊 初始状态:
   - 标准化节点数: 63
   - 初始条件数: 19
   - LoG图节点数: 27

📋 初始条件列表:
    1. padjpus is lezkpus
    2. rugxpus is terspus and toqhpus
    3. qajrpus is runmpus
    4. bitspus is rugxpus
    5. lezkpus is kelvpus
    6. quwgpus is xubvpus and qalxpus and logwpus
    7. marfpus is babgpus and winmpus
    8. diwkpus is padjpus
    9. runmpus is kogypus
   10. xubvpus is bitspus and fabdpus
   11. qugqpus is jopzpus and xanspus and pexlpus
   12. depypus is qugqpus
   13. terspus is marfpus and vevtpus
   14. pinspus is quwgpus
   15. jopzpus is diwkpus
   16. kogypus is depypus
   17. x is qajrpus
   18. kelvpus is pinspus
   19. marfpus is sukxpus

🔧 构建初始Statement列表...
✅ 初始Statement列表构建完成，包含 19 个前提节点

🔍 开始处理actual节点...

   节点 1: x is qajrpus
      ↻ 重复节点，计数: 2

   节点 2: padjpus is lezkpus
      ↻ 重复节点，计数: 2

   节点 3: rugxpus is terspus and toqhpus
      ↻ 重复节点，计数: 2

   节点 4: qajrpus is runmpus
      ↻ 重复节点，计数: 2

   节点 5: bitspus is rugxpus
      ↻ 重复节点，计数: 2

   节点 6: lezkpus is kelvpus
      ↻ 重复节点，计数: 2

   节点 7: quwgpus is xubvpus and qalxpus and logwpus
      ↻ 重复节点，计数: 2

   节点 8: marfpus is babgpus and winmpus
      ↻ 重复节点，计数: 2

   节点 9: diwkpus is padjpus
      ↻ 重复节点，计数: 2

   节点 10: runmpus is kogypus
      ↻ 重复节点，计数: 2

   节点 11: xubvpus is bitspus and fabdpus
      ↻ 重复节点，计数: 2

   节点 12: qugqpus is jopzpus and xanspus and pexlpus
      ↻ 重复节点，计数: 2

   节点 13: depypus is qugqpus
      ↻ 重复节点，计数: 2

   节点 14: terspus is marfpus and vevtpus
      ↻ 重复节点，计数: 2

   节点 15: pinspus is quwgpus
      ↻ 重复节点，计数: 2

   节点 16: jopzpus is diwkpus
      ↻ 重复节点，计数: 2

   节点 17: kogypus is depypus
      ↻ 重复节点，计数: 2

   节点 18: x is qajrpus
      ↻ 重复节点，计数: 3

   节点 19: kelvpus is pinspus
      ↻ 重复节点，计数: 2

   节点 20: marfpus is sukxpus
      ↻ 重复节点，计数: 2

   节点 21: x is qajrpus
      ↻ 重复节点，计数: 4

   节点 22: qajrpus is runmpus
      ↻ 重复节点，计数: 3

   节点 23: x is runmpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is runmpus
      ✅ 验证成功 + LoG匹配

   节点 24: runmpus is kogypus
      ↻ 重复节点，计数: 3

   节点 25: kogypus is depypus
      ↻ 重复节点，计数: 3

   节点 26: depypus is qugqpus
      ↻ 重复节点，计数: 3

   节点 27: qugqpus is jopzpus and xanspus and pexlpus
      ↻ 重复节点，计数: 3

   节点 28: x is jopzpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is jopzpus
[子树点亮]     └─ 点亮依赖节点: x is jopzpus and xanspus (深度4)
[子树点亮]     └─ 点亮依赖节点: x is depypus (深度5)
[子树点亮]     └─ 点亮依赖节点: depypus is jopzpus and xanspus (深度5)
[子树点亮]     └─ 点亮依赖节点: runmpus is depypus (深度6)
[子树点亮]     └─ 点亮依赖节点: depypus is jopzpus and xanspus and pexlpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 5 个节点
      ✅ 验证成功 + LoG匹配

   节点 29: jopzpus is diwkpus
      ↻ 重复节点，计数: 3

   节点 30: diwkpus is padjpus
      ↻ 重复节点，计数: 3

   节点 31: x is padjpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is qajrpus → qajrpus is padjpus
[后处理] 基于推理轨迹点亮节点，使用了 8 个前提条件:
  - 前提: x is qajrpus
  - 前提: qajrpus is runmpus
  - 前提: runmpus is kogypus
  - 前提: kogypus is depypus
  - 前提: depypus is qugqpus
  - 前提: qugqpus is jopzpus and xanspus and pexlpus
  - 前提: jopzpus is diwkpus
  - 前提: diwkpus is padjpus
  ✓ 点亮LoG节点: jopzpus is padjpus
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 32: padjpus is lezkpus
      ↻ 重复节点，计数: 3

   节点 33: lezkpus is kelvpus
      ↻ 重复节点，计数: 3

   节点 34: kelvpus is pinspus
      ↻ 重复节点，计数: 3

   节点 35: pinspus is quwgpus
      ↻ 重复节点，计数: 3

   节点 36: quwgpus is xubvpus and qalxpus and logwpus
      ↻ 重复节点，计数: 3

   节点 37: x is xubvpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is xubvpus
[子树点亮]     └─ 点亮依赖节点: jopzpus is xubvpus (深度3)
[子树点亮]     └─ 点亮依赖节点: jopzpus is xubvpus and qalxpus (深度4)
[子树点亮]     └─ 点亮依赖节点: jopzpus is kelvpus (深度5)
[子树点亮]     └─ 点亮依赖节点: kelvpus is xubvpus and qalxpus (深度5)
[子树点亮]     └─ 点亮依赖节点: padjpus is kelvpus (深度6)
[子树点亮]     └─ 点亮依赖节点: kelvpus is quwgpus (深度6)
[子树点亮]     └─ 点亮依赖节点: quwgpus is xubvpus and qalxpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 7 个节点
      ✅ 验证成功 + LoG匹配

   节点 38: xubvpus is bitspus and fabdpus
      ↻ 重复节点，计数: 3

   节点 39: x is bitspus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is qajrpus → qajrpus is bitspus
[后处理] 基于推理轨迹点亮节点，使用了 14 个前提条件:
  - 前提: x is qajrpus
  - 前提: qajrpus is runmpus
  - 前提: runmpus is kogypus
  - 前提: kogypus is depypus
  - 前提: depypus is qugqpus
  - 前提: qugqpus is jopzpus and xanspus and pexlpus
  - 前提: jopzpus is diwkpus
  - 前提: diwkpus is padjpus
  - 前提: padjpus is lezkpus
  - 前提: lezkpus is kelvpus
  - 前提: kelvpus is pinspus
  - 前提: pinspus is quwgpus
  - 前提: quwgpus is xubvpus and qalxpus and logwpus
  - 前提: xubvpus is bitspus and fabdpus
  ✓ 点亮LoG节点: xubvpus is bitspus
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 40: bitspus is rugxpus
      ↻ 重复节点，计数: 3

   节点 41: rugxpus is terspus and toqhpus
      ↻ 重复节点，计数: 3

   节点 42: x is terspus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is qajrpus → qajrpus is terspus
[后处理] 基于推理轨迹点亮节点，使用了 16 个前提条件:
  - 前提: x is qajrpus
  - 前提: qajrpus is runmpus
  - 前提: runmpus is kogypus
  - 前提: kogypus is depypus
  - 前提: depypus is qugqpus
  - 前提: qugqpus is jopzpus and xanspus and pexlpus
  - 前提: jopzpus is diwkpus
  - 前提: diwkpus is padjpus
  - 前提: padjpus is lezkpus
  - 前提: lezkpus is kelvpus
  - 前提: kelvpus is pinspus
  - 前提: pinspus is quwgpus
  - 前提: quwgpus is xubvpus and qalxpus and logwpus
  - 前提: xubvpus is bitspus and fabdpus
  - 前提: bitspus is rugxpus
  - 前提: rugxpus is terspus and toqhpus
  ✓ 点亮LoG节点: xubvpus is terspus
[子树点亮]     └─ 点亮依赖节点: xubvpus is terspus and toqhpus (深度5)
[子树点亮]     └─ 点亮依赖节点: bitspus is terspus and toqhpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 2 个节点
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 43: terspus is marfpus and vevtpus
      ↻ 重复节点，计数: 3

   节点 44: x is marfpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is qajrpus → qajrpus is marfpus
[后处理] 基于推理轨迹点亮节点，使用了 17 个前提条件:
  - 前提: x is qajrpus
  - 前提: qajrpus is runmpus
  - 前提: runmpus is kogypus
  - 前提: kogypus is depypus
  - 前提: depypus is qugqpus
  - 前提: qugqpus is jopzpus and xanspus and pexlpus
  - 前提: jopzpus is diwkpus
  - 前提: diwkpus is padjpus
  - 前提: padjpus is lezkpus
  - 前提: lezkpus is kelvpus
  - 前提: kelvpus is pinspus
  - 前提: pinspus is quwgpus
  - 前提: quwgpus is xubvpus and qalxpus and logwpus
  - 前提: xubvpus is bitspus and fabdpus
  - 前提: bitspus is rugxpus
  - 前提: rugxpus is terspus and toqhpus
  - 前提: terspus is marfpus and vevtpus
  ✓ 点亮LoG节点: terspus is marfpus
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 45: marfpus is babgpus and winmpus
      ↻ 重复节点，计数: 3

   节点 46: x is marfpus
      ↻ 重复节点，计数: 2

   节点 47: marfpus is babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: marfpus is babgpus and winmpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: marfpus is babgpus and winmpus

   节点 48: x is babgpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is babgpus
[子树点亮]     └─ 点亮依赖节点: xubvpus is babgpus (深度2)
[子树点亮]     └─ 点亮依赖节点: xubvpus is babgpus and winmpus (深度3)
[子树点亮]     └─ 点亮依赖节点: terspus is babgpus and winmpus (深度4)
[子树点亮]     └─ 点亮依赖节点: terspus is babgpus and winmpus and sukxpus (深度5)
[子树点亮]     └─ 点亮依赖节点: marfpus is babgpus and winmpus and sukxpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 5 个节点
      ✅ 验证成功 + LoG匹配

   节点 49: x is babgpus
      ↻ 重复节点，计数: 2

   节点 50: x is babgpus
      ↻ 重复节点，计数: 3

   节点 51: marfpus is babgpus
      ↻ 重复节点，计数: 2

🔍 分析推理路径完整性...

============================================================
[后处理] 处理完成
============================================================
📈 处理统计:
   - 处理的actual节点: 51
   - 新增节点: 9
   - 更新已存在节点: 42
   - 点亮的LoG节点: 27

🎯 推理质量统计:
   - 完美推理: 9 (节点正确 + 路径正确)
   - 部分推理: 0 (节点正确 + 路径部分错误)
   - 无效推理: 0 (节点错误或路径完全错误)
[LoG分析] LoG图: 27节点, 19前提, 复杂度1-19

📊 === Statement列表分析 ===
📈 节点统计:
   - 总节点数: 28
   - 前提节点: 19
   - 推理节点: 9
   - 幻觉节点: 0
   - 点亮LoG节点: 27

✅ 推理节点详情:
   🟢 x is runmpus (出现1次, 质量:perfect)
   🟢 x is jopzpus (出现1次, 质量:perfect)
   🟢 x is padjpus (出现1次, 质量:perfect)
   🟢 x is xubvpus (出现1次, 质量:perfect)
   🟢 x is bitspus (出现1次, 质量:perfect)
   🟢 x is terspus (出现1次, 质量:perfect)
   🟢 x is marfpus (出现2次, 质量:perfect)
   🟢 marfpus is babgpus (出现2次, 质量:perfect)
   🟢 x is babgpus (出现3次, 质量:perfect)

🔥 点亮的LoG节点:
   - x is depypus
   - quwgpus is xubvpus and qalxpus
   - jopzpus is padjpus
   - terspus is marfpus
   - depypus is jopzpus and xanspus
   - jopzpus is kelvpus
   - terspus is babgpus and winmpus and sukxpus
   - x is jopzpus
   - xubvpus is terspus
   - x is babgpus
   - xubvpus is bitspus
   - x is runmpus
   - xubvpus is terspus and toqhpus
   - padjpus is kelvpus
   - runmpus is depypus
   - kelvpus is quwgpus
   - marfpus is babgpus and winmpus and sukxpus
   - depypus is jopzpus and xanspus and pexlpus
   - jopzpus is xubvpus
   - terspus is babgpus and winmpus
   - xubvpus is babgpus
   - x is xubvpus
   - kelvpus is xubvpus and qalxpus
   - jopzpus is xubvpus and qalxpus
   - xubvpus is babgpus and winmpus
   - x is jopzpus and xanspus
   - bitspus is terspus and toqhpus

============================================================
📊 计算评估指标
============================================================

🎯 计算Coverage指标...
   深度Coverage: 6/6 = 100.00%
   最深点亮节点: x is babgpus (第6层)
   节点Coverage: 27/27 = 100.00%
   前提条件Coverage: 19/19 = 100.00%
   各推理层点亮比例:
     第1层: 11/11 = 100.00%
     第2层: 6/6 = 100.00%
     第3层: 4/4 = 100.00%
     第4层: 3/3 = 100.00%
     第5层: 2/2 = 100.00%
     第6层: 1/1 = 100.00%

🎯 计算Precision指标...
   Error Rate: 0/9 = 0.00%
   可推导节点: 9/9
   Strict Error Rate: 0/9 = 0.00%
   严格有效节点: 9/9

   详细分析:
     完美推理: 9 (100.00%)
     部分推理: 0 (0.00%)
     无效推理: 0 (0.00%)

================================================================================
处理记录 28/50
================================================================================
记录索引: 27
问题状态: correct
📁 从缓存加载提取结果: evaluation_results.LoG_6.deepseek-reasoner_record_27.json
✅ 使用缓存结果:
   - 句子数: 77
   - 提取的语句数: 103
   - 初始条件数: 27

=== Statement提取完成 ===
总句子数: 77
成功提取: 77
失败提取: 0
总statements数: 103

=== 开始清洗Statement格式 ===
原始statements数: 103
清洗后statements数: 98
过滤掉的statements数: 5
清洗后的statements:
  1. [planning] x is babgpus
  2. [actual] x is kikzpus and yuxjpus
  3. [actual] x is kikzpus and yuxjpus
  4. [planning] x is babgpus
  5. [actual] babgpus is mentioned in the context of fogcpus
  6. [actual] fogcpus is babgpus and fuhnpus and tombpus
  7. [actual] fogcpus is babgpus
  8. [planning] x is fogcpus or babgpus
  9. [actual] x is kikzpus
  10. [actual] kikzpus is jallpus
  11. [actual] jallpus is pikvpus
  12. [actual] pikvpus is xutqpus
  13. [actual] xutqpus is lowlpus
  14. [actual] xutqpus is riympus
  15. [actual] lowlpus is geqnpus
  16. [actual] geqnpus is wehhpus
  17. [actual] wehhpus is wozkpus and kipmpus
  18. [actual] wozkpus is woctpus
  19. [actual] woctpus is qejmpus
  20. [actual] qejmpus is suqfpus
  21. [actual] suqfpus is muxxpus
  22. [actual] muxxpus is xethpus and disxpus
  23. [actual] xethpus is rikppus
  24. [actual] xethpus is tarbpus
  25. [actual] rikppus is jiqgpus and fotvpus
  26. [actual] jiqgpus is vibkpus and qobxpus
  27. [actual] vibkpus is sexgpus
  28. [actual] sexgpus is batwpus
  29. [actual] batwpus is jifqpus and pubwpus and vusxpus
  30. [actual] jifqpus is yoqlpus and linnpus
  31. [actual] yoqlpus is kothpus
  32. [actual] yoqlpus is rahfpus
  33. [actual] kothpus is fogcpus and tulmpus
  34. [actual] fogcpus is babgpus and fuhnpus and tombpus
  35. [actual] babgpus is fogcpus
  36. [planning] x is babgpus
  37. [actual] x is kikzpus
  38. [actual] kikzpus is jallpus
  39. [actual] jallpus is pikvpus
  40. [actual] pikvpus is xutqpus
  41. [actual] xutqpus is lowlpus
  42. [actual] lowlpus is geqnpus
  43. [actual] geqnpus is wehhpus
  44. [actual] wehhpus is wozkpus
  45. [actual] wozkpus is woctpus
  46. [actual] woctpus is qejmpus
  47. [actual] qejmpus is suqfpus
  48. [actual] suqfpus is muxxpus
  49. [actual] muxxpus is xethpus
  50. [actual] xethpus is rikppus
  51. [actual] rikppus is jiqgpus
  52. [actual] jiqgpus is vibkpus
  53. [actual] vibkpus is sexgpus
  54. [actual] sexgpus is batwpus
  55. [actual] batwpus is jifqpus
  56. [actual] jifqpus is yoqlpus
  57. [actual] yoqlpus is kothpus
  58. [actual] kothpus is fogcpus
  59. [actual] fogcpus is babgpus
  60. [planning] x is babgpus
  61. [planning] x is yuxjpus
  62. [planning] x is babgpus
  63. [actual] x is kikzpus
  64. [actual] kikzpus is fogcpus
  65. [actual] fogcpus is babgpus
  66. [planning] x is babgpus
  67. [actual] x is kikzpus
  68. [actual] kikzpus is jallpus
  69. [actual] jallpus is pikvpus
  70. [actual] pikvpus is xutqpus
  71. [actual] xutqpus is lowlpus
  72. [actual] xutqpus is riympus
  73. [actual] lowlpus is geqnpus
  74. [actual] geqnpus is wehhpus
  75. [actual] wehhpus is wozkpus and kipmpus
  76. [actual] wehhpus is wozkpus and kipmpus
  77. [planning] wehhpus is wozkpus and kipmpus
  78. [actual] wozkpus is woctpus
  79. [actual] woctpus is qejmpus
  80. [actual] qejmpus is suqfpus
  81. [actual] suqfpus is muxxpus
  82. [actual] muxxpus is xethpus and disxpus
  83. [actual] xethpus is rikppus
  84. [actual] rikppus is jiqgpus and fotvpus
  85. [actual] jiqgpus is vibkpus and qobxpus
  86. [actual] vibkpus is sexgpus
  87. [actual] sexgpus is batwpus
  88. [actual] batwpus is jifqpus and pubwpus and vusxpus
  89. [actual] jifqpus is yoqlpus and linnpus
  90. [actual] yoqlpus is kothpus
  91. [actual] yoqlpus is rahfpus
  92. [actual] kothpus is fogcpus and tulmpus
  93. [actual] fogcpus is babgpus and fuhnpus and tombpus
  94. [actual] fogcpus is babgpus
  95. [actual] x is kikzpus
  96. [actual] kikzpus is babgpus
  97. [actual] x is babgpus
  98. [actual] x is babgpus

=== 开始标准化和解析节点 ===
清洗后statements数: 98
标准化后节点数: 97
过滤掉的无效实体数: 1
标准化后的节点:
  1. [planning] x → babgpus (原始: x is babgpus)
  2. [actual] x → kikzpus and yuxjpus (原始: x is kikzpus and yuxjpus)
  3. [actual] x → kikzpus and yuxjpus (原始: x is kikzpus and yuxjpus)
  4. [planning] x → babgpus (原始: x is babgpus)
  5. [actual] fogcpus → babgpus and fuhnpus and tombpus (原始: fogcpus is babgpus and fuhnpus and tombpus)
  6. [actual] fogcpus → babgpus (原始: fogcpus is babgpus)
  7. [planning] x → fogcpus or babgpus (原始: x is fogcpus or babgpus)
  8. [actual] x → kikzpus (原始: x is kikzpus)
  9. [actual] kikzpus → jallpus (原始: kikzpus is jallpus)
  10. [actual] jallpus → pikvpus (原始: jallpus is pikvpus)
  11. [actual] pikvpus → xutqpus (原始: pikvpus is xutqpus)
  12. [actual] xutqpus → lowlpus (原始: xutqpus is lowlpus)
  13. [actual] xutqpus → riympus (原始: xutqpus is riympus)
  14. [actual] lowlpus → geqnpus (原始: lowlpus is geqnpus)
  15. [actual] geqnpus → wehhpus (原始: geqnpus is wehhpus)
  16. [actual] wehhpus → wozkpus and kipmpus (原始: wehhpus is wozkpus and kipmpus)
  17. [actual] wozkpus → woctpus (原始: wozkpus is woctpus)
  18. [actual] woctpus → qejmpus (原始: woctpus is qejmpus)
  19. [actual] qejmpus → suqfpus (原始: qejmpus is suqfpus)
  20. [actual] suqfpus → muxxpus (原始: suqfpus is muxxpus)
  21. [actual] muxxpus → xethpus and disxpus (原始: muxxpus is xethpus and disxpus)
  22. [actual] xethpus → rikppus (原始: xethpus is rikppus)
  23. [actual] xethpus → tarbpus (原始: xethpus is tarbpus)
  24. [actual] rikppus → jiqgpus and fotvpus (原始: rikppus is jiqgpus and fotvpus)
  25. [actual] jiqgpus → vibkpus and qobxpus (原始: jiqgpus is vibkpus and qobxpus)
  26. [actual] vibkpus → sexgpus (原始: vibkpus is sexgpus)
  27. [actual] sexgpus → batwpus (原始: sexgpus is batwpus)
  28. [actual] batwpus → jifqpus and pubwpus and vusxpus (原始: batwpus is jifqpus and pubwpus and vusxpus)
  29. [actual] jifqpus → yoqlpus and linnpus (原始: jifqpus is yoqlpus and linnpus)
  30. [actual] yoqlpus → kothpus (原始: yoqlpus is kothpus)
  31. [actual] yoqlpus → rahfpus (原始: yoqlpus is rahfpus)
  32. [actual] kothpus → fogcpus and tulmpus (原始: kothpus is fogcpus and tulmpus)
  33. [actual] fogcpus → babgpus and fuhnpus and tombpus (原始: fogcpus is babgpus and fuhnpus and tombpus)
  34. [actual] babgpus → fogcpus (原始: babgpus is fogcpus)
  35. [planning] x → babgpus (原始: x is babgpus)
  36. [actual] x → kikzpus (原始: x is kikzpus)
  37. [actual] kikzpus → jallpus (原始: kikzpus is jallpus)
  38. [actual] jallpus → pikvpus (原始: jallpus is pikvpus)
  39. [actual] pikvpus → xutqpus (原始: pikvpus is xutqpus)
  40. [actual] xutqpus → lowlpus (原始: xutqpus is lowlpus)
  41. [actual] lowlpus → geqnpus (原始: lowlpus is geqnpus)
  42. [actual] geqnpus → wehhpus (原始: geqnpus is wehhpus)
  43. [actual] wehhpus → wozkpus (原始: wehhpus is wozkpus)
  44. [actual] wozkpus → woctpus (原始: wozkpus is woctpus)
  45. [actual] woctpus → qejmpus (原始: woctpus is qejmpus)
  46. [actual] qejmpus → suqfpus (原始: qejmpus is suqfpus)
  47. [actual] suqfpus → muxxpus (原始: suqfpus is muxxpus)
  48. [actual] muxxpus → xethpus (原始: muxxpus is xethpus)
  49. [actual] xethpus → rikppus (原始: xethpus is rikppus)
  50. [actual] rikppus → jiqgpus (原始: rikppus is jiqgpus)
  51. [actual] jiqgpus → vibkpus (原始: jiqgpus is vibkpus)
  52. [actual] vibkpus → sexgpus (原始: vibkpus is sexgpus)
  53. [actual] sexgpus → batwpus (原始: sexgpus is batwpus)
  54. [actual] batwpus → jifqpus (原始: batwpus is jifqpus)
  55. [actual] jifqpus → yoqlpus (原始: jifqpus is yoqlpus)
  56. [actual] yoqlpus → kothpus (原始: yoqlpus is kothpus)
  57. [actual] kothpus → fogcpus (原始: kothpus is fogcpus)
  58. [actual] fogcpus → babgpus (原始: fogcpus is babgpus)
  59. [planning] x → babgpus (原始: x is babgpus)
  60. [planning] x → yuxjpus (原始: x is yuxjpus)
  61. [planning] x → babgpus (原始: x is babgpus)
  62. [actual] x → kikzpus (原始: x is kikzpus)
  63. [actual] kikzpus → fogcpus (原始: kikzpus is fogcpus)
  64. [actual] fogcpus → babgpus (原始: fogcpus is babgpus)
  65. [planning] x → babgpus (原始: x is babgpus)
  66. [actual] x → kikzpus (原始: x is kikzpus)
  67. [actual] kikzpus → jallpus (原始: kikzpus is jallpus)
  68. [actual] jallpus → pikvpus (原始: jallpus is pikvpus)
  69. [actual] pikvpus → xutqpus (原始: pikvpus is xutqpus)
  70. [actual] xutqpus → lowlpus (原始: xutqpus is lowlpus)
  71. [actual] xutqpus → riympus (原始: xutqpus is riympus)
  72. [actual] lowlpus → geqnpus (原始: lowlpus is geqnpus)
  73. [actual] geqnpus → wehhpus (原始: geqnpus is wehhpus)
  74. [actual] wehhpus → wozkpus and kipmpus (原始: wehhpus is wozkpus and kipmpus)
  75. [actual] wehhpus → wozkpus and kipmpus (原始: wehhpus is wozkpus and kipmpus)
  76. [planning] wehhpus → wozkpus and kipmpus (原始: wehhpus is wozkpus and kipmpus)
  77. [actual] wozkpus → woctpus (原始: wozkpus is woctpus)
  78. [actual] woctpus → qejmpus (原始: woctpus is qejmpus)
  79. [actual] qejmpus → suqfpus (原始: qejmpus is suqfpus)
  80. [actual] suqfpus → muxxpus (原始: suqfpus is muxxpus)
  81. [actual] muxxpus → xethpus and disxpus (原始: muxxpus is xethpus and disxpus)
  82. [actual] xethpus → rikppus (原始: xethpus is rikppus)
  83. [actual] rikppus → jiqgpus and fotvpus (原始: rikppus is jiqgpus and fotvpus)
  84. [actual] jiqgpus → vibkpus and qobxpus (原始: jiqgpus is vibkpus and qobxpus)
  85. [actual] vibkpus → sexgpus (原始: vibkpus is sexgpus)
  86. [actual] sexgpus → batwpus (原始: sexgpus is batwpus)
  87. [actual] batwpus → jifqpus and pubwpus and vusxpus (原始: batwpus is jifqpus and pubwpus and vusxpus)
  88. [actual] jifqpus → yoqlpus and linnpus (原始: jifqpus is yoqlpus and linnpus)
  89. [actual] yoqlpus → kothpus (原始: yoqlpus is kothpus)
  90. [actual] yoqlpus → rahfpus (原始: yoqlpus is rahfpus)
  91. [actual] kothpus → fogcpus and tulmpus (原始: kothpus is fogcpus and tulmpus)
  92. [actual] fogcpus → babgpus and fuhnpus and tombpus (原始: fogcpus is babgpus and fuhnpus and tombpus)
  93. [actual] fogcpus → babgpus (原始: fogcpus is babgpus)
  94. [actual] x → kikzpus (原始: x is kikzpus)
  95. [actual] kikzpus → babgpus (原始: kikzpus is babgpus)
  96. [actual] x → babgpus (原始: x is babgpus)
  97. [actual] x → babgpus (原始: x is babgpus)

开始新的后处理...
[后处理] 从LoG数据文件中获取到图数据，节点数: 41
[后处理] 加载LoG图，包含 41 个节点
  LoG节点 0: x is babgpus (规则: MP, 深度: 1)
  LoG节点 1: x is rikppus (规则: MP, 深度: 2)
  LoG节点 2: rikppus is babgpus (规则: MP, 深度: 2)
  LoG节点 3: x is lowlpus (规则: MP, 深度: 3)
  LoG节点 4: lowlpus is rikppus (规则: MP, 深度: 3)
  LoG节点 5: rikppus is jifqpus (规则: CE, 深度: 3)
  LoG节点 6: jifqpus is babgpus (规则: MP, 深度: 3)
  LoG节点 7: x is jallpus (规则: CE, 深度: 4)
  LoG节点 8: jallpus is lowlpus (规则: CE, 深度: 4)
  LoG节点 9: lowlpus is muxxpus (规则: MP, 深度: 4)
  LoG节点 10: muxxpus is rikppus (规则: CE, 深度: 4)
  LoG节点 11: rikppus is jifqpus and pubwpus (规则: MP, 深度: 4)
  LoG节点 12: jifqpus is kothpus (规则: CE, 深度: 4)
  LoG节点 13: kothpus is babgpus (规则: CE, 深度: 4)
  LoG节点 14: x is jallpus and towcpus (规则: MP, 深度: 5)
  LoG节点 15: jallpus is lowlpus and riympus (规则: MP, 深度: 5)
  LoG节点 16: lowlpus is wozkpus (规则: MP, 深度: 5)
  LoG节点 17: wozkpus is muxxpus (规则: MP, 深度: 5)
  LoG节点 18: muxxpus is rikppus and tarbpus (规则: MP, 深度: 5)
  LoG节点 19: rikppus is vibkpus (规则: MP, 深度: 5)
  LoG节点 20: vibkpus is jifqpus and pubwpus (规则: MP, 深度: 5)
  LoG节点 21: jifqpus is kothpus and rahfpus (规则: MP, 深度: 5)
  LoG节点 22: kothpus is babgpus and fuhnpus (规则: MP, 深度: 5)
  LoG节点 23: x is kikzpus (规则: CE, 深度: 6)
  LoG节点 24: kikzpus is jallpus and towcpus (规则: CI, 深度: 6)
  LoG节点 25: jallpus is xutqpus (规则: MP, 深度: 6)
  LoG节点 26: xutqpus is lowlpus and riympus (规则: CI, 深度: 6)
  LoG节点 27: lowlpus is wehhpus (规则: MP, 深度: 6)
  LoG节点 28: wehhpus is wozkpus (规则: CE, 深度: 6)
  LoG节点 29: wozkpus is qejmpus (规则: MP, 深度: 6)
  LoG节点 30: qejmpus is muxxpus (规则: MP, 深度: 6)
  LoG节点 31: muxxpus is xethpus (规则: CE, 深度: 6)
  LoG节点 32: xethpus is rikppus and tarbpus (规则: CI, 深度: 6)
  LoG节点 33: rikppus is jiqgpus (规则: CE, 深度: 6)
  LoG节点 34: jiqgpus is vibkpus (规则: CE, 深度: 6)
  LoG节点 35: vibkpus is batwpus (规则: MP, 深度: 6)
  LoG节点 36: batwpus is jifqpus and pubwpus (规则: CE, 深度: 6)
  LoG节点 37: jifqpus is yoqlpus (规则: CE, 深度: 6)
  LoG节点 38: yoqlpus is kothpus and rahfpus (规则: CI, 深度: 6)
  LoG节点 39: kothpus is fogcpus (规则: CE, 深度: 6)
  LoG节点 40: fogcpus is babgpus and fuhnpus (规则: CE, 深度: 6)

============================================================
[后处理] 开始处理节点
============================================================
📊 初始状态:
   - 标准化节点数: 97
   - 初始条件数: 27
   - LoG图节点数: 41

📋 初始条件列表:
    1. wehhpus is wozkpus and kipmpus
    2. batwpus is jifqpus and pubwpus and vusxpus
    3. kikzpus is jallpus
    4. sexgpus is batwpus
    5. suqfpus is muxxpus
    6. yoqlpus is kothpus
    7. geqnpus is wehhpus
    8. woctpus is qejmpus
    9. kothpus is fogcpus and tulmpus
   10. muxxpus is xethpus and disxpus
   11. jallpus is pikvpus
   12. xethpus is rikppus
   13. lowlpus is geqnpus
   14. yoqlpus is rahfpus
   15. rikppus is jiqgpus and fotvpus
   16. fogcpus is babgpus and fuhnpus and tombpus
   17. vibkpus is sexgpus
   18. qejmpus is suqfpus
   19. x is kikzpus and yuxjpus
   20. jifqpus is yoqlpus and linnpus
   21. kikzpus is towcpus
   22. xutqpus is lowlpus
   23. pikvpus is xutqpus
   24. jiqgpus is vibkpus and qobxpus
   25. xethpus is tarbpus
   26. wozkpus is woctpus
   27. xutqpus is riympus

🔧 构建初始Statement列表...
✅ 初始Statement列表构建完成，包含 27 个前提节点

🔍 开始处理actual节点...

   节点 1: x is kikzpus and yuxjpus
      ↻ 重复节点，计数: 2

   节点 2: x is kikzpus and yuxjpus
      ↻ 重复节点，计数: 3

   节点 3: fogcpus is babgpus and fuhnpus and tombpus
      ↻ 重复节点，计数: 2

   节点 4: fogcpus is babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: fogcpus is babgpus and fuhnpus and tombpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: fogcpus is babgpus and fuhnpus and tombpus
  ✓ 点亮LoG节点: fogcpus is babgpus and fuhnpus
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 5: x is kikzpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is kikzpus
      ✅ 验证成功 + LoG匹配

   节点 6: kikzpus is jallpus
      ↻ 重复节点，计数: 2

   节点 7: jallpus is pikvpus
      ↻ 重复节点，计数: 2

   节点 8: pikvpus is xutqpus
      ↻ 重复节点，计数: 2

   节点 9: xutqpus is lowlpus
      ↻ 重复节点，计数: 2

   节点 10: xutqpus is riympus
      ↻ 重复节点，计数: 2

   节点 11: lowlpus is geqnpus
      ↻ 重复节点，计数: 2

   节点 12: geqnpus is wehhpus
      ↻ 重复节点，计数: 2

   节点 13: wehhpus is wozkpus and kipmpus
      ↻ 重复节点，计数: 2

   节点 14: wozkpus is woctpus
      ↻ 重复节点，计数: 2

   节点 15: woctpus is qejmpus
      ↻ 重复节点，计数: 2

   节点 16: qejmpus is suqfpus
      ↻ 重复节点，计数: 2

   节点 17: suqfpus is muxxpus
      ↻ 重复节点，计数: 2

   节点 18: muxxpus is xethpus and disxpus
      ↻ 重复节点，计数: 2

   节点 19: xethpus is rikppus
      ↻ 重复节点，计数: 2

   节点 20: xethpus is tarbpus
      ↻ 重复节点，计数: 2

   节点 21: rikppus is jiqgpus and fotvpus
      ↻ 重复节点，计数: 2

   节点 22: jiqgpus is vibkpus and qobxpus
      ↻ 重复节点，计数: 2

   节点 23: vibkpus is sexgpus
      ↻ 重复节点，计数: 2

   节点 24: sexgpus is batwpus
      ↻ 重复节点，计数: 2

   节点 25: batwpus is jifqpus and pubwpus and vusxpus
      ↻ 重复节点，计数: 2

   节点 26: jifqpus is yoqlpus and linnpus
      ↻ 重复节点，计数: 2

   节点 27: yoqlpus is kothpus
      ↻ 重复节点，计数: 2

   节点 28: yoqlpus is rahfpus
      ↻ 重复节点，计数: 2

   节点 29: kothpus is fogcpus and tulmpus
      ↻ 重复节点，计数: 2

   节点 30: fogcpus is babgpus and fuhnpus and tombpus
      ↻ 重复节点，计数: 3

   节点 31: babgpus is fogcpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 32: x is kikzpus
      ↻ 重复节点，计数: 2

   节点 33: kikzpus is jallpus
      ↻ 重复节点，计数: 3

   节点 34: jallpus is pikvpus
      ↻ 重复节点，计数: 3

   节点 35: pikvpus is xutqpus
      ↻ 重复节点，计数: 3

   节点 36: xutqpus is lowlpus
      ↻ 重复节点，计数: 3

   节点 37: lowlpus is geqnpus
      ↻ 重复节点，计数: 3

   节点 38: geqnpus is wehhpus
      ↻ 重复节点，计数: 3

   节点 39: wehhpus is wozkpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: wehhpus is wozkpus
      ✅ 验证成功 + LoG匹配

   节点 40: wozkpus is woctpus
      ↻ 重复节点，计数: 3

   节点 41: woctpus is qejmpus
      ↻ 重复节点，计数: 3

   节点 42: qejmpus is suqfpus
      ↻ 重复节点，计数: 3

   节点 43: suqfpus is muxxpus
      ↻ 重复节点，计数: 3

   节点 44: muxxpus is xethpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: muxxpus is xethpus
      ✅ 验证成功 + LoG匹配

   节点 45: xethpus is rikppus
      ↻ 重复节点，计数: 3

   节点 46: rikppus is jiqgpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: rikppus is jiqgpus
      ✅ 验证成功 + LoG匹配

   节点 47: jiqgpus is vibkpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: jiqgpus is vibkpus
      ✅ 验证成功 + LoG匹配

   节点 48: vibkpus is sexgpus
      ↻ 重复节点，计数: 3

   节点 49: sexgpus is batwpus
      ↻ 重复节点，计数: 3

   节点 50: batwpus is jifqpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: batwpus is jifqpus and pubwpus and vusxpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: batwpus is jifqpus and pubwpus and vusxpus
  ✓ 点亮LoG节点: batwpus is jifqpus and pubwpus
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 51: jifqpus is yoqlpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: jifqpus is yoqlpus
      ✅ 验证成功 + LoG匹配

   节点 52: yoqlpus is kothpus
      ↻ 重复节点，计数: 3

   节点 53: kothpus is fogcpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: kothpus is fogcpus
      ✅ 验证成功 + LoG匹配

   节点 54: fogcpus is babgpus
      ↻ 重复节点，计数: 2

   节点 55: x is kikzpus
      ↻ 重复节点，计数: 3

   节点 56: kikzpus is fogcpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: kikzpus is jallpus → jallpus is fogcpus
[后处理] 基于推理轨迹点亮节点，使用了 21 个前提条件:
  - 前提: kikzpus is jallpus
  - 前提: jallpus is pikvpus
  - 前提: pikvpus is xutqpus
  - 前提: xutqpus is lowlpus
  - 前提: lowlpus is geqnpus
  - 前提: geqnpus is wehhpus
  - 前提: wehhpus is wozkpus
  - 前提: wozkpus is woctpus
  - 前提: woctpus is qejmpus
  - 前提: qejmpus is suqfpus
  - 前提: suqfpus is muxxpus
  - 前提: muxxpus is xethpus
  - 前提: xethpus is rikppus
  - 前提: rikppus is jiqgpus
  - 前提: jiqgpus is vibkpus
  - 前提: vibkpus is sexgpus
  - 前提: sexgpus is batwpus
  - 前提: batwpus is jifqpus
  - 前提: jifqpus is yoqlpus
  - 前提: yoqlpus is kothpus
  - 前提: kothpus is fogcpus
  ✓ 点亮LoG节点: lowlpus is rikppus
[子树点亮]     └─ 点亮依赖节点: lowlpus is muxxpus (深度4)
[子树点亮]     └─ 点亮依赖节点: muxxpus is rikppus (深度4)
[子树点亮]     └─ 点亮依赖节点: lowlpus is wozkpus (深度5)
[子树点亮]     └─ 点亮依赖节点: wozkpus is muxxpus (深度5)
[子树点亮]     └─ 点亮依赖节点: muxxpus is rikppus and tarbpus (深度5)
[子树点亮]     └─ 点亮依赖节点: lowlpus is wehhpus (深度6)
[子树点亮]     └─ 点亮依赖节点: wozkpus is qejmpus (深度6)
[子树点亮]     └─ 点亮依赖节点: qejmpus is muxxpus (深度6)
[子树点亮]     └─ 点亮依赖节点: xethpus is rikppus and tarbpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 9 个节点
  ✓ 点亮LoG节点: rikppus is jifqpus
[子树点亮]     └─ 点亮依赖节点: rikppus is jifqpus and pubwpus (深度4)
[子树点亮]     └─ 点亮依赖节点: rikppus is vibkpus (深度5)
[子树点亮]     └─ 点亮依赖节点: vibkpus is jifqpus and pubwpus (深度5)
[子树点亮]     └─ 点亮依赖节点: vibkpus is batwpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 4 个节点
  ✓ 点亮LoG节点: jallpus is lowlpus
[子树点亮]     └─ 点亮依赖节点: jallpus is lowlpus and riympus (深度5)
[子树点亮]     └─ 点亮依赖节点: jallpus is xutqpus (深度6)
[子树点亮]     └─ 点亮依赖节点: xutqpus is lowlpus and riympus (深度6)
[后处理]   └─ 自动点亮依赖子树: 3 个节点
  ✓ 点亮LoG节点: jifqpus is kothpus
[子树点亮]     └─ 点亮依赖节点: jifqpus is kothpus and rahfpus (深度5)
[子树点亮]     └─ 点亮依赖节点: yoqlpus is kothpus and rahfpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 2 个节点
[后处理] 通过推理轨迹额外点亮了 4 个LoG节点

   节点 57: fogcpus is babgpus
      ↻ 重复节点，计数: 3

   节点 58: x is kikzpus
      ↻ 重复节点，计数: 4

   节点 59: kikzpus is jallpus
      ↻ 重复节点，计数: 4

   节点 60: jallpus is pikvpus
      ↻ 重复节点，计数: 4

   节点 61: pikvpus is xutqpus
      ↻ 重复节点，计数: 4

   节点 62: xutqpus is lowlpus
      ↻ 重复节点，计数: 4

   节点 63: xutqpus is riympus
      ↻ 重复节点，计数: 3

   节点 64: lowlpus is geqnpus
      ↻ 重复节点，计数: 4

   节点 65: geqnpus is wehhpus
      ↻ 重复节点，计数: 4

   节点 66: wehhpus is wozkpus and kipmpus
      ↻ 重复节点，计数: 3

   节点 67: wehhpus is wozkpus and kipmpus
      ↻ 重复节点，计数: 4

   节点 68: wozkpus is woctpus
      ↻ 重复节点，计数: 4

   节点 69: woctpus is qejmpus
      ↻ 重复节点，计数: 4

   节点 70: qejmpus is suqfpus
      ↻ 重复节点，计数: 4

   节点 71: suqfpus is muxxpus
      ↻ 重复节点，计数: 4

   节点 72: muxxpus is xethpus and disxpus
      ↻ 重复节点，计数: 3

   节点 73: xethpus is rikppus
      ↻ 重复节点，计数: 4

   节点 74: rikppus is jiqgpus and fotvpus
      ↻ 重复节点，计数: 3

   节点 75: jiqgpus is vibkpus and qobxpus
      ↻ 重复节点，计数: 3

   节点 76: vibkpus is sexgpus
      ↻ 重复节点，计数: 4

   节点 77: sexgpus is batwpus
      ↻ 重复节点，计数: 4

   节点 78: batwpus is jifqpus and pubwpus and vusxpus
      ↻ 重复节点，计数: 3

   节点 79: jifqpus is yoqlpus and linnpus
      ↻ 重复节点，计数: 3

   节点 80: yoqlpus is kothpus
      ↻ 重复节点，计数: 4

   节点 81: yoqlpus is rahfpus
      ↻ 重复节点，计数: 3

   节点 82: kothpus is fogcpus and tulmpus
      ↻ 重复节点，计数: 3

   节点 83: fogcpus is babgpus and fuhnpus and tombpus
      ↻ 重复节点，计数: 4

   节点 84: fogcpus is babgpus
      ↻ 重复节点，计数: 4

   节点 85: x is kikzpus
      ↻ 重复节点，计数: 5

   节点 86: kikzpus is babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: kikzpus is jallpus → jallpus is babgpus
[后处理] 基于推理轨迹点亮节点，使用了 22 个前提条件:
  - 前提: kikzpus is jallpus
  - 前提: jallpus is pikvpus
  - 前提: pikvpus is xutqpus
  - 前提: xutqpus is lowlpus
  - 前提: lowlpus is geqnpus
  - 前提: geqnpus is wehhpus
  - 前提: wehhpus is wozkpus
  - 前提: wozkpus is woctpus
  - 前提: woctpus is qejmpus
  - 前提: qejmpus is suqfpus
  - 前提: suqfpus is muxxpus
  - 前提: muxxpus is xethpus
  - 前提: xethpus is rikppus
  - 前提: rikppus is jiqgpus
  - 前提: jiqgpus is vibkpus
  - 前提: vibkpus is sexgpus
  - 前提: sexgpus is batwpus
  - 前提: batwpus is jifqpus
  - 前提: jifqpus is yoqlpus
  - 前提: yoqlpus is kothpus
  - 前提: kothpus is fogcpus
  - 前提: fogcpus is babgpus
  ✓ 点亮LoG节点: rikppus is babgpus
[子树点亮]     └─ 点亮依赖节点: jifqpus is babgpus (深度3)
[子树点亮]     └─ 点亮依赖节点: kothpus is babgpus (深度4)
[子树点亮]     └─ 点亮依赖节点: kothpus is babgpus and fuhnpus (深度5)
[后处理]   └─ 自动点亮依赖子树: 3 个节点
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 87: x is babgpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is babgpus
[子树点亮]     └─ 点亮依赖节点: x is rikppus (深度2)
[子树点亮]     └─ 点亮依赖节点: x is lowlpus (深度3)
[子树点亮]     └─ 点亮依赖节点: x is jallpus (深度4)
[子树点亮]     └─ 点亮依赖节点: x is jallpus and towcpus (深度5)
[子树点亮]     └─ 点亮依赖节点: kikzpus is jallpus and towcpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 5 个节点
      ✅ 验证成功 + LoG匹配

   节点 88: x is babgpus
      ↻ 重复节点，计数: 2

🔍 分析推理路径完整性...

============================================================
[后处理] 处理完成
============================================================
📈 处理统计:
   - 处理的actual节点: 88
   - 新增节点: 13
   - 更新已存在节点: 75
   - 点亮的LoG节点: 41

🎯 推理质量统计:
   - 完美推理: 11 (节点正确 + 路径正确)
   - 部分推理: 2 (节点正确 + 路径部分错误)
   - 无效推理: 0 (节点错误或路径完全错误)
[LoG分析] LoG图: 41节点, 27前提, 复杂度1-27

📊 === Statement列表分析 ===
📈 节点统计:
   - 总节点数: 40
   - 前提节点: 27
   - 推理节点: 12
   - 幻觉节点: 1
   - 点亮LoG节点: 41

❌ 幻觉节点详情:
   - babgpus is fogcpus (出现1次)

✅ 推理节点详情:
   🟢 fogcpus is babgpus (出现4次, 质量:perfect)
   🟢 x is kikzpus (出现5次, 质量:perfect)
   🟢 wehhpus is wozkpus (出现1次, 质量:perfect)
   🟢 muxxpus is xethpus (出现1次, 质量:perfect)
   🟢 rikppus is jiqgpus (出现1次, 质量:perfect)
   🟢 jiqgpus is vibkpus (出现1次, 质量:perfect)
   🟢 batwpus is jifqpus (出现1次, 质量:perfect)
   🟢 jifqpus is yoqlpus (出现1次, 质量:perfect)
   🟡 kothpus is fogcpus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['babgpus is fogcpus']
   🟡 kikzpus is fogcpus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['babgpus is fogcpus']
   🟢 kikzpus is babgpus (出现1次, 质量:perfect)
   🟢 x is babgpus (出现2次, 质量:perfect)

🔥 点亮的LoG节点:
   - qejmpus is muxxpus
   - rikppus is jiqgpus
   - rikppus is jifqpus and pubwpus
   - vibkpus is batwpus
   - jiqgpus is vibkpus
   - jifqpus is yoqlpus
   - x is jallpus
   - vibkpus is jifqpus and pubwpus
   - lowlpus is wehhpus
   - lowlpus is wozkpus
   - wozkpus is qejmpus
   - x is babgpus
   - lowlpus is muxxpus
   - batwpus is jifqpus and pubwpus
   - wozkpus is muxxpus
   - rikppus is vibkpus
   - jallpus is xutqpus
   - kikzpus is jallpus and towcpus
   - x is kikzpus
   - kothpus is babgpus
   - muxxpus is rikppus and tarbpus
   - jifqpus is kothpus and rahfpus
   - muxxpus is rikppus
   - x is rikppus
   - jallpus is lowlpus
   - wehhpus is wozkpus
   - lowlpus is rikppus
   - rikppus is jifqpus
   - jifqpus is babgpus
   - x is lowlpus
   - xutqpus is lowlpus and riympus
   - fogcpus is babgpus and fuhnpus
   - rikppus is babgpus
   - xethpus is rikppus and tarbpus
   - jallpus is lowlpus and riympus
   - yoqlpus is kothpus and rahfpus
   - jifqpus is kothpus
   - kothpus is fogcpus
   - muxxpus is xethpus
   - x is jallpus and towcpus
   - kothpus is babgpus and fuhnpus

============================================================
📊 计算评估指标
============================================================

🎯 计算Coverage指标...
   深度Coverage: 6/6 = 100.00%
   最深点亮节点: x is babgpus (第6层)
   节点Coverage: 41/41 = 100.00%
   前提条件Coverage: 26/27 = 96.30%
   各推理层点亮比例:
     第1层: 18/18 = 100.00%
     第2层: 9/9 = 100.00%
     第3层: 7/7 = 100.00%
     第4层: 4/4 = 100.00%
     第5层: 2/2 = 100.00%
     第6层: 1/1 = 100.00%

🎯 计算Precision指标...
   Error Rate: 1/13 = 7.69%
   可推导节点: 12/13
   Strict Error Rate: 3/13 = 23.08%
   严格有效节点: 10/13

   详细分析:
     完美推理: 11 (84.62%)
     部分推理: 2 (15.38%)
     无效推理: 0 (0.00%)

================================================================================
处理记录 29/50
================================================================================
记录索引: 28
问题状态: correct
📁 从缓存加载提取结果: evaluation_results.LoG_6.deepseek-reasoner_record_28.json
✅ 使用缓存结果:
   - 句子数: 142
   - 提取的语句数: 156
   - 初始条件数: 28

=== Statement提取完成 ===
总句子数: 142
成功提取: 142
失败提取: 0
总statements数: 156

=== 开始清洗Statement格式 ===
原始statements数: 156
清洗后statements数: 115
过滤掉的statements数: 41
清洗后的statements:
  1. [planning] x is babgpus
  2. [planning] x is babrpus
  3. [planning] x is babspus
  4. [planning] x is babgpus
  5. [planning] x is babrpus
  6. [planning] x is babspus
  7. [actual] x is yafppus and saqhpus
  8. [actual] x is yafppus and saqhpus
  9. [planning] x is babgpus
  10. [planning] x is others
  11. [actual] lirtpus is vuxnpus and difvpus
  12. [actual] wuxcpus is kastpus
  13. [actual] mapgpus is poyjpus and nirgpus
  14. [actual] kutypus is bopbpus and xekspus
  15. [actual] zayspus is beszpus
  16. [actual] yuztpus is pudcpus and zosspus
  17. [actual] ditfpus is nicxpus
  18. [actual] mewxpus is bormpus
  19. [actual] rinxpus is mewxpus
  20. [actual] yafppus is jodbpus
  21. [actual] damjpus is vabppus and cekppus
  22. [actual] yafppus is jubkpus
  23. [planning] yafppus is jubkpus
  24. [actual] yafppus is jodbpus
  25. [actual] yafppus is jodbpus and jubkpus
  26. [actual] x is yafppus and saqhpus
  27. [actual] x is yafppus and saqhpus
  28. [planning] x is babgpus
  29. [planning] x is babrpus
  30. [planning] x is babspus
  31. [actual] kastpus is babgpus
  32. [actual] kastpus is babgpus
  33. [planning] x is babgpus
  34. [actual] x is yafppus
  35. [actual] yafppus is jodbpus and jubkpus
  36. [planning] jodbpus is anything else
  37. [actual] yafppus is jodbpus
  38. [actual] jubkpus is sicxpus
  39. [actual] jubkpus is sicxpus
  40. [actual] yafppus is jubkpus
  41. [actual] jubkpus is sicxpus
  42. [planning] yafppus is sicxpus
  43. [actual] sicxpus is damjpus and xebmpus
  44. [actual] damjpus is vabppus and cekppus
  45. [actual] vabppus is zayspus
  46. [actual] zayspus is beszpus
  47. [actual] beszpus is diwkpus and yeglpus
  48. [actual] diwkpus is sibfpus and dojqpus and kohdpus
  49. [actual] sibfpus is mapgpus
  50. [actual] mapgpus is poyjpus and nirgpus
  51. [actual] poyjpus is kutypus
  52. [actual] kutypus is bopbpus and xekspus
  53. [actual] bopbpus is cunppus
  54. [actual] cunppus is yuztpus and rewgpus
  55. [actual] yuztpus is pudcpus and zosspus
  56. [actual] pudcpus is ditfpus and becnpus
  57. [actual] ditfpus is nicxpus
  58. [actual] nicxpus is rinxpus and nilcpus
  59. [actual] rinxpus is mewxpus
  60. [actual] mewxpus is bormpus
  61. [actual] bormpus is vomkpus
  62. [actual] vomkpus is lirtpus
  63. [actual] lirtpus is vuxnpus and difvpus
  64. [actual] vuxnpus is wuxcpus and nonppus and gisnpus
  65. [actual] wuxcpus is kastpus
  66. [actual] kastpus is babgpus
  67. [planning] x is babgpus
  68. [actual] x is yafppus
  69. [actual] yafppus is jubkpus
  70. [actual] jubkpus is sicxpus
  71. [actual] sicxpus is kastpus
  72. [actual] kastpus is babgpus
  73. [actual] yafppus is babgpus
  74. [planning] x is babgpus
  75. [actual] x is babgpus
  76. [planning] x is babgpus
  77. [planning] x is babrpus
  78. [planning] x is babspus
  79. [actual] x is babgpus
  80. [planning] x is babgpus
  81. [planning] x is babgpus
  82. [actual] x is babgpus or babrpus or babspus
  83. [actual] x is babgpus
  84. [actual] x is saqhpus
  85. [planning] x is saqhpus
  86. [actual] yafppus is babgpus
  87. [planning] x is babgpus and babkpus and babmpus
  88. [actual] yafppus is jubkpus
  89. [actual] jubkpus is sicxpus
  90. [actual] sicxpus is damjpus
  91. [actual] damjpus is vabppus
  92. [actual] vabppus is zayspus
  93. [actual] zayspus is beszpus
  94. [actual] beszpus is diwkpus
  95. [actual] diwkpus is sibfpus
  96. [actual] sibfpus is mapgpus
  97. [actual] mapgpus is poyjpus
  98. [actual] poyjpus is kutypus
  99. [actual] kutypus is bopbpus
  100. [actual] bopbpus is cunppus
  101. [actual] cunppus is yuztpus
  102. [actual] yuztpus is pudcpus
  103. [actual] pudcpus is ditfpus
  104. [actual] ditfpus is nicxpus
  105. [actual] nicxpus is rinxpus
  106. [actual] rinxpus is mewxpus
  107. [actual] mewxpus is bormpus
  108. [actual] bormpus is vomkpus
  109. [actual] vomkpus is lirtpus
  110. [actual] lirtpus is vuxnpus
  111. [actual] vuxnpus is wuxcpus
  112. [actual] wuxcpus is kastpus
  113. [actual] kastpus is babgpus
  114. [actual] yafppus is babgpus
  115. [actual] x is babgpus

=== 开始标准化和解析节点 ===
清洗后statements数: 115
标准化后节点数: 113
过滤掉的无效实体数: 2
标准化后的节点:
  1. [planning] x → babgpus (原始: x is babgpus)
  2. [planning] x → babrpus (原始: x is babrpus)
  3. [planning] x → babspus (原始: x is babspus)
  4. [planning] x → babgpus (原始: x is babgpus)
  5. [planning] x → babrpus (原始: x is babrpus)
  6. [planning] x → babspus (原始: x is babspus)
  7. [actual] x → yafppus and saqhpus (原始: x is yafppus and saqhpus)
  8. [actual] x → yafppus and saqhpus (原始: x is yafppus and saqhpus)
  9. [planning] x → babgpus (原始: x is babgpus)
  10. [actual] lirtpus → vuxnpus and difvpus (原始: lirtpus is vuxnpus and difvpus)
  11. [actual] wuxcpus → kastpus (原始: wuxcpus is kastpus)
  12. [actual] mapgpus → poyjpus and nirgpus (原始: mapgpus is poyjpus and nirgpus)
  13. [actual] kutypus → bopbpus and xekspus (原始: kutypus is bopbpus and xekspus)
  14. [actual] zayspus → beszpus (原始: zayspus is beszpus)
  15. [actual] yuztpus → pudcpus and zosspus (原始: yuztpus is pudcpus and zosspus)
  16. [actual] ditfpus → nicxpus (原始: ditfpus is nicxpus)
  17. [actual] mewxpus → bormpus (原始: mewxpus is bormpus)
  18. [actual] rinxpus → mewxpus (原始: rinxpus is mewxpus)
  19. [actual] yafppus → jodbpus (原始: yafppus is jodbpus)
  20. [actual] damjpus → vabppus and cekppus (原始: damjpus is vabppus and cekppus)
  21. [actual] yafppus → jubkpus (原始: yafppus is jubkpus)
  22. [planning] yafppus → jubkpus (原始: yafppus is jubkpus)
  23. [actual] yafppus → jodbpus (原始: yafppus is jodbpus)
  24. [actual] yafppus → jodbpus and jubkpus (原始: yafppus is jodbpus and jubkpus)
  25. [actual] x → yafppus and saqhpus (原始: x is yafppus and saqhpus)
  26. [actual] x → yafppus and saqhpus (原始: x is yafppus and saqhpus)
  27. [planning] x → babgpus (原始: x is babgpus)
  28. [planning] x → babrpus (原始: x is babrpus)
  29. [planning] x → babspus (原始: x is babspus)
  30. [actual] kastpus → babgpus (原始: kastpus is babgpus)
  31. [actual] kastpus → babgpus (原始: kastpus is babgpus)
  32. [planning] x → babgpus (原始: x is babgpus)
  33. [actual] x → yafppus (原始: x is yafppus)
  34. [actual] yafppus → jodbpus and jubkpus (原始: yafppus is jodbpus and jubkpus)
  35. [actual] yafppus → jodbpus (原始: yafppus is jodbpus)
  36. [actual] jubkpus → sicxpus (原始: jubkpus is sicxpus)
  37. [actual] jubkpus → sicxpus (原始: jubkpus is sicxpus)
  38. [actual] yafppus → jubkpus (原始: yafppus is jubkpus)
  39. [actual] jubkpus → sicxpus (原始: jubkpus is sicxpus)
  40. [planning] yafppus → sicxpus (原始: yafppus is sicxpus)
  41. [actual] sicxpus → damjpus and xebmpus (原始: sicxpus is damjpus and xebmpus)
  42. [actual] damjpus → vabppus and cekppus (原始: damjpus is vabppus and cekppus)
  43. [actual] vabppus → zayspus (原始: vabppus is zayspus)
  44. [actual] zayspus → beszpus (原始: zayspus is beszpus)
  45. [actual] beszpus → diwkpus and yeglpus (原始: beszpus is diwkpus and yeglpus)
  46. [actual] diwkpus → sibfpus and dojqpus and kohdpus (原始: diwkpus is sibfpus and dojqpus and kohdpus)
  47. [actual] sibfpus → mapgpus (原始: sibfpus is mapgpus)
  48. [actual] mapgpus → poyjpus and nirgpus (原始: mapgpus is poyjpus and nirgpus)
  49. [actual] poyjpus → kutypus (原始: poyjpus is kutypus)
  50. [actual] kutypus → bopbpus and xekspus (原始: kutypus is bopbpus and xekspus)
  51. [actual] bopbpus → cunppus (原始: bopbpus is cunppus)
  52. [actual] cunppus → yuztpus and rewgpus (原始: cunppus is yuztpus and rewgpus)
  53. [actual] yuztpus → pudcpus and zosspus (原始: yuztpus is pudcpus and zosspus)
  54. [actual] pudcpus → ditfpus and becnpus (原始: pudcpus is ditfpus and becnpus)
  55. [actual] ditfpus → nicxpus (原始: ditfpus is nicxpus)
  56. [actual] nicxpus → rinxpus and nilcpus (原始: nicxpus is rinxpus and nilcpus)
  57. [actual] rinxpus → mewxpus (原始: rinxpus is mewxpus)
  58. [actual] mewxpus → bormpus (原始: mewxpus is bormpus)
  59. [actual] bormpus → vomkpus (原始: bormpus is vomkpus)
  60. [actual] vomkpus → lirtpus (原始: vomkpus is lirtpus)
  61. [actual] lirtpus → vuxnpus and difvpus (原始: lirtpus is vuxnpus and difvpus)
  62. [actual] vuxnpus → wuxcpus and nonppus and gisnpus (原始: vuxnpus is wuxcpus and nonppus and gisnpus)
  63. [actual] wuxcpus → kastpus (原始: wuxcpus is kastpus)
  64. [actual] kastpus → babgpus (原始: kastpus is babgpus)
  65. [planning] x → babgpus (原始: x is babgpus)
  66. [actual] x → yafppus (原始: x is yafppus)
  67. [actual] yafppus → jubkpus (原始: yafppus is jubkpus)
  68. [actual] jubkpus → sicxpus (原始: jubkpus is sicxpus)
  69. [actual] sicxpus → kastpus (原始: sicxpus is kastpus)
  70. [actual] kastpus → babgpus (原始: kastpus is babgpus)
  71. [actual] yafppus → babgpus (原始: yafppus is babgpus)
  72. [planning] x → babgpus (原始: x is babgpus)
  73. [actual] x → babgpus (原始: x is babgpus)
  74. [planning] x → babgpus (原始: x is babgpus)
  75. [planning] x → babrpus (原始: x is babrpus)
  76. [planning] x → babspus (原始: x is babspus)
  77. [actual] x → babgpus (原始: x is babgpus)
  78. [planning] x → babgpus (原始: x is babgpus)
  79. [planning] x → babgpus (原始: x is babgpus)
  80. [actual] x → babgpus or babrpus or babspus (原始: x is babgpus or babrpus or babspus)
  81. [actual] x → babgpus (原始: x is babgpus)
  82. [actual] x → saqhpus (原始: x is saqhpus)
  83. [planning] x → saqhpus (原始: x is saqhpus)
  84. [actual] yafppus → babgpus (原始: yafppus is babgpus)
  85. [planning] x → babgpus and babkpus and babmpus (原始: x is babgpus and babkpus and babmpus)
  86. [actual] yafppus → jubkpus (原始: yafppus is jubkpus)
  87. [actual] jubkpus → sicxpus (原始: jubkpus is sicxpus)
  88. [actual] sicxpus → damjpus (原始: sicxpus is damjpus)
  89. [actual] damjpus → vabppus (原始: damjpus is vabppus)
  90. [actual] vabppus → zayspus (原始: vabppus is zayspus)
  91. [actual] zayspus → beszpus (原始: zayspus is beszpus)
  92. [actual] beszpus → diwkpus (原始: beszpus is diwkpus)
  93. [actual] diwkpus → sibfpus (原始: diwkpus is sibfpus)
  94. [actual] sibfpus → mapgpus (原始: sibfpus is mapgpus)
  95. [actual] mapgpus → poyjpus (原始: mapgpus is poyjpus)
  96. [actual] poyjpus → kutypus (原始: poyjpus is kutypus)
  97. [actual] kutypus → bopbpus (原始: kutypus is bopbpus)
  98. [actual] bopbpus → cunppus (原始: bopbpus is cunppus)
  99. [actual] cunppus → yuztpus (原始: cunppus is yuztpus)
  100. [actual] yuztpus → pudcpus (原始: yuztpus is pudcpus)
  101. [actual] pudcpus → ditfpus (原始: pudcpus is ditfpus)
  102. [actual] ditfpus → nicxpus (原始: ditfpus is nicxpus)
  103. [actual] nicxpus → rinxpus (原始: nicxpus is rinxpus)
  104. [actual] rinxpus → mewxpus (原始: rinxpus is mewxpus)
  105. [actual] mewxpus → bormpus (原始: mewxpus is bormpus)
  106. [actual] bormpus → vomkpus (原始: bormpus is vomkpus)
  107. [actual] vomkpus → lirtpus (原始: vomkpus is lirtpus)
  108. [actual] lirtpus → vuxnpus (原始: lirtpus is vuxnpus)
  109. [actual] vuxnpus → wuxcpus (原始: vuxnpus is wuxcpus)
  110. [actual] wuxcpus → kastpus (原始: wuxcpus is kastpus)
  111. [actual] kastpus → babgpus (原始: kastpus is babgpus)
  112. [actual] yafppus → babgpus (原始: yafppus is babgpus)
  113. [actual] x → babgpus (原始: x is babgpus)

开始新的后处理...
[后处理] 从LoG数据文件中获取到图数据，节点数: 45
[后处理] 加载LoG图，包含 45 个节点
  LoG节点 0: x is babgpus or babrpus or babspus (规则: MP, 深度: 1)
  LoG节点 1: x is bopbpus (规则: MP, 深度: 2)
  LoG节点 2: bopbpus is babgpus or babrpus or babspus (规则: MP, 深度: 2)
  LoG节点 3: x is beszpus (规则: MP, 深度: 3)
  LoG节点 4: beszpus is bopbpus (规则: MP, 深度: 3)
  LoG节点 5: bopbpus is lirtpus (规则: MP, 深度: 3)
  LoG节点 6: lirtpus is babgpus or babrpus or babspus (规则: MP, 深度: 3)
  LoG节点 7: x is jubkpus (规则: CE, 深度: 4)
  LoG节点 8: jubkpus is beszpus (规则: MP, 深度: 4)
  LoG节点 9: beszpus is sibfpus (规则: CE, 深度: 4)
  LoG节点 10: sibfpus is bopbpus (规则: MP, 深度: 4)
  LoG节点 11: bopbpus is ditfpus (规则: MP, 深度: 4)
  LoG节点 12: ditfpus is lirtpus (规则: MP, 深度: 4)
  LoG节点 13: lirtpus is wuxcpus (规则: CE, 深度: 4)
  LoG节点 14: wuxcpus is babgpus or babrpus or babspus (规则: DI, 深度: 4)
  LoG节点 15: x is jubkpus and jodbpus (规则: MP, 深度: 5)
  LoG节点 16: jubkpus is damjpus (规则: CE, 深度: 5)
  LoG节点 17: damjpus is beszpus (规则: MP, 深度: 5)
  LoG节点 18: beszpus is sibfpus and dojqpus (规则: MP, 深度: 5)
  LoG节点 19: sibfpus is poyjpus (规则: CE, 深度: 5)
  LoG节点 20: poyjpus is bopbpus (规则: CE, 深度: 5)
  LoG节点 21: bopbpus is yuztpus (规则: CE, 深度: 5)
  LoG节点 22: yuztpus is ditfpus (规则: MP, 深度: 5)
  LoG节点 23: ditfpus is rinxpus (规则: CE, 深度: 5)
  LoG节点 24: rinxpus is lirtpus (规则: MP, 深度: 5)
  LoG节点 25: lirtpus is wuxcpus and nonppus (规则: MP, 深度: 5)
  LoG节点 26: wuxcpus is babgpus or babrpus (规则: DI, 深度: 5)
  LoG节点 27: x is yafppus (规则: CE, 深度: 6)
  LoG节点 28: yafppus is jubkpus and jodbpus (规则: CI, 深度: 6)
  LoG节点 29: jubkpus is damjpus and xebmpus (规则: MP, 深度: 6)
  LoG节点 30: damjpus is vabppus (规则: CE, 深度: 6)
  LoG节点 31: vabppus is beszpus (规则: MP, 深度: 6)
  LoG节点 32: beszpus is diwkpus (规则: CE, 深度: 6)
  LoG节点 33: diwkpus is sibfpus and dojqpus (规则: CE, 深度: 6)
  LoG节点 34: sibfpus is poyjpus and nirgpus (规则: MP, 深度: 6)
  LoG节点 35: poyjpus is bopbpus and xekspus (规则: MP, 深度: 6)
  LoG节点 36: bopbpus is yuztpus and rewgpus (规则: MP, 深度: 6)
  LoG节点 37: yuztpus is pudcpus (规则: CE, 深度: 6)
  LoG节点 38: pudcpus is ditfpus (规则: CE, 深度: 6)
  LoG节点 39: ditfpus is rinxpus and nilcpus (规则: MP, 深度: 6)
  LoG节点 40: rinxpus is bormpus (规则: MP, 深度: 6)
  LoG节点 41: bormpus is lirtpus (规则: MP, 深度: 6)
  LoG节点 42: lirtpus is vuxnpus (规则: CE, 深度: 6)
  LoG节点 43: vuxnpus is wuxcpus and nonppus (规则: CE, 深度: 6)
  LoG节点 44: wuxcpus is babgpus (规则: MP, 深度: 6)

============================================================
[后处理] 开始处理节点
============================================================
📊 初始状态:
   - 标准化节点数: 113
   - 初始条件数: 28
   - LoG图节点数: 45

📋 初始条件列表:
    1. lirtpus is vuxnpus and difvpus
    2. wuxcpus is kastpus
    3. mapgpus is poyjpus and nirgpus
    4. kutypus is bopbpus and xekspus
    5. zayspus is beszpus
    6. yuztpus is pudcpus and zosspus
    7. ditfpus is nicxpus
    8. mewxpus is bormpus
    9. rinxpus is mewxpus
   10. yafppus is jodbpus
   11. damjpus is vabppus and cekppus
   12. yafppus is jubkpus
   13. bopbpus is cunppus
   14. poyjpus is kutypus
   15. vomkpus is lirtpus
   16. sicxpus is damjpus and xebmpus
   17. vabppus is zayspus
   18. bormpus is vomkpus
   19. vuxnpus is wuxcpus and nonppus and gisnpus
   20. jubkpus is sicxpus
   21. cunppus is yuztpus and rewgpus
   22. sibfpus is mapgpus
   23. nicxpus is rinxpus and nilcpus
   24. pudcpus is ditfpus and becnpus
   25. kastpus is babgpus
   26. beszpus is diwkpus and yeglpus
   27. diwkpus is sibfpus and dojqpus and kohdpus
   28. x is yafppus and saqhpus

🔧 构建初始Statement列表...
✅ 初始Statement列表构建完成，包含 28 个前提节点

🔍 开始处理actual节点...

   节点 1: x is yafppus and saqhpus
      ↻ 重复节点，计数: 2

   节点 2: x is yafppus and saqhpus
      ↻ 重复节点，计数: 3

   节点 3: lirtpus is vuxnpus and difvpus
      ↻ 重复节点，计数: 2

   节点 4: wuxcpus is kastpus
      ↻ 重复节点，计数: 2

   节点 5: mapgpus is poyjpus and nirgpus
      ↻ 重复节点，计数: 2

   节点 6: kutypus is bopbpus and xekspus
      ↻ 重复节点，计数: 2

   节点 7: zayspus is beszpus
      ↻ 重复节点，计数: 2

   节点 8: yuztpus is pudcpus and zosspus
      ↻ 重复节点，计数: 2

   节点 9: ditfpus is nicxpus
      ↻ 重复节点，计数: 2

   节点 10: mewxpus is bormpus
      ↻ 重复节点，计数: 2

   节点 11: rinxpus is mewxpus
      ↻ 重复节点，计数: 2

   节点 12: yafppus is jodbpus
      ↻ 重复节点，计数: 2

   节点 13: damjpus is vabppus and cekppus
      ↻ 重复节点，计数: 2

   节点 14: yafppus is jubkpus
      ↻ 重复节点，计数: 2

   节点 15: yafppus is jodbpus
      ↻ 重复节点，计数: 3

   节点 16: yafppus is jodbpus and jubkpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CI
      📋 推理路径: CI规则: yafppus is jodbpus → yafppus is jubkpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: yafppus is jodbpus
  - 前提: yafppus is jubkpus
  ✓ 点亮LoG节点: yafppus is jubkpus and jodbpus
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 17: x is yafppus and saqhpus
      ↻ 重复节点，计数: 4

   节点 18: x is yafppus and saqhpus
      ↻ 重复节点，计数: 5

   节点 19: kastpus is babgpus
      ↻ 重复节点，计数: 2

   节点 20: kastpus is babgpus
      ↻ 重复节点，计数: 3

   节点 21: x is yafppus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is yafppus
      ✅ 验证成功 + LoG匹配

   节点 22: yafppus is jodbpus and jubkpus
      ↻ 重复节点，计数: 2

   节点 23: yafppus is jodbpus
      ↻ 重复节点，计数: 4

   节点 24: jubkpus is sicxpus
      ↻ 重复节点，计数: 2

   节点 25: jubkpus is sicxpus
      ↻ 重复节点，计数: 3

   节点 26: yafppus is jubkpus
      ↻ 重复节点，计数: 3

   节点 27: jubkpus is sicxpus
      ↻ 重复节点，计数: 4

   节点 28: sicxpus is damjpus and xebmpus
      ↻ 重复节点，计数: 2

   节点 29: damjpus is vabppus and cekppus
      ↻ 重复节点，计数: 3

   节点 30: vabppus is zayspus
      ↻ 重复节点，计数: 2

   节点 31: zayspus is beszpus
      ↻ 重复节点，计数: 3

   节点 32: beszpus is diwkpus and yeglpus
      ↻ 重复节点，计数: 2

   节点 33: diwkpus is sibfpus and dojqpus and kohdpus
      ↻ 重复节点，计数: 2

   节点 34: sibfpus is mapgpus
      ↻ 重复节点，计数: 2

   节点 35: mapgpus is poyjpus and nirgpus
      ↻ 重复节点，计数: 3

   节点 36: poyjpus is kutypus
      ↻ 重复节点，计数: 2

   节点 37: kutypus is bopbpus and xekspus
      ↻ 重复节点，计数: 3

   节点 38: bopbpus is cunppus
      ↻ 重复节点，计数: 2

   节点 39: cunppus is yuztpus and rewgpus
      ↻ 重复节点，计数: 2

   节点 40: yuztpus is pudcpus and zosspus
      ↻ 重复节点，计数: 3

   节点 41: pudcpus is ditfpus and becnpus
      ↻ 重复节点，计数: 2

   节点 42: ditfpus is nicxpus
      ↻ 重复节点，计数: 3

   节点 43: nicxpus is rinxpus and nilcpus
      ↻ 重复节点，计数: 2

   节点 44: rinxpus is mewxpus
      ↻ 重复节点，计数: 3

   节点 45: mewxpus is bormpus
      ↻ 重复节点，计数: 3

   节点 46: bormpus is vomkpus
      ↻ 重复节点，计数: 2

   节点 47: vomkpus is lirtpus
      ↻ 重复节点，计数: 2

   节点 48: lirtpus is vuxnpus and difvpus
      ↻ 重复节点，计数: 3

   节点 49: vuxnpus is wuxcpus and nonppus and gisnpus
      ↻ 重复节点，计数: 2

   节点 50: wuxcpus is kastpus
      ↻ 重复节点，计数: 3

   节点 51: kastpus is babgpus
      ↻ 重复节点，计数: 4

   节点 52: x is yafppus
      ↻ 重复节点，计数: 2

   节点 53: yafppus is jubkpus
      ↻ 重复节点，计数: 4

   节点 54: jubkpus is sicxpus
      ↻ 重复节点，计数: 5

   节点 55: sicxpus is kastpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP+CE
      📋 推理路径: MP+CE规则: sicxpus is damjpus → damjpus is kastpus
[后处理] 基于推理轨迹点亮节点，使用了 23 个前提条件:
  - 前提: sicxpus is damjpus and xebmpus
  - 前提: damjpus is vabppus and cekppus
  - 前提: vabppus is zayspus
  - 前提: zayspus is beszpus
  - 前提: beszpus is diwkpus and yeglpus
  - 前提: diwkpus is sibfpus and dojqpus and kohdpus
  - 前提: sibfpus is mapgpus
  - 前提: mapgpus is poyjpus and nirgpus
  - 前提: poyjpus is kutypus
  - 前提: kutypus is bopbpus and xekspus
  - 前提: bopbpus is cunppus
  - 前提: cunppus is yuztpus and rewgpus
  - 前提: yuztpus is pudcpus and zosspus
  - 前提: pudcpus is ditfpus and becnpus
  - 前提: ditfpus is nicxpus
  - 前提: nicxpus is rinxpus and nilcpus
  - 前提: rinxpus is mewxpus
  - 前提: mewxpus is bormpus
  - 前提: bormpus is vomkpus
  - 前提: vomkpus is lirtpus
  - 前提: lirtpus is vuxnpus and difvpus
  - 前提: vuxnpus is wuxcpus and nonppus and gisnpus
  - 前提: wuxcpus is kastpus
  ✓ 点亮LoG节点: beszpus is bopbpus
[子树点亮]     └─ 点亮依赖节点: beszpus is sibfpus (深度4)
[子树点亮]     └─ 点亮依赖节点: sibfpus is bopbpus (深度4)
[子树点亮]     └─ 点亮依赖节点: beszpus is sibfpus and dojqpus (深度5)
[子树点亮]     └─ 点亮依赖节点: sibfpus is poyjpus (深度5)
[子树点亮]     └─ 点亮依赖节点: poyjpus is bopbpus (深度5)
[子树点亮]     └─ 点亮依赖节点: beszpus is diwkpus (深度6)
[子树点亮]     └─ 点亮依赖节点: diwkpus is sibfpus and dojqpus (深度6)
[子树点亮]     └─ 点亮依赖节点: sibfpus is poyjpus and nirgpus (深度6)
[子树点亮]     └─ 点亮依赖节点: poyjpus is bopbpus and xekspus (深度6)
[后处理]   └─ 自动点亮依赖子树: 9 个节点
  ✓ 点亮LoG节点: bopbpus is lirtpus
[子树点亮]     └─ 点亮依赖节点: bopbpus is ditfpus (深度4)
[子树点亮]     └─ 点亮依赖节点: ditfpus is lirtpus (深度4)
[子树点亮]     └─ 点亮依赖节点: bopbpus is yuztpus (深度5)
[子树点亮]     └─ 点亮依赖节点: yuztpus is ditfpus (深度5)
[子树点亮]     └─ 点亮依赖节点: ditfpus is rinxpus (深度5)
[子树点亮]     └─ 点亮依赖节点: rinxpus is lirtpus (深度5)
[子树点亮]     └─ 点亮依赖节点: bopbpus is yuztpus and rewgpus (深度6)
[子树点亮]     └─ 点亮依赖节点: yuztpus is pudcpus (深度6)
[子树点亮]     └─ 点亮依赖节点: pudcpus is ditfpus (深度6)
[子树点亮]     └─ 点亮依赖节点: ditfpus is rinxpus and nilcpus (深度6)
[子树点亮]     └─ 点亮依赖节点: rinxpus is bormpus (深度6)
[子树点亮]     └─ 点亮依赖节点: bormpus is lirtpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 12 个节点
  ✓ 点亮LoG节点: lirtpus is wuxcpus
[子树点亮]     └─ 点亮依赖节点: lirtpus is wuxcpus and nonppus (深度5)
[子树点亮]     └─ 点亮依赖节点: lirtpus is vuxnpus (深度6)
[子树点亮]     └─ 点亮依赖节点: vuxnpus is wuxcpus and nonppus (深度6)
[后处理]   └─ 自动点亮依赖子树: 3 个节点
  ✓ 点亮LoG节点: damjpus is beszpus
[子树点亮]     └─ 点亮依赖节点: damjpus is vabppus (深度6)
[子树点亮]     └─ 点亮依赖节点: vabppus is beszpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 2 个节点
[后处理] 通过推理轨迹额外点亮了 4 个LoG节点

   节点 56: kastpus is babgpus
      ↻ 重复节点，计数: 5

   节点 57: yafppus is babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: yafppus is jubkpus → jubkpus is babgpus
[后处理] 基于推理轨迹点亮节点，使用了 4 个前提条件:
  - 前提: yafppus is jubkpus
  - 前提: jubkpus is sicxpus
  - 前提: sicxpus is kastpus
  - 前提: kastpus is babgpus

   节点 58: x is babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is yafppus → yafppus is babgpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: x is yafppus
  - 前提: yafppus is babgpus
  ✓ 点亮LoG节点: x is babgpus or babrpus or babspus
[子树点亮]     └─ 点亮依赖节点: x is bopbpus (深度2)
[子树点亮]     └─ 点亮依赖节点: bopbpus is babgpus or babrpus or babspus (深度2)
[子树点亮]     └─ 点亮依赖节点: x is beszpus (深度3)
[子树点亮]     └─ 点亮依赖节点: lirtpus is babgpus or babrpus or babspus (深度3)
[子树点亮]     └─ 点亮依赖节点: x is jubkpus (深度4)
[子树点亮]     └─ 点亮依赖节点: jubkpus is beszpus (深度4)
[子树点亮]     └─ 点亮依赖节点: wuxcpus is babgpus or babrpus or babspus (深度4)
[子树点亮]     └─ 点亮依赖节点: x is jubkpus and jodbpus (深度5)
[子树点亮]     └─ 点亮依赖节点: jubkpus is damjpus (深度5)
[子树点亮]     └─ 点亮依赖节点: wuxcpus is babgpus or babrpus (深度5)
[子树点亮]     └─ 点亮依赖节点: jubkpus is damjpus and xebmpus (深度6)
[子树点亮]     └─ 点亮依赖节点: wuxcpus is babgpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 12 个节点
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 59: x is babgpus
      ↻ 重复节点，计数: 2

   节点 60: x is babgpus or babrpus or babspus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 61: x is babgpus
      ↻ 重复节点，计数: 3

   节点 62: x is saqhpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: x is yafppus and saqhpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: x is yafppus and saqhpus

   节点 63: yafppus is babgpus
      ↻ 重复节点，计数: 2

   节点 64: yafppus is jubkpus
      ↻ 重复节点，计数: 5

   节点 65: jubkpus is sicxpus
      ↻ 重复节点，计数: 6

   节点 66: sicxpus is damjpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: sicxpus is damjpus and xebmpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: sicxpus is damjpus and xebmpus

   节点 67: damjpus is vabppus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 68: vabppus is zayspus
      ↻ 重复节点，计数: 3

   节点 69: zayspus is beszpus
      ↻ 重复节点，计数: 4

   节点 70: beszpus is diwkpus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 71: diwkpus is sibfpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: diwkpus is sibfpus and dojqpus and kohdpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: diwkpus is sibfpus and dojqpus and kohdpus

   节点 72: sibfpus is mapgpus
      ↻ 重复节点，计数: 3

   节点 73: mapgpus is poyjpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: mapgpus is poyjpus and nirgpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: mapgpus is poyjpus and nirgpus

   节点 74: poyjpus is kutypus
      ↻ 重复节点，计数: 3

   节点 75: kutypus is bopbpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: kutypus is bopbpus and xekspus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: kutypus is bopbpus and xekspus

   节点 76: bopbpus is cunppus
      ↻ 重复节点，计数: 3

   节点 77: cunppus is yuztpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: cunppus is yuztpus and rewgpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: cunppus is yuztpus and rewgpus

   节点 78: yuztpus is pudcpus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 79: pudcpus is ditfpus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 80: ditfpus is nicxpus
      ↻ 重复节点，计数: 4

   节点 81: nicxpus is rinxpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: nicxpus is rinxpus and nilcpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: nicxpus is rinxpus and nilcpus

   节点 82: rinxpus is mewxpus
      ↻ 重复节点，计数: 4

   节点 83: mewxpus is bormpus
      ↻ 重复节点，计数: 4

   节点 84: bormpus is vomkpus
      ↻ 重复节点，计数: 3

   节点 85: vomkpus is lirtpus
      ↻ 重复节点，计数: 3

   节点 86: lirtpus is vuxnpus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 87: vuxnpus is wuxcpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: vuxnpus is wuxcpus and nonppus and gisnpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: vuxnpus is wuxcpus and nonppus and gisnpus

   节点 88: wuxcpus is kastpus
      ↻ 重复节点，计数: 4

   节点 89: kastpus is babgpus
      ↻ 重复节点，计数: 6

   节点 90: yafppus is babgpus
      ↻ 重复节点，计数: 3

   节点 91: x is babgpus
      ↻ 重复节点，计数: 4

🔍 分析推理路径完整性...

============================================================
[后处理] 处理完成
============================================================
📈 处理统计:
   - 处理的actual节点: 91
   - 新增节点: 19
   - 更新已存在节点: 72
   - 点亮的LoG节点: 45

🎯 推理质量统计:
   - 完美推理: 19 (节点正确 + 路径正确)
   - 部分推理: 0 (节点正确 + 路径部分错误)
   - 无效推理: 0 (节点错误或路径完全错误)
[LoG分析] LoG图: 45节点, 28前提, 复杂度1-28

📊 === Statement列表分析 ===
📈 节点统计:
   - 总节点数: 47
   - 前提节点: 28
   - 推理节点: 19
   - 幻觉节点: 0
   - 点亮LoG节点: 45

✅ 推理节点详情:
   🟢 yafppus is jodbpus and jubkpus (出现2次, 质量:perfect)
   🟢 x is yafppus (出现2次, 质量:perfect)
   🟢 sicxpus is kastpus (出现1次, 质量:perfect)
   🟢 yafppus is babgpus (出现3次, 质量:perfect)
   🟢 x is babgpus (出现4次, 质量:perfect)
   🟢 x is babgpus or babrpus or babspus (出现1次, 质量:perfect)
   🟢 x is saqhpus (出现1次, 质量:perfect)
   🟢 sicxpus is damjpus (出现1次, 质量:perfect)
   🟢 damjpus is vabppus (出现1次, 质量:perfect)
   🟢 beszpus is diwkpus (出现1次, 质量:perfect)
   🟢 diwkpus is sibfpus (出现1次, 质量:perfect)
   🟢 mapgpus is poyjpus (出现1次, 质量:perfect)
   🟢 kutypus is bopbpus (出现1次, 质量:perfect)
   🟢 cunppus is yuztpus (出现1次, 质量:perfect)
   🟢 yuztpus is pudcpus (出现1次, 质量:perfect)
   🟢 pudcpus is ditfpus (出现1次, 质量:perfect)
   🟢 nicxpus is rinxpus (出现1次, 质量:perfect)
   🟢 lirtpus is vuxnpus (出现1次, 质量:perfect)
   🟢 vuxnpus is wuxcpus (出现1次, 质量:perfect)

🔥 点亮的LoG节点:
   - bopbpus is yuztpus and rewgpus
   - x is bopbpus
   - x is jubkpus and jodbpus
   - beszpus is sibfpus and dojqpus
   - lirtpus is wuxcpus and nonppus
   - jubkpus is damjpus and xebmpus
   - bopbpus is babgpus or babrpus or babspus
   - bopbpus is yuztpus
   - vabppus is beszpus
   - lirtpus is wuxcpus
   - beszpus is bopbpus
   - diwkpus is sibfpus and dojqpus
   - ditfpus is lirtpus
   - rinxpus is lirtpus
   - ditfpus is rinxpus and nilcpus
   - jubkpus is damjpus
   - sibfpus is poyjpus
   - vuxnpus is wuxcpus and nonppus
   - x is beszpus
   - jubkpus is beszpus
   - beszpus is sibfpus
   - yafppus is jubkpus and jodbpus
   - rinxpus is bormpus
   - poyjpus is bopbpus
   - wuxcpus is babgpus or babrpus or babspus
   - wuxcpus is babgpus
   - x is yafppus
   - sibfpus is bopbpus
   - sibfpus is poyjpus and nirgpus
   - damjpus is vabppus
   - lirtpus is babgpus or babrpus or babspus
   - ditfpus is rinxpus
   - x is babgpus or babrpus or babspus
   - bopbpus is ditfpus
   - bormpus is lirtpus
   - pudcpus is ditfpus
   - yuztpus is ditfpus
   - yuztpus is pudcpus
   - wuxcpus is babgpus or babrpus
   - x is jubkpus
   - lirtpus is vuxnpus
   - beszpus is diwkpus
   - damjpus is beszpus
   - poyjpus is bopbpus and xekspus
   - bopbpus is lirtpus

============================================================
📊 计算评估指标
============================================================

🎯 计算Coverage指标...
   深度Coverage: 6/6 = 100.00%
   最深点亮节点: x is babgpus or babrpus or babspus (第6层)
   节点Coverage: 45/45 = 100.00%
   前提条件Coverage: 28/28 = 100.00%
   各推理层点亮比例:
     第1层: 18/18 = 100.00%
     第2层: 12/12 = 100.00%
     第3层: 8/8 = 100.00%
     第4层: 4/4 = 100.00%
     第5层: 2/2 = 100.00%
     第6层: 1/1 = 100.00%

🎯 计算Precision指标...
   Error Rate: 0/19 = 0.00%
   可推导节点: 19/19
   Strict Error Rate: 0/19 = 0.00%
   严格有效节点: 19/19

   详细分析:
     完美推理: 19 (100.00%)
     部分推理: 0 (0.00%)
     无效推理: 0 (0.00%)

================================================================================
处理记录 30/50
================================================================================
记录索引: 29
问题状态: incorrect
📁 从缓存加载提取结果: evaluation_results.LoG_6.deepseek-reasoner_record_29.json
✅ 使用缓存结果:
   - 句子数: 182
   - 提取的语句数: 267
   - 初始条件数: 10

=== Statement提取完成 ===
总句子数: 182
成功提取: 182
失败提取: 0
总statements数: 267

=== 开始清洗Statement格式 ===
原始statements数: 267
清洗后statements数: 193
过滤掉的statements数: 74
清洗后的statements:
  1. [actual] wacdpus is babgpus
  2. [actual] lejspus is lizwpus and yomlpus
  3. [actual] bolbpus is kidcpus
  4. [actual] wacdpus is bolbpus
  5. [actual] wacdpus is bilfpus
  6. [actual] x is mergpus
  7. [actual] lejspus is yusmpus and caglpus
  8. [actual] yusmpus is tuqwpus
  9. [actual] tuqwpus is wacdpus and fumwpus
  10. [actual] mergpus is lejspus and jucbpus
  11. [planning] x is babgpus
  12. [actual] x is mergpus
  13. [planning] x is babgpus
  14. [planning] x is mergpus
  15. [planning] x is babgpus
  16. [actual] mergpus is lejspus and jucbpus
  17. [actual] mergpus is lejspus and jucbpus
  18. [planning] lejspus is mergpus
  19. [actual] mergpus is lejspus and jucbpus
  20. [planning] mergpus is lejspus and jucbpus
  21. [planning] lejspus is mergpus
  22. [planning] jucbpus is mergpus
  23. [planning] mergpus is lejspus
  24. [actual] wacdpus is babgpus
  25. [actual] wacdpus is bolbpus
  26. [actual] mergpus is lejspus and jucbpus
  27. [actual] mergpus is composed of lejspus and jucbpus
  28. [planning] lejspus is categories
  29. [planning] jucbpus is categories
  30. [planning] mergpus is categories
  31. [actual] mergpus is lejspus and jucbpus
  32. [actual] mergpus is lejspus
  33. [actual] mergpus is jucbpus
  34. [planning] mergpus is both lejspus and jucbpus
  35. [actual] lejspus is lizwpus and yomlpus
  36. [actual] lejspus is yusmpus and caglpus
  37. [actual] yusmpus is tuqwpus
  38. [actual] yusmpus is tuqwpus
  39. [actual] tuqwpus is wacdpus and fumwpus
  40. [actual] tuqwpus is wacdpus
  41. [actual] tuqwpus is fumwpus
  42. [planning] tuqwpus is wacdpus
  43. [planning] tuqwpus is fumwpus
  44. [actual] wacdpus is bolbpus
  45. [actual] wacdpus is bolbpus
  46. [actual] bolbpus is kidcpus
  47. [actual] bolbpus is kidcpus
  48. [actual] wacdpus is babgpus
  49. [actual] wacdpus is babgpus
  50. [actual] wacdpus is bilfpus
  51. [planning] wacdpus is bilfpus
  52. [actual] x is mergpus
  53. [planning] x is babgpus
  54. [actual] x is mergpus
  55. [planning] x is babgpus
  56. [planning] x is babgpus
  57. [actual] wacdpus is babgpus
  58. [planning] wacdpus is babgpus
  59. [planning] wacdpus is babgpus
  60. [actual] lejspus is lizwpus and yomlpus
  61. [actual] mergpus is lejspus and jucbpus
  62. [actual] x is mergpus
  63. [actual] x is an element of mergpus
  64. [planning] x is babgpus
  65. [planning] x is babgpus
  66. [planning] mergpus is babgpus
  67. [actual] wacdpus is babgpus
  68. [actual] lejspus is lizwpus and yomlpus
  69. [actual] bolbpus is kidcpus
  70. [actual] wacdpus is bolbpus
  71. [actual] wacdpus is bilfpus
  72. [actual] x is mergpus
  73. [actual] lejspus is yusmpus and caglpus
  74. [actual] yusmpus is tuqwpus
  75. [actual] tuqwpus is wacdpus
  76. [actual] tuqwpus is fumwpus
  77. [actual] mergpus is lejspus
  78. [actual] mergpus is jucbpus
  79. [planning] x is babgpus
  80. [actual] x is mergpus
  81. [actual] mergpus is lejspus
  82. [planning] x is lejspus
  83. [planning] x is mergpus
  84. [planning] mergpus is lejspus
  85. [planning] x is lejspus
  86. [planning] lejspus is a set that contains mergpus as an element
  87. [planning] x is an element of mergpus
  88. [actual] mergpus is an element of lejspus
  89. [planning] lejspus is a set that contains mergpus as an element
  90. [planning] x is mergpus
  91. [planning] x is at a lower level
  92. [actual] mergpus is the room
  93. [actual] x is the box
  94. [actual] x is the room
  95. [planning] x is the box
  96. [planning] x is the room
  97. [actual] mergpus is a set
  98. [actual] x is an element of that set
  99. [planning] x is lejspus
  100. [planning] x is babgpus
  101. [planning] mergpus is babgpus
  102. [planning] x is mergpus
  103. [actual] wacdpus is babgpus
  104. [planning] x is babgpus
  105. [planning] x is wacdpus or something
  106. [actual] mergpus is lejspus
  107. [actual] mergpus is jucbpus
  108. [actual] lejspus is yusmpus and caglpus
  109. [actual] yusmpus is tuqwpus
  110. [actual] tuqwpus is wacdpus
  111. [actual] tuqwpus is fumwpus
  112. [actual] wacdpus is bolbpus
  113. [actual] wacdpus is babgpus
  114. [actual] mergpus is lejspus
  115. [actual] lejspus is yusmpus
  116. [actual] mergpus is lejspus
  117. [actual] lejspus is yusmpus
  118. [actual] yusmpus is tuqwpus
  119. [actual] tuqwpus is wacdpus
  120. [planning] yusmpus is wacdpus
  121. [actual] x is mergpus
  122. [planning] mergpus is babgpus
  123. [planning] x is babgpus
  124. [actual] x is babgpus
  125. [actual] x is something that is babgpus
  126. [actual] mergpus is babgpus
  127. [actual] x is mergpus
  128. [planning] x is babgpus
  129. [planning] x is babgpus
  130. [planning] x is babgpus
  131. [planning] mergpus is a subset of babgpus
  132. [planning] x is babgpus
  133. [actual] lejspus is lizwpus
  134. [actual] x is babgpus directly
  135. [actual] x is babgpus through a chain of membership
  136. [planning] x is babgpus
  137. [planning] x is babgpus
  138. [planning] x is babgpus
  139. [actual] x is mergpus
  140. [actual] mergpus is lejspus and jucbpus
  141. [actual] mergpus is lejspus
  142. [actual] mergpus is jucbpus
  143. [actual] wacdpus is mentioned in points 1,4,5,9
  144. [actual] tuqwpus is wacdpus and fumwpus
  145. [actual] tuqwpus is a member of wacdpus
  146. [actual] yusmpus is tuqwpus
  147. [actual] lejspus is yusmpus and caglpus
  148. [actual] mergpus is lejspus
  149. [actual] wacdpus is babgpus
  150. [actual] wacdpus is a category
  151. [actual] tuqwpus is wacdpus
  152. [actual] tuqwpus is wacdpus
  153. [actual] wacdpus is babgpus
  154. [actual] wacdpus is babgpus
  155. [planning] tuqwpus is babgpus
  156. [actual] wacdpus is a member of babgpus
  157. [actual] tuqwpus is an element of wacdpus
  158. [actual] babgpus is a club
  159. [actual] wacdpus is a member of the club
  160. [actual] tuqwpus is a friend of wacdpus
  161. [planning] tuqwpus is a member of the club
  162. [planning] tuqwpus is a member of the club unless the club allows friends
  163. [actual] wacdpus is bolbpus
  164. [actual] bolbpus is kidcpus
  165. [actual] tuqwpus is wacdpus and fumwpus
  166. [actual] tuqwpus is wacdpus
  167. [actual] wacdpus is babgpus
  168. [actual] tuqwpus is wacdpus
  169. [planning] tuqwpus is babgpus
  170. [planning] babgpus is wacdpus
  171. [actual] yusmpus is tuqwpus
  172. [actual] lejspus is yusmpus
  173. [actual] mergpus is lejspus
  174. [actual] x is mergpus
  175. [actual] x is mergpus
  176. [actual] mergpus is lejspus
  177. [actual] lejspus is yusmpus
  178. [actual] yusmpus is tuqwpus
  179. [actual] tuqwpus is wacdpus
  180. [actual] wacdpus is babgpus
  181. [actual] wacdpus is a set that contains tuqwpus
  182. [actual] wacdpus is babgpus
  183. [planning] x is an element of an element of an element of wacdpus
  184. [planning] x is mergpus
  185. [planning] x is lejspus
  186. [actual] tuqwpus is wacdpus
  187. [actual] x is deep inside
  188. [planning] x is babgpus
  189. [actual] mergpus is lejspus
  190. [actual] lejspus is yusmpus
  191. [actual] tuqwpus is wacdpus
  192. [actual] wacdpus is babgpus
  193. [planning] x is babgpus

=== 开始标准化和解析节点 ===
清洗后statements数: 193
标准化后节点数: 157
过滤掉的无效实体数: 36
标准化后的节点:
  1. [actual] wacdpus → babgpus (原始: wacdpus is babgpus)
  2. [actual] lejspus → lizwpus and yomlpus (原始: lejspus is lizwpus and yomlpus)
  3. [actual] bolbpus → kidcpus (原始: bolbpus is kidcpus)
  4. [actual] wacdpus → bolbpus (原始: wacdpus is bolbpus)
  5. [actual] wacdpus → bilfpus (原始: wacdpus is bilfpus)
  6. [actual] x → mergpus (原始: x is mergpus)
  7. [actual] lejspus → yusmpus and caglpus (原始: lejspus is yusmpus and caglpus)
  8. [actual] yusmpus → tuqwpus (原始: yusmpus is tuqwpus)
  9. [actual] tuqwpus → wacdpus and fumwpus (原始: tuqwpus is wacdpus and fumwpus)
  10. [actual] mergpus → lejspus and jucbpus (原始: mergpus is lejspus and jucbpus)
  11. [planning] x → babgpus (原始: x is babgpus)
  12. [actual] x → mergpus (原始: x is mergpus)
  13. [planning] x → babgpus (原始: x is babgpus)
  14. [planning] x → mergpus (原始: x is mergpus)
  15. [planning] x → babgpus (原始: x is babgpus)
  16. [actual] mergpus → lejspus and jucbpus (原始: mergpus is lejspus and jucbpus)
  17. [actual] mergpus → lejspus and jucbpus (原始: mergpus is lejspus and jucbpus)
  18. [planning] lejspus → mergpus (原始: lejspus is mergpus)
  19. [actual] mergpus → lejspus and jucbpus (原始: mergpus is lejspus and jucbpus)
  20. [planning] mergpus → lejspus and jucbpus (原始: mergpus is lejspus and jucbpus)
  21. [planning] lejspus → mergpus (原始: lejspus is mergpus)
  22. [planning] jucbpus → mergpus (原始: jucbpus is mergpus)
  23. [planning] mergpus → lejspus (原始: mergpus is lejspus)
  24. [actual] wacdpus → babgpus (原始: wacdpus is babgpus)
  25. [actual] wacdpus → bolbpus (原始: wacdpus is bolbpus)
  26. [actual] mergpus → lejspus and jucbpus (原始: mergpus is lejspus and jucbpus)
  27. [actual] mergpus → lejspus and jucbpus (原始: mergpus is lejspus and jucbpus)
  28. [actual] mergpus → lejspus (原始: mergpus is lejspus)
  29. [actual] mergpus → jucbpus (原始: mergpus is jucbpus)
  30. [actual] lejspus → lizwpus and yomlpus (原始: lejspus is lizwpus and yomlpus)
  31. [actual] lejspus → yusmpus and caglpus (原始: lejspus is yusmpus and caglpus)
  32. [actual] yusmpus → tuqwpus (原始: yusmpus is tuqwpus)
  33. [actual] yusmpus → tuqwpus (原始: yusmpus is tuqwpus)
  34. [actual] tuqwpus → wacdpus and fumwpus (原始: tuqwpus is wacdpus and fumwpus)
  35. [actual] tuqwpus → wacdpus (原始: tuqwpus is wacdpus)
  36. [actual] tuqwpus → fumwpus (原始: tuqwpus is fumwpus)
  37. [planning] tuqwpus → wacdpus (原始: tuqwpus is wacdpus)
  38. [planning] tuqwpus → fumwpus (原始: tuqwpus is fumwpus)
  39. [actual] wacdpus → bolbpus (原始: wacdpus is bolbpus)
  40. [actual] wacdpus → bolbpus (原始: wacdpus is bolbpus)
  41. [actual] bolbpus → kidcpus (原始: bolbpus is kidcpus)
  42. [actual] bolbpus → kidcpus (原始: bolbpus is kidcpus)
  43. [actual] wacdpus → babgpus (原始: wacdpus is babgpus)
  44. [actual] wacdpus → babgpus (原始: wacdpus is babgpus)
  45. [actual] wacdpus → bilfpus (原始: wacdpus is bilfpus)
  46. [planning] wacdpus → bilfpus (原始: wacdpus is bilfpus)
  47. [actual] x → mergpus (原始: x is mergpus)
  48. [planning] x → babgpus (原始: x is babgpus)
  49. [actual] x → mergpus (原始: x is mergpus)
  50. [planning] x → babgpus (原始: x is babgpus)
  51. [planning] x → babgpus (原始: x is babgpus)
  52. [actual] wacdpus → babgpus (原始: wacdpus is babgpus)
  53. [planning] wacdpus → babgpus (原始: wacdpus is babgpus)
  54. [planning] wacdpus → babgpus (原始: wacdpus is babgpus)
  55. [actual] lejspus → lizwpus and yomlpus (原始: lejspus is lizwpus and yomlpus)
  56. [actual] mergpus → lejspus and jucbpus (原始: mergpus is lejspus and jucbpus)
  57. [actual] x → mergpus (原始: x is mergpus)
  58. [planning] x → babgpus (原始: x is babgpus)
  59. [planning] x → babgpus (原始: x is babgpus)
  60. [planning] mergpus → babgpus (原始: mergpus is babgpus)
  61. [actual] wacdpus → babgpus (原始: wacdpus is babgpus)
  62. [actual] lejspus → lizwpus and yomlpus (原始: lejspus is lizwpus and yomlpus)
  63. [actual] bolbpus → kidcpus (原始: bolbpus is kidcpus)
  64. [actual] wacdpus → bolbpus (原始: wacdpus is bolbpus)
  65. [actual] wacdpus → bilfpus (原始: wacdpus is bilfpus)
  66. [actual] x → mergpus (原始: x is mergpus)
  67. [actual] lejspus → yusmpus and caglpus (原始: lejspus is yusmpus and caglpus)
  68. [actual] yusmpus → tuqwpus (原始: yusmpus is tuqwpus)
  69. [actual] tuqwpus → wacdpus (原始: tuqwpus is wacdpus)
  70. [actual] tuqwpus → fumwpus (原始: tuqwpus is fumwpus)
  71. [actual] mergpus → lejspus (原始: mergpus is lejspus)
  72. [actual] mergpus → jucbpus (原始: mergpus is jucbpus)
  73. [planning] x → babgpus (原始: x is babgpus)
  74. [actual] x → mergpus (原始: x is mergpus)
  75. [actual] mergpus → lejspus (原始: mergpus is lejspus)
  76. [planning] x → lejspus (原始: x is lejspus)
  77. [planning] x → mergpus (原始: x is mergpus)
  78. [planning] mergpus → lejspus (原始: mergpus is lejspus)
  79. [planning] x → lejspus (原始: x is lejspus)
  80. [planning] x → mergpus (原始: x is mergpus)
  81. [planning] x → lejspus (原始: x is lejspus)
  82. [planning] x → babgpus (原始: x is babgpus)
  83. [planning] mergpus → babgpus (原始: mergpus is babgpus)
  84. [planning] x → mergpus (原始: x is mergpus)
  85. [actual] wacdpus → babgpus (原始: wacdpus is babgpus)
  86. [planning] x → babgpus (原始: x is babgpus)
  87. [actual] mergpus → lejspus (原始: mergpus is lejspus)
  88. [actual] mergpus → jucbpus (原始: mergpus is jucbpus)
  89. [actual] lejspus → yusmpus and caglpus (原始: lejspus is yusmpus and caglpus)
  90. [actual] yusmpus → tuqwpus (原始: yusmpus is tuqwpus)
  91. [actual] tuqwpus → wacdpus (原始: tuqwpus is wacdpus)
  92. [actual] tuqwpus → fumwpus (原始: tuqwpus is fumwpus)
  93. [actual] wacdpus → bolbpus (原始: wacdpus is bolbpus)
  94. [actual] wacdpus → babgpus (原始: wacdpus is babgpus)
  95. [actual] mergpus → lejspus (原始: mergpus is lejspus)
  96. [actual] lejspus → yusmpus (原始: lejspus is yusmpus)
  97. [actual] mergpus → lejspus (原始: mergpus is lejspus)
  98. [actual] lejspus → yusmpus (原始: lejspus is yusmpus)
  99. [actual] yusmpus → tuqwpus (原始: yusmpus is tuqwpus)
  100. [actual] tuqwpus → wacdpus (原始: tuqwpus is wacdpus)
  101. [planning] yusmpus → wacdpus (原始: yusmpus is wacdpus)
  102. [actual] x → mergpus (原始: x is mergpus)
  103. [planning] mergpus → babgpus (原始: mergpus is babgpus)
  104. [planning] x → babgpus (原始: x is babgpus)
  105. [actual] x → babgpus (原始: x is babgpus)
  106. [actual] mergpus → babgpus (原始: mergpus is babgpus)
  107. [actual] x → mergpus (原始: x is mergpus)
  108. [planning] x → babgpus (原始: x is babgpus)
  109. [planning] x → babgpus (原始: x is babgpus)
  110. [planning] x → babgpus (原始: x is babgpus)
  111. [planning] x → babgpus (原始: x is babgpus)
  112. [actual] lejspus → lizwpus (原始: lejspus is lizwpus)
  113. [planning] x → babgpus (原始: x is babgpus)
  114. [planning] x → babgpus (原始: x is babgpus)
  115. [planning] x → babgpus (原始: x is babgpus)
  116. [actual] x → mergpus (原始: x is mergpus)
  117. [actual] mergpus → lejspus and jucbpus (原始: mergpus is lejspus and jucbpus)
  118. [actual] mergpus → lejspus (原始: mergpus is lejspus)
  119. [actual] mergpus → jucbpus (原始: mergpus is jucbpus)
  120. [actual] tuqwpus → wacdpus and fumwpus (原始: tuqwpus is wacdpus and fumwpus)
  121. [actual] yusmpus → tuqwpus (原始: yusmpus is tuqwpus)
  122. [actual] lejspus → yusmpus and caglpus (原始: lejspus is yusmpus and caglpus)
  123. [actual] mergpus → lejspus (原始: mergpus is lejspus)
  124. [actual] wacdpus → babgpus (原始: wacdpus is babgpus)
  125. [actual] tuqwpus → wacdpus (原始: tuqwpus is wacdpus)
  126. [actual] tuqwpus → wacdpus (原始: tuqwpus is wacdpus)
  127. [actual] wacdpus → babgpus (原始: wacdpus is babgpus)
  128. [actual] wacdpus → babgpus (原始: wacdpus is babgpus)
  129. [planning] tuqwpus → babgpus (原始: tuqwpus is babgpus)
  130. [actual] wacdpus → bolbpus (原始: wacdpus is bolbpus)
  131. [actual] bolbpus → kidcpus (原始: bolbpus is kidcpus)
  132. [actual] tuqwpus → wacdpus and fumwpus (原始: tuqwpus is wacdpus and fumwpus)
  133. [actual] tuqwpus → wacdpus (原始: tuqwpus is wacdpus)
  134. [actual] wacdpus → babgpus (原始: wacdpus is babgpus)
  135. [actual] tuqwpus → wacdpus (原始: tuqwpus is wacdpus)
  136. [planning] tuqwpus → babgpus (原始: tuqwpus is babgpus)
  137. [planning] babgpus → wacdpus (原始: babgpus is wacdpus)
  138. [actual] yusmpus → tuqwpus (原始: yusmpus is tuqwpus)
  139. [actual] lejspus → yusmpus (原始: lejspus is yusmpus)
  140. [actual] mergpus → lejspus (原始: mergpus is lejspus)
  141. [actual] x → mergpus (原始: x is mergpus)
  142. [actual] x → mergpus (原始: x is mergpus)
  143. [actual] mergpus → lejspus (原始: mergpus is lejspus)
  144. [actual] lejspus → yusmpus (原始: lejspus is yusmpus)
  145. [actual] yusmpus → tuqwpus (原始: yusmpus is tuqwpus)
  146. [actual] tuqwpus → wacdpus (原始: tuqwpus is wacdpus)
  147. [actual] wacdpus → babgpus (原始: wacdpus is babgpus)
  148. [actual] wacdpus → babgpus (原始: wacdpus is babgpus)
  149. [planning] x → mergpus (原始: x is mergpus)
  150. [planning] x → lejspus (原始: x is lejspus)
  151. [actual] tuqwpus → wacdpus (原始: tuqwpus is wacdpus)
  152. [planning] x → babgpus (原始: x is babgpus)
  153. [actual] mergpus → lejspus (原始: mergpus is lejspus)
  154. [actual] lejspus → yusmpus (原始: lejspus is yusmpus)
  155. [actual] tuqwpus → wacdpus (原始: tuqwpus is wacdpus)
  156. [actual] wacdpus → babgpus (原始: wacdpus is babgpus)
  157. [planning] x → babgpus (原始: x is babgpus)

开始新的后处理...
[后处理] 从LoG数据文件中获取到图数据，节点数: 16
[后处理] 加载LoG图，包含 16 个节点
  LoG节点 0: x is babgpus (规则: CE, 深度: 1)
  LoG节点 1: x is babgpus and bilfpus (规则: MP, 深度: 2)
  LoG节点 2: x is yusmpus (规则: CE, 深度: 3)
  LoG节点 3: yusmpus is babgpus and bilfpus (规则: CE, 深度: 3)
  LoG节点 4: x is yusmpus and lizwpus (规则: MP, 深度: 4)
  LoG节点 5: yusmpus is babgpus and bilfpus and kidcpus (规则: MP, 深度: 4)
  LoG节点 6: x is lejspus (规则: CE, 深度: 5)
  LoG节点 7: lejspus is yusmpus and lizwpus (规则: CI, 深度: 5)
  LoG节点 8: yusmpus is wacdpus (规则: CE, 深度: 5)
  LoG节点 9: wacdpus is babgpus and bilfpus and kidcpus (规则: CI, 深度: 5)
  LoG节点 10: x is lejspus and jucbpus (规则: MP, 深度: 6)
  LoG节点 11: lejspus is yusmpus (规则: CE, 深度: 6)
  LoG节点 12: lejspus is lizwpus (规则: CE, 深度: 6)
  LoG节点 13: yusmpus is wacdpus and fumwpus (规则: MP, 深度: 6)
  LoG节点 14: wacdpus is babgpus and bilfpus (规则: CI, 深度: 6)
  LoG节点 15: wacdpus is kidcpus (规则: MP, 深度: 6)

============================================================
[后处理] 开始处理节点
============================================================
📊 初始状态:
   - 标准化节点数: 157
   - 初始条件数: 10
   - LoG图节点数: 16

📋 初始条件列表:
    1. wacdpus is babgpus
    2. lejspus is lizwpus and yomlpus
    3. bolbpus is kidcpus
    4. wacdpus is bolbpus
    5. wacdpus is bilfpus
    6. x is mergpus
    7. lejspus is yusmpus and caglpus
    8. yusmpus is tuqwpus
    9. tuqwpus is wacdpus and fumwpus
   10. mergpus is lejspus and jucbpus

🔧 构建初始Statement列表...
✅ 初始Statement列表构建完成，包含 10 个前提节点

🔍 开始处理actual节点...

   节点 1: wacdpus is babgpus
      ↻ 重复节点，计数: 2

   节点 2: lejspus is lizwpus and yomlpus
      ↻ 重复节点，计数: 2

   节点 3: bolbpus is kidcpus
      ↻ 重复节点，计数: 2

   节点 4: wacdpus is bolbpus
      ↻ 重复节点，计数: 2

   节点 5: wacdpus is bilfpus
      ↻ 重复节点，计数: 2

   节点 6: x is mergpus
      ↻ 重复节点，计数: 2

   节点 7: lejspus is yusmpus and caglpus
      ↻ 重复节点，计数: 2

   节点 8: yusmpus is tuqwpus
      ↻ 重复节点，计数: 2

   节点 9: tuqwpus is wacdpus and fumwpus
      ↻ 重复节点，计数: 2

   节点 10: mergpus is lejspus and jucbpus
      ↻ 重复节点，计数: 2

   节点 11: x is mergpus
      ↻ 重复节点，计数: 3

   节点 12: mergpus is lejspus and jucbpus
      ↻ 重复节点，计数: 3

   节点 13: mergpus is lejspus and jucbpus
      ↻ 重复节点，计数: 4

   节点 14: mergpus is lejspus and jucbpus
      ↻ 重复节点，计数: 5

   节点 15: wacdpus is babgpus
      ↻ 重复节点，计数: 3

   节点 16: wacdpus is bolbpus
      ↻ 重复节点，计数: 3

   节点 17: mergpus is lejspus and jucbpus
      ↻ 重复节点，计数: 6

   节点 18: mergpus is lejspus and jucbpus
      ↻ 重复节点，计数: 7

   节点 19: mergpus is lejspus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: mergpus is lejspus and jucbpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: mergpus is lejspus and jucbpus

   节点 20: mergpus is jucbpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: mergpus is lejspus and jucbpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: mergpus is lejspus and jucbpus

   节点 21: lejspus is lizwpus and yomlpus
      ↻ 重复节点，计数: 3

   节点 22: lejspus is yusmpus and caglpus
      ↻ 重复节点，计数: 3

   节点 23: yusmpus is tuqwpus
      ↻ 重复节点，计数: 3

   节点 24: yusmpus is tuqwpus
      ↻ 重复节点，计数: 4

   节点 25: tuqwpus is wacdpus and fumwpus
      ↻ 重复节点，计数: 3

   节点 26: tuqwpus is wacdpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: tuqwpus is wacdpus and fumwpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: tuqwpus is wacdpus and fumwpus

   节点 27: tuqwpus is fumwpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: tuqwpus is wacdpus and fumwpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: tuqwpus is wacdpus and fumwpus

   节点 28: wacdpus is bolbpus
      ↻ 重复节点，计数: 4

   节点 29: wacdpus is bolbpus
      ↻ 重复节点，计数: 5

   节点 30: bolbpus is kidcpus
      ↻ 重复节点，计数: 3

   节点 31: bolbpus is kidcpus
      ↻ 重复节点，计数: 4

   节点 32: wacdpus is babgpus
      ↻ 重复节点，计数: 4

   节点 33: wacdpus is babgpus
      ↻ 重复节点，计数: 5

   节点 34: wacdpus is bilfpus
      ↻ 重复节点，计数: 3

   节点 35: x is mergpus
      ↻ 重复节点，计数: 4

   节点 36: x is mergpus
      ↻ 重复节点，计数: 5

   节点 37: wacdpus is babgpus
      ↻ 重复节点，计数: 6

   节点 38: lejspus is lizwpus and yomlpus
      ↻ 重复节点，计数: 4

   节点 39: mergpus is lejspus and jucbpus
      ↻ 重复节点，计数: 8

   节点 40: x is mergpus
      ↻ 重复节点，计数: 6

   节点 41: wacdpus is babgpus
      ↻ 重复节点，计数: 7

   节点 42: lejspus is lizwpus and yomlpus
      ↻ 重复节点，计数: 5

   节点 43: bolbpus is kidcpus
      ↻ 重复节点，计数: 5

   节点 44: wacdpus is bolbpus
      ↻ 重复节点，计数: 6

   节点 45: wacdpus is bilfpus
      ↻ 重复节点，计数: 4

   节点 46: x is mergpus
      ↻ 重复节点，计数: 7

   节点 47: lejspus is yusmpus and caglpus
      ↻ 重复节点，计数: 4

   节点 48: yusmpus is tuqwpus
      ↻ 重复节点，计数: 5

   节点 49: tuqwpus is wacdpus
      ↻ 重复节点，计数: 2

   节点 50: tuqwpus is fumwpus
      ↻ 重复节点，计数: 2

   节点 51: mergpus is lejspus
      ↻ 重复节点，计数: 2

   节点 52: mergpus is jucbpus
      ↻ 重复节点，计数: 2

   节点 53: x is mergpus
      ↻ 重复节点，计数: 8

   节点 54: mergpus is lejspus
      ↻ 重复节点，计数: 3

   节点 55: wacdpus is babgpus
      ↻ 重复节点，计数: 8

   节点 56: mergpus is lejspus
      ↻ 重复节点，计数: 4

   节点 57: mergpus is jucbpus
      ↻ 重复节点，计数: 3

   节点 58: lejspus is yusmpus and caglpus
      ↻ 重复节点，计数: 5

   节点 59: yusmpus is tuqwpus
      ↻ 重复节点，计数: 6

   节点 60: tuqwpus is wacdpus
      ↻ 重复节点，计数: 3

   节点 61: tuqwpus is fumwpus
      ↻ 重复节点，计数: 3

   节点 62: wacdpus is bolbpus
      ↻ 重复节点，计数: 7

   节点 63: wacdpus is babgpus
      ↻ 重复节点，计数: 9

   节点 64: mergpus is lejspus
      ↻ 重复节点，计数: 5

   节点 65: lejspus is yusmpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: lejspus is yusmpus
      ✅ 验证成功 + LoG匹配

   节点 66: mergpus is lejspus
      ↻ 重复节点，计数: 6

   节点 67: lejspus is yusmpus
      ↻ 重复节点，计数: 2

   节点 68: yusmpus is tuqwpus
      ↻ 重复节点，计数: 7

   节点 69: tuqwpus is wacdpus
      ↻ 重复节点，计数: 4

   节点 70: x is mergpus
      ↻ 重复节点，计数: 9

   节点 71: x is babgpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is babgpus
[子树点亮]     └─ 点亮依赖节点: x is babgpus and bilfpus (深度2)
[子树点亮]     └─ 点亮依赖节点: x is yusmpus (深度3)
[子树点亮]     └─ 点亮依赖节点: yusmpus is babgpus and bilfpus (深度3)
[子树点亮]     └─ 点亮依赖节点: x is yusmpus and lizwpus (深度4)
[子树点亮]     └─ 点亮依赖节点: yusmpus is babgpus and bilfpus and kidcpus (深度4)
[子树点亮]     └─ 点亮依赖节点: x is lejspus (深度5)
[子树点亮]     └─ 点亮依赖节点: lejspus is yusmpus and lizwpus (深度5)
[子树点亮]     └─ 点亮依赖节点: yusmpus is wacdpus (深度5)
[子树点亮]     └─ 点亮依赖节点: wacdpus is babgpus and bilfpus and kidcpus (深度5)
[子树点亮]     └─ 点亮依赖节点: x is lejspus and jucbpus (深度6)
[子树点亮]     └─ 点亮依赖节点: lejspus is lizwpus (深度6)
[子树点亮]     └─ 点亮依赖节点: yusmpus is wacdpus and fumwpus (深度6)
[子树点亮]     └─ 点亮依赖节点: wacdpus is babgpus and bilfpus (深度6)
[子树点亮]     └─ 点亮依赖节点: wacdpus is kidcpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 14 个节点
      ✅ 验证成功 + LoG匹配

   节点 72: mergpus is babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: mergpus is lejspus → lejspus is babgpus
[后处理] 基于推理轨迹点亮节点，使用了 5 个前提条件:
  - 前提: mergpus is lejspus
  - 前提: lejspus is yusmpus
  - 前提: yusmpus is tuqwpus
  - 前提: tuqwpus is wacdpus
  - 前提: wacdpus is babgpus

   节点 73: x is mergpus
      ↻ 重复节点，计数: 10

   节点 74: lejspus is lizwpus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 75: x is mergpus
      ↻ 重复节点，计数: 11

   节点 76: mergpus is lejspus and jucbpus
      ↻ 重复节点，计数: 9

   节点 77: mergpus is lejspus
      ↻ 重复节点，计数: 7

   节点 78: mergpus is jucbpus
      ↻ 重复节点，计数: 4

   节点 79: tuqwpus is wacdpus and fumwpus
      ↻ 重复节点，计数: 4

   节点 80: yusmpus is tuqwpus
      ↻ 重复节点，计数: 8

   节点 81: lejspus is yusmpus and caglpus
      ↻ 重复节点，计数: 6

   节点 82: mergpus is lejspus
      ↻ 重复节点，计数: 8

   节点 83: wacdpus is babgpus
      ↻ 重复节点，计数: 10

   节点 84: tuqwpus is wacdpus
      ↻ 重复节点，计数: 5

   节点 85: tuqwpus is wacdpus
      ↻ 重复节点，计数: 6

   节点 86: wacdpus is babgpus
      ↻ 重复节点，计数: 11

   节点 87: wacdpus is babgpus
      ↻ 重复节点，计数: 12

   节点 88: wacdpus is bolbpus
      ↻ 重复节点，计数: 8

   节点 89: bolbpus is kidcpus
      ↻ 重复节点，计数: 6

   节点 90: tuqwpus is wacdpus and fumwpus
      ↻ 重复节点，计数: 5

   节点 91: tuqwpus is wacdpus
      ↻ 重复节点，计数: 7

   节点 92: wacdpus is babgpus
      ↻ 重复节点，计数: 13

   节点 93: tuqwpus is wacdpus
      ↻ 重复节点，计数: 8

   节点 94: yusmpus is tuqwpus
      ↻ 重复节点，计数: 9

   节点 95: lejspus is yusmpus
      ↻ 重复节点，计数: 3

   节点 96: mergpus is lejspus
      ↻ 重复节点，计数: 9

   节点 97: x is mergpus
      ↻ 重复节点，计数: 12

   节点 98: x is mergpus
      ↻ 重复节点，计数: 13

   节点 99: mergpus is lejspus
      ↻ 重复节点，计数: 10

   节点 100: lejspus is yusmpus
      ↻ 重复节点，计数: 4

   节点 101: yusmpus is tuqwpus
      ↻ 重复节点，计数: 10

   节点 102: tuqwpus is wacdpus
      ↻ 重复节点，计数: 9

   节点 103: wacdpus is babgpus
      ↻ 重复节点，计数: 14

   节点 104: wacdpus is babgpus
      ↻ 重复节点，计数: 15

   节点 105: tuqwpus is wacdpus
      ↻ 重复节点，计数: 10

   节点 106: mergpus is lejspus
      ↻ 重复节点，计数: 11

   节点 107: lejspus is yusmpus
      ↻ 重复节点，计数: 5

   节点 108: tuqwpus is wacdpus
      ↻ 重复节点，计数: 11

   节点 109: wacdpus is babgpus
      ↻ 重复节点，计数: 16

🔍 分析推理路径完整性...

============================================================
[后处理] 处理完成
============================================================
📈 处理统计:
   - 处理的actual节点: 109
   - 新增节点: 8
   - 更新已存在节点: 101
   - 点亮的LoG节点: 16

🎯 推理质量统计:
   - 完美推理: 8 (节点正确 + 路径正确)
   - 部分推理: 0 (节点正确 + 路径部分错误)
   - 无效推理: 0 (节点错误或路径完全错误)
[LoG分析] LoG图: 16节点, 10前提, 复杂度1-10

📊 === Statement列表分析 ===
📈 节点统计:
   - 总节点数: 18
   - 前提节点: 10
   - 推理节点: 8
   - 幻觉节点: 0
   - 点亮LoG节点: 16

✅ 推理节点详情:
   🟢 mergpus is lejspus (出现11次, 质量:perfect)
   🟢 mergpus is jucbpus (出现4次, 质量:perfect)
   🟢 tuqwpus is wacdpus (出现11次, 质量:perfect)
   🟢 tuqwpus is fumwpus (出现3次, 质量:perfect)
   🟢 lejspus is yusmpus (出现5次, 质量:perfect)
   🟢 x is babgpus (出现1次, 质量:perfect)
   🟢 mergpus is babgpus (出现1次, 质量:perfect)
   🟢 lejspus is lizwpus (出现1次, 质量:perfect)

🔥 点亮的LoG节点:
   - x is lejspus and jucbpus
   - x is yusmpus and lizwpus
   - yusmpus is babgpus and bilfpus
   - yusmpus is babgpus and bilfpus and kidcpus
   - wacdpus is babgpus and bilfpus and kidcpus
   - yusmpus is wacdpus and fumwpus
   - x is lejspus
   - lejspus is yusmpus and lizwpus
   - x is babgpus
   - lejspus is lizwpus
   - wacdpus is babgpus and bilfpus
   - lejspus is yusmpus
   - yusmpus is wacdpus
   - x is yusmpus
   - wacdpus is kidcpus
   - x is babgpus and bilfpus

============================================================
📊 计算评估指标
============================================================

🎯 计算Coverage指标...
   深度Coverage: 6/6 = 100.00%
   最深点亮节点: x is babgpus (第6层)
   节点Coverage: 16/16 = 100.00%
   前提条件Coverage: 10/10 = 100.00%
   各推理层点亮比例:
     第1层: 6/6 = 100.00%
     第2层: 4/4 = 100.00%
     第3层: 2/2 = 100.00%
     第4层: 2/2 = 100.00%
     第5层: 1/1 = 100.00%
     第6层: 1/1 = 100.00%

🎯 计算Precision指标...
   Error Rate: 0/8 = 0.00%
   可推导节点: 8/8
   Strict Error Rate: 0/8 = 0.00%
   严格有效节点: 8/8

   详细分析:
     完美推理: 8 (100.00%)
     部分推理: 0 (0.00%)
     无效推理: 0 (0.00%)

================================================================================
处理记录 31/50
================================================================================
记录索引: 30
问题状态: correct
📁 从缓存加载提取结果: evaluation_results.LoG_6.deepseek-reasoner_record_30.json
✅ 使用缓存结果:
   - 句子数: 57
   - 提取的语句数: 61
   - 初始条件数: 11

=== Statement提取完成 ===
总句子数: 57
成功提取: 57
失败提取: 0
总statements数: 61

=== 开始清洗Statement格式 ===
原始statements数: 61
清洗后statements数: 56
过滤掉的statements数: 5
清洗后的statements:
  1. [planning] x is babgpus
  2. [actual] x is kolqpus
  3. [actual] x is kolqpus
  4. [planning] kolqpus is babgpus
  5. [actual] sudxpus is cemlpus
  6. [actual] conppus is sudxpus
  7. [actual] limkpus is conppus and wopmpus
  8. [actual] limkpus is conppus and wopmpus
  9. [actual] x is kolqpus
  10. [actual] wuqvpus is babgpus
  11. [actual] kolqpus is hemnpus and tisspus
  12. [actual] kolqpus is hemnpus and tisspus
  13. [actual] conppus is gaqqpus and keyjpus
  14. [actual] hemnpus is winbpus
  15. [actual] winbpus is fujvpus and rayzpus and mufjpus
  16. [actual] fujvpus is limkpus
  17. [actual] conppus is wuqvpus
  18. [actual] x is kolqpus
  19. [actual] kolqpus is hemnpus and tisspus
  20. [actual] kolqpus is hemnpus
  21. [actual] x is hemnpus because x is kolqpus
  22. [actual] x is kolqpus
  23. [actual] kolqpus is hemnpus
  24. [actual] hemnpus is winbpus
  25. [actual] hemnpus is winbpus
  26. [actual] x is winbpus
  27. [actual] winbpus is fujvpus and rayzpus and mufjpus
  28. [actual] winbpus is fujvpus
  29. [actual] x is fujvpus
  30. [actual] fujvpus is limkpus
  31. [actual] fujvpus is limkpus
  32. [actual] x is limkpus
  33. [actual] limkpus is conppus and wopmpus
  34. [actual] limkpus is conppus
  35. [actual] x is conppus
  36. [actual] conppus is wuqvpus
  37. [actual] conppus is wuqvpus
  38. [actual] x is wuqvpus
  39. [actual] wuqvpus is babgpus
  40. [actual] wuqvpus is babgpus
  41. [actual] x is babgpus
  42. [actual] x is babgpus
  43. [actual] winbpus is fujvpus
  44. [actual] winbpus is fujvpus
  45. [planning] x is winbpus
  46. [planning] x is fujvpus
  47. [actual] fujvpus is limkpus
  48. [planning] x is limkpus
  49. [actual] limkpus is conppus
  50. [planning] x is conppus
  51. [actual] conppus is wuqvpus
  52. [planning] x is wuqvpus
  53. [actual] wuqvpus is babgpus
  54. [planning] x is babgpus
  55. [actual] x is babgpus
  56. [planning] x is babgpus

=== 开始标准化和解析节点 ===
清洗后statements数: 56
标准化后节点数: 55
过滤掉的无效实体数: 1
标准化后的节点:
  1. [planning] x → babgpus (原始: x is babgpus)
  2. [actual] x → kolqpus (原始: x is kolqpus)
  3. [actual] x → kolqpus (原始: x is kolqpus)
  4. [planning] kolqpus → babgpus (原始: kolqpus is babgpus)
  5. [actual] sudxpus → cemlpus (原始: sudxpus is cemlpus)
  6. [actual] conppus → sudxpus (原始: conppus is sudxpus)
  7. [actual] limkpus → conppus and wopmpus (原始: limkpus is conppus and wopmpus)
  8. [actual] limkpus → conppus and wopmpus (原始: limkpus is conppus and wopmpus)
  9. [actual] x → kolqpus (原始: x is kolqpus)
  10. [actual] wuqvpus → babgpus (原始: wuqvpus is babgpus)
  11. [actual] kolqpus → hemnpus and tisspus (原始: kolqpus is hemnpus and tisspus)
  12. [actual] kolqpus → hemnpus and tisspus (原始: kolqpus is hemnpus and tisspus)
  13. [actual] conppus → gaqqpus and keyjpus (原始: conppus is gaqqpus and keyjpus)
  14. [actual] hemnpus → winbpus (原始: hemnpus is winbpus)
  15. [actual] winbpus → fujvpus and rayzpus and mufjpus (原始: winbpus is fujvpus and rayzpus and mufjpus)
  16. [actual] fujvpus → limkpus (原始: fujvpus is limkpus)
  17. [actual] conppus → wuqvpus (原始: conppus is wuqvpus)
  18. [actual] x → kolqpus (原始: x is kolqpus)
  19. [actual] kolqpus → hemnpus and tisspus (原始: kolqpus is hemnpus and tisspus)
  20. [actual] kolqpus → hemnpus (原始: kolqpus is hemnpus)
  21. [actual] x → kolqpus (原始: x is kolqpus)
  22. [actual] kolqpus → hemnpus (原始: kolqpus is hemnpus)
  23. [actual] hemnpus → winbpus (原始: hemnpus is winbpus)
  24. [actual] hemnpus → winbpus (原始: hemnpus is winbpus)
  25. [actual] x → winbpus (原始: x is winbpus)
  26. [actual] winbpus → fujvpus and rayzpus and mufjpus (原始: winbpus is fujvpus and rayzpus and mufjpus)
  27. [actual] winbpus → fujvpus (原始: winbpus is fujvpus)
  28. [actual] x → fujvpus (原始: x is fujvpus)
  29. [actual] fujvpus → limkpus (原始: fujvpus is limkpus)
  30. [actual] fujvpus → limkpus (原始: fujvpus is limkpus)
  31. [actual] x → limkpus (原始: x is limkpus)
  32. [actual] limkpus → conppus and wopmpus (原始: limkpus is conppus and wopmpus)
  33. [actual] limkpus → conppus (原始: limkpus is conppus)
  34. [actual] x → conppus (原始: x is conppus)
  35. [actual] conppus → wuqvpus (原始: conppus is wuqvpus)
  36. [actual] conppus → wuqvpus (原始: conppus is wuqvpus)
  37. [actual] x → wuqvpus (原始: x is wuqvpus)
  38. [actual] wuqvpus → babgpus (原始: wuqvpus is babgpus)
  39. [actual] wuqvpus → babgpus (原始: wuqvpus is babgpus)
  40. [actual] x → babgpus (原始: x is babgpus)
  41. [actual] x → babgpus (原始: x is babgpus)
  42. [actual] winbpus → fujvpus (原始: winbpus is fujvpus)
  43. [actual] winbpus → fujvpus (原始: winbpus is fujvpus)
  44. [planning] x → winbpus (原始: x is winbpus)
  45. [planning] x → fujvpus (原始: x is fujvpus)
  46. [actual] fujvpus → limkpus (原始: fujvpus is limkpus)
  47. [planning] x → limkpus (原始: x is limkpus)
  48. [actual] limkpus → conppus (原始: limkpus is conppus)
  49. [planning] x → conppus (原始: x is conppus)
  50. [actual] conppus → wuqvpus (原始: conppus is wuqvpus)
  51. [planning] x → wuqvpus (原始: x is wuqvpus)
  52. [actual] wuqvpus → babgpus (原始: wuqvpus is babgpus)
  53. [planning] x → babgpus (原始: x is babgpus)
  54. [actual] x → babgpus (原始: x is babgpus)
  55. [planning] x → babgpus (原始: x is babgpus)

开始新的后处理...
[后处理] 从LoG数据文件中获取到图数据，节点数: 16
[后处理] 加载LoG图，包含 16 个节点
  LoG节点 0: x is babgpus (规则: CE, 深度: 1)
  LoG节点 1: x is babgpus and cemlpus (规则: MP, 深度: 2)
  LoG节点 2: x is fujvpus (规则: CE, 深度: 3)
  LoG节点 3: fujvpus is babgpus and cemlpus (规则: CE, 深度: 3)
  LoG节点 4: x is fujvpus and rayzpus (规则: MP, 深度: 4)
  LoG节点 5: fujvpus is babgpus and cemlpus and gaqqpus (规则: MP, 深度: 4)
  LoG节点 6: x is hemnpus (规则: CE, 深度: 5)
  LoG节点 7: hemnpus is fujvpus and rayzpus (规则: CE, 深度: 5)
  LoG节点 8: fujvpus is conppus (规则: CE, 深度: 5)
  LoG节点 9: conppus is babgpus and cemlpus and gaqqpus (规则: CI, 深度: 5)
  LoG节点 10: x is hemnpus and tisspus (规则: MP, 深度: 6)
  LoG节点 11: hemnpus is fujvpus and rayzpus and mufjpus (规则: MP, 深度: 6)
  LoG节点 12: fujvpus is conppus and wopmpus (规则: MP, 深度: 6)
  LoG节点 13: conppus is babgpus (规则: MP, 深度: 6)
  LoG节点 14: conppus is cemlpus (规则: MP, 深度: 6)
  LoG节点 15: conppus is gaqqpus (规则: CE, 深度: 6)

============================================================
[后处理] 开始处理节点
============================================================
📊 初始状态:
   - 标准化节点数: 55
   - 初始条件数: 11
   - LoG图节点数: 16

📋 初始条件列表:
    1. sudxpus is cemlpus
    2. conppus is sudxpus
    3. limkpus is conppus and wopmpus
    4. x is kolqpus
    5. wuqvpus is babgpus
    6. kolqpus is hemnpus and tisspus
    7. conppus is gaqqpus and keyjpus
    8. hemnpus is winbpus
    9. winbpus is fujvpus and rayzpus and mufjpus
   10. fujvpus is limkpus
   11. conppus is wuqvpus

🔧 构建初始Statement列表...
✅ 初始Statement列表构建完成，包含 11 个前提节点

🔍 开始处理actual节点...

   节点 1: x is kolqpus
      ↻ 重复节点，计数: 2

   节点 2: x is kolqpus
      ↻ 重复节点，计数: 3

   节点 3: sudxpus is cemlpus
      ↻ 重复节点，计数: 2

   节点 4: conppus is sudxpus
      ↻ 重复节点，计数: 2

   节点 5: limkpus is conppus and wopmpus
      ↻ 重复节点，计数: 2

   节点 6: limkpus is conppus and wopmpus
      ↻ 重复节点，计数: 3

   节点 7: x is kolqpus
      ↻ 重复节点，计数: 4

   节点 8: wuqvpus is babgpus
      ↻ 重复节点，计数: 2

   节点 9: kolqpus is hemnpus and tisspus
      ↻ 重复节点，计数: 2

   节点 10: kolqpus is hemnpus and tisspus
      ↻ 重复节点，计数: 3

   节点 11: conppus is gaqqpus and keyjpus
      ↻ 重复节点，计数: 2

   节点 12: hemnpus is winbpus
      ↻ 重复节点，计数: 2

   节点 13: winbpus is fujvpus and rayzpus and mufjpus
      ↻ 重复节点，计数: 2

   节点 14: fujvpus is limkpus
      ↻ 重复节点，计数: 2

   节点 15: conppus is wuqvpus
      ↻ 重复节点，计数: 2

   节点 16: x is kolqpus
      ↻ 重复节点，计数: 5

   节点 17: kolqpus is hemnpus and tisspus
      ↻ 重复节点，计数: 4

   节点 18: kolqpus is hemnpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: kolqpus is hemnpus and tisspus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: kolqpus is hemnpus and tisspus

   节点 19: x is kolqpus
      ↻ 重复节点，计数: 6

   节点 20: kolqpus is hemnpus
      ↻ 重复节点，计数: 2

   节点 21: hemnpus is winbpus
      ↻ 重复节点，计数: 3

   节点 22: hemnpus is winbpus
      ↻ 重复节点，计数: 4

   节点 23: x is winbpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is kolqpus → kolqpus is winbpus
[后处理] 基于推理轨迹点亮节点，使用了 3 个前提条件:
  - 前提: x is kolqpus
  - 前提: kolqpus is hemnpus
  - 前提: hemnpus is winbpus
  ✓ 点亮LoG节点: x is hemnpus
[子树点亮]     └─ 点亮依赖节点: x is hemnpus and tisspus (深度6)
[后处理]   └─ 自动点亮依赖子树: 1 个节点
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 24: winbpus is fujvpus and rayzpus and mufjpus
      ↻ 重复节点，计数: 3

   节点 25: winbpus is fujvpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: winbpus is fujvpus and rayzpus and mufjpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: winbpus is fujvpus and rayzpus and mufjpus

   节点 26: x is fujvpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is fujvpus
[子树点亮]     └─ 点亮依赖节点: x is fujvpus and rayzpus (深度4)
[子树点亮]     └─ 点亮依赖节点: hemnpus is fujvpus and rayzpus (深度5)
[子树点亮]     └─ 点亮依赖节点: hemnpus is fujvpus and rayzpus and mufjpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 3 个节点
      ✅ 验证成功 + LoG匹配

   节点 27: fujvpus is limkpus
      ↻ 重复节点，计数: 3

   节点 28: fujvpus is limkpus
      ↻ 重复节点，计数: 4

   节点 29: x is limkpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is kolqpus → kolqpus is limkpus
[后处理] 基于推理轨迹点亮节点，使用了 5 个前提条件:
  - 前提: x is kolqpus
  - 前提: kolqpus is hemnpus
  - 前提: hemnpus is winbpus
  - 前提: winbpus is fujvpus
  - 前提: fujvpus is limkpus

   节点 30: limkpus is conppus and wopmpus
      ↻ 重复节点，计数: 4

   节点 31: limkpus is conppus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: limkpus is conppus and wopmpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: limkpus is conppus and wopmpus

   节点 32: x is conppus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is kolqpus → kolqpus is conppus
[后处理] 基于推理轨迹点亮节点，使用了 6 个前提条件:
  - 前提: x is kolqpus
  - 前提: kolqpus is hemnpus
  - 前提: hemnpus is winbpus
  - 前提: winbpus is fujvpus
  - 前提: fujvpus is limkpus
  - 前提: limkpus is conppus
  ✓ 点亮LoG节点: fujvpus is conppus
[子树点亮]     └─ 点亮依赖节点: fujvpus is conppus and wopmpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 1 个节点
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 33: conppus is wuqvpus
      ↻ 重复节点，计数: 3

   节点 34: conppus is wuqvpus
      ↻ 重复节点，计数: 4

   节点 35: x is wuqvpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is kolqpus → kolqpus is wuqvpus
[后处理] 基于推理轨迹点亮节点，使用了 7 个前提条件:
  - 前提: x is kolqpus
  - 前提: kolqpus is hemnpus
  - 前提: hemnpus is winbpus
  - 前提: winbpus is fujvpus
  - 前提: fujvpus is limkpus
  - 前提: limkpus is conppus
  - 前提: conppus is wuqvpus

   节点 36: wuqvpus is babgpus
      ↻ 重复节点，计数: 3

   节点 37: wuqvpus is babgpus
      ↻ 重复节点，计数: 4

   节点 38: x is babgpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is babgpus
[子树点亮]     └─ 点亮依赖节点: x is babgpus and cemlpus (深度2)
[子树点亮]     └─ 点亮依赖节点: fujvpus is babgpus and cemlpus (深度3)
[子树点亮]     └─ 点亮依赖节点: fujvpus is babgpus and cemlpus and gaqqpus (深度4)
[子树点亮]     └─ 点亮依赖节点: conppus is babgpus and cemlpus and gaqqpus (深度5)
[子树点亮]     └─ 点亮依赖节点: conppus is babgpus (深度6)
[子树点亮]     └─ 点亮依赖节点: conppus is cemlpus (深度6)
[子树点亮]     └─ 点亮依赖节点: conppus is gaqqpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 7 个节点
      ✅ 验证成功 + LoG匹配

   节点 39: x is babgpus
      ↻ 重复节点，计数: 2

   节点 40: winbpus is fujvpus
      ↻ 重复节点，计数: 2

   节点 41: winbpus is fujvpus
      ↻ 重复节点，计数: 3

   节点 42: fujvpus is limkpus
      ↻ 重复节点，计数: 5

   节点 43: limkpus is conppus
      ↻ 重复节点，计数: 2

   节点 44: conppus is wuqvpus
      ↻ 重复节点，计数: 5

   节点 45: wuqvpus is babgpus
      ↻ 重复节点，计数: 5

   节点 46: x is babgpus
      ↻ 重复节点，计数: 3

🔍 分析推理路径完整性...

============================================================
[后处理] 处理完成
============================================================
📈 处理统计:
   - 处理的actual节点: 46
   - 新增节点: 9
   - 更新已存在节点: 37
   - 点亮的LoG节点: 16

🎯 推理质量统计:
   - 完美推理: 9 (节点正确 + 路径正确)
   - 部分推理: 0 (节点正确 + 路径部分错误)
   - 无效推理: 0 (节点错误或路径完全错误)
[LoG分析] LoG图: 16节点, 11前提, 复杂度1-11

📊 === Statement列表分析 ===
📈 节点统计:
   - 总节点数: 20
   - 前提节点: 11
   - 推理节点: 9
   - 幻觉节点: 0
   - 点亮LoG节点: 16

✅ 推理节点详情:
   🟢 kolqpus is hemnpus (出现2次, 质量:perfect)
   🟢 x is winbpus (出现1次, 质量:perfect)
   🟢 winbpus is fujvpus (出现3次, 质量:perfect)
   🟢 x is fujvpus (出现1次, 质量:perfect)
   🟢 x is limkpus (出现1次, 质量:perfect)
   🟢 limkpus is conppus (出现2次, 质量:perfect)
   🟢 x is conppus (出现1次, 质量:perfect)
   🟢 x is wuqvpus (出现1次, 质量:perfect)
   🟢 x is babgpus (出现3次, 质量:perfect)

🔥 点亮的LoG节点:
   - conppus is babgpus and cemlpus and gaqqpus
   - conppus is babgpus
   - x is babgpus and cemlpus
   - x is babgpus
   - conppus is cemlpus
   - x is hemnpus and tisspus
   - fujvpus is babgpus and cemlpus
   - fujvpus is conppus
   - fujvpus is conppus and wopmpus
   - fujvpus is babgpus and cemlpus and gaqqpus
   - x is hemnpus
   - hemnpus is fujvpus and rayzpus
   - conppus is gaqqpus
   - x is fujvpus and rayzpus
   - x is fujvpus
   - hemnpus is fujvpus and rayzpus and mufjpus

============================================================
📊 计算评估指标
============================================================

🎯 计算Coverage指标...
   深度Coverage: 6/6 = 100.00%
   最深点亮节点: x is babgpus (第6层)
   节点Coverage: 16/16 = 100.00%
   前提条件Coverage: 11/11 = 100.00%
   各推理层点亮比例:
     第1层: 6/6 = 100.00%
     第2层: 4/4 = 100.00%
     第3层: 2/2 = 100.00%
     第4层: 2/2 = 100.00%
     第5层: 1/1 = 100.00%
     第6层: 1/1 = 100.00%

🎯 计算Precision指标...
   Error Rate: 0/9 = 0.00%
   可推导节点: 9/9
   Strict Error Rate: 0/9 = 0.00%
   严格有效节点: 9/9

   详细分析:
     完美推理: 9 (100.00%)
     部分推理: 0 (0.00%)
     无效推理: 0 (0.00%)

================================================================================
处理记录 32/50
================================================================================
记录索引: 31
问题状态: correct
📁 从缓存加载提取结果: evaluation_results.LoG_6.deepseek-reasoner_record_31.json
✅ 使用缓存结果:
   - 句子数: 222
   - 提取的语句数: 430
   - 初始条件数: 25

=== Statement提取完成 ===
总句子数: 222
成功提取: 222
失败提取: 0
总statements数: 430

=== 开始清洗Statement格式 ===
原始statements数: 430
清洗后statements数: 333
过滤掉的statements数: 97
清洗后的statements:
  1. [planning] x is babgpus
  2. [planning] x is babrpus
  3. [actual] x is jacvpus
  4. [planning] jacvpus is babgpus
  5. [planning] jacvpus is babrpus
  6. [actual] golypus is yudrpus
  7. [actual] secfpus is cukbpus and gubxpus
  8. [actual] wukdpus is biwfpus
  9. [actual] hudqpus is babgpus or babrpus
  10. [actual] vazwpus is bakypus and hobfpus
  11. [actual] puftpus is xuhnpus and gibkpus
  12. [actual] x is jacvpus
  13. [actual] x is jacvpus
  14. [actual] pixxpus is mavgpus and fimypus
  15. [actual] cukbpus is qetxpus
  16. [actual] yucjpus is pixxpus and xablpus
  17. [actual] biwfpus is mombpus and pomqpus
  18. [actual] xuhnpus is secfpus and puyxpus and mogrpus
  19. [actual] vavypus is wukdpus
  20. [actual] qetxpus is jujzpus
  21. [actual] mombpus is yucjpus and bunzpus
  22. [actual] kigxpus is golypus
  23. [actual] bixspus is kigxpus
  24. [actual] jujzpus is bixspus
  25. [actual] yudrpus is vavypus
  26. [actual] bakypus is kupppus
  27. [actual] kupppus is puftpus and faskpus and kujfpus
  28. [actual] pimcpus is vazwpus
  29. [actual] mavgpus is hudqpus
  30. [planning] hudqpus is babgpus or babrpus
  31. [planning] mavgpus is connected
  32. [actual] jacvpus is tibfpus
  33. [actual] x is jacvpus
  34. [actual] jacvpus is tibfpus
  35. [actual] tibfpus is pimcpus and cojppus and xowmpus
  36. [planning] jacvpus is babgpus
  37. [planning] jacvpus is babrpus
  38. [actual] jacvpus is tibfpus
  39. [actual] tibfpus is pimcpus and others
  40. [actual] pimcpus is vazwpus
  41. [actual] vazwpus is bakypus and hobfpus
  42. [actual] bakypus is kupppus
  43. [actual] kupppus is puftpus and faskpus and kujfpus
  44. [actual] puftpus is xuhnpus and gibkpus
  45. [actual] xuhnpus is secfpus and puyxpus and mogrpus
  46. [actual] secfpus is cukbpus and gubxpus
  47. [actual] cukbpus is qetxpus
  48. [actual] qetxpus is jujzpus
  49. [actual] jujzpus is bixspus
  50. [actual] bixspus is kigxpus
  51. [actual] kigxpus is golypus
  52. [actual] golypus is yudrpus
  53. [actual] yudrpus is vavypus
  54. [actual] vavypus is wukdpus
  55. [actual] wukdpus is biwfpus
  56. [actual] biwfpus is mombpus and pomqpus
  57. [actual] mombpus is yucjpus and bunzpus
  58. [actual] yucjpus is pixxpus and xablpus
  59. [actual] pixxpus is mavgpus and fimypus
  60. [actual] mavgpus is hudqpus
  61. [actual] hudqpus is babgpus or babrpus
  62. [actual] tibfpus is pimcpus
  63. [actual] pimcpus is vazwpus
  64. [actual] vazwpus is bakypus
  65. [actual] bakypus is kupppus
  66. [actual] kupppus is puftpus
  67. [actual] puftpus is xuhnpus
  68. [actual] xuhnpus is secfpus
  69. [actual] secfpus is cukbpus
  70. [actual] cukbpus is qetxpus
  71. [actual] qetxpus is jujzpus
  72. [actual] jujzpus is bixspus
  73. [actual] bixspus is kigxpus
  74. [actual] kigxpus is golypus
  75. [actual] golypus is yudrpus
  76. [actual] yudrpus is vavypus
  77. [actual] vavypus is wukdpus
  78. [actual] wukdpus is biwfpus
  79. [actual] biwfpus is mombpus
  80. [actual] mombpus is yucjpus
  81. [actual] yucjpus is pixxpus
  82. [actual] pixxpus is mavgpus
  83. [actual] mavgpus is hudqpus
  84. [actual] jacvpus is tibfpus
  85. [actual] hudqpus is either babgpus or babrpus
  86. [actual] jacvpus is x
  87. [actual] jacvpus is eventually linked to hudqpus
  88. [actual] hudqpus is babgpus or babrpus
  89. [planning] x is babgpus
  90. [planning] x is babrpus
  91. [actual] hudqpus is category
  92. [actual] mavgpus is hudqpus
  93. [planning] x is chain
  94. [planning] x is babgpus or babrpus
  95. [planning] x is babgpus
  96. [planning] x is babrpus
  97. [actual] x is jacvpus
  98. [actual] jacvpus is tibfpus
  99. [actual] tibfpus is pimcpus
  100. [actual] hudqpus is babgpus or babrpus
  101. [actual] hudqpus is babgpus or babrpus
  102. [planning] hudqpus is babgpus
  103. [planning] hudqpus is babrpus
  104. [actual] hudqpus is babgpus or babrpus
  105. [actual] hudqpus is babgpus or babrpus
  106. [actual] hudqpus is babgpus or hudqpus is babrpus
  107. [actual] hudqpus is babgpus or babrpus
  108. [actual] mavgpus is hudqpus
  109. [actual] hudqpus is babgpus or babrpus
  110. [planning] mavgpus is a category that is an instance of another category
  111. [planning] x is babgpus
  112. [planning] x is babrpus
  113. [actual] x is jacvpus
  114. [actual] jacvpus is tibfpus
  115. [actual] tibfpus is pimcpus
  116. [actual] pimcpus is vazwpus
  117. [actual] hudqpus is babgpus or babrpus
  118. [planning] x is babgpus
  119. [planning] x is babrpus
  120. [planning] x is a category that is a subclass or something
  121. [planning] babgpus is a category that x is directly or indirectly
  122. [planning] babrpus is a category that x is directly or indirectly
  123. [planning] x is babgpus or babrpus
  124. [planning] x is babgpus
  125. [planning] x is babrpus
  126. [actual] x is hudqpus
  127. [actual] hudqpus is either babgpus or babrpus
  128. [planning] x is babgpus
  129. [planning] x is babrpus
  130. [planning] x is hudqpus
  131. [actual] hudqpus is babgpus or babrpus
  132. [actual] mavgpus is hudqpus
  133. [planning] hudqpus is babgpus
  134. [planning] mavgpus is an instance of babgpus
  135. [planning] x is babgpus
  136. [planning] x is babrpus
  137. [actual] x is jacvpus
  138. [actual] jacvpus is tibfpus
  139. [actual] tibfpus is pimcpus and cojppus and xowmpus
  140. [actual] tibfpus is pimcpus
  141. [actual] tibfpus is pimcpus
  142. [actual] pimcpus is vazwpus
  143. [planning] pimcpus is category vazwpus
  144. [actual] vazwpus is bakypus and hobfpus
  145. [planning] vazwpus is bakypus
  146. [planning] vazwpus is hobfpus
  147. [actual] vazwpus is bakypus and hobfpus
  148. [actual] vazwpus is bakypus
  149. [actual] vazwpus is hobfpus
  150. [actual] vazwpus is bakypus and hobfpus
  151. [actual] bakypus is kupppus
  152. [actual] bakypus is kupppus
  153. [actual] kupppus is puftpus and faskpus and kujfpus
  154. [actual] kupppus is puftpus
  155. [actual] kupppus is faskpus
  156. [actual] kupppus is kujfpus
  157. [actual] kupppus is puftpus
  158. [planning] kupppus is puftpus
  159. [actual] bakypus is kupppus
  160. [actual] kupppus is puftpus
  161. [planning] bakypus is puftpus
  162. [planning] x is babgpus
  163. [actual] hudqpus is babgpus or babrpus
  164. [actual] hudqpus is a member of babgpus or babrpus
  165. [actual] hudqpus is a member of babgpus or babrpus
  166. [planning] x is a member of hudqpus
  167. [planning] x is a member of hudqpus
  168. [planning] x is a member of hudqpus
  169. [planning] x is a member of hudqpus
  170. [actual] hudqpus is babgpus or babrpus
  171. [actual] secfpus is cukbpus and gubxpus
  172. [actual] secfpus is a subset of cukbpus
  173. [actual] secfpus is a subset of gubxpus
  174. [planning] secfpus is cukbpus
  175. [planning] secfpus is gubxpus
  176. [planning] x is babgpus
  177. [planning] x is babrpus
  178. [planning] x is babgpus
  179. [planning] x is babrpus
  180. [planning] x is babgpus
  181. [planning] x is babrpus
  182. [planning] x is babgpus
  183. [planning] x is babrpus
  184. [actual] x is jacvpus
  185. [actual] jacvpus is tibfpus
  186. [actual] mavgpus is hudqpus
  187. [actual] hudqpus is babgpus or babrpus
  188. [actual] mavgpus is hudqpus
  189. [actual] hudqpus is babgpus
  190. [actual] mavgpus is hudqpus and hudqpus is babgpus
  191. [actual] mavgpus is hudqpus
  192. [actual] hudqpus is babgpus
  193. [actual] mavgpus is an instance of babgpus
  194. [actual] mavgpus is an instance of hudqpus
  195. [planning] mavgpus is an instance of babgpus
  196. [planning] mavgpus is subset of hudqpus
  197. [planning] hudqpus is subset of babgpus or babrpus
  198. [planning] mavgpus is subset of babgpus or babrpus
  199. [planning] x is mavgpus
  200. [planning] x is babgpus or babrpus
  201. [planning] x is babgpus
  202. [planning] x is babrpus
  203. [planning] x is mavgpus
  204. [actual] yucjpus is pixxpus and xablpus
  205. [actual] pixxpus is mavgpus and fimypus
  206. [actual] pixxpus is mavgpus
  207. [planning] pixxpus is mavgpus
  208. [actual] yucjpus is pixxpus
  209. [actual] pixxpus is mavgpus
  210. [actual] yucjpus is mavgpus
  211. [actual] mombpus is yucjpus and bunzpus
  212. [actual] mombpus is yucjpus
  213. [planning] mombpus is yucjpus
  214. [actual] biwfpus is mombpus and pomqpus
  215. [planning] biwfpus is mavgpus
  216. [actual] wukdpus is biwfpus
  217. [actual] wukdpus is biwfpus
  218. [actual] wukdpus is mavgpus
  219. [actual] vavypus is wukdpus
  220. [actual] vavypus is wukdpus
  221. [actual] vavypus is mavgpus
  222. [actual] yudrpus is vavypus
  223. [actual] golypus is yudrpus
  224. [actual] golypus is yudrpus
  225. [actual] kigxpus is golypus
  226. [planning] kigxpus is golypus
  227. [actual] bixspus is kigxpus
  228. [planning] bixspus is kigxpus
  229. [actual] jujzpus is bixspus
  230. [actual] jujzpus is bixspus
  231. [planning] jujzpus is mavgpus
  232. [actual] qetxpus is jujzpus
  233. [planning] qetxpus is jujzpus
  234. [actual] cukbpus is qetxpus
  235. [planning] cukbpus is qetxpus
  236. [actual] secfpus is cukbpus and gubxpus
  237. [planning] secfpus is cukbpus
  238. [actual] xuhnpus is secfpus and puyxpus and mogrpus
  239. [planning] xuhnpus is secfpus
  240. [planning] xuhnpus is mavgpus
  241. [actual] puftpus is xuhnpus and gibkpus
  242. [actual] kupppus is puftpus and faskpus and kujfpus
  243. [planning] kupppus is puftpus
  244. [actual] bakypus is kupppus
  245. [planning] bakypus is kupppus
  246. [actual] vazwpus is bakypus and hobfpus
  247. [actual] vazwpus is bakypus
  248. [planning] vazwpus is mavgpus
  249. [actual] pimcpus is vazwpus
  250. [planning] pimcpus is vazwpus
  251. [actual] tibfpus is pimcpus and cojppus and xowmpus
  252. [actual] tibfpus is pimcpus
  253. [actual] tibfpus is mavgpus
  254. [actual] jacvpus is tibfpus
  255. [planning] jacvpus is tibfpus
  256. [planning] jacvpus is tibfpus
  257. [actual] x is jacvpus
  258. [planning] x is mavgpus
  259. [actual] x is mavgpus
  260. [actual] mavgpus is hudqpus
  261. [actual] hudqpus is babgpus or hudqpus is babrpus
  262. [planning] mavgpus is babgpus or mavgpus is babrpus
  263. [planning] hudqpus is babgpus
  264. [actual] hudqpus is babgpus or babrpus
  265. [actual] mavgpus is hudqpus
  266. [actual] x is mavgpus
  267. [planning] x is babgpus or babrpus
  268. [planning] x is babgpus or babrpus
  269. [planning] x is babgpus or babrpus
  270. [actual] x is babgpus or babrpus
  271. [planning] x is mavgpus
  272. [planning] mavgpus is hudqpus
  273. [planning] hudqpus is a member of babgpus
  274. [planning] x is babgpus
  275. [actual] x is an element of jacvpus
  276. [actual] jacvpus is an element of tibfpus
  277. [actual] mavgpus is an element of hudqpus
  278. [actual] hudqpus is an element of babgpus or babrpus
  279. [actual] x is an element of a chain that ends with an element of babgpus
  280. [actual] x is directly in babgpus
  281. [actual] x is subset of babgpus
  282. [planning] x is babgpus
  283. [actual] golypus is yudrpus
  284. [actual] x is jacvpus
  285. [actual] hudqpus is babgpus or babrpus
  286. [actual] x is mavgpus
  287. [actual] mavgpus is hudqpus
  288. [actual] hudqpus is babgpus or babrpus
  289. [actual] x is babgpus or babrpus
  290. [actual] x is an instance of babgpus or babrpus
  291. [planning] x is babgpus or babrpus
  292. [actual] mavgpus is hudqpus
  293. [actual] pixxpus is mavgpus and fimypus
  294. [actual] yucjpus is pixxpus and xablpus
  295. [actual] mombpus is yucjpus and bunzpus
  296. [actual] biwfpus is mombpus and pomqpus
  297. [actual] wukdpus is biwfpus
  298. [actual] vavypus is wukdpus
  299. [actual] yudrpus is vavypus
  300. [actual] golypus is yudrpus
  301. [actual] kigxpus is golypus
  302. [actual] bixspus is kigxpus
  303. [actual] jujzpus is bixspus
  304. [actual] qetxpus is jujzpus
  305. [actual] cukbpus is qetxpus
  306. [actual] secfpus is cukbpus and gubxpus
  307. [actual] xuhnpus is secfpus and puyxpus and mogrpus
  308. [actual] puftpus is xuhnpus and gibkpus
  309. [actual] kupppus is puftpus and faskpus and kujfpus
  310. [actual] bakypus is kupppus
  311. [actual] vazwpus is bakypus and hobfpus
  312. [actual] pimcpus is vazwpus
  313. [actual] tibfpus is pimcpus and cojppus and xowmpus
  314. [actual] jacvpus is tibfpus
  315. [actual] x is jacvpus
  316. [planning] x is jacvpus
  317. [actual] x is jacvpus
  318. [actual] x is an element of jacvpus
  319. [planning] jacvpus is a set
  320. [planning] x is jacvpus
  321. [planning] jacvpus is mavgpus
  322. [planning] x is mavgpus
  323. [actual] mavgpus is hudqpus
  324. [actual] hudqpus is babgpus or hudqpus is babrpus
  325. [actual] x is hudqpus
  326. [actual] hudqpus is babgpus or hudqpus is babrpus
  327. [actual] x is babgpus or x is babrpus
  328. [actual] x is babgpus or babrpus
  329. [planning] hudqpus is babgpus
  330. [planning] hudqpus is babrpus
  331. [planning] hudqpus is babgpus
  332. [planning] hudqpus is babrpus
  333. [planning] x is babgpus or babrpus

=== 开始标准化和解析节点 ===
清洗后statements数: 333
标准化后节点数: 288
过滤掉的无效实体数: 45
标准化后的节点:
  1. [planning] x → babgpus (原始: x is babgpus)
  2. [planning] x → babrpus (原始: x is babrpus)
  3. [actual] x → jacvpus (原始: x is jacvpus)
  4. [planning] jacvpus → babgpus (原始: jacvpus is babgpus)
  5. [planning] jacvpus → babrpus (原始: jacvpus is babrpus)
  6. [actual] golypus → yudrpus (原始: golypus is yudrpus)
  7. [actual] secfpus → cukbpus and gubxpus (原始: secfpus is cukbpus and gubxpus)
  8. [actual] wukdpus → biwfpus (原始: wukdpus is biwfpus)
  9. [actual] hudqpus → babgpus or babrpus (原始: hudqpus is babgpus or babrpus)
  10. [actual] vazwpus → bakypus and hobfpus (原始: vazwpus is bakypus and hobfpus)
  11. [actual] puftpus → xuhnpus and gibkpus (原始: puftpus is xuhnpus and gibkpus)
  12. [actual] x → jacvpus (原始: x is jacvpus)
  13. [actual] x → jacvpus (原始: x is jacvpus)
  14. [actual] pixxpus → mavgpus and fimypus (原始: pixxpus is mavgpus and fimypus)
  15. [actual] cukbpus → qetxpus (原始: cukbpus is qetxpus)
  16. [actual] yucjpus → pixxpus and xablpus (原始: yucjpus is pixxpus and xablpus)
  17. [actual] biwfpus → mombpus and pomqpus (原始: biwfpus is mombpus and pomqpus)
  18. [actual] xuhnpus → secfpus and puyxpus and mogrpus (原始: xuhnpus is secfpus and puyxpus and mogrpus)
  19. [actual] vavypus → wukdpus (原始: vavypus is wukdpus)
  20. [actual] qetxpus → jujzpus (原始: qetxpus is jujzpus)
  21. [actual] mombpus → yucjpus and bunzpus (原始: mombpus is yucjpus and bunzpus)
  22. [actual] kigxpus → golypus (原始: kigxpus is golypus)
  23. [actual] bixspus → kigxpus (原始: bixspus is kigxpus)
  24. [actual] jujzpus → bixspus (原始: jujzpus is bixspus)
  25. [actual] yudrpus → vavypus (原始: yudrpus is vavypus)
  26. [actual] bakypus → kupppus (原始: bakypus is kupppus)
  27. [actual] kupppus → puftpus and faskpus and kujfpus (原始: kupppus is puftpus and faskpus and kujfpus)
  28. [actual] pimcpus → vazwpus (原始: pimcpus is vazwpus)
  29. [actual] mavgpus → hudqpus (原始: mavgpus is hudqpus)
  30. [planning] hudqpus → babgpus or babrpus (原始: hudqpus is babgpus or babrpus)
  31. [actual] jacvpus → tibfpus (原始: jacvpus is tibfpus)
  32. [actual] x → jacvpus (原始: x is jacvpus)
  33. [actual] jacvpus → tibfpus (原始: jacvpus is tibfpus)
  34. [actual] tibfpus → pimcpus and cojppus and xowmpus (原始: tibfpus is pimcpus and cojppus and xowmpus)
  35. [planning] jacvpus → babgpus (原始: jacvpus is babgpus)
  36. [planning] jacvpus → babrpus (原始: jacvpus is babrpus)
  37. [actual] jacvpus → tibfpus (原始: jacvpus is tibfpus)
  38. [actual] pimcpus → vazwpus (原始: pimcpus is vazwpus)
  39. [actual] vazwpus → bakypus and hobfpus (原始: vazwpus is bakypus and hobfpus)
  40. [actual] bakypus → kupppus (原始: bakypus is kupppus)
  41. [actual] kupppus → puftpus and faskpus and kujfpus (原始: kupppus is puftpus and faskpus and kujfpus)
  42. [actual] puftpus → xuhnpus and gibkpus (原始: puftpus is xuhnpus and gibkpus)
  43. [actual] xuhnpus → secfpus and puyxpus and mogrpus (原始: xuhnpus is secfpus and puyxpus and mogrpus)
  44. [actual] secfpus → cukbpus and gubxpus (原始: secfpus is cukbpus and gubxpus)
  45. [actual] cukbpus → qetxpus (原始: cukbpus is qetxpus)
  46. [actual] qetxpus → jujzpus (原始: qetxpus is jujzpus)
  47. [actual] jujzpus → bixspus (原始: jujzpus is bixspus)
  48. [actual] bixspus → kigxpus (原始: bixspus is kigxpus)
  49. [actual] kigxpus → golypus (原始: kigxpus is golypus)
  50. [actual] golypus → yudrpus (原始: golypus is yudrpus)
  51. [actual] yudrpus → vavypus (原始: yudrpus is vavypus)
  52. [actual] vavypus → wukdpus (原始: vavypus is wukdpus)
  53. [actual] wukdpus → biwfpus (原始: wukdpus is biwfpus)
  54. [actual] biwfpus → mombpus and pomqpus (原始: biwfpus is mombpus and pomqpus)
  55. [actual] mombpus → yucjpus and bunzpus (原始: mombpus is yucjpus and bunzpus)
  56. [actual] yucjpus → pixxpus and xablpus (原始: yucjpus is pixxpus and xablpus)
  57. [actual] pixxpus → mavgpus and fimypus (原始: pixxpus is mavgpus and fimypus)
  58. [actual] mavgpus → hudqpus (原始: mavgpus is hudqpus)
  59. [actual] hudqpus → babgpus or babrpus (原始: hudqpus is babgpus or babrpus)
  60. [actual] tibfpus → pimcpus (原始: tibfpus is pimcpus)
  61. [actual] pimcpus → vazwpus (原始: pimcpus is vazwpus)
  62. [actual] vazwpus → bakypus (原始: vazwpus is bakypus)
  63. [actual] bakypus → kupppus (原始: bakypus is kupppus)
  64. [actual] kupppus → puftpus (原始: kupppus is puftpus)
  65. [actual] puftpus → xuhnpus (原始: puftpus is xuhnpus)
  66. [actual] xuhnpus → secfpus (原始: xuhnpus is secfpus)
  67. [actual] secfpus → cukbpus (原始: secfpus is cukbpus)
  68. [actual] cukbpus → qetxpus (原始: cukbpus is qetxpus)
  69. [actual] qetxpus → jujzpus (原始: qetxpus is jujzpus)
  70. [actual] jujzpus → bixspus (原始: jujzpus is bixspus)
  71. [actual] bixspus → kigxpus (原始: bixspus is kigxpus)
  72. [actual] kigxpus → golypus (原始: kigxpus is golypus)
  73. [actual] golypus → yudrpus (原始: golypus is yudrpus)
  74. [actual] yudrpus → vavypus (原始: yudrpus is vavypus)
  75. [actual] vavypus → wukdpus (原始: vavypus is wukdpus)
  76. [actual] wukdpus → biwfpus (原始: wukdpus is biwfpus)
  77. [actual] biwfpus → mombpus (原始: biwfpus is mombpus)
  78. [actual] mombpus → yucjpus (原始: mombpus is yucjpus)
  79. [actual] yucjpus → pixxpus (原始: yucjpus is pixxpus)
  80. [actual] pixxpus → mavgpus (原始: pixxpus is mavgpus)
  81. [actual] mavgpus → hudqpus (原始: mavgpus is hudqpus)
  82. [actual] jacvpus → tibfpus (原始: jacvpus is tibfpus)
  83. [actual] jacvpus → x (原始: jacvpus is x)
  84. [actual] hudqpus → babgpus or babrpus (原始: hudqpus is babgpus or babrpus)
  85. [planning] x → babgpus (原始: x is babgpus)
  86. [planning] x → babrpus (原始: x is babrpus)
  87. [actual] mavgpus → hudqpus (原始: mavgpus is hudqpus)
  88. [planning] x → babgpus or babrpus (原始: x is babgpus or babrpus)
  89. [planning] x → babgpus (原始: x is babgpus)
  90. [planning] x → babrpus (原始: x is babrpus)
  91. [actual] x → jacvpus (原始: x is jacvpus)
  92. [actual] jacvpus → tibfpus (原始: jacvpus is tibfpus)
  93. [actual] tibfpus → pimcpus (原始: tibfpus is pimcpus)
  94. [actual] hudqpus → babgpus or babrpus (原始: hudqpus is babgpus or babrpus)
  95. [actual] hudqpus → babgpus or babrpus (原始: hudqpus is babgpus or babrpus)
  96. [planning] hudqpus → babgpus (原始: hudqpus is babgpus)
  97. [planning] hudqpus → babrpus (原始: hudqpus is babrpus)
  98. [actual] hudqpus → babgpus or babrpus (原始: hudqpus is babgpus or babrpus)
  99. [actual] hudqpus → babgpus or babrpus (原始: hudqpus is babgpus or babrpus)
  100. [actual] hudqpus → babgpus or babrpus (原始: hudqpus is babgpus or babrpus)
  101. [actual] mavgpus → hudqpus (原始: mavgpus is hudqpus)
  102. [actual] hudqpus → babgpus or babrpus (原始: hudqpus is babgpus or babrpus)
  103. [planning] x → babgpus (原始: x is babgpus)
  104. [planning] x → babrpus (原始: x is babrpus)
  105. [actual] x → jacvpus (原始: x is jacvpus)
  106. [actual] jacvpus → tibfpus (原始: jacvpus is tibfpus)
  107. [actual] tibfpus → pimcpus (原始: tibfpus is pimcpus)
  108. [actual] pimcpus → vazwpus (原始: pimcpus is vazwpus)
  109. [actual] hudqpus → babgpus or babrpus (原始: hudqpus is babgpus or babrpus)
  110. [planning] x → babgpus (原始: x is babgpus)
  111. [planning] x → babrpus (原始: x is babrpus)
  112. [planning] x → babgpus or babrpus (原始: x is babgpus or babrpus)
  113. [planning] x → babgpus (原始: x is babgpus)
  114. [planning] x → babrpus (原始: x is babrpus)
  115. [actual] x → hudqpus (原始: x is hudqpus)
  116. [planning] x → babgpus (原始: x is babgpus)
  117. [planning] x → babrpus (原始: x is babrpus)
  118. [planning] x → hudqpus (原始: x is hudqpus)
  119. [actual] hudqpus → babgpus or babrpus (原始: hudqpus is babgpus or babrpus)
  120. [actual] mavgpus → hudqpus (原始: mavgpus is hudqpus)
  121. [planning] hudqpus → babgpus (原始: hudqpus is babgpus)
  122. [planning] x → babgpus (原始: x is babgpus)
  123. [planning] x → babrpus (原始: x is babrpus)
  124. [actual] x → jacvpus (原始: x is jacvpus)
  125. [actual] jacvpus → tibfpus (原始: jacvpus is tibfpus)
  126. [actual] tibfpus → pimcpus and cojppus and xowmpus (原始: tibfpus is pimcpus and cojppus and xowmpus)
  127. [actual] tibfpus → pimcpus (原始: tibfpus is pimcpus)
  128. [actual] tibfpus → pimcpus (原始: tibfpus is pimcpus)
  129. [actual] pimcpus → vazwpus (原始: pimcpus is vazwpus)
  130. [actual] vazwpus → bakypus and hobfpus (原始: vazwpus is bakypus and hobfpus)
  131. [planning] vazwpus → bakypus (原始: vazwpus is bakypus)
  132. [planning] vazwpus → hobfpus (原始: vazwpus is hobfpus)
  133. [actual] vazwpus → bakypus and hobfpus (原始: vazwpus is bakypus and hobfpus)
  134. [actual] vazwpus → bakypus (原始: vazwpus is bakypus)
  135. [actual] vazwpus → hobfpus (原始: vazwpus is hobfpus)
  136. [actual] vazwpus → bakypus and hobfpus (原始: vazwpus is bakypus and hobfpus)
  137. [actual] bakypus → kupppus (原始: bakypus is kupppus)
  138. [actual] bakypus → kupppus (原始: bakypus is kupppus)
  139. [actual] kupppus → puftpus and faskpus and kujfpus (原始: kupppus is puftpus and faskpus and kujfpus)
  140. [actual] kupppus → puftpus (原始: kupppus is puftpus)
  141. [actual] kupppus → faskpus (原始: kupppus is faskpus)
  142. [actual] kupppus → kujfpus (原始: kupppus is kujfpus)
  143. [actual] kupppus → puftpus (原始: kupppus is puftpus)
  144. [planning] kupppus → puftpus (原始: kupppus is puftpus)
  145. [actual] bakypus → kupppus (原始: bakypus is kupppus)
  146. [actual] kupppus → puftpus (原始: kupppus is puftpus)
  147. [planning] bakypus → puftpus (原始: bakypus is puftpus)
  148. [planning] x → babgpus (原始: x is babgpus)
  149. [actual] hudqpus → babgpus or babrpus (原始: hudqpus is babgpus or babrpus)
  150. [actual] hudqpus → babgpus or babrpus (原始: hudqpus is babgpus or babrpus)
  151. [actual] secfpus → cukbpus and gubxpus (原始: secfpus is cukbpus and gubxpus)
  152. [planning] secfpus → cukbpus (原始: secfpus is cukbpus)
  153. [planning] secfpus → gubxpus (原始: secfpus is gubxpus)
  154. [planning] x → babgpus (原始: x is babgpus)
  155. [planning] x → babrpus (原始: x is babrpus)
  156. [planning] x → babgpus (原始: x is babgpus)
  157. [planning] x → babrpus (原始: x is babrpus)
  158. [planning] x → babgpus (原始: x is babgpus)
  159. [planning] x → babrpus (原始: x is babrpus)
  160. [planning] x → babgpus (原始: x is babgpus)
  161. [planning] x → babrpus (原始: x is babrpus)
  162. [actual] x → jacvpus (原始: x is jacvpus)
  163. [actual] jacvpus → tibfpus (原始: jacvpus is tibfpus)
  164. [actual] mavgpus → hudqpus (原始: mavgpus is hudqpus)
  165. [actual] hudqpus → babgpus or babrpus (原始: hudqpus is babgpus or babrpus)
  166. [actual] mavgpus → hudqpus (原始: mavgpus is hudqpus)
  167. [actual] hudqpus → babgpus (原始: hudqpus is babgpus)
  168. [actual] mavgpus → hudqpus (原始: mavgpus is hudqpus)
  169. [actual] hudqpus → babgpus (原始: hudqpus is babgpus)
  170. [planning] x → mavgpus (原始: x is mavgpus)
  171. [planning] x → babgpus or babrpus (原始: x is babgpus or babrpus)
  172. [planning] x → babgpus (原始: x is babgpus)
  173. [planning] x → babrpus (原始: x is babrpus)
  174. [planning] x → mavgpus (原始: x is mavgpus)
  175. [actual] yucjpus → pixxpus and xablpus (原始: yucjpus is pixxpus and xablpus)
  176. [actual] pixxpus → mavgpus and fimypus (原始: pixxpus is mavgpus and fimypus)
  177. [actual] pixxpus → mavgpus (原始: pixxpus is mavgpus)
  178. [planning] pixxpus → mavgpus (原始: pixxpus is mavgpus)
  179. [actual] yucjpus → pixxpus (原始: yucjpus is pixxpus)
  180. [actual] pixxpus → mavgpus (原始: pixxpus is mavgpus)
  181. [actual] yucjpus → mavgpus (原始: yucjpus is mavgpus)
  182. [actual] mombpus → yucjpus and bunzpus (原始: mombpus is yucjpus and bunzpus)
  183. [actual] mombpus → yucjpus (原始: mombpus is yucjpus)
  184. [planning] mombpus → yucjpus (原始: mombpus is yucjpus)
  185. [actual] biwfpus → mombpus and pomqpus (原始: biwfpus is mombpus and pomqpus)
  186. [planning] biwfpus → mavgpus (原始: biwfpus is mavgpus)
  187. [actual] wukdpus → biwfpus (原始: wukdpus is biwfpus)
  188. [actual] wukdpus → biwfpus (原始: wukdpus is biwfpus)
  189. [actual] wukdpus → mavgpus (原始: wukdpus is mavgpus)
  190. [actual] vavypus → wukdpus (原始: vavypus is wukdpus)
  191. [actual] vavypus → wukdpus (原始: vavypus is wukdpus)
  192. [actual] vavypus → mavgpus (原始: vavypus is mavgpus)
  193. [actual] yudrpus → vavypus (原始: yudrpus is vavypus)
  194. [actual] golypus → yudrpus (原始: golypus is yudrpus)
  195. [actual] golypus → yudrpus (原始: golypus is yudrpus)
  196. [actual] kigxpus → golypus (原始: kigxpus is golypus)
  197. [planning] kigxpus → golypus (原始: kigxpus is golypus)
  198. [actual] bixspus → kigxpus (原始: bixspus is kigxpus)
  199. [planning] bixspus → kigxpus (原始: bixspus is kigxpus)
  200. [actual] jujzpus → bixspus (原始: jujzpus is bixspus)
  201. [actual] jujzpus → bixspus (原始: jujzpus is bixspus)
  202. [planning] jujzpus → mavgpus (原始: jujzpus is mavgpus)
  203. [actual] qetxpus → jujzpus (原始: qetxpus is jujzpus)
  204. [planning] qetxpus → jujzpus (原始: qetxpus is jujzpus)
  205. [actual] cukbpus → qetxpus (原始: cukbpus is qetxpus)
  206. [planning] cukbpus → qetxpus (原始: cukbpus is qetxpus)
  207. [actual] secfpus → cukbpus and gubxpus (原始: secfpus is cukbpus and gubxpus)
  208. [planning] secfpus → cukbpus (原始: secfpus is cukbpus)
  209. [actual] xuhnpus → secfpus and puyxpus and mogrpus (原始: xuhnpus is secfpus and puyxpus and mogrpus)
  210. [planning] xuhnpus → secfpus (原始: xuhnpus is secfpus)
  211. [planning] xuhnpus → mavgpus (原始: xuhnpus is mavgpus)
  212. [actual] puftpus → xuhnpus and gibkpus (原始: puftpus is xuhnpus and gibkpus)
  213. [actual] kupppus → puftpus and faskpus and kujfpus (原始: kupppus is puftpus and faskpus and kujfpus)
  214. [planning] kupppus → puftpus (原始: kupppus is puftpus)
  215. [actual] bakypus → kupppus (原始: bakypus is kupppus)
  216. [planning] bakypus → kupppus (原始: bakypus is kupppus)
  217. [actual] vazwpus → bakypus and hobfpus (原始: vazwpus is bakypus and hobfpus)
  218. [actual] vazwpus → bakypus (原始: vazwpus is bakypus)
  219. [planning] vazwpus → mavgpus (原始: vazwpus is mavgpus)
  220. [actual] pimcpus → vazwpus (原始: pimcpus is vazwpus)
  221. [planning] pimcpus → vazwpus (原始: pimcpus is vazwpus)
  222. [actual] tibfpus → pimcpus and cojppus and xowmpus (原始: tibfpus is pimcpus and cojppus and xowmpus)
  223. [actual] tibfpus → pimcpus (原始: tibfpus is pimcpus)
  224. [actual] tibfpus → mavgpus (原始: tibfpus is mavgpus)
  225. [actual] jacvpus → tibfpus (原始: jacvpus is tibfpus)
  226. [planning] jacvpus → tibfpus (原始: jacvpus is tibfpus)
  227. [planning] jacvpus → tibfpus (原始: jacvpus is tibfpus)
  228. [actual] x → jacvpus (原始: x is jacvpus)
  229. [planning] x → mavgpus (原始: x is mavgpus)
  230. [actual] x → mavgpus (原始: x is mavgpus)
  231. [actual] mavgpus → hudqpus (原始: mavgpus is hudqpus)
  232. [planning] hudqpus → babgpus (原始: hudqpus is babgpus)
  233. [actual] hudqpus → babgpus or babrpus (原始: hudqpus is babgpus or babrpus)
  234. [actual] mavgpus → hudqpus (原始: mavgpus is hudqpus)
  235. [actual] x → mavgpus (原始: x is mavgpus)
  236. [planning] x → babgpus or babrpus (原始: x is babgpus or babrpus)
  237. [planning] x → babgpus or babrpus (原始: x is babgpus or babrpus)
  238. [planning] x → babgpus or babrpus (原始: x is babgpus or babrpus)
  239. [actual] x → babgpus or babrpus (原始: x is babgpus or babrpus)
  240. [planning] x → mavgpus (原始: x is mavgpus)
  241. [planning] mavgpus → hudqpus (原始: mavgpus is hudqpus)
  242. [planning] x → babgpus (原始: x is babgpus)
  243. [planning] x → babgpus (原始: x is babgpus)
  244. [actual] golypus → yudrpus (原始: golypus is yudrpus)
  245. [actual] x → jacvpus (原始: x is jacvpus)
  246. [actual] hudqpus → babgpus or babrpus (原始: hudqpus is babgpus or babrpus)
  247. [actual] x → mavgpus (原始: x is mavgpus)
  248. [actual] mavgpus → hudqpus (原始: mavgpus is hudqpus)
  249. [actual] hudqpus → babgpus or babrpus (原始: hudqpus is babgpus or babrpus)
  250. [actual] x → babgpus or babrpus (原始: x is babgpus or babrpus)
  251. [planning] x → babgpus or babrpus (原始: x is babgpus or babrpus)
  252. [actual] mavgpus → hudqpus (原始: mavgpus is hudqpus)
  253. [actual] pixxpus → mavgpus and fimypus (原始: pixxpus is mavgpus and fimypus)
  254. [actual] yucjpus → pixxpus and xablpus (原始: yucjpus is pixxpus and xablpus)
  255. [actual] mombpus → yucjpus and bunzpus (原始: mombpus is yucjpus and bunzpus)
  256. [actual] biwfpus → mombpus and pomqpus (原始: biwfpus is mombpus and pomqpus)
  257. [actual] wukdpus → biwfpus (原始: wukdpus is biwfpus)
  258. [actual] vavypus → wukdpus (原始: vavypus is wukdpus)
  259. [actual] yudrpus → vavypus (原始: yudrpus is vavypus)
  260. [actual] golypus → yudrpus (原始: golypus is yudrpus)
  261. [actual] kigxpus → golypus (原始: kigxpus is golypus)
  262. [actual] bixspus → kigxpus (原始: bixspus is kigxpus)
  263. [actual] jujzpus → bixspus (原始: jujzpus is bixspus)
  264. [actual] qetxpus → jujzpus (原始: qetxpus is jujzpus)
  265. [actual] cukbpus → qetxpus (原始: cukbpus is qetxpus)
  266. [actual] secfpus → cukbpus and gubxpus (原始: secfpus is cukbpus and gubxpus)
  267. [actual] xuhnpus → secfpus and puyxpus and mogrpus (原始: xuhnpus is secfpus and puyxpus and mogrpus)
  268. [actual] puftpus → xuhnpus and gibkpus (原始: puftpus is xuhnpus and gibkpus)
  269. [actual] kupppus → puftpus and faskpus and kujfpus (原始: kupppus is puftpus and faskpus and kujfpus)
  270. [actual] bakypus → kupppus (原始: bakypus is kupppus)
  271. [actual] vazwpus → bakypus and hobfpus (原始: vazwpus is bakypus and hobfpus)
  272. [actual] pimcpus → vazwpus (原始: pimcpus is vazwpus)
  273. [actual] tibfpus → pimcpus and cojppus and xowmpus (原始: tibfpus is pimcpus and cojppus and xowmpus)
  274. [actual] jacvpus → tibfpus (原始: jacvpus is tibfpus)
  275. [actual] x → jacvpus (原始: x is jacvpus)
  276. [planning] x → jacvpus (原始: x is jacvpus)
  277. [actual] x → jacvpus (原始: x is jacvpus)
  278. [planning] x → jacvpus (原始: x is jacvpus)
  279. [planning] jacvpus → mavgpus (原始: jacvpus is mavgpus)
  280. [planning] x → mavgpus (原始: x is mavgpus)
  281. [actual] mavgpus → hudqpus (原始: mavgpus is hudqpus)
  282. [actual] x → hudqpus (原始: x is hudqpus)
  283. [actual] x → babgpus or babrpus (原始: x is babgpus or babrpus)
  284. [planning] hudqpus → babgpus (原始: hudqpus is babgpus)
  285. [planning] hudqpus → babrpus (原始: hudqpus is babrpus)
  286. [planning] hudqpus → babgpus (原始: hudqpus is babgpus)
  287. [planning] hudqpus → babrpus (原始: hudqpus is babrpus)
  288. [planning] x → babgpus or babrpus (原始: x is babgpus or babrpus)

开始新的后处理...
[后处理] 从LoG数据文件中获取到图数据，节点数: 37
[后处理] 加载LoG图，包含 37 个节点
  LoG节点 0: x is babgpus or babrpus (规则: MP, 深度: 1)
  LoG节点 1: x is puftpus (规则: CE, 深度: 2)
  LoG节点 2: puftpus is babgpus or babrpus (规则: MP, 深度: 2)
  LoG节点 3: x is puftpus and faskpus (规则: MP, 深度: 3)
  LoG节点 4: puftpus is yudrpus (规则: MP, 深度: 3)
  LoG节点 5: yudrpus is babgpus or babrpus (规则: MP, 深度: 3)
  LoG节点 6: x is pimcpus (规则: CE, 深度: 4)
  LoG节点 7: pimcpus is puftpus and faskpus (规则: MP, 深度: 4)
  LoG节点 8: puftpus is secfpus (规则: CE, 深度: 4)
  LoG节点 9: secfpus is yudrpus (规则: MP, 深度: 4)
  LoG节点 10: yudrpus is mombpus (规则: CE, 深度: 4)
  LoG节点 11: mombpus is babgpus or babrpus (规则: MP, 深度: 4)
  LoG节点 12: x is pimcpus and cojppus (规则: MP, 深度: 5)
  LoG节点 13: pimcpus is bakypus (规则: CE, 深度: 5)
  LoG节点 14: bakypus is puftpus and faskpus (规则: CE, 深度: 5)
  LoG节点 15: puftpus is secfpus and puyxpus (规则: MP, 深度: 5)
  LoG节点 16: secfpus is jujzpus (规则: MP, 深度: 5)
  LoG节点 17: jujzpus is yudrpus (规则: MP, 深度: 5)
  LoG节点 18: yudrpus is mombpus and pomqpus (规则: MP, 深度: 5)
  LoG节点 19: mombpus is pixxpus (规则: MP, 深度: 5)
  LoG节点 20: pixxpus is babgpus or babrpus (规则: MP, 深度: 5)
  LoG节点 21: x is tibfpus (规则: MP, 深度: 6)
  LoG节点 22: tibfpus is pimcpus and cojppus (规则: CE, 深度: 6)
  LoG节点 23: pimcpus is bakypus and hobfpus (规则: MP, 深度: 6)
  LoG节点 24: bakypus is puftpus and faskpus and kujfpus (规则: MP, 深度: 6)
  LoG节点 25: puftpus is xuhnpus (规则: CE, 深度: 6)
  LoG节点 26: xuhnpus is secfpus and puyxpus (规则: CE, 深度: 6)
  LoG节点 27: secfpus is cukbpus (规则: CE, 深度: 6)
  LoG节点 28: cukbpus is jujzpus (规则: MP, 深度: 6)
  LoG节点 29: jujzpus is kigxpus (规则: MP, 深度: 6)
  LoG节点 30: kigxpus is yudrpus (规则: MP, 深度: 6)
  LoG节点 31: yudrpus is wukdpus (规则: MP, 深度: 6)
  LoG节点 32: wukdpus is mombpus and pomqpus (规则: MP, 深度: 6)
  LoG节点 33: mombpus is yucjpus (规则: CE, 深度: 6)
  LoG节点 34: yucjpus is pixxpus (规则: CE, 深度: 6)
  LoG节点 35: pixxpus is mavgpus (规则: CE, 深度: 6)
  LoG节点 36: mavgpus is babgpus or babrpus (规则: MP, 深度: 6)

============================================================
[后处理] 开始处理节点
============================================================
📊 初始状态:
   - 标准化节点数: 288
   - 初始条件数: 25
   - LoG图节点数: 37

📋 初始条件列表:
    1. golypus is yudrpus
    2. secfpus is cukbpus and gubxpus
    3. wukdpus is biwfpus
    4. hudqpus is babgpus or babrpus
    5. vazwpus is bakypus and hobfpus
    6. puftpus is xuhnpus and gibkpus
    7. x is jacvpus
    8. pixxpus is mavgpus and fimypus
    9. cukbpus is qetxpus
   10. yucjpus is pixxpus and xablpus
   11. biwfpus is mombpus and pomqpus
   12. xuhnpus is secfpus and puyxpus and mogrpus
   13. vavypus is wukdpus
   14. qetxpus is jujzpus
   15. mombpus is yucjpus and bunzpus
   16. kigxpus is golypus
   17. bixspus is kigxpus
   18. jujzpus is bixspus
   19. yudrpus is vavypus
   20. bakypus is kupppus
   21. kupppus is puftpus and faskpus and kujfpus
   22. pimcpus is vazwpus
   23. mavgpus is hudqpus
   24. jacvpus is tibfpus
   25. tibfpus is pimcpus and cojppus and xowmpus

🔧 构建初始Statement列表...
✅ 初始Statement列表构建完成，包含 25 个前提节点

🔍 开始处理actual节点...

   节点 1: x is jacvpus
      ↻ 重复节点，计数: 2

   节点 2: golypus is yudrpus
      ↻ 重复节点，计数: 2

   节点 3: secfpus is cukbpus and gubxpus
      ↻ 重复节点，计数: 2

   节点 4: wukdpus is biwfpus
      ↻ 重复节点，计数: 2

   节点 5: hudqpus is babgpus or babrpus
      ↻ 重复节点，计数: 2

   节点 6: vazwpus is bakypus and hobfpus
      ↻ 重复节点，计数: 2

   节点 7: puftpus is xuhnpus and gibkpus
      ↻ 重复节点，计数: 2

   节点 8: x is jacvpus
      ↻ 重复节点，计数: 3

   节点 9: x is jacvpus
      ↻ 重复节点，计数: 4

   节点 10: pixxpus is mavgpus and fimypus
      ↻ 重复节点，计数: 2

   节点 11: cukbpus is qetxpus
      ↻ 重复节点，计数: 2

   节点 12: yucjpus is pixxpus and xablpus
      ↻ 重复节点，计数: 2

   节点 13: biwfpus is mombpus and pomqpus
      ↻ 重复节点，计数: 2

   节点 14: xuhnpus is secfpus and puyxpus and mogrpus
      ↻ 重复节点，计数: 2

   节点 15: vavypus is wukdpus
      ↻ 重复节点，计数: 2

   节点 16: qetxpus is jujzpus
      ↻ 重复节点，计数: 2

   节点 17: mombpus is yucjpus and bunzpus
      ↻ 重复节点，计数: 2

   节点 18: kigxpus is golypus
      ↻ 重复节点，计数: 2

   节点 19: bixspus is kigxpus
      ↻ 重复节点，计数: 2

   节点 20: jujzpus is bixspus
      ↻ 重复节点，计数: 2

   节点 21: yudrpus is vavypus
      ↻ 重复节点，计数: 2

   节点 22: bakypus is kupppus
      ↻ 重复节点，计数: 2

   节点 23: kupppus is puftpus and faskpus and kujfpus
      ↻ 重复节点，计数: 2

   节点 24: pimcpus is vazwpus
      ↻ 重复节点，计数: 2

   节点 25: mavgpus is hudqpus
      ↻ 重复节点，计数: 2

   节点 26: jacvpus is tibfpus
      ↻ 重复节点，计数: 2

   节点 27: x is jacvpus
      ↻ 重复节点，计数: 5

   节点 28: jacvpus is tibfpus
      ↻ 重复节点，计数: 3

   节点 29: tibfpus is pimcpus and cojppus and xowmpus
      ↻ 重复节点，计数: 2

   节点 30: jacvpus is tibfpus
      ↻ 重复节点，计数: 4

   节点 31: pimcpus is vazwpus
      ↻ 重复节点，计数: 3

   节点 32: vazwpus is bakypus and hobfpus
      ↻ 重复节点，计数: 3

   节点 33: bakypus is kupppus
      ↻ 重复节点，计数: 3

   节点 34: kupppus is puftpus and faskpus and kujfpus
      ↻ 重复节点，计数: 3

   节点 35: puftpus is xuhnpus and gibkpus
      ↻ 重复节点，计数: 3

   节点 36: xuhnpus is secfpus and puyxpus and mogrpus
      ↻ 重复节点，计数: 3

   节点 37: secfpus is cukbpus and gubxpus
      ↻ 重复节点，计数: 3

   节点 38: cukbpus is qetxpus
      ↻ 重复节点，计数: 3

   节点 39: qetxpus is jujzpus
      ↻ 重复节点，计数: 3

   节点 40: jujzpus is bixspus
      ↻ 重复节点，计数: 3

   节点 41: bixspus is kigxpus
      ↻ 重复节点，计数: 3

   节点 42: kigxpus is golypus
      ↻ 重复节点，计数: 3

   节点 43: golypus is yudrpus
      ↻ 重复节点，计数: 3

   节点 44: yudrpus is vavypus
      ↻ 重复节点，计数: 3

   节点 45: vavypus is wukdpus
      ↻ 重复节点，计数: 3

   节点 46: wukdpus is biwfpus
      ↻ 重复节点，计数: 3

   节点 47: biwfpus is mombpus and pomqpus
      ↻ 重复节点，计数: 3

   节点 48: mombpus is yucjpus and bunzpus
      ↻ 重复节点，计数: 3

   节点 49: yucjpus is pixxpus and xablpus
      ↻ 重复节点，计数: 3

   节点 50: pixxpus is mavgpus and fimypus
      ↻ 重复节点，计数: 3

   节点 51: mavgpus is hudqpus
      ↻ 重复节点，计数: 3

   节点 52: hudqpus is babgpus or babrpus
      ↻ 重复节点，计数: 3

   节点 53: tibfpus is pimcpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: tibfpus is pimcpus and cojppus and xowmpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: tibfpus is pimcpus and cojppus and xowmpus
  ✓ 点亮LoG节点: tibfpus is pimcpus and cojppus
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 54: pimcpus is vazwpus
      ↻ 重复节点，计数: 4

   节点 55: vazwpus is bakypus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: vazwpus is bakypus and hobfpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: vazwpus is bakypus and hobfpus

   节点 56: bakypus is kupppus
      ↻ 重复节点，计数: 4

   节点 57: kupppus is puftpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: kupppus is puftpus and faskpus and kujfpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: kupppus is puftpus and faskpus and kujfpus

   节点 58: puftpus is xuhnpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: puftpus is xuhnpus
      ✅ 验证成功 + LoG匹配

   节点 59: xuhnpus is secfpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: xuhnpus is secfpus and puyxpus and mogrpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: xuhnpus is secfpus and puyxpus and mogrpus
  ✓ 点亮LoG节点: xuhnpus is secfpus and puyxpus
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 60: secfpus is cukbpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: secfpus is cukbpus
      ✅ 验证成功 + LoG匹配

   节点 61: cukbpus is qetxpus
      ↻ 重复节点，计数: 4

   节点 62: qetxpus is jujzpus
      ↻ 重复节点，计数: 4

   节点 63: jujzpus is bixspus
      ↻ 重复节点，计数: 4

   节点 64: bixspus is kigxpus
      ↻ 重复节点，计数: 4

   节点 65: kigxpus is golypus
      ↻ 重复节点，计数: 4

   节点 66: golypus is yudrpus
      ↻ 重复节点，计数: 4

   节点 67: yudrpus is vavypus
      ↻ 重复节点，计数: 4

   节点 68: vavypus is wukdpus
      ↻ 重复节点，计数: 4

   节点 69: wukdpus is biwfpus
      ↻ 重复节点，计数: 4

   节点 70: biwfpus is mombpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: biwfpus is mombpus and pomqpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: biwfpus is mombpus and pomqpus

   节点 71: mombpus is yucjpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: mombpus is yucjpus
      ✅ 验证成功 + LoG匹配

   节点 72: yucjpus is pixxpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: yucjpus is pixxpus
      ✅ 验证成功 + LoG匹配

   节点 73: pixxpus is mavgpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: pixxpus is mavgpus
      ✅ 验证成功 + LoG匹配

   节点 74: mavgpus is hudqpus
      ↻ 重复节点，计数: 4

   节点 75: jacvpus is tibfpus
      ↻ 重复节点，计数: 5

   节点 76: jacvpus is x
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 77: hudqpus is babgpus or babrpus
      ↻ 重复节点，计数: 4

   节点 78: mavgpus is hudqpus
      ↻ 重复节点，计数: 5

   节点 79: x is jacvpus
      ↻ 重复节点，计数: 6

   节点 80: jacvpus is tibfpus
      ↻ 重复节点，计数: 6

   节点 81: tibfpus is pimcpus
      ↻ 重复节点，计数: 2

   节点 82: hudqpus is babgpus or babrpus
      ↻ 重复节点，计数: 5

   节点 83: hudqpus is babgpus or babrpus
      ↻ 重复节点，计数: 6

   节点 84: hudqpus is babgpus or babrpus
      ↻ 重复节点，计数: 7

   节点 85: hudqpus is babgpus or babrpus
      ↻ 重复节点，计数: 8

   节点 86: hudqpus is babgpus or babrpus
      ↻ 重复节点，计数: 9

   节点 87: mavgpus is hudqpus
      ↻ 重复节点，计数: 6

   节点 88: hudqpus is babgpus or babrpus
      ↻ 重复节点，计数: 10

   节点 89: x is jacvpus
      ↻ 重复节点，计数: 7

   节点 90: jacvpus is tibfpus
      ↻ 重复节点，计数: 7

   节点 91: tibfpus is pimcpus
      ↻ 重复节点，计数: 3

   节点 92: pimcpus is vazwpus
      ↻ 重复节点，计数: 5

   节点 93: hudqpus is babgpus or babrpus
      ↻ 重复节点，计数: 11

   节点 94: x is hudqpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is jacvpus → jacvpus is hudqpus
[后处理] 基于推理轨迹点亮节点，使用了 24 个前提条件:
  - 前提: x is jacvpus
  - 前提: jacvpus is tibfpus
  - 前提: tibfpus is pimcpus
  - 前提: pimcpus is vazwpus
  - 前提: vazwpus is bakypus
  - 前提: bakypus is kupppus
  - 前提: kupppus is puftpus
  - 前提: puftpus is xuhnpus
  - 前提: xuhnpus is secfpus
  - 前提: secfpus is cukbpus
  - 前提: cukbpus is qetxpus
  - 前提: qetxpus is jujzpus
  - 前提: jujzpus is bixspus
  - 前提: bixspus is kigxpus
  - 前提: kigxpus is golypus
  - 前提: golypus is yudrpus
  - 前提: yudrpus is vavypus
  - 前提: vavypus is wukdpus
  - 前提: wukdpus is biwfpus
  - 前提: biwfpus is mombpus
  - 前提: mombpus is yucjpus
  - 前提: yucjpus is pixxpus
  - 前提: pixxpus is mavgpus
  - 前提: mavgpus is hudqpus
  ✓ 点亮LoG节点: x is puftpus
[子树点亮]     └─ 点亮依赖节点: x is puftpus and faskpus (深度3)
[子树点亮]     └─ 点亮依赖节点: x is pimcpus (深度4)
[子树点亮]     └─ 点亮依赖节点: pimcpus is puftpus and faskpus (深度4)
[子树点亮]     └─ 点亮依赖节点: x is pimcpus and cojppus (深度5)
[子树点亮]     └─ 点亮依赖节点: pimcpus is bakypus (深度5)
[子树点亮]     └─ 点亮依赖节点: bakypus is puftpus and faskpus (深度5)
[子树点亮]     └─ 点亮依赖节点: x is tibfpus (深度6)
[子树点亮]     └─ 点亮依赖节点: pimcpus is bakypus and hobfpus (深度6)
[子树点亮]     └─ 点亮依赖节点: bakypus is puftpus and faskpus and kujfpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 9 个节点
  ✓ 点亮LoG节点: puftpus is yudrpus
[子树点亮]     └─ 点亮依赖节点: puftpus is secfpus (深度4)
[子树点亮]     └─ 点亮依赖节点: secfpus is yudrpus (深度4)
[子树点亮]     └─ 点亮依赖节点: puftpus is secfpus and puyxpus (深度5)
[子树点亮]     └─ 点亮依赖节点: secfpus is jujzpus (深度5)
[子树点亮]     └─ 点亮依赖节点: jujzpus is yudrpus (深度5)
[子树点亮]     └─ 点亮依赖节点: cukbpus is jujzpus (深度6)
[子树点亮]     └─ 点亮依赖节点: jujzpus is kigxpus (深度6)
[子树点亮]     └─ 点亮依赖节点: kigxpus is yudrpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 8 个节点
  ✓ 点亮LoG节点: yudrpus is mombpus
[子树点亮]     └─ 点亮依赖节点: yudrpus is mombpus and pomqpus (深度5)
[子树点亮]     └─ 点亮依赖节点: yudrpus is wukdpus (深度6)
[子树点亮]     └─ 点亮依赖节点: wukdpus is mombpus and pomqpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 3 个节点
  ✓ 点亮LoG节点: mombpus is pixxpus
[后处理] 通过推理轨迹额外点亮了 4 个LoG节点

   节点 95: hudqpus is babgpus or babrpus
      ↻ 重复节点，计数: 12

   节点 96: mavgpus is hudqpus
      ↻ 重复节点，计数: 7

   节点 97: x is jacvpus
      ↻ 重复节点，计数: 8

   节点 98: jacvpus is tibfpus
      ↻ 重复节点，计数: 8

   节点 99: tibfpus is pimcpus and cojppus and xowmpus
      ↻ 重复节点，计数: 3

   节点 100: tibfpus is pimcpus
      ↻ 重复节点，计数: 4

   节点 101: tibfpus is pimcpus
      ↻ 重复节点，计数: 5

   节点 102: pimcpus is vazwpus
      ↻ 重复节点，计数: 6

   节点 103: vazwpus is bakypus and hobfpus
      ↻ 重复节点，计数: 4

   节点 104: vazwpus is bakypus and hobfpus
      ↻ 重复节点，计数: 5

   节点 105: vazwpus is bakypus
      ↻ 重复节点，计数: 2

   节点 106: vazwpus is hobfpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: vazwpus is bakypus and hobfpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: vazwpus is bakypus and hobfpus

   节点 107: vazwpus is bakypus and hobfpus
      ↻ 重复节点，计数: 6

   节点 108: bakypus is kupppus
      ↻ 重复节点，计数: 5

   节点 109: bakypus is kupppus
      ↻ 重复节点，计数: 6

   节点 110: kupppus is puftpus and faskpus and kujfpus
      ↻ 重复节点，计数: 4

   节点 111: kupppus is puftpus
      ↻ 重复节点，计数: 2

   节点 112: kupppus is faskpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: kupppus is puftpus and faskpus and kujfpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: kupppus is puftpus and faskpus and kujfpus

   节点 113: kupppus is kujfpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: kupppus is puftpus and faskpus and kujfpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: kupppus is puftpus and faskpus and kujfpus

   节点 114: kupppus is puftpus
      ↻ 重复节点，计数: 3

   节点 115: bakypus is kupppus
      ↻ 重复节点，计数: 7

   节点 116: kupppus is puftpus
      ↻ 重复节点，计数: 4

   节点 117: hudqpus is babgpus or babrpus
      ↻ 重复节点，计数: 13

   节点 118: hudqpus is babgpus or babrpus
      ↻ 重复节点，计数: 14

   节点 119: secfpus is cukbpus and gubxpus
      ↻ 重复节点，计数: 4

   节点 120: x is jacvpus
      ↻ 重复节点，计数: 9

   节点 121: jacvpus is tibfpus
      ↻ 重复节点，计数: 9

   节点 122: mavgpus is hudqpus
      ↻ 重复节点，计数: 8

   节点 123: hudqpus is babgpus or babrpus
      ↻ 重复节点，计数: 15

   节点 124: mavgpus is hudqpus
      ↻ 重复节点，计数: 9

   节点 125: hudqpus is babgpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 126: mavgpus is hudqpus
      ↻ 重复节点，计数: 10

   节点 127: hudqpus is babgpus
      ↻ 重复节点，计数: 2

   节点 128: yucjpus is pixxpus and xablpus
      ↻ 重复节点，计数: 4

   节点 129: pixxpus is mavgpus and fimypus
      ↻ 重复节点，计数: 4

   节点 130: pixxpus is mavgpus
      ↻ 重复节点，计数: 2

   节点 131: yucjpus is pixxpus
      ↻ 重复节点，计数: 2

   节点 132: pixxpus is mavgpus
      ↻ 重复节点，计数: 3

   节点 133: yucjpus is mavgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: yucjpus is pixxpus → pixxpus is mavgpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: yucjpus is pixxpus
  - 前提: pixxpus is mavgpus

   节点 134: mombpus is yucjpus and bunzpus
      ↻ 重复节点，计数: 4

   节点 135: mombpus is yucjpus
      ↻ 重复节点，计数: 2

   节点 136: biwfpus is mombpus and pomqpus
      ↻ 重复节点，计数: 4

   节点 137: wukdpus is biwfpus
      ↻ 重复节点，计数: 5

   节点 138: wukdpus is biwfpus
      ↻ 重复节点，计数: 6

   节点 139: wukdpus is mavgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: wukdpus is biwfpus → biwfpus is mavgpus
[后处理] 基于推理轨迹点亮节点，使用了 4 个前提条件:
  - 前提: wukdpus is biwfpus
  - 前提: biwfpus is mombpus
  - 前提: mombpus is yucjpus
  - 前提: yucjpus is mavgpus

   节点 140: vavypus is wukdpus
      ↻ 重复节点，计数: 5

   节点 141: vavypus is wukdpus
      ↻ 重复节点，计数: 6

   节点 142: vavypus is mavgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: vavypus is wukdpus → wukdpus is mavgpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: vavypus is wukdpus
  - 前提: wukdpus is mavgpus

   节点 143: yudrpus is vavypus
      ↻ 重复节点，计数: 5

   节点 144: golypus is yudrpus
      ↻ 重复节点，计数: 5

   节点 145: golypus is yudrpus
      ↻ 重复节点，计数: 6

   节点 146: kigxpus is golypus
      ↻ 重复节点，计数: 5

   节点 147: bixspus is kigxpus
      ↻ 重复节点，计数: 5

   节点 148: jujzpus is bixspus
      ↻ 重复节点，计数: 5

   节点 149: jujzpus is bixspus
      ↻ 重复节点，计数: 6

   节点 150: qetxpus is jujzpus
      ↻ 重复节点，计数: 5

   节点 151: cukbpus is qetxpus
      ↻ 重复节点，计数: 5

   节点 152: secfpus is cukbpus and gubxpus
      ↻ 重复节点，计数: 5

   节点 153: xuhnpus is secfpus and puyxpus and mogrpus
      ↻ 重复节点，计数: 4

   节点 154: puftpus is xuhnpus and gibkpus
      ↻ 重复节点，计数: 4

   节点 155: kupppus is puftpus and faskpus and kujfpus
      ↻ 重复节点，计数: 5

   节点 156: bakypus is kupppus
      ↻ 重复节点，计数: 8

   节点 157: vazwpus is bakypus and hobfpus
      ↻ 重复节点，计数: 7

   节点 158: vazwpus is bakypus
      ↻ 重复节点，计数: 3

   节点 159: pimcpus is vazwpus
      ↻ 重复节点，计数: 7

   节点 160: tibfpus is pimcpus and cojppus and xowmpus
      ↻ 重复节点，计数: 4

   节点 161: tibfpus is pimcpus
      ↻ 重复节点，计数: 6

   节点 162: tibfpus is mavgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: tibfpus is pimcpus → pimcpus is mavgpus
[后处理] 基于推理轨迹点亮节点，使用了 16 个前提条件:
  - 前提: tibfpus is pimcpus
  - 前提: pimcpus is vazwpus
  - 前提: vazwpus is bakypus
  - 前提: bakypus is kupppus
  - 前提: kupppus is puftpus
  - 前提: puftpus is xuhnpus
  - 前提: xuhnpus is secfpus
  - 前提: secfpus is cukbpus
  - 前提: cukbpus is qetxpus
  - 前提: qetxpus is jujzpus
  - 前提: jujzpus is bixspus
  - 前提: bixspus is kigxpus
  - 前提: kigxpus is golypus
  - 前提: golypus is yudrpus
  - 前提: yudrpus is vavypus
  - 前提: vavypus is mavgpus

   节点 163: jacvpus is tibfpus
      ↻ 重复节点，计数: 10

   节点 164: x is jacvpus
      ↻ 重复节点，计数: 10

   节点 165: x is mavgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is jacvpus → jacvpus is mavgpus
[后处理] 基于推理轨迹点亮节点，使用了 3 个前提条件:
  - 前提: x is jacvpus
  - 前提: jacvpus is tibfpus
  - 前提: tibfpus is mavgpus

   节点 166: mavgpus is hudqpus
      ↻ 重复节点，计数: 11

   节点 167: hudqpus is babgpus or babrpus
      ↻ 重复节点，计数: 16

   节点 168: mavgpus is hudqpus
      ↻ 重复节点，计数: 12

   节点 169: x is mavgpus
      ↻ 重复节点，计数: 2

   节点 170: x is babgpus or babrpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is babgpus or babrpus
[子树点亮]     └─ 点亮依赖节点: puftpus is babgpus or babrpus (深度2)
[子树点亮]     └─ 点亮依赖节点: yudrpus is babgpus or babrpus (深度3)
[子树点亮]     └─ 点亮依赖节点: mombpus is babgpus or babrpus (深度4)
[子树点亮]     └─ 点亮依赖节点: pixxpus is babgpus or babrpus (深度5)
[子树点亮]     └─ 点亮依赖节点: mavgpus is babgpus or babrpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 5 个节点
      ✅ 验证成功 + LoG匹配

   节点 171: golypus is yudrpus
      ↻ 重复节点，计数: 7

   节点 172: x is jacvpus
      ↻ 重复节点，计数: 11

   节点 173: hudqpus is babgpus or babrpus
      ↻ 重复节点，计数: 17

   节点 174: x is mavgpus
      ↻ 重复节点，计数: 3

   节点 175: mavgpus is hudqpus
      ↻ 重复节点，计数: 13

   节点 176: hudqpus is babgpus or babrpus
      ↻ 重复节点，计数: 18

   节点 177: x is babgpus or babrpus
      ↻ 重复节点，计数: 2

   节点 178: mavgpus is hudqpus
      ↻ 重复节点，计数: 14

   节点 179: pixxpus is mavgpus and fimypus
      ↻ 重复节点，计数: 5

   节点 180: yucjpus is pixxpus and xablpus
      ↻ 重复节点，计数: 5

   节点 181: mombpus is yucjpus and bunzpus
      ↻ 重复节点，计数: 5

   节点 182: biwfpus is mombpus and pomqpus
      ↻ 重复节点，计数: 5

   节点 183: wukdpus is biwfpus
      ↻ 重复节点，计数: 7

   节点 184: vavypus is wukdpus
      ↻ 重复节点，计数: 7

   节点 185: yudrpus is vavypus
      ↻ 重复节点，计数: 6

   节点 186: golypus is yudrpus
      ↻ 重复节点，计数: 8

   节点 187: kigxpus is golypus
      ↻ 重复节点，计数: 6

   节点 188: bixspus is kigxpus
      ↻ 重复节点，计数: 6

   节点 189: jujzpus is bixspus
      ↻ 重复节点，计数: 7

   节点 190: qetxpus is jujzpus
      ↻ 重复节点，计数: 6

   节点 191: cukbpus is qetxpus
      ↻ 重复节点，计数: 6

   节点 192: secfpus is cukbpus and gubxpus
      ↻ 重复节点，计数: 6

   节点 193: xuhnpus is secfpus and puyxpus and mogrpus
      ↻ 重复节点，计数: 5

   节点 194: puftpus is xuhnpus and gibkpus
      ↻ 重复节点，计数: 5

   节点 195: kupppus is puftpus and faskpus and kujfpus
      ↻ 重复节点，计数: 6

   节点 196: bakypus is kupppus
      ↻ 重复节点，计数: 9

   节点 197: vazwpus is bakypus and hobfpus
      ↻ 重复节点，计数: 8

   节点 198: pimcpus is vazwpus
      ↻ 重复节点，计数: 8

   节点 199: tibfpus is pimcpus and cojppus and xowmpus
      ↻ 重复节点，计数: 5

   节点 200: jacvpus is tibfpus
      ↻ 重复节点，计数: 11

   节点 201: x is jacvpus
      ↻ 重复节点，计数: 12

   节点 202: x is jacvpus
      ↻ 重复节点，计数: 13

   节点 203: mavgpus is hudqpus
      ↻ 重复节点，计数: 15

   节点 204: x is hudqpus
      ↻ 重复节点，计数: 2

   节点 205: x is babgpus or babrpus
      ↻ 重复节点，计数: 3

🔍 分析推理路径完整性...

============================================================
[后处理] 处理完成
============================================================
📈 处理统计:
   - 处理的actual节点: 205
   - 新增节点: 22
   - 更新已存在节点: 183
   - 点亮的LoG节点: 37

🎯 推理质量统计:
   - 完美推理: 22 (节点正确 + 路径正确)
   - 部分推理: 0 (节点正确 + 路径部分错误)
   - 无效推理: 0 (节点错误或路径完全错误)
[LoG分析] LoG图: 37节点, 25前提, 复杂度1-25

📊 === Statement列表分析 ===
📈 节点统计:
   - 总节点数: 47
   - 前提节点: 25
   - 推理节点: 20
   - 幻觉节点: 2
   - 点亮LoG节点: 37

❌ 幻觉节点详情:
   - jacvpus is x (出现1次)
   - hudqpus is babgpus (出现2次)

✅ 推理节点详情:
   🟢 tibfpus is pimcpus (出现6次, 质量:perfect)
   🟢 vazwpus is bakypus (出现3次, 质量:perfect)
   🟢 kupppus is puftpus (出现4次, 质量:perfect)
   🟢 puftpus is xuhnpus (出现1次, 质量:perfect)
   🟢 xuhnpus is secfpus (出现1次, 质量:perfect)
   🟢 secfpus is cukbpus (出现1次, 质量:perfect)
   🟢 biwfpus is mombpus (出现1次, 质量:perfect)
   🟢 mombpus is yucjpus (出现2次, 质量:perfect)
   🟢 yucjpus is pixxpus (出现2次, 质量:perfect)
   🟢 pixxpus is mavgpus (出现3次, 质量:perfect)
   🟢 x is hudqpus (出现2次, 质量:perfect)
   🟢 vazwpus is hobfpus (出现1次, 质量:perfect)
   🟢 kupppus is faskpus (出现1次, 质量:perfect)
   🟢 kupppus is kujfpus (出现1次, 质量:perfect)
   🟢 yucjpus is mavgpus (出现1次, 质量:perfect)
   🟢 wukdpus is mavgpus (出现1次, 质量:perfect)
   🟢 vavypus is mavgpus (出现1次, 质量:perfect)
   🟢 tibfpus is mavgpus (出现1次, 质量:perfect)
   🟢 x is mavgpus (出现3次, 质量:perfect)
   🟢 x is babgpus or babrpus (出现3次, 质量:perfect)

🔥 点亮的LoG节点:
   - yudrpus is wukdpus
   - wukdpus is mombpus and pomqpus
   - puftpus is xuhnpus
   - jujzpus is kigxpus
   - pimcpus is puftpus and faskpus
   - pimcpus is bakypus
   - x is puftpus and faskpus
   - kigxpus is yudrpus
   - x is pimcpus
   - yudrpus is mombpus and pomqpus
   - puftpus is babgpus or babrpus
   - yudrpus is mombpus
   - mombpus is yucjpus
   - secfpus is jujzpus
   - xuhnpus is secfpus and puyxpus
   - x is tibfpus
   - x is pimcpus and cojppus
   - pimcpus is bakypus and hobfpus
   - secfpus is yudrpus
   - mombpus is pixxpus
   - pixxpus is babgpus or babrpus
   - puftpus is yudrpus
   - puftpus is secfpus
   - bakypus is puftpus and faskpus
   - cukbpus is jujzpus
   - secfpus is cukbpus
   - x is babgpus or babrpus
   - yucjpus is pixxpus
   - pixxpus is mavgpus
   - bakypus is puftpus and faskpus and kujfpus
   - jujzpus is yudrpus
   - mavgpus is babgpus or babrpus
   - yudrpus is babgpus or babrpus
   - tibfpus is pimcpus and cojppus
   - puftpus is secfpus and puyxpus
   - mombpus is babgpus or babrpus
   - x is puftpus

============================================================
📊 计算评估指标
============================================================

🎯 计算Coverage指标...
   深度Coverage: 6/6 = 100.00%
   最深点亮节点: x is babgpus or babrpus (第6层)
   节点Coverage: 37/37 = 100.00%
   前提条件Coverage: 25/25 = 100.00%
   各推理层点亮比例:
     第1层: 16/16 = 100.00%
     第2层: 9/9 = 100.00%
     第3层: 6/6 = 100.00%
     第4层: 3/3 = 100.00%
     第5层: 2/2 = 100.00%
     第6层: 1/1 = 100.00%

🎯 计算Precision指标...
   Error Rate: 2/22 = 9.09%
   可推导节点: 20/22
   Strict Error Rate: 2/22 = 9.09%
   严格有效节点: 20/22

   详细分析:
     完美推理: 22 (100.00%)
     部分推理: 0 (0.00%)
     无效推理: 0 (0.00%)

================================================================================
处理记录 33/50
================================================================================
记录索引: 32
问题状态: correct
📁 从缓存加载提取结果: evaluation_results.LoG_6.deepseek-reasoner_record_32.json
✅ 使用缓存结果:
   - 句子数: 41
   - 提取的语句数: 45
   - 初始条件数: 6

=== Statement提取完成 ===
总句子数: 41
成功提取: 41
失败提取: 0
总statements数: 45

=== 开始清洗Statement格式 ===
原始statements数: 45
清洗后statements数: 45
过滤掉的statements数: 0

=== 开始标准化和解析节点 ===
清洗后statements数: 45
标准化后节点数: 44
过滤掉的无效实体数: 1
标准化后的节点:
  1. [actual] x → babgpus (原始: x is babgpus)
  2. [actual] yexbpus → lerwpus and pazjpus (原始: yexbpus is lerwpus and pazjpus)
  3. [actual] velfpus → gumbpus and yafppus (原始: velfpus is gumbpus and yafppus)
  4. [actual] x → yihhpus and conppus (原始: x is yihhpus and conppus)
  5. [actual] zerzpus → babgpus and wufqpus and sabvpus (原始: zerzpus is babgpus and wufqpus and sabvpus)
  6. [actual] yihhpus → hezgpus (原始: yihhpus is hezgpus)
  7. [actual] gumbpus → zerzpus (原始: gumbpus is zerzpus)
  8. [actual] hezgpus → velfpus and seyvpus (原始: hezgpus is velfpus and seyvpus)
  9. [planning] x → babgpus (原始: x is babgpus)
  10. [planning] x → babrpus (原始: x is babrpus)
  11. [planning] x → babgpus (原始: x is babgpus)
  12. [planning] x → babrpus (原始: x is babrpus)
  13. [actual] x → yihhpus and conppus (原始: x is yihhpus and conppus)
  14. [actual] x → yihhpus and conppus (原始: x is yihhpus and conppus)
  15. [actual] yihhpus → hezgpus (原始: yihhpus is hezgpus)
  16. [actual] x → yihhpus (原始: x is yihhpus)
  17. [actual] yihhpus → hezgpus (原始: yihhpus is hezgpus)
  18. [actual] x → hezgpus (原始: x is hezgpus)
  19. [actual] hezgpus → velfpus and seyvpus (原始: hezgpus is velfpus and seyvpus)
  20. [actual] hezgpus → velfpus and seyvpus (原始: hezgpus is velfpus and seyvpus)
  21. [actual] x → hezgpus (原始: x is hezgpus)
  22. [actual] x → velfpus and seyvpus (原始: x is velfpus and seyvpus)
  23. [actual] x → velfpus (原始: x is velfpus)
  24. [actual] velfpus → gumbpus and yafppus (原始: velfpus is gumbpus and yafppus)
  25. [actual] velfpus → gumbpus and yafppus (原始: velfpus is gumbpus and yafppus)
  26. [actual] x → velfpus (原始: x is velfpus)
  27. [actual] x → gumbpus and yafppus (原始: x is gumbpus and yafppus)
  28. [actual] x → gumbpus (原始: x is gumbpus)
  29. [actual] gumbpus → zerzpus (原始: gumbpus is zerzpus)
  30. [actual] gumbpus → zerzpus (原始: gumbpus is zerzpus)
  31. [actual] x → gumbpus (原始: x is gumbpus)
  32. [actual] x → zerzpus (原始: x is zerzpus)
  33. [actual] x → zerzpus (原始: x is zerzpus)
  34. [actual] zerzpus → babgpus and wufqpus and sabvpus (原始: zerzpus is babgpus and wufqpus and sabvpus)
  35. [actual] zerzpus → babgpus and wufqpus and sabvpus (原始: zerzpus is babgpus and wufqpus and sabvpus)
  36. [actual] x → zerzpus (原始: x is zerzpus)
  37. [actual] x → babgpus (原始: x is babgpus)
  38. [actual] x → babgpus (原始: x is babgpus)
  39. [planning] x → babgpus (原始: x is babgpus)
  40. [planning] x → babrpus (原始: x is babrpus)
  41. [actual] x → babgpus (原始: x is babgpus)
  42. [actual] x → babgpus or babrpus (原始: x is babgpus or babrpus)
  43. [actual] x → babgpus or babrpus (原始: x is babgpus or babrpus)
  44. [actual] x → babgpus (原始: x is babgpus)

开始新的后处理...
[后处理] 从LoG数据文件中获取到图数据，节点数: 11
[后处理] 加载LoG图，包含 11 个节点
  LoG节点 0: x is babgpus or babrpus (规则: DI, 深度: 1)
  LoG节点 1: x is babgpus (规则: CE, 深度: 2)
  LoG节点 2: x is babgpus and wufqpus (规则: MP, 深度: 3)
  LoG节点 3: x is velfpus (规则: CE, 深度: 4)
  LoG节点 4: velfpus is babgpus and wufqpus (规则: CE, 深度: 4)
  LoG节点 5: x is velfpus and seyvpus (规则: MP, 深度: 5)
  LoG节点 6: velfpus is babgpus and wufqpus and sabvpus (规则: MP, 深度: 5)
  LoG节点 7: x is yihhpus (规则: CE, 深度: 6)
  LoG节点 8: yihhpus is velfpus and seyvpus (规则: MP, 深度: 6)
  LoG节点 9: velfpus is gumbpus (规则: CE, 深度: 6)
  LoG节点 10: gumbpus is babgpus and wufqpus and sabvpus (规则: MP, 深度: 6)

============================================================
[后处理] 开始处理节点
============================================================
📊 初始状态:
   - 标准化节点数: 44
   - 初始条件数: 6
   - LoG图节点数: 11

📋 初始条件列表:
    1. velfpus is gumbpus and yafppus
    2. x is yihhpus and conppus
    3. zerzpus is babgpus and wufqpus and sabvpus
    4. yihhpus is hezgpus
    5. gumbpus is zerzpus
    6. hezgpus is velfpus and seyvpus

🔧 构建初始Statement列表...
✅ 初始Statement列表构建完成，包含 6 个前提节点

🔍 开始处理actual节点...

   节点 1: x is babgpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is babgpus
[子树点亮]     └─ 点亮依赖节点: x is babgpus and wufqpus (深度3)
[子树点亮]     └─ 点亮依赖节点: x is velfpus (深度4)
[子树点亮]     └─ 点亮依赖节点: velfpus is babgpus and wufqpus (深度4)
[子树点亮]     └─ 点亮依赖节点: x is velfpus and seyvpus (深度5)
[子树点亮]     └─ 点亮依赖节点: velfpus is babgpus and wufqpus and sabvpus (深度5)
[子树点亮]     └─ 点亮依赖节点: x is yihhpus (深度6)
[子树点亮]     └─ 点亮依赖节点: yihhpus is velfpus and seyvpus (深度6)
[子树点亮]     └─ 点亮依赖节点: velfpus is gumbpus (深度6)
[子树点亮]     └─ 点亮依赖节点: gumbpus is babgpus and wufqpus and sabvpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 9 个节点
      ✅ 验证成功 + LoG匹配

   节点 2: yexbpus is lerwpus and pazjpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 3: velfpus is gumbpus and yafppus
      ↻ 重复节点，计数: 2

   节点 4: x is yihhpus and conppus
      ↻ 重复节点，计数: 2

   节点 5: zerzpus is babgpus and wufqpus and sabvpus
      ↻ 重复节点，计数: 2

   节点 6: yihhpus is hezgpus
      ↻ 重复节点，计数: 2

   节点 7: gumbpus is zerzpus
      ↻ 重复节点，计数: 2

   节点 8: hezgpus is velfpus and seyvpus
      ↻ 重复节点，计数: 2

   节点 9: x is yihhpus and conppus
      ↻ 重复节点，计数: 3

   节点 10: x is yihhpus and conppus
      ↻ 重复节点，计数: 4

   节点 11: yihhpus is hezgpus
      ↻ 重复节点，计数: 3

   节点 12: x is yihhpus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 13: yihhpus is hezgpus
      ↻ 重复节点，计数: 4

   节点 14: x is hezgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is yihhpus → yihhpus is hezgpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: x is yihhpus
  - 前提: yihhpus is hezgpus

   节点 15: hezgpus is velfpus and seyvpus
      ↻ 重复节点，计数: 3

   节点 16: hezgpus is velfpus and seyvpus
      ↻ 重复节点，计数: 4

   节点 17: x is hezgpus
      ↻ 重复节点，计数: 2

   节点 18: x is velfpus and seyvpus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 19: x is velfpus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 20: velfpus is gumbpus and yafppus
      ↻ 重复节点，计数: 3

   节点 21: velfpus is gumbpus and yafppus
      ↻ 重复节点，计数: 4

   节点 22: x is velfpus
      ↻ 重复节点，计数: 2

   节点 23: x is gumbpus and yafppus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is yihhpus → yihhpus is gumbpus and yafppus
[后处理] 基于推理轨迹点亮节点，使用了 4 个前提条件:
  - 前提: x is yihhpus
  - 前提: yihhpus is hezgpus
  - 前提: hezgpus is velfpus and seyvpus
  - 前提: velfpus is gumbpus and yafppus

   节点 24: x is gumbpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: x is gumbpus and yafppus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: x is gumbpus and yafppus

   节点 25: gumbpus is zerzpus
      ↻ 重复节点，计数: 3

   节点 26: gumbpus is zerzpus
      ↻ 重复节点，计数: 4

   节点 27: x is gumbpus
      ↻ 重复节点，计数: 2

   节点 28: x is zerzpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is yihhpus → yihhpus is zerzpus
[后处理] 基于推理轨迹点亮节点，使用了 5 个前提条件:
  - 前提: x is yihhpus
  - 前提: yihhpus is hezgpus
  - 前提: hezgpus is velfpus and seyvpus
  - 前提: velfpus is gumbpus and yafppus
  - 前提: gumbpus is zerzpus

   节点 29: x is zerzpus
      ↻ 重复节点，计数: 2

   节点 30: zerzpus is babgpus and wufqpus and sabvpus
      ↻ 重复节点，计数: 3

   节点 31: zerzpus is babgpus and wufqpus and sabvpus
      ↻ 重复节点，计数: 4

   节点 32: x is zerzpus
      ↻ 重复节点，计数: 3

   节点 33: x is babgpus
      ↻ 重复节点，计数: 2

   节点 34: x is babgpus
      ↻ 重复节点，计数: 3

   节点 35: x is babgpus
      ↻ 重复节点，计数: 4

   节点 36: x is babgpus or babrpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is babgpus or babrpus
      ✅ 验证成功 + LoG匹配

   节点 37: x is babgpus or babrpus
      ↻ 重复节点，计数: 2

   节点 38: x is babgpus
      ↻ 重复节点，计数: 5

🔍 分析推理路径完整性...

============================================================
[后处理] 处理完成
============================================================
📈 处理统计:
   - 处理的actual节点: 38
   - 新增节点: 10
   - 更新已存在节点: 28
   - 点亮的LoG节点: 11

🎯 推理质量统计:
   - 完美推理: 10 (节点正确 + 路径正确)
   - 部分推理: 0 (节点正确 + 路径部分错误)
   - 无效推理: 0 (节点错误或路径完全错误)
[LoG分析] LoG图: 11节点, 6前提, 复杂度1-6

📊 === Statement列表分析 ===
📈 节点统计:
   - 总节点数: 16
   - 前提节点: 6
   - 推理节点: 9
   - 幻觉节点: 1
   - 点亮LoG节点: 11

❌ 幻觉节点详情:
   - yexbpus is lerwpus and pazjpus (出现1次)

✅ 推理节点详情:
   🟢 x is babgpus (出现5次, 质量:perfect)
   🟢 x is yihhpus (出现1次, 质量:perfect)
   🟢 x is hezgpus (出现2次, 质量:perfect)
   🟢 x is velfpus and seyvpus (出现1次, 质量:perfect)
   🟢 x is velfpus (出现2次, 质量:perfect)
   🟢 x is gumbpus and yafppus (出现1次, 质量:perfect)
   🟢 x is gumbpus (出现2次, 质量:perfect)
   🟢 x is zerzpus (出现3次, 质量:perfect)
   🟢 x is babgpus or babrpus (出现2次, 质量:perfect)

🔥 点亮的LoG节点:
   - yihhpus is velfpus and seyvpus
   - x is velfpus and seyvpus
   - x is yihhpus
   - velfpus is gumbpus
   - x is babgpus
   - gumbpus is babgpus and wufqpus and sabvpus
   - x is babgpus or babrpus
   - velfpus is babgpus and wufqpus and sabvpus
   - x is velfpus
   - x is babgpus and wufqpus
   - velfpus is babgpus and wufqpus

============================================================
📊 计算评估指标
============================================================

🎯 计算Coverage指标...
   深度Coverage: 6/6 = 100.00%
   最深点亮节点: x is babgpus or babrpus (第6层)
   节点Coverage: 11/11 = 100.00%
   前提条件Coverage: 6/6 = 100.00%
   各推理层点亮比例:
     第1层: 4/4 = 100.00%
     第2层: 2/2 = 100.00%
     第3层: 2/2 = 100.00%
     第4层: 1/1 = 100.00%
     第5层: 1/1 = 100.00%
     第6层: 1/1 = 100.00%

🎯 计算Precision指标...
   Error Rate: 1/10 = 10.00%
   可推导节点: 9/10
   Strict Error Rate: 1/10 = 10.00%
   严格有效节点: 9/10

   详细分析:
     完美推理: 10 (100.00%)
     部分推理: 0 (0.00%)
     无效推理: 0 (0.00%)

================================================================================
处理记录 34/50
================================================================================
记录索引: 33
问题状态: correct
📁 从缓存加载提取结果: evaluation_results.LoG_6.deepseek-reasoner_record_33.json
✅ 使用缓存结果:
   - 句子数: 68
   - 提取的语句数: 76
   - 初始条件数: 30

=== Statement提取完成 ===
总句子数: 68
成功提取: 68
失败提取: 0
总statements数: 76

=== 开始清洗Statement格式 ===
原始statements数: 76
清洗后statements数: 70
过滤掉的statements数: 6
清洗后的statements:
  1. [planning] x is babgpus
  2. [planning] x is babrpus
  3. [planning] x is babspus
  4. [actual] x is caympus and jaxspus
  5. [actual] caympus is gizgpus
  6. [actual] gizgpus is tuwgpus
  7. [actual] tuwgpus is hiwypus
  8. [actual] hiwypus is zivtpus
  9. [actual] zivtpus is zatcpus
  10. [actual] zatcpus is mebmpus
  11. [actual] mebmpus is qusrpus
  12. [actual] qusrpus is renlpus
  13. [actual] renlpus is babrpus and tupcpus and hegrpus and qurypus
  14. [actual] x is caympus
  15. [actual] caympus is gizgpus
  16. [actual] gizgpus is tuwgpus
  17. [actual] tuwgpus is hiwypus
  18. [actual] hiwypus is zivtpus
  19. [actual] zivtpus is zatcpus
  20. [actual] zatcpus is mebmpus
  21. [actual] mebmpus is qusrpus
  22. [actual] qusrpus is renlpus
  23. [actual] renlpus is babrpus
  24. [actual] x is babrpus
  25. [actual] x is renlpus
  26. [planning] x is babgpus
  27. [actual] x is relmpus
  28. [actual] relmpus is babgpus
  29. [actual] x is babgpus
  30. [actual] x is lutgpus
  31. [actual] lutgpus is fuxmpus and moptpus
  32. [actual] fuxmpus is gonfpus
  33. [actual] gonfpus is sohfpus and funnpus
  34. [actual] sohfpus is zewwpus and bezypus
  35. [actual] zewwpus is vimxpus
  36. [actual] vimxpus is babspus and fevbpus and newxpus
  37. [actual] x is babspus
  38. [actual] x is lutgpus
  39. [actual] lutgpus is babspus
  40. [planning] x is babgpus
  41. [planning] x is babgpus
  42. [actual] maqmpus is babgpus and tesvpus and zuwwpus
  43. [actual] jijhpus is maqmpus
  44. [actual] bucqpus is jijhpus and jegdpus
  45. [actual] jofkpus is bucqpus
  46. [actual] safspus is jofkpus and vawzpus
  47. [actual] nivzpus is safspus
  48. [actual] wovkpus is nivzpus
  49. [actual] visrpus is wovkpus
  50. [actual] haskpus is visrpus and jahmpus
  51. [actual] pecrpus is haskpus
  52. [actual] xottpus is pecrpus
  53. [actual] zoykpus is xottpus
  54. [actual] x is zoykpus and zujcpus
  55. [actual] x is zoykpus
  56. [actual] zoykpus is xottpus
  57. [actual] xottpus is pecrpus
  58. [actual] pecrpus is haskpus
  59. [actual] haskpus is visrpus
  60. [actual] visrpus is wovkpus
  61. [actual] wovkpus is nivzpus
  62. [actual] nivzpus is safspus
  63. [actual] safspus is jofkpus
  64. [actual] jofkpus is bucqpus
  65. [actual] bucqpus is jijhpus
  66. [actual] jijhpus is maqmpus
  67. [actual] maqmpus is babgpus
  68. [actual] x is babgpus and babrpus and babspus
  69. [actual] x is babgpus and babrpus and babspus
  70. [planning] x is all three

=== 开始标准化和解析节点 ===
清洗后statements数: 70
标准化后节点数: 69
过滤掉的无效实体数: 1
标准化后的节点:
  1. [planning] x → babgpus (原始: x is babgpus)
  2. [planning] x → babrpus (原始: x is babrpus)
  3. [planning] x → babspus (原始: x is babspus)
  4. [actual] x → caympus and jaxspus (原始: x is caympus and jaxspus)
  5. [actual] caympus → gizgpus (原始: caympus is gizgpus)
  6. [actual] gizgpus → tuwgpus (原始: gizgpus is tuwgpus)
  7. [actual] tuwgpus → hiwypus (原始: tuwgpus is hiwypus)
  8. [actual] hiwypus → zivtpus (原始: hiwypus is zivtpus)
  9. [actual] zivtpus → zatcpus (原始: zivtpus is zatcpus)
  10. [actual] zatcpus → mebmpus (原始: zatcpus is mebmpus)
  11. [actual] mebmpus → qusrpus (原始: mebmpus is qusrpus)
  12. [actual] qusrpus → renlpus (原始: qusrpus is renlpus)
  13. [actual] renlpus → babrpus and tupcpus and hegrpus and qurypus (原始: renlpus is babrpus and tupcpus and hegrpus and qurypus)
  14. [actual] x → caympus (原始: x is caympus)
  15. [actual] caympus → gizgpus (原始: caympus is gizgpus)
  16. [actual] gizgpus → tuwgpus (原始: gizgpus is tuwgpus)
  17. [actual] tuwgpus → hiwypus (原始: tuwgpus is hiwypus)
  18. [actual] hiwypus → zivtpus (原始: hiwypus is zivtpus)
  19. [actual] zivtpus → zatcpus (原始: zivtpus is zatcpus)
  20. [actual] zatcpus → mebmpus (原始: zatcpus is mebmpus)
  21. [actual] mebmpus → qusrpus (原始: mebmpus is qusrpus)
  22. [actual] qusrpus → renlpus (原始: qusrpus is renlpus)
  23. [actual] renlpus → babrpus (原始: renlpus is babrpus)
  24. [actual] x → babrpus (原始: x is babrpus)
  25. [actual] x → renlpus (原始: x is renlpus)
  26. [planning] x → babgpus (原始: x is babgpus)
  27. [actual] x → relmpus (原始: x is relmpus)
  28. [actual] relmpus → babgpus (原始: relmpus is babgpus)
  29. [actual] x → babgpus (原始: x is babgpus)
  30. [actual] x → lutgpus (原始: x is lutgpus)
  31. [actual] lutgpus → fuxmpus and moptpus (原始: lutgpus is fuxmpus and moptpus)
  32. [actual] fuxmpus → gonfpus (原始: fuxmpus is gonfpus)
  33. [actual] gonfpus → sohfpus and funnpus (原始: gonfpus is sohfpus and funnpus)
  34. [actual] sohfpus → zewwpus and bezypus (原始: sohfpus is zewwpus and bezypus)
  35. [actual] zewwpus → vimxpus (原始: zewwpus is vimxpus)
  36. [actual] vimxpus → babspus and fevbpus and newxpus (原始: vimxpus is babspus and fevbpus and newxpus)
  37. [actual] x → babspus (原始: x is babspus)
  38. [actual] x → lutgpus (原始: x is lutgpus)
  39. [actual] lutgpus → babspus (原始: lutgpus is babspus)
  40. [planning] x → babgpus (原始: x is babgpus)
  41. [planning] x → babgpus (原始: x is babgpus)
  42. [actual] maqmpus → babgpus and tesvpus and zuwwpus (原始: maqmpus is babgpus and tesvpus and zuwwpus)
  43. [actual] jijhpus → maqmpus (原始: jijhpus is maqmpus)
  44. [actual] bucqpus → jijhpus and jegdpus (原始: bucqpus is jijhpus and jegdpus)
  45. [actual] jofkpus → bucqpus (原始: jofkpus is bucqpus)
  46. [actual] safspus → jofkpus and vawzpus (原始: safspus is jofkpus and vawzpus)
  47. [actual] nivzpus → safspus (原始: nivzpus is safspus)
  48. [actual] wovkpus → nivzpus (原始: wovkpus is nivzpus)
  49. [actual] visrpus → wovkpus (原始: visrpus is wovkpus)
  50. [actual] haskpus → visrpus and jahmpus (原始: haskpus is visrpus and jahmpus)
  51. [actual] pecrpus → haskpus (原始: pecrpus is haskpus)
  52. [actual] xottpus → pecrpus (原始: xottpus is pecrpus)
  53. [actual] zoykpus → xottpus (原始: zoykpus is xottpus)
  54. [actual] x → zoykpus and zujcpus (原始: x is zoykpus and zujcpus)
  55. [actual] x → zoykpus (原始: x is zoykpus)
  56. [actual] zoykpus → xottpus (原始: zoykpus is xottpus)
  57. [actual] xottpus → pecrpus (原始: xottpus is pecrpus)
  58. [actual] pecrpus → haskpus (原始: pecrpus is haskpus)
  59. [actual] haskpus → visrpus (原始: haskpus is visrpus)
  60. [actual] visrpus → wovkpus (原始: visrpus is wovkpus)
  61. [actual] wovkpus → nivzpus (原始: wovkpus is nivzpus)
  62. [actual] nivzpus → safspus (原始: nivzpus is safspus)
  63. [actual] safspus → jofkpus (原始: safspus is jofkpus)
  64. [actual] jofkpus → bucqpus (原始: jofkpus is bucqpus)
  65. [actual] bucqpus → jijhpus (原始: bucqpus is jijhpus)
  66. [actual] jijhpus → maqmpus (原始: jijhpus is maqmpus)
  67. [actual] maqmpus → babgpus (原始: maqmpus is babgpus)
  68. [actual] x → babgpus and babrpus and babspus (原始: x is babgpus and babrpus and babspus)
  69. [actual] x → babgpus and babrpus and babspus (原始: x is babgpus and babrpus and babspus)

开始新的后处理...
[后处理] 从LoG数据文件中获取到图数据，节点数: 43
[后处理] 加载LoG图，包含 43 个节点
  LoG节点 0: x is babgpus and babrpus and babspus (规则: CI, 深度: 1)
  LoG节点 1: x is babgpus (规则: MP, 深度: 2)
  LoG节点 2: x is babrpus (规则: CE, 深度: 2)
  LoG节点 3: x is babspus (规则: CE, 深度: 2)
  LoG节点 4: x is jofkpus (规则: MP, 深度: 3)
  LoG节点 5: jofkpus is babgpus (规则: CE, 深度: 3)
  LoG节点 6: x is babrpus and tupcpus (规则: MP, 深度: 3)
  LoG节点 7: x is babspus and fevbpus (规则: MP, 深度: 3)
  LoG节点 8: x is visrpus (规则: MP, 深度: 4)
  LoG节点 9: visrpus is jofkpus (规则: CE, 深度: 4)
  LoG节点 10: jofkpus is babgpus and tesvpus (规则: MP, 深度: 4)
  LoG节点 11: x is mebmpus (规则: MP, 深度: 4)
  LoG节点 12: mebmpus is babrpus and tupcpus (规则: CE, 深度: 4)
  LoG节点 13: x is sohfpus (规则: MP, 深度: 4)
  LoG节点 14: sohfpus is babspus and fevbpus (规则: CE, 深度: 4)
  LoG节点 15: x is pecrpus (规则: MP, 深度: 5)
  LoG节点 16: pecrpus is visrpus (规则: CE, 深度: 5)
  LoG节点 17: visrpus is jofkpus and vawzpus (规则: MP, 深度: 5)
  LoG节点 18: jofkpus is jijhpus (规则: CE, 深度: 5)
  LoG节点 19: jijhpus is babgpus and tesvpus (规则: CE, 深度: 5)
  LoG节点 20: x is tuwgpus (规则: MP, 深度: 5)
  LoG节点 21: tuwgpus is mebmpus (规则: MP, 深度: 5)
  LoG节点 22: mebmpus is babrpus and tupcpus and hegrpus (规则: MP, 深度: 5)
  LoG节点 23: x is fuxmpus (规则: CE, 深度: 5)
  LoG节点 24: fuxmpus is sohfpus (规则: CE, 深度: 5)
  LoG节点 25: sohfpus is babspus and fevbpus and newxpus (规则: MP, 深度: 5)
  LoG节点 26: x is zoykpus (规则: CE, 深度: 6)
  LoG节点 27: zoykpus is pecrpus (规则: MP, 深度: 6)
  LoG节点 28: pecrpus is visrpus and jahmpus (规则: MP, 深度: 6)
  LoG节点 29: visrpus is nivzpus (规则: MP, 深度: 6)
  LoG节点 30: nivzpus is jofkpus and vawzpus (规则: MP, 深度: 6)
  LoG节点 31: jofkpus is jijhpus and jegdpus (规则: MP, 深度: 6)
  LoG节点 32: jijhpus is babgpus and tesvpus and zuwwpus (规则: MP, 深度: 6)
  LoG节点 33: x is caympus (规则: CE, 深度: 6)
  LoG节点 34: caympus is tuwgpus (规则: MP, 深度: 6)
  LoG节点 35: tuwgpus is zivtpus (规则: MP, 深度: 6)
  LoG节点 36: zivtpus is mebmpus (规则: MP, 深度: 6)
  LoG节点 37: mebmpus is renlpus (规则: MP, 深度: 6)
  LoG节点 38: renlpus is babrpus and tupcpus and hegrpus (规则: CE, 深度: 6)
  LoG节点 39: x is fuxmpus and moptpus (规则: MP, 深度: 6)
  LoG节点 40: fuxmpus is sohfpus and funnpus (规则: MP, 深度: 6)
  LoG节点 41: sohfpus is zewwpus (规则: CE, 深度: 6)
  LoG节点 42: zewwpus is babspus and fevbpus and newxpus (规则: MP, 深度: 6)

============================================================
[后处理] 开始处理节点
============================================================
📊 初始状态:
   - 标准化节点数: 69
   - 初始条件数: 30
   - LoG图节点数: 43

📋 初始条件列表:
    1. x is caympus and jaxspus
    2. gonfpus is sohfpus and funnpus
    3. xottpus is pecrpus
    4. caympus is gizgpus
    5. lutgpus is fuxmpus and moptpus
    6. haskpus is visrpus and jahmpus
    7. nivzpus is safspus
    8. fuxmpus is gonfpus
    9. hiwypus is zivtpus
   10. x is lutgpus
   11. jijhpus is maqmpus
   12. jofkpus is bucqpus
   13. tuwgpus is hiwypus
   14. wovkpus is nivzpus
   15. zatcpus is mebmpus
   16. zewwpus is vimxpus
   17. qusrpus is renlpus
   18. sohfpus is zewwpus and bezypus
   19. safspus is jofkpus and vawzpus
   20. vimxpus is babspus and fevbpus and newxpus
   21. visrpus is wovkpus
   22. mebmpus is qusrpus
   23. x is zoykpus and zujcpus
   24. gizgpus is tuwgpus
   25. maqmpus is babgpus and tesvpus and zuwwpus
   26. zivtpus is zatcpus
   27. pecrpus is haskpus
   28. bucqpus is jijhpus and jegdpus
   29. zoykpus is xottpus
   30. renlpus is babrpus and tupcpus and hegrpus and qurypus

🔧 构建初始Statement列表...
✅ 初始Statement列表构建完成，包含 30 个前提节点

🔍 开始处理actual节点...

   节点 1: x is caympus and jaxspus
      ↻ 重复节点，计数: 2

   节点 2: caympus is gizgpus
      ↻ 重复节点，计数: 2

   节点 3: gizgpus is tuwgpus
      ↻ 重复节点，计数: 2

   节点 4: tuwgpus is hiwypus
      ↻ 重复节点，计数: 2

   节点 5: hiwypus is zivtpus
      ↻ 重复节点，计数: 2

   节点 6: zivtpus is zatcpus
      ↻ 重复节点，计数: 2

   节点 7: zatcpus is mebmpus
      ↻ 重复节点，计数: 2

   节点 8: mebmpus is qusrpus
      ↻ 重复节点，计数: 2

   节点 9: qusrpus is renlpus
      ↻ 重复节点，计数: 2

   节点 10: renlpus is babrpus and tupcpus and hegrpus and qurypus
      ↻ 重复节点，计数: 2

   节点 11: x is caympus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is caympus
      ✅ 验证成功 + LoG匹配

   节点 12: caympus is gizgpus
      ↻ 重复节点，计数: 3

   节点 13: gizgpus is tuwgpus
      ↻ 重复节点，计数: 3

   节点 14: tuwgpus is hiwypus
      ↻ 重复节点，计数: 3

   节点 15: hiwypus is zivtpus
      ↻ 重复节点，计数: 3

   节点 16: zivtpus is zatcpus
      ↻ 重复节点，计数: 3

   节点 17: zatcpus is mebmpus
      ↻ 重复节点，计数: 3

   节点 18: mebmpus is qusrpus
      ↻ 重复节点，计数: 3

   节点 19: qusrpus is renlpus
      ↻ 重复节点，计数: 3

   节点 20: renlpus is babrpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: renlpus is babrpus and tupcpus and hegrpus and qurypus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: renlpus is babrpus and tupcpus and hegrpus and qurypus
  ✓ 点亮LoG节点: renlpus is babrpus and tupcpus and hegrpus
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 21: x is babrpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is babrpus
[子树点亮]     └─ 点亮依赖节点: x is babrpus and tupcpus (深度3)
[子树点亮]     └─ 点亮依赖节点: x is mebmpus (深度4)
[子树点亮]     └─ 点亮依赖节点: mebmpus is babrpus and tupcpus (深度4)
[子树点亮]     └─ 点亮依赖节点: x is tuwgpus (深度5)
[子树点亮]     └─ 点亮依赖节点: tuwgpus is mebmpus (深度5)
[子树点亮]     └─ 点亮依赖节点: mebmpus is babrpus and tupcpus and hegrpus (深度5)
[子树点亮]     └─ 点亮依赖节点: caympus is tuwgpus (深度6)
[子树点亮]     └─ 点亮依赖节点: tuwgpus is zivtpus (深度6)
[子树点亮]     └─ 点亮依赖节点: zivtpus is mebmpus (深度6)
[子树点亮]     └─ 点亮依赖节点: mebmpus is renlpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 10 个节点
      ✅ 验证成功 + LoG匹配

   节点 22: x is renlpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is caympus → caympus is renlpus
[后处理] 基于推理轨迹点亮节点，使用了 9 个前提条件:
  - 前提: x is caympus
  - 前提: caympus is gizgpus
  - 前提: gizgpus is tuwgpus
  - 前提: tuwgpus is hiwypus
  - 前提: hiwypus is zivtpus
  - 前提: zivtpus is zatcpus
  - 前提: zatcpus is mebmpus
  - 前提: mebmpus is qusrpus
  - 前提: qusrpus is renlpus

   节点 23: x is relmpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 24: relmpus is babgpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 25: x is babgpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is babgpus
[子树点亮]     └─ 点亮依赖节点: x is jofkpus (深度3)
[子树点亮]     └─ 点亮依赖节点: jofkpus is babgpus (深度3)
[子树点亮]     └─ 点亮依赖节点: x is visrpus (深度4)
[子树点亮]     └─ 点亮依赖节点: visrpus is jofkpus (深度4)
[子树点亮]     └─ 点亮依赖节点: jofkpus is babgpus and tesvpus (深度4)
[子树点亮]     └─ 点亮依赖节点: x is pecrpus (深度5)
[子树点亮]     └─ 点亮依赖节点: pecrpus is visrpus (深度5)
[子树点亮]     └─ 点亮依赖节点: visrpus is jofkpus and vawzpus (深度5)
[子树点亮]     └─ 点亮依赖节点: jofkpus is jijhpus (深度5)
[子树点亮]     └─ 点亮依赖节点: jijhpus is babgpus and tesvpus (深度5)
[子树点亮]     └─ 点亮依赖节点: x is zoykpus (深度6)
[子树点亮]     └─ 点亮依赖节点: zoykpus is pecrpus (深度6)
[子树点亮]     └─ 点亮依赖节点: pecrpus is visrpus and jahmpus (深度6)
[子树点亮]     └─ 点亮依赖节点: visrpus is nivzpus (深度6)
[子树点亮]     └─ 点亮依赖节点: nivzpus is jofkpus and vawzpus (深度6)
[子树点亮]     └─ 点亮依赖节点: jofkpus is jijhpus and jegdpus (深度6)
[子树点亮]     └─ 点亮依赖节点: jijhpus is babgpus and tesvpus and zuwwpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 17 个节点
      ✅ 验证成功 + LoG匹配

   节点 26: x is lutgpus
      ↻ 重复节点，计数: 2

   节点 27: lutgpus is fuxmpus and moptpus
      ↻ 重复节点，计数: 2

   节点 28: fuxmpus is gonfpus
      ↻ 重复节点，计数: 2

   节点 29: gonfpus is sohfpus and funnpus
      ↻ 重复节点，计数: 2

   节点 30: sohfpus is zewwpus and bezypus
      ↻ 重复节点，计数: 2

   节点 31: zewwpus is vimxpus
      ↻ 重复节点，计数: 2

   节点 32: vimxpus is babspus and fevbpus and newxpus
      ↻ 重复节点，计数: 2

   节点 33: x is babspus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is babspus
[子树点亮]     └─ 点亮依赖节点: x is babspus and fevbpus (深度3)
[子树点亮]     └─ 点亮依赖节点: x is sohfpus (深度4)
[子树点亮]     └─ 点亮依赖节点: sohfpus is babspus and fevbpus (深度4)
[子树点亮]     └─ 点亮依赖节点: x is fuxmpus (深度5)
[子树点亮]     └─ 点亮依赖节点: fuxmpus is sohfpus (深度5)
[子树点亮]     └─ 点亮依赖节点: sohfpus is babspus and fevbpus and newxpus (深度5)
[子树点亮]     └─ 点亮依赖节点: x is fuxmpus and moptpus (深度6)
[子树点亮]     └─ 点亮依赖节点: fuxmpus is sohfpus and funnpus (深度6)
[子树点亮]     └─ 点亮依赖节点: sohfpus is zewwpus (深度6)
[子树点亮]     └─ 点亮依赖节点: zewwpus is babspus and fevbpus and newxpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 10 个节点
      ✅ 验证成功 + LoG匹配

   节点 34: x is lutgpus
      ↻ 重复节点，计数: 3

   节点 35: lutgpus is babspus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP+CE
      📋 推理路径: MP+CE规则: lutgpus is fuxmpus → fuxmpus is babspus
[后处理] 基于推理轨迹点亮节点，使用了 6 个前提条件:
  - 前提: lutgpus is fuxmpus and moptpus
  - 前提: fuxmpus is gonfpus
  - 前提: gonfpus is sohfpus and funnpus
  - 前提: sohfpus is zewwpus and bezypus
  - 前提: zewwpus is vimxpus
  - 前提: vimxpus is babspus and fevbpus and newxpus

   节点 36: maqmpus is babgpus and tesvpus and zuwwpus
      ↻ 重复节点，计数: 2

   节点 37: jijhpus is maqmpus
      ↻ 重复节点，计数: 2

   节点 38: bucqpus is jijhpus and jegdpus
      ↻ 重复节点，计数: 2

   节点 39: jofkpus is bucqpus
      ↻ 重复节点，计数: 2

   节点 40: safspus is jofkpus and vawzpus
      ↻ 重复节点，计数: 2

   节点 41: nivzpus is safspus
      ↻ 重复节点，计数: 2

   节点 42: wovkpus is nivzpus
      ↻ 重复节点，计数: 2

   节点 43: visrpus is wovkpus
      ↻ 重复节点，计数: 2

   节点 44: haskpus is visrpus and jahmpus
      ↻ 重复节点，计数: 2

   节点 45: pecrpus is haskpus
      ↻ 重复节点，计数: 2

   节点 46: xottpus is pecrpus
      ↻ 重复节点，计数: 2

   节点 47: zoykpus is xottpus
      ↻ 重复节点，计数: 2

   节点 48: x is zoykpus and zujcpus
      ↻ 重复节点，计数: 2

   节点 49: x is zoykpus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 50: zoykpus is xottpus
      ↻ 重复节点，计数: 3

   节点 51: xottpus is pecrpus
      ↻ 重复节点，计数: 3

   节点 52: pecrpus is haskpus
      ↻ 重复节点，计数: 3

   节点 53: haskpus is visrpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: haskpus is visrpus and jahmpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: haskpus is visrpus and jahmpus

   节点 54: visrpus is wovkpus
      ↻ 重复节点，计数: 3

   节点 55: wovkpus is nivzpus
      ↻ 重复节点，计数: 3

   节点 56: nivzpus is safspus
      ↻ 重复节点，计数: 3

   节点 57: safspus is jofkpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: safspus is jofkpus and vawzpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: safspus is jofkpus and vawzpus

   节点 58: jofkpus is bucqpus
      ↻ 重复节点，计数: 3

   节点 59: bucqpus is jijhpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: bucqpus is jijhpus and jegdpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: bucqpus is jijhpus and jegdpus

   节点 60: jijhpus is maqmpus
      ↻ 重复节点，计数: 3

   节点 61: maqmpus is babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: maqmpus is babgpus and tesvpus and zuwwpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: maqmpus is babgpus and tesvpus and zuwwpus

   节点 62: x is babgpus and babrpus and babspus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is babgpus and babrpus and babspus
      ✅ 验证成功 + LoG匹配

   节点 63: x is babgpus and babrpus and babspus
      ↻ 重复节点，计数: 2

🔍 分析推理路径完整性...

============================================================
[后处理] 处理完成
============================================================
📈 处理统计:
   - 处理的actual节点: 63
   - 新增节点: 15
   - 更新已存在节点: 48
   - 点亮的LoG节点: 43

🎯 推理质量统计:
   - 完美推理: 7 (节点正确 + 路径正确)
   - 部分推理: 8 (节点正确 + 路径部分错误)
   - 无效推理: 0 (节点错误或路径完全错误)
[LoG分析] LoG图: 43节点, 30前提, 复杂度1-30

📊 === Statement列表分析 ===
📈 节点统计:
   - 总节点数: 45
   - 前提节点: 30
   - 推理节点: 13
   - 幻觉节点: 2
   - 点亮LoG节点: 43

❌ 幻觉节点详情:
   - x is relmpus (出现1次)
   - relmpus is babgpus (出现1次)

✅ 推理节点详情:
   🟡 x is caympus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['x is relmpus']
   🟢 renlpus is babrpus (出现1次, 质量:perfect)
   🟡 x is babrpus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['x is relmpus']
   🟡 x is renlpus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['x is relmpus']
   🟡 x is babgpus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['x is relmpus', 'relmpus is babgpus']
   🟡 x is babspus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['x is relmpus']
   🟢 lutgpus is babspus (出现1次, 质量:perfect)
   🟡 x is zoykpus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['x is relmpus']
   🟢 haskpus is visrpus (出现1次, 质量:perfect)
   🟢 safspus is jofkpus (出现1次, 质量:perfect)
   🟢 bucqpus is jijhpus (出现1次, 质量:perfect)
   🟡 maqmpus is babgpus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['relmpus is babgpus']
   🟡 x is babgpus and babrpus and babspus (出现2次, 质量:partial)
      ⚠️  无效依赖: ['x is relmpus']

🔥 点亮的LoG节点:
   - sohfpus is babspus and fevbpus
   - x is babspus
   - jofkpus is babgpus and tesvpus
   - tuwgpus is zivtpus
   - jijhpus is babgpus and tesvpus
   - mebmpus is renlpus
   - visrpus is nivzpus
   - jijhpus is babgpus and tesvpus and zuwwpus
   - sohfpus is babspus and fevbpus and newxpus
   - visrpus is jofkpus
   - caympus is tuwgpus
   - nivzpus is jofkpus and vawzpus
   - x is tuwgpus
   - x is jofkpus
   - x is mebmpus
   - fuxmpus is sohfpus and funnpus
   - x is sohfpus
   - x is zoykpus
   - zoykpus is pecrpus
   - x is babrpus
   - x is babgpus
   - pecrpus is visrpus and jahmpus
   - jofkpus is babgpus
   - x is babrpus and tupcpus
   - zivtpus is mebmpus
   - mebmpus is babrpus and tupcpus
   - x is babspus and fevbpus
   - x is fuxmpus
   - x is babgpus and babrpus and babspus
   - renlpus is babrpus and tupcpus and hegrpus
   - mebmpus is babrpus and tupcpus and hegrpus
   - jofkpus is jijhpus
   - pecrpus is visrpus
   - tuwgpus is mebmpus
   - zewwpus is babspus and fevbpus and newxpus
   - x is visrpus
   - jofkpus is jijhpus and jegdpus
   - x is fuxmpus and moptpus
   - x is pecrpus
   - visrpus is jofkpus and vawzpus
   - fuxmpus is sohfpus
   - x is caympus
   - sohfpus is zewwpus

============================================================
📊 计算评估指标
============================================================

🎯 计算Coverage指标...
   深度Coverage: 6/6 = 100.00%
   最深点亮节点: x is babgpus and babrpus and babspus (第6层)
   节点Coverage: 43/43 = 100.00%
   前提条件Coverage: 30/30 = 100.00%
   各推理层点亮比例:
     第1层: 17/17 = 100.00%
     第2层: 11/11 = 100.00%
     第3层: 7/7 = 100.00%
     第4层: 4/4 = 100.00%
     第5层: 3/3 = 100.00%
     第6层: 1/1 = 100.00%

🎯 计算Precision指标...
   Error Rate: 2/15 = 13.33%
   可推导节点: 13/15
   Strict Error Rate: 10/15 = 66.67%
   严格有效节点: 5/15

   详细分析:
     完美推理: 7 (46.67%)
     部分推理: 8 (53.33%)
     无效推理: 0 (0.00%)

================================================================================
处理记录 35/50
================================================================================
记录索引: 34
问题状态: correct
📁 从缓存加载提取结果: evaluation_results.LoG_6.deepseek-reasoner_record_34.json
✅ 使用缓存结果:
   - 句子数: 166
   - 提取的语句数: 192
   - 初始条件数: 23

=== Statement提取完成 ===
总句子数: 166
成功提取: 166
失败提取: 0
总statements数: 192

=== 开始清洗Statement格式 ===
原始statements数: 192
清洗后statements数: 163
过滤掉的statements数: 29
清洗后的statements:
  1. [planning] x is babgpus
  2. [actual] x is mowkpus
  3. [actual] x is mowkpus
  4. [planning] mowkpus is babgpus
  5. [actual] kokxpus is babgpus
  6. [actual] muwvpus is kokxpus
  7. [actual] muwvpus is babgpus
  8. [planning] muwvpus is babgpus
  9. [actual] muwvpus is kokxpus
  10. [actual] kokxpus is zettpus
  11. [actual] muwvpus is kokxpus
  12. [actual] kokxpus is zettpus
  13. [planning] muwvpus is zettpus
  14. [actual] hatwpus is luwlpus
  15. [actual] hatwpus is bamxpus
  16. [planning] luwlpus is bamxpus
  17. [planning] hatwpus is multiple categories
  18. [actual] x is mowkpus
  19. [actual] mowkpus is gofgpus and yiqwpus
  20. [actual] mowkpus is gofgpus and yiqwpus
  21. [actual] mowkpus is gofgpus and yiqwpus
  22. [planning] mowkpus is gofgpus
  23. [planning] mowkpus is yiqwpus
  24. [planning] mowkpus is gofgpus and yiqwpus
  25. [actual] mowkpus is gofgpus
  26. [actual] mowkpus is yiqwpus
  27. [planning] mowkpus is gofgpus and yiqwpus
  28. [actual] vakrpus is fezmpus and yarhpus and pigcpus
  29. [actual] vakrpus is fezmpus and yarhpus and pigcpus
  30. [actual] qigbpus is lihkpus and zuqvpus and xocqpus
  31. [actual] mowkpus is gofgpus and yiqwpus
  32. [planning] x is babgpus
  33. [actual] x is mowkpus
  34. [actual] mowkpus is gofgpus
  35. [actual] kokxpus is babgpus
  36. [actual] kokxpus is babgpus
  37. [planning] x is kokxpus or babgpus
  38. [actual] bamxpus is muwvpus
  39. [actual] muwvpus is kokxpus
  40. [actual] kokxpus is zettpus
  41. [actual] kokxpus is babgpus
  42. [planning] x is babgpus
  43. [actual] x is mowkpus
  44. [actual] mowkpus is gofgpus and yiqwpus
  45. [actual] gofgpus is qigbpus
  46. [actual] gofgpus is qigbpus
  47. [actual] qigbpus is lihkpus and zuqvpus and xocqpus
  48. [actual] lihkpus is ciwjpus
  49. [actual] lihkpus is ciwjpus
  50. [actual] ciwjpus is daxtpus
  51. [actual] ciwjpus is daxtpus
  52. [actual] daxtpus is gercpus and wimrpus and ceqspus
  53. [actual] gercpus is jacypus
  54. [actual] gercpus is jacypus
  55. [actual] jacypus is mujlpus and cakqpus
  56. [actual] mujlpus is yogqpus
  57. [actual] mujlpus is yogqpus
  58. [actual] yogqpus is quqmpus and pazjpus
  59. [actual] quqmpus is yinvpus
  60. [actual] quqmpus is yinvpus
  61. [actual] yinvpus is vizbpus and lizgpus
  62. [actual] vizbpus is vakrpus
  63. [actual] vizbpus is vakrpus
  64. [actual] vakrpus is fezmpus and yarhpus and pigcpus
  65. [actual] fezmpus is cellpus
  66. [actual] fezmpus is cellpus
  67. [actual] cellpus is hatwpus
  68. [actual] cellpus is hatwpus
  69. [actual] hatwpus is luwlpus and bamxpus
  70. [actual] bamxpus is muwvpus
  71. [actual] bamxpus is muwvpus
  72. [actual] muwvpus is kokxpus
  73. [actual] muwvpus is kokxpus
  74. [actual] kokxpus is zettpus and babgpus
  75. [planning] x is babgpus
  76. [planning] x is babgpus
  77. [actual] x is mowkpus
  78. [actual] mowkpus is gofgpus
  79. [actual] gofgpus is qigbpus
  80. [actual] qigbpus is lihkpus
  81. [actual] lihkpus is ciwjpus
  82. [actual] ciwjpus is daxtpus
  83. [actual] daxtpus is gercpus
  84. [actual] gercpus is jacypus
  85. [actual] jacypus is mujlpus
  86. [actual] mujlpus is yogqpus
  87. [actual] yogqpus is quqmpus
  88. [actual] quqmpus is yinvpus
  89. [actual] yinvpus is vizbpus
  90. [actual] vizbpus is vakrpus
  91. [actual] vakrpus is fezmpus
  92. [actual] fezmpus is cellpus
  93. [actual] cellpus is hatwpus
  94. [actual] hatwpus is bamxpus
  95. [actual] bamxpus is muwvpus
  96. [actual] muwvpus is kokxpus
  97. [actual] kokxpus is babgpus
  98. [actual] x is babgpus
  99. [actual] x is mowkpus
  100. [actual] mowkpus is gofgpus
  101. [planning] x is gofgpus
  102. [actual] gofgpus is qigbpus
  103. [planning] x is qigbpus
  104. [actual] qigbpus is lihkpus
  105. [planning] x is lihkpus
  106. [actual] lihkpus is ciwjpus
  107. [planning] x is ciwjpus
  108. [actual] ciwjpus is daxtpus
  109. [planning] x is daxtpus
  110. [actual] daxtpus is gercpus
  111. [planning] x is gercpus
  112. [actual] gercpus is jacypus
  113. [planning] x is jacypus
  114. [actual] jacypus is mujlpus
  115. [planning] x is mujlpus
  116. [actual] mujlpus is yogqpus
  117. [planning] x is yogqpus
  118. [actual] yogqpus is quqmpus
  119. [planning] x is quqmpus
  120. [actual] yogqpus is quqmpus and pazjpus
  121. [planning] yogqpus is quqmpus
  122. [planning] yogqpus is pazjpus
  123. [actual] x is yogqpus
  124. [actual] x is quqmpus and pazjpus
  125. [actual] quqmpus is yinvpus
  126. [planning] quqmpus is yinvpus
  127. [actual] x is quqmpus
  128. [actual] quqmpus is yinvpus
  129. [actual] x is yinvpus
  130. [planning] x is quqmpus
  131. [actual] x is yogqpus
  132. [actual] yogqpus is quqmpus
  133. [actual] x is quqmpus
  134. [actual] quqmpus is yinvpus
  135. [actual] x is yinvpus
  136. [actual] yinvpus is vizbpus and lizgpus
  137. [planning] x is vizbpus
  138. [planning] x is lizgpus
  139. [actual] vizbpus is vakrpus
  140. [actual] x is vakrpus
  141. [actual] vakrpus is fezmpus and yarhpus and pigcpus
  142. [planning] x is fezmpus
  143. [actual] fezmpus is cellpus
  144. [planning] x is cellpus
  145. [actual] cellpus is hatwpus
  146. [actual] x is hatwpus
  147. [actual] hatwpus is bamxpus
  148. [planning] x is bamxpus
  149. [actual] hatwpus is luwlpus and bamxpus
  150. [actual] x is hatwpus
  151. [actual] x is bamxpus and luwlpus
  152. [actual] x is bamxpus
  153. [actual] bamxpus is muwvpus
  154. [actual] x is muwvpus
  155. [actual] muwvpus is kokxpus
  156. [actual] x is kokxpus
  157. [actual] kokxpus is babgpus
  158. [actual] x is babgpus
  159. [actual] x is babgpus
  160. [actual] kokxpus is zettpus
  161. [actual] x is kokxpus
  162. [actual] kokxpus is babgpus
  163. [actual] x is babgpus

=== 开始标准化和解析节点 ===
清洗后statements数: 163
标准化后节点数: 162
过滤掉的无效实体数: 1
标准化后的节点:
  1. [planning] x → babgpus (原始: x is babgpus)
  2. [actual] x → mowkpus (原始: x is mowkpus)
  3. [actual] x → mowkpus (原始: x is mowkpus)
  4. [planning] mowkpus → babgpus (原始: mowkpus is babgpus)
  5. [actual] kokxpus → babgpus (原始: kokxpus is babgpus)
  6. [actual] muwvpus → kokxpus (原始: muwvpus is kokxpus)
  7. [actual] muwvpus → babgpus (原始: muwvpus is babgpus)
  8. [planning] muwvpus → babgpus (原始: muwvpus is babgpus)
  9. [actual] muwvpus → kokxpus (原始: muwvpus is kokxpus)
  10. [actual] kokxpus → zettpus (原始: kokxpus is zettpus)
  11. [actual] muwvpus → kokxpus (原始: muwvpus is kokxpus)
  12. [actual] kokxpus → zettpus (原始: kokxpus is zettpus)
  13. [planning] muwvpus → zettpus (原始: muwvpus is zettpus)
  14. [actual] hatwpus → luwlpus (原始: hatwpus is luwlpus)
  15. [actual] hatwpus → bamxpus (原始: hatwpus is bamxpus)
  16. [planning] luwlpus → bamxpus (原始: luwlpus is bamxpus)
  17. [actual] x → mowkpus (原始: x is mowkpus)
  18. [actual] mowkpus → gofgpus and yiqwpus (原始: mowkpus is gofgpus and yiqwpus)
  19. [actual] mowkpus → gofgpus and yiqwpus (原始: mowkpus is gofgpus and yiqwpus)
  20. [actual] mowkpus → gofgpus and yiqwpus (原始: mowkpus is gofgpus and yiqwpus)
  21. [planning] mowkpus → gofgpus (原始: mowkpus is gofgpus)
  22. [planning] mowkpus → yiqwpus (原始: mowkpus is yiqwpus)
  23. [planning] mowkpus → gofgpus and yiqwpus (原始: mowkpus is gofgpus and yiqwpus)
  24. [actual] mowkpus → gofgpus (原始: mowkpus is gofgpus)
  25. [actual] mowkpus → yiqwpus (原始: mowkpus is yiqwpus)
  26. [planning] mowkpus → gofgpus and yiqwpus (原始: mowkpus is gofgpus and yiqwpus)
  27. [actual] vakrpus → fezmpus and yarhpus and pigcpus (原始: vakrpus is fezmpus and yarhpus and pigcpus)
  28. [actual] vakrpus → fezmpus and yarhpus and pigcpus (原始: vakrpus is fezmpus and yarhpus and pigcpus)
  29. [actual] qigbpus → lihkpus and zuqvpus and xocqpus (原始: qigbpus is lihkpus and zuqvpus and xocqpus)
  30. [actual] mowkpus → gofgpus and yiqwpus (原始: mowkpus is gofgpus and yiqwpus)
  31. [planning] x → babgpus (原始: x is babgpus)
  32. [actual] x → mowkpus (原始: x is mowkpus)
  33. [actual] mowkpus → gofgpus (原始: mowkpus is gofgpus)
  34. [actual] kokxpus → babgpus (原始: kokxpus is babgpus)
  35. [actual] kokxpus → babgpus (原始: kokxpus is babgpus)
  36. [planning] x → kokxpus or babgpus (原始: x is kokxpus or babgpus)
  37. [actual] bamxpus → muwvpus (原始: bamxpus is muwvpus)
  38. [actual] muwvpus → kokxpus (原始: muwvpus is kokxpus)
  39. [actual] kokxpus → zettpus (原始: kokxpus is zettpus)
  40. [actual] kokxpus → babgpus (原始: kokxpus is babgpus)
  41. [planning] x → babgpus (原始: x is babgpus)
  42. [actual] x → mowkpus (原始: x is mowkpus)
  43. [actual] mowkpus → gofgpus and yiqwpus (原始: mowkpus is gofgpus and yiqwpus)
  44. [actual] gofgpus → qigbpus (原始: gofgpus is qigbpus)
  45. [actual] gofgpus → qigbpus (原始: gofgpus is qigbpus)
  46. [actual] qigbpus → lihkpus and zuqvpus and xocqpus (原始: qigbpus is lihkpus and zuqvpus and xocqpus)
  47. [actual] lihkpus → ciwjpus (原始: lihkpus is ciwjpus)
  48. [actual] lihkpus → ciwjpus (原始: lihkpus is ciwjpus)
  49. [actual] ciwjpus → daxtpus (原始: ciwjpus is daxtpus)
  50. [actual] ciwjpus → daxtpus (原始: ciwjpus is daxtpus)
  51. [actual] daxtpus → gercpus and wimrpus and ceqspus (原始: daxtpus is gercpus and wimrpus and ceqspus)
  52. [actual] gercpus → jacypus (原始: gercpus is jacypus)
  53. [actual] gercpus → jacypus (原始: gercpus is jacypus)
  54. [actual] jacypus → mujlpus and cakqpus (原始: jacypus is mujlpus and cakqpus)
  55. [actual] mujlpus → yogqpus (原始: mujlpus is yogqpus)
  56. [actual] mujlpus → yogqpus (原始: mujlpus is yogqpus)
  57. [actual] yogqpus → quqmpus and pazjpus (原始: yogqpus is quqmpus and pazjpus)
  58. [actual] quqmpus → yinvpus (原始: quqmpus is yinvpus)
  59. [actual] quqmpus → yinvpus (原始: quqmpus is yinvpus)
  60. [actual] yinvpus → vizbpus and lizgpus (原始: yinvpus is vizbpus and lizgpus)
  61. [actual] vizbpus → vakrpus (原始: vizbpus is vakrpus)
  62. [actual] vizbpus → vakrpus (原始: vizbpus is vakrpus)
  63. [actual] vakrpus → fezmpus and yarhpus and pigcpus (原始: vakrpus is fezmpus and yarhpus and pigcpus)
  64. [actual] fezmpus → cellpus (原始: fezmpus is cellpus)
  65. [actual] fezmpus → cellpus (原始: fezmpus is cellpus)
  66. [actual] cellpus → hatwpus (原始: cellpus is hatwpus)
  67. [actual] cellpus → hatwpus (原始: cellpus is hatwpus)
  68. [actual] hatwpus → luwlpus and bamxpus (原始: hatwpus is luwlpus and bamxpus)
  69. [actual] bamxpus → muwvpus (原始: bamxpus is muwvpus)
  70. [actual] bamxpus → muwvpus (原始: bamxpus is muwvpus)
  71. [actual] muwvpus → kokxpus (原始: muwvpus is kokxpus)
  72. [actual] muwvpus → kokxpus (原始: muwvpus is kokxpus)
  73. [actual] kokxpus → zettpus and babgpus (原始: kokxpus is zettpus and babgpus)
  74. [planning] x → babgpus (原始: x is babgpus)
  75. [planning] x → babgpus (原始: x is babgpus)
  76. [actual] x → mowkpus (原始: x is mowkpus)
  77. [actual] mowkpus → gofgpus (原始: mowkpus is gofgpus)
  78. [actual] gofgpus → qigbpus (原始: gofgpus is qigbpus)
  79. [actual] qigbpus → lihkpus (原始: qigbpus is lihkpus)
  80. [actual] lihkpus → ciwjpus (原始: lihkpus is ciwjpus)
  81. [actual] ciwjpus → daxtpus (原始: ciwjpus is daxtpus)
  82. [actual] daxtpus → gercpus (原始: daxtpus is gercpus)
  83. [actual] gercpus → jacypus (原始: gercpus is jacypus)
  84. [actual] jacypus → mujlpus (原始: jacypus is mujlpus)
  85. [actual] mujlpus → yogqpus (原始: mujlpus is yogqpus)
  86. [actual] yogqpus → quqmpus (原始: yogqpus is quqmpus)
  87. [actual] quqmpus → yinvpus (原始: quqmpus is yinvpus)
  88. [actual] yinvpus → vizbpus (原始: yinvpus is vizbpus)
  89. [actual] vizbpus → vakrpus (原始: vizbpus is vakrpus)
  90. [actual] vakrpus → fezmpus (原始: vakrpus is fezmpus)
  91. [actual] fezmpus → cellpus (原始: fezmpus is cellpus)
  92. [actual] cellpus → hatwpus (原始: cellpus is hatwpus)
  93. [actual] hatwpus → bamxpus (原始: hatwpus is bamxpus)
  94. [actual] bamxpus → muwvpus (原始: bamxpus is muwvpus)
  95. [actual] muwvpus → kokxpus (原始: muwvpus is kokxpus)
  96. [actual] kokxpus → babgpus (原始: kokxpus is babgpus)
  97. [actual] x → babgpus (原始: x is babgpus)
  98. [actual] x → mowkpus (原始: x is mowkpus)
  99. [actual] mowkpus → gofgpus (原始: mowkpus is gofgpus)
  100. [planning] x → gofgpus (原始: x is gofgpus)
  101. [actual] gofgpus → qigbpus (原始: gofgpus is qigbpus)
  102. [planning] x → qigbpus (原始: x is qigbpus)
  103. [actual] qigbpus → lihkpus (原始: qigbpus is lihkpus)
  104. [planning] x → lihkpus (原始: x is lihkpus)
  105. [actual] lihkpus → ciwjpus (原始: lihkpus is ciwjpus)
  106. [planning] x → ciwjpus (原始: x is ciwjpus)
  107. [actual] ciwjpus → daxtpus (原始: ciwjpus is daxtpus)
  108. [planning] x → daxtpus (原始: x is daxtpus)
  109. [actual] daxtpus → gercpus (原始: daxtpus is gercpus)
  110. [planning] x → gercpus (原始: x is gercpus)
  111. [actual] gercpus → jacypus (原始: gercpus is jacypus)
  112. [planning] x → jacypus (原始: x is jacypus)
  113. [actual] jacypus → mujlpus (原始: jacypus is mujlpus)
  114. [planning] x → mujlpus (原始: x is mujlpus)
  115. [actual] mujlpus → yogqpus (原始: mujlpus is yogqpus)
  116. [planning] x → yogqpus (原始: x is yogqpus)
  117. [actual] yogqpus → quqmpus (原始: yogqpus is quqmpus)
  118. [planning] x → quqmpus (原始: x is quqmpus)
  119. [actual] yogqpus → quqmpus and pazjpus (原始: yogqpus is quqmpus and pazjpus)
  120. [planning] yogqpus → quqmpus (原始: yogqpus is quqmpus)
  121. [planning] yogqpus → pazjpus (原始: yogqpus is pazjpus)
  122. [actual] x → yogqpus (原始: x is yogqpus)
  123. [actual] x → quqmpus and pazjpus (原始: x is quqmpus and pazjpus)
  124. [actual] quqmpus → yinvpus (原始: quqmpus is yinvpus)
  125. [planning] quqmpus → yinvpus (原始: quqmpus is yinvpus)
  126. [actual] x → quqmpus (原始: x is quqmpus)
  127. [actual] quqmpus → yinvpus (原始: quqmpus is yinvpus)
  128. [actual] x → yinvpus (原始: x is yinvpus)
  129. [planning] x → quqmpus (原始: x is quqmpus)
  130. [actual] x → yogqpus (原始: x is yogqpus)
  131. [actual] yogqpus → quqmpus (原始: yogqpus is quqmpus)
  132. [actual] x → quqmpus (原始: x is quqmpus)
  133. [actual] quqmpus → yinvpus (原始: quqmpus is yinvpus)
  134. [actual] x → yinvpus (原始: x is yinvpus)
  135. [actual] yinvpus → vizbpus and lizgpus (原始: yinvpus is vizbpus and lizgpus)
  136. [planning] x → vizbpus (原始: x is vizbpus)
  137. [planning] x → lizgpus (原始: x is lizgpus)
  138. [actual] vizbpus → vakrpus (原始: vizbpus is vakrpus)
  139. [actual] x → vakrpus (原始: x is vakrpus)
  140. [actual] vakrpus → fezmpus and yarhpus and pigcpus (原始: vakrpus is fezmpus and yarhpus and pigcpus)
  141. [planning] x → fezmpus (原始: x is fezmpus)
  142. [actual] fezmpus → cellpus (原始: fezmpus is cellpus)
  143. [planning] x → cellpus (原始: x is cellpus)
  144. [actual] cellpus → hatwpus (原始: cellpus is hatwpus)
  145. [actual] x → hatwpus (原始: x is hatwpus)
  146. [actual] hatwpus → bamxpus (原始: hatwpus is bamxpus)
  147. [planning] x → bamxpus (原始: x is bamxpus)
  148. [actual] hatwpus → luwlpus and bamxpus (原始: hatwpus is luwlpus and bamxpus)
  149. [actual] x → hatwpus (原始: x is hatwpus)
  150. [actual] x → bamxpus and luwlpus (原始: x is bamxpus and luwlpus)
  151. [actual] x → bamxpus (原始: x is bamxpus)
  152. [actual] bamxpus → muwvpus (原始: bamxpus is muwvpus)
  153. [actual] x → muwvpus (原始: x is muwvpus)
  154. [actual] muwvpus → kokxpus (原始: muwvpus is kokxpus)
  155. [actual] x → kokxpus (原始: x is kokxpus)
  156. [actual] kokxpus → babgpus (原始: kokxpus is babgpus)
  157. [actual] x → babgpus (原始: x is babgpus)
  158. [actual] x → babgpus (原始: x is babgpus)
  159. [actual] kokxpus → zettpus (原始: kokxpus is zettpus)
  160. [actual] x → kokxpus (原始: x is kokxpus)
  161. [actual] kokxpus → babgpus (原始: kokxpus is babgpus)
  162. [actual] x → babgpus (原始: x is babgpus)

开始新的后处理...
[后处理] 从LoG数据文件中获取到图数据，节点数: 34
[后处理] 加载LoG图，包含 34 个节点
  LoG节点 0: x is babgpus (规则: MP, 深度: 1)
  LoG节点 1: x is quqmpus (规则: MP, 深度: 2)
  LoG节点 2: quqmpus is babgpus (规则: MP, 深度: 2)
  LoG节点 3: x is lihkpus (规则: CE, 深度: 3)
  LoG节点 4: lihkpus is quqmpus (规则: MP, 深度: 3)
  LoG节点 5: quqmpus is fezmpus (规则: CE, 深度: 3)
  LoG节点 6: fezmpus is babgpus (规则: MP, 深度: 3)
  LoG节点 7: x is lihkpus and zuqvpus (规则: MP, 深度: 4)
  LoG节点 8: lihkpus is gercpus (规则: CE, 深度: 4)
  LoG节点 9: gercpus is quqmpus (规则: MP, 深度: 4)
  LoG节点 10: quqmpus is fezmpus and yarhpus (规则: MP, 深度: 4)
  LoG节点 11: fezmpus is bamxpus (规则: CE, 深度: 4)
  LoG节点 12: bamxpus is babgpus (规则: CE, 深度: 4)
  LoG节点 13: x is gofgpus (规则: CE, 深度: 5)
  LoG节点 14: gofgpus is lihkpus and zuqvpus (规则: CE, 深度: 5)
  LoG节点 15: lihkpus is gercpus and wimrpus (规则: MP, 深度: 5)
  LoG节点 16: gercpus is mujlpus (规则: CE, 深度: 5)
  LoG节点 17: mujlpus is quqmpus (规则: CE, 深度: 5)
  LoG节点 18: quqmpus is vizbpus (规则: CE, 深度: 5)
  LoG节点 19: vizbpus is fezmpus and yarhpus (规则: CE, 深度: 5)
  LoG节点 20: fezmpus is bamxpus and luwlpus (规则: MP, 深度: 5)
  LoG节点 21: bamxpus is babgpus and zettpus (规则: MP, 深度: 5)
  LoG节点 22: x is gofgpus and yiqwpus (规则: MP, 深度: 6)
  LoG节点 23: gofgpus is lihkpus and zuqvpus and xocqpus (规则: MP, 深度: 6)
  LoG节点 24: lihkpus is daxtpus (规则: MP, 深度: 6)
  LoG节点 25: daxtpus is gercpus and wimrpus (规则: CE, 深度: 6)
  LoG节点 26: gercpus is mujlpus and cakqpus (规则: MP, 深度: 6)
  LoG节点 27: mujlpus is quqmpus and pazjpus (规则: MP, 深度: 6)
  LoG节点 28: quqmpus is vizbpus and lizgpus (规则: MP, 深度: 6)
  LoG节点 29: vizbpus is fezmpus and yarhpus and pigcpus (规则: MP, 深度: 6)
  LoG节点 30: fezmpus is hatwpus (规则: MP, 深度: 6)
  LoG节点 31: hatwpus is bamxpus and luwlpus (规则: CI, 深度: 6)
  LoG节点 32: bamxpus is kokxpus (规则: MP, 深度: 6)
  LoG节点 33: kokxpus is babgpus and zettpus (规则: CI, 深度: 6)

============================================================
[后处理] 开始处理节点
============================================================
📊 初始状态:
   - 标准化节点数: 162
   - 初始条件数: 23
   - LoG图节点数: 34

📋 初始条件列表:
    1. muwvpus is kokxpus
    2. kokxpus is zettpus
    3. hatwpus is luwlpus
    4. yogqpus is quqmpus and pazjpus
    5. vakrpus is fezmpus and yarhpus and pigcpus
    6. fezmpus is cellpus
    7. hatwpus is bamxpus
    8. quqmpus is yinvpus
    9. gofgpus is qigbpus
   10. cellpus is hatwpus
   11. ciwjpus is daxtpus
   12. x is mowkpus
   13. vizbpus is vakrpus
   14. qigbpus is lihkpus and zuqvpus and xocqpus
   15. daxtpus is gercpus and wimrpus and ceqspus
   16. jacypus is mujlpus and cakqpus
   17. lihkpus is ciwjpus
   18. bamxpus is muwvpus
   19. mowkpus is gofgpus and yiqwpus
   20. gercpus is jacypus
   21. yinvpus is vizbpus and lizgpus
   22. mujlpus is yogqpus
   23. kokxpus is babgpus

🔧 构建初始Statement列表...
✅ 初始Statement列表构建完成，包含 23 个前提节点

🔍 开始处理actual节点...

   节点 1: x is mowkpus
      ↻ 重复节点，计数: 2

   节点 2: x is mowkpus
      ↻ 重复节点，计数: 3

   节点 3: kokxpus is babgpus
      ↻ 重复节点，计数: 2

   节点 4: muwvpus is kokxpus
      ↻ 重复节点，计数: 2

   节点 5: muwvpus is babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: muwvpus is kokxpus → kokxpus is babgpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: muwvpus is kokxpus
  - 前提: kokxpus is babgpus

   节点 6: muwvpus is kokxpus
      ↻ 重复节点，计数: 3

   节点 7: kokxpus is zettpus
      ↻ 重复节点，计数: 2

   节点 8: muwvpus is kokxpus
      ↻ 重复节点，计数: 4

   节点 9: kokxpus is zettpus
      ↻ 重复节点，计数: 3

   节点 10: hatwpus is luwlpus
      ↻ 重复节点，计数: 2

   节点 11: hatwpus is bamxpus
      ↻ 重复节点，计数: 2

   节点 12: x is mowkpus
      ↻ 重复节点，计数: 4

   节点 13: mowkpus is gofgpus and yiqwpus
      ↻ 重复节点，计数: 2

   节点 14: mowkpus is gofgpus and yiqwpus
      ↻ 重复节点，计数: 3

   节点 15: mowkpus is gofgpus and yiqwpus
      ↻ 重复节点，计数: 4

   节点 16: mowkpus is gofgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: mowkpus is gofgpus and yiqwpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: mowkpus is gofgpus and yiqwpus

   节点 17: mowkpus is yiqwpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: mowkpus is gofgpus and yiqwpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: mowkpus is gofgpus and yiqwpus

   节点 18: vakrpus is fezmpus and yarhpus and pigcpus
      ↻ 重复节点，计数: 2

   节点 19: vakrpus is fezmpus and yarhpus and pigcpus
      ↻ 重复节点，计数: 3

   节点 20: qigbpus is lihkpus and zuqvpus and xocqpus
      ↻ 重复节点，计数: 2

   节点 21: mowkpus is gofgpus and yiqwpus
      ↻ 重复节点，计数: 5

   节点 22: x is mowkpus
      ↻ 重复节点，计数: 5

   节点 23: mowkpus is gofgpus
      ↻ 重复节点，计数: 2

   节点 24: kokxpus is babgpus
      ↻ 重复节点，计数: 3

   节点 25: kokxpus is babgpus
      ↻ 重复节点，计数: 4

   节点 26: bamxpus is muwvpus
      ↻ 重复节点，计数: 2

   节点 27: muwvpus is kokxpus
      ↻ 重复节点，计数: 5

   节点 28: kokxpus is zettpus
      ↻ 重复节点，计数: 4

   节点 29: kokxpus is babgpus
      ↻ 重复节点，计数: 5

   节点 30: x is mowkpus
      ↻ 重复节点，计数: 6

   节点 31: mowkpus is gofgpus and yiqwpus
      ↻ 重复节点，计数: 6

   节点 32: gofgpus is qigbpus
      ↻ 重复节点，计数: 2

   节点 33: gofgpus is qigbpus
      ↻ 重复节点，计数: 3

   节点 34: qigbpus is lihkpus and zuqvpus and xocqpus
      ↻ 重复节点，计数: 3

   节点 35: lihkpus is ciwjpus
      ↻ 重复节点，计数: 2

   节点 36: lihkpus is ciwjpus
      ↻ 重复节点，计数: 3

   节点 37: ciwjpus is daxtpus
      ↻ 重复节点，计数: 2

   节点 38: ciwjpus is daxtpus
      ↻ 重复节点，计数: 3

   节点 39: daxtpus is gercpus and wimrpus and ceqspus
      ↻ 重复节点，计数: 2

   节点 40: gercpus is jacypus
      ↻ 重复节点，计数: 2

   节点 41: gercpus is jacypus
      ↻ 重复节点，计数: 3

   节点 42: jacypus is mujlpus and cakqpus
      ↻ 重复节点，计数: 2

   节点 43: mujlpus is yogqpus
      ↻ 重复节点，计数: 2

   节点 44: mujlpus is yogqpus
      ↻ 重复节点，计数: 3

   节点 45: yogqpus is quqmpus and pazjpus
      ↻ 重复节点，计数: 2

   节点 46: quqmpus is yinvpus
      ↻ 重复节点，计数: 2

   节点 47: quqmpus is yinvpus
      ↻ 重复节点，计数: 3

   节点 48: yinvpus is vizbpus and lizgpus
      ↻ 重复节点，计数: 2

   节点 49: vizbpus is vakrpus
      ↻ 重复节点，计数: 2

   节点 50: vizbpus is vakrpus
      ↻ 重复节点，计数: 3

   节点 51: vakrpus is fezmpus and yarhpus and pigcpus
      ↻ 重复节点，计数: 4

   节点 52: fezmpus is cellpus
      ↻ 重复节点，计数: 2

   节点 53: fezmpus is cellpus
      ↻ 重复节点，计数: 3

   节点 54: cellpus is hatwpus
      ↻ 重复节点，计数: 2

   节点 55: cellpus is hatwpus
      ↻ 重复节点，计数: 3

   节点 56: hatwpus is luwlpus and bamxpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CI
      📋 推理路径: CI规则: hatwpus is luwlpus → hatwpus is bamxpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: hatwpus is luwlpus
  - 前提: hatwpus is bamxpus
  ✓ 点亮LoG节点: hatwpus is bamxpus and luwlpus
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 57: bamxpus is muwvpus
      ↻ 重复节点，计数: 3

   节点 58: bamxpus is muwvpus
      ↻ 重复节点，计数: 4

   节点 59: muwvpus is kokxpus
      ↻ 重复节点，计数: 6

   节点 60: muwvpus is kokxpus
      ↻ 重复节点，计数: 7

   节点 61: kokxpus is zettpus and babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CI
      📋 推理路径: CI规则: kokxpus is zettpus → kokxpus is babgpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: kokxpus is zettpus
  - 前提: kokxpus is babgpus
  ✓ 点亮LoG节点: kokxpus is babgpus and zettpus
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 62: x is mowkpus
      ↻ 重复节点，计数: 7

   节点 63: mowkpus is gofgpus
      ↻ 重复节点，计数: 3

   节点 64: gofgpus is qigbpus
      ↻ 重复节点，计数: 4

   节点 65: qigbpus is lihkpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: qigbpus is lihkpus and zuqvpus and xocqpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: qigbpus is lihkpus and zuqvpus and xocqpus

   节点 66: lihkpus is ciwjpus
      ↻ 重复节点，计数: 4

   节点 67: ciwjpus is daxtpus
      ↻ 重复节点，计数: 4

   节点 68: daxtpus is gercpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: daxtpus is gercpus and wimrpus and ceqspus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: daxtpus is gercpus and wimrpus and ceqspus
  ✓ 点亮LoG节点: daxtpus is gercpus and wimrpus
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 69: gercpus is jacypus
      ↻ 重复节点，计数: 4

   节点 70: jacypus is mujlpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: jacypus is mujlpus and cakqpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: jacypus is mujlpus and cakqpus

   节点 71: mujlpus is yogqpus
      ↻ 重复节点，计数: 4

   节点 72: yogqpus is quqmpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: yogqpus is quqmpus and pazjpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: yogqpus is quqmpus and pazjpus

   节点 73: quqmpus is yinvpus
      ↻ 重复节点，计数: 4

   节点 74: yinvpus is vizbpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: yinvpus is vizbpus and lizgpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: yinvpus is vizbpus and lizgpus

   节点 75: vizbpus is vakrpus
      ↻ 重复节点，计数: 4

   节点 76: vakrpus is fezmpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: vakrpus is fezmpus and yarhpus and pigcpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: vakrpus is fezmpus and yarhpus and pigcpus

   节点 77: fezmpus is cellpus
      ↻ 重复节点，计数: 4

   节点 78: cellpus is hatwpus
      ↻ 重复节点，计数: 4

   节点 79: hatwpus is bamxpus
      ↻ 重复节点，计数: 3

   节点 80: bamxpus is muwvpus
      ↻ 重复节点，计数: 5

   节点 81: muwvpus is kokxpus
      ↻ 重复节点，计数: 8

   节点 82: kokxpus is babgpus
      ↻ 重复节点，计数: 6

   节点 83: x is babgpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is babgpus
[子树点亮]     └─ 点亮依赖节点: x is quqmpus (深度2)
[子树点亮]     └─ 点亮依赖节点: quqmpus is babgpus (深度2)
[子树点亮]     └─ 点亮依赖节点: x is lihkpus (深度3)
[子树点亮]     └─ 点亮依赖节点: lihkpus is quqmpus (深度3)
[子树点亮]     └─ 点亮依赖节点: quqmpus is fezmpus (深度3)
[子树点亮]     └─ 点亮依赖节点: fezmpus is babgpus (深度3)
[子树点亮]     └─ 点亮依赖节点: x is lihkpus and zuqvpus (深度4)
[子树点亮]     └─ 点亮依赖节点: lihkpus is gercpus (深度4)
[子树点亮]     └─ 点亮依赖节点: gercpus is quqmpus (深度4)
[子树点亮]     └─ 点亮依赖节点: quqmpus is fezmpus and yarhpus (深度4)
[子树点亮]     └─ 点亮依赖节点: fezmpus is bamxpus (深度4)
[子树点亮]     └─ 点亮依赖节点: bamxpus is babgpus (深度4)
[子树点亮]     └─ 点亮依赖节点: x is gofgpus (深度5)
[子树点亮]     └─ 点亮依赖节点: gofgpus is lihkpus and zuqvpus (深度5)
[子树点亮]     └─ 点亮依赖节点: lihkpus is gercpus and wimrpus (深度5)
[子树点亮]     └─ 点亮依赖节点: gercpus is mujlpus (深度5)
[子树点亮]     └─ 点亮依赖节点: mujlpus is quqmpus (深度5)
[子树点亮]     └─ 点亮依赖节点: quqmpus is vizbpus (深度5)
[子树点亮]     └─ 点亮依赖节点: vizbpus is fezmpus and yarhpus (深度5)
[子树点亮]     └─ 点亮依赖节点: fezmpus is bamxpus and luwlpus (深度5)
[子树点亮]     └─ 点亮依赖节点: bamxpus is babgpus and zettpus (深度5)
[子树点亮]     └─ 点亮依赖节点: x is gofgpus and yiqwpus (深度6)
[子树点亮]     └─ 点亮依赖节点: gofgpus is lihkpus and zuqvpus and xocqpus (深度6)
[子树点亮]     └─ 点亮依赖节点: lihkpus is daxtpus (深度6)
[子树点亮]     └─ 点亮依赖节点: gercpus is mujlpus and cakqpus (深度6)
[子树点亮]     └─ 点亮依赖节点: mujlpus is quqmpus and pazjpus (深度6)
[子树点亮]     └─ 点亮依赖节点: quqmpus is vizbpus and lizgpus (深度6)
[子树点亮]     └─ 点亮依赖节点: vizbpus is fezmpus and yarhpus and pigcpus (深度6)
[子树点亮]     └─ 点亮依赖节点: fezmpus is hatwpus (深度6)
[子树点亮]     └─ 点亮依赖节点: bamxpus is kokxpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 30 个节点
      ✅ 验证成功 + LoG匹配

   节点 84: x is mowkpus
      ↻ 重复节点，计数: 8

   节点 85: mowkpus is gofgpus
      ↻ 重复节点，计数: 4

   节点 86: gofgpus is qigbpus
      ↻ 重复节点，计数: 5

   节点 87: qigbpus is lihkpus
      ↻ 重复节点，计数: 2

   节点 88: lihkpus is ciwjpus
      ↻ 重复节点，计数: 5

   节点 89: ciwjpus is daxtpus
      ↻ 重复节点，计数: 5

   节点 90: daxtpus is gercpus
      ↻ 重复节点，计数: 2

   节点 91: gercpus is jacypus
      ↻ 重复节点，计数: 5

   节点 92: jacypus is mujlpus
      ↻ 重复节点，计数: 2

   节点 93: mujlpus is yogqpus
      ↻ 重复节点，计数: 5

   节点 94: yogqpus is quqmpus
      ↻ 重复节点，计数: 2

   节点 95: yogqpus is quqmpus and pazjpus
      ↻ 重复节点，计数: 3

   节点 96: x is yogqpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is mowkpus → mowkpus is yogqpus
[后处理] 基于推理轨迹点亮节点，使用了 10 个前提条件:
  - 前提: x is mowkpus
  - 前提: mowkpus is gofgpus
  - 前提: gofgpus is qigbpus
  - 前提: qigbpus is lihkpus
  - 前提: lihkpus is ciwjpus
  - 前提: ciwjpus is daxtpus
  - 前提: daxtpus is gercpus
  - 前提: gercpus is jacypus
  - 前提: jacypus is mujlpus
  - 前提: mujlpus is yogqpus

   节点 97: x is quqmpus and pazjpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is mowkpus → mowkpus is quqmpus and pazjpus
[后处理] 基于推理轨迹点亮节点，使用了 11 个前提条件:
  - 前提: x is mowkpus
  - 前提: mowkpus is gofgpus
  - 前提: gofgpus is qigbpus
  - 前提: qigbpus is lihkpus
  - 前提: lihkpus is ciwjpus
  - 前提: ciwjpus is daxtpus
  - 前提: daxtpus is gercpus
  - 前提: gercpus is jacypus
  - 前提: jacypus is mujlpus
  - 前提: mujlpus is yogqpus
  - 前提: yogqpus is quqmpus and pazjpus

   节点 98: quqmpus is yinvpus
      ↻ 重复节点，计数: 5

   节点 99: x is quqmpus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 100: quqmpus is yinvpus
      ↻ 重复节点，计数: 6

   节点 101: x is yinvpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is mowkpus → mowkpus is yinvpus
[后处理] 基于推理轨迹点亮节点，使用了 12 个前提条件:
  - 前提: x is mowkpus
  - 前提: mowkpus is gofgpus
  - 前提: gofgpus is qigbpus
  - 前提: qigbpus is lihkpus
  - 前提: lihkpus is ciwjpus
  - 前提: ciwjpus is daxtpus
  - 前提: daxtpus is gercpus
  - 前提: gercpus is jacypus
  - 前提: jacypus is mujlpus
  - 前提: mujlpus is yogqpus
  - 前提: yogqpus is quqmpus
  - 前提: quqmpus is yinvpus

   节点 102: x is yogqpus
      ↻ 重复节点，计数: 2

   节点 103: yogqpus is quqmpus
      ↻ 重复节点，计数: 3

   节点 104: x is quqmpus
      ↻ 重复节点，计数: 2

   节点 105: quqmpus is yinvpus
      ↻ 重复节点，计数: 7

   节点 106: x is yinvpus
      ↻ 重复节点，计数: 2

   节点 107: yinvpus is vizbpus and lizgpus
      ↻ 重复节点，计数: 3

   节点 108: vizbpus is vakrpus
      ↻ 重复节点，计数: 5

   节点 109: x is vakrpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is mowkpus → mowkpus is vakrpus
[后处理] 基于推理轨迹点亮节点，使用了 14 个前提条件:
  - 前提: x is mowkpus
  - 前提: mowkpus is gofgpus
  - 前提: gofgpus is qigbpus
  - 前提: qigbpus is lihkpus
  - 前提: lihkpus is ciwjpus
  - 前提: ciwjpus is daxtpus
  - 前提: daxtpus is gercpus
  - 前提: gercpus is jacypus
  - 前提: jacypus is mujlpus
  - 前提: mujlpus is yogqpus
  - 前提: yogqpus is quqmpus
  - 前提: quqmpus is yinvpus
  - 前提: yinvpus is vizbpus
  - 前提: vizbpus is vakrpus

   节点 110: vakrpus is fezmpus and yarhpus and pigcpus
      ↻ 重复节点，计数: 5

   节点 111: fezmpus is cellpus
      ↻ 重复节点，计数: 5

   节点 112: cellpus is hatwpus
      ↻ 重复节点，计数: 5

   节点 113: x is hatwpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is mowkpus → mowkpus is hatwpus
[后处理] 基于推理轨迹点亮节点，使用了 17 个前提条件:
  - 前提: x is mowkpus
  - 前提: mowkpus is gofgpus
  - 前提: gofgpus is qigbpus
  - 前提: qigbpus is lihkpus
  - 前提: lihkpus is ciwjpus
  - 前提: ciwjpus is daxtpus
  - 前提: daxtpus is gercpus
  - 前提: gercpus is jacypus
  - 前提: jacypus is mujlpus
  - 前提: mujlpus is yogqpus
  - 前提: yogqpus is quqmpus
  - 前提: quqmpus is yinvpus
  - 前提: yinvpus is vizbpus
  - 前提: vizbpus is vakrpus
  - 前提: vakrpus is fezmpus
  - 前提: fezmpus is cellpus
  - 前提: cellpus is hatwpus

   节点 114: hatwpus is bamxpus
      ↻ 重复节点，计数: 4

   节点 115: hatwpus is luwlpus and bamxpus
      ↻ 重复节点，计数: 2

   节点 116: x is hatwpus
      ↻ 重复节点，计数: 2

   节点 117: x is bamxpus and luwlpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is mowkpus → mowkpus is bamxpus and luwlpus
[后处理] 基于推理轨迹点亮节点，使用了 19 个前提条件:
  - 前提: x is mowkpus
  - 前提: mowkpus is gofgpus
  - 前提: gofgpus is qigbpus
  - 前提: qigbpus is lihkpus
  - 前提: lihkpus is ciwjpus
  - 前提: ciwjpus is daxtpus
  - 前提: daxtpus is gercpus
  - 前提: gercpus is jacypus
  - 前提: jacypus is mujlpus
  - 前提: mujlpus is yogqpus
  - 前提: yogqpus is quqmpus
  - 前提: quqmpus is yinvpus
  - 前提: yinvpus is vizbpus
  - 前提: vizbpus is vakrpus
  - 前提: vakrpus is fezmpus
  - 前提: fezmpus is cellpus
  - 前提: cellpus is hatwpus
  - 前提: hatwpus is bamxpus
  - 前提: hatwpus is luwlpus

   节点 118: x is bamxpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: x is bamxpus and luwlpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: x is bamxpus and luwlpus

   节点 119: bamxpus is muwvpus
      ↻ 重复节点，计数: 6

   节点 120: x is muwvpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is mowkpus → mowkpus is muwvpus
[后处理] 基于推理轨迹点亮节点，使用了 19 个前提条件:
  - 前提: x is mowkpus
  - 前提: mowkpus is gofgpus
  - 前提: gofgpus is qigbpus
  - 前提: qigbpus is lihkpus
  - 前提: lihkpus is ciwjpus
  - 前提: ciwjpus is daxtpus
  - 前提: daxtpus is gercpus
  - 前提: gercpus is jacypus
  - 前提: jacypus is mujlpus
  - 前提: mujlpus is yogqpus
  - 前提: yogqpus is quqmpus
  - 前提: quqmpus is yinvpus
  - 前提: yinvpus is vizbpus
  - 前提: vizbpus is vakrpus
  - 前提: vakrpus is fezmpus
  - 前提: fezmpus is cellpus
  - 前提: cellpus is hatwpus
  - 前提: hatwpus is bamxpus
  - 前提: bamxpus is muwvpus

   节点 121: muwvpus is kokxpus
      ↻ 重复节点，计数: 9

   节点 122: x is kokxpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is mowkpus → mowkpus is kokxpus
[后处理] 基于推理轨迹点亮节点，使用了 20 个前提条件:
  - 前提: x is mowkpus
  - 前提: mowkpus is gofgpus
  - 前提: gofgpus is qigbpus
  - 前提: qigbpus is lihkpus
  - 前提: lihkpus is ciwjpus
  - 前提: ciwjpus is daxtpus
  - 前提: daxtpus is gercpus
  - 前提: gercpus is jacypus
  - 前提: jacypus is mujlpus
  - 前提: mujlpus is yogqpus
  - 前提: yogqpus is quqmpus
  - 前提: quqmpus is yinvpus
  - 前提: yinvpus is vizbpus
  - 前提: vizbpus is vakrpus
  - 前提: vakrpus is fezmpus
  - 前提: fezmpus is cellpus
  - 前提: cellpus is hatwpus
  - 前提: hatwpus is bamxpus
  - 前提: bamxpus is muwvpus
  - 前提: muwvpus is kokxpus

   节点 123: kokxpus is babgpus
      ↻ 重复节点，计数: 7

   节点 124: x is babgpus
      ↻ 重复节点，计数: 2

   节点 125: x is babgpus
      ↻ 重复节点，计数: 3

   节点 126: kokxpus is zettpus
      ↻ 重复节点，计数: 5

   节点 127: x is kokxpus
      ↻ 重复节点，计数: 2

   节点 128: kokxpus is babgpus
      ↻ 重复节点，计数: 8

   节点 129: x is babgpus
      ↻ 重复节点，计数: 4

🔍 分析推理路径完整性...

============================================================
[后处理] 处理完成
============================================================
📈 处理统计:
   - 处理的actual节点: 129
   - 新增节点: 22
   - 更新已存在节点: 107
   - 点亮的LoG节点: 34

🎯 推理质量统计:
   - 完美推理: 22 (节点正确 + 路径正确)
   - 部分推理: 0 (节点正确 + 路径部分错误)
   - 无效推理: 0 (节点错误或路径完全错误)
[LoG分析] LoG图: 34节点, 23前提, 复杂度1-23

📊 === Statement列表分析 ===
📈 节点统计:
   - 总节点数: 45
   - 前提节点: 23
   - 推理节点: 22
   - 幻觉节点: 0
   - 点亮LoG节点: 34

✅ 推理节点详情:
   🟢 muwvpus is babgpus (出现1次, 质量:perfect)
   🟢 mowkpus is gofgpus (出现4次, 质量:perfect)
   🟢 mowkpus is yiqwpus (出现1次, 质量:perfect)
   🟢 hatwpus is luwlpus and bamxpus (出现2次, 质量:perfect)
   🟢 kokxpus is zettpus and babgpus (出现1次, 质量:perfect)
   🟢 qigbpus is lihkpus (出现2次, 质量:perfect)
   🟢 daxtpus is gercpus (出现2次, 质量:perfect)
   🟢 jacypus is mujlpus (出现2次, 质量:perfect)
   🟢 yogqpus is quqmpus (出现3次, 质量:perfect)
   🟢 yinvpus is vizbpus (出现1次, 质量:perfect)
   🟢 vakrpus is fezmpus (出现1次, 质量:perfect)
   🟢 x is babgpus (出现4次, 质量:perfect)
   🟢 x is yogqpus (出现2次, 质量:perfect)
   🟢 x is quqmpus and pazjpus (出现1次, 质量:perfect)
   🟢 x is quqmpus (出现2次, 质量:perfect)
   🟢 x is yinvpus (出现2次, 质量:perfect)
   🟢 x is vakrpus (出现1次, 质量:perfect)
   🟢 x is hatwpus (出现2次, 质量:perfect)
   🟢 x is bamxpus and luwlpus (出现1次, 质量:perfect)
   🟢 x is bamxpus (出现1次, 质量:perfect)
   🟢 x is muwvpus (出现1次, 质量:perfect)
   🟢 x is kokxpus (出现2次, 质量:perfect)

🔥 点亮的LoG节点:
   - quqmpus is fezmpus
   - bamxpus is babgpus
   - mujlpus is quqmpus and pazjpus
   - hatwpus is bamxpus and luwlpus
   - lihkpus is daxtpus
   - quqmpus is fezmpus and yarhpus
   - x is lihkpus
   - x is quqmpus
   - lihkpus is gercpus
   - gercpus is quqmpus
   - vizbpus is fezmpus and yarhpus
   - bamxpus is babgpus and zettpus
   - x is babgpus
   - lihkpus is gercpus and wimrpus
   - gercpus is mujlpus
   - gofgpus is lihkpus and zuqvpus
   - fezmpus is bamxpus
   - x is lihkpus and zuqvpus
   - bamxpus is kokxpus
   - vizbpus is fezmpus and yarhpus and pigcpus
   - quqmpus is babgpus
   - quqmpus is vizbpus
   - x is gofgpus
   - mujlpus is quqmpus
   - quqmpus is vizbpus and lizgpus
   - fezmpus is babgpus
   - gofgpus is lihkpus and zuqvpus and xocqpus
   - fezmpus is bamxpus and luwlpus
   - gercpus is mujlpus and cakqpus
   - kokxpus is babgpus and zettpus
   - lihkpus is quqmpus
   - x is gofgpus and yiqwpus
   - fezmpus is hatwpus
   - daxtpus is gercpus and wimrpus

============================================================
📊 计算评估指标
============================================================

🎯 计算Coverage指标...
   深度Coverage: 6/6 = 100.00%
   最深点亮节点: x is babgpus (第6层)
   节点Coverage: 34/34 = 100.00%
   前提条件Coverage: 23/23 = 100.00%
   各推理层点亮比例:
     第1层: 12/12 = 100.00%
     第2层: 9/9 = 100.00%
     第3层: 6/6 = 100.00%
     第4层: 4/4 = 100.00%
     第5层: 2/2 = 100.00%
     第6层: 1/1 = 100.00%

🎯 计算Precision指标...
   Error Rate: 0/22 = 0.00%
   可推导节点: 22/22
   Strict Error Rate: 0/22 = 0.00%
   严格有效节点: 22/22

   详细分析:
     完美推理: 22 (100.00%)
     部分推理: 0 (0.00%)
     无效推理: 0 (0.00%)

================================================================================
处理记录 36/50
================================================================================
记录索引: 35
问题状态: correct
📁 从缓存加载提取结果: evaluation_results.LoG_6.deepseek-reasoner_record_35.json
✅ 使用缓存结果:
   - 句子数: 140
   - 提取的语句数: 170
   - 初始条件数: 13

=== Statement提取完成 ===
总句子数: 140
成功提取: 140
失败提取: 0
总statements数: 170

=== 开始清洗Statement格式 ===
原始statements数: 170
清洗后statements数: 114
过滤掉的statements数: 56
清洗后的statements:
  1. [planning] x is babgpus
  2. [actual] puvlpus is poqcpus and sagqpus
  3. [actual] kastpus is gepfpus
  4. [actual] poqcpus is tarlpus
  5. [actual] fevwpus is rudwpus and kabhpus
  6. [actual] macgpus is seyvpus
  7. [actual] tarlpus is golypus
  8. [actual] golypus is harxpus and rurvpus
  9. [actual] x is kastpus
  10. [actual] gepfpus is puvlpus
  11. [actual] rudwpus is jiddpus and puzdpus
  12. [actual] jiddpus is macgpus and xoxkpus
  13. [actual] harxpus is fevwpus and heqvpus
  14. [actual] seyvpus is babgpus and fuczpus and majspus and jomspus
  15. [planning] x is babgpus
  16. [actual] x is kastpus
  17. [actual] x is kastpus
  18. [actual] kastpus is gepfpus
  19. [actual] gepfpus is puvlpus
  20. [actual] puvlpus is poqcpus and sagqpus
  21. [actual] poqcpus is tarlpus
  22. [actual] tarlpus is golypus
  23. [actual] golypus is harxpus and rurvpus
  24. [actual] harxpus is fevwpus and heqvpus
  25. [actual] fevwpus is rudwpus and kabhpus
  26. [actual] rudwpus is jiddpus and puzdpus
  27. [actual] jiddpus is macgpus and xoxkpus
  28. [actual] macgpus is seyvpus
  29. [actual] seyvpus is babgpus and fuczpus and majspus and jomspus
  30. [actual] macgpus is seyvpus
  31. [planning] seyvpus is babgpus
  32. [planning] x is babgpus
  33. [actual] x is kastpus->gepfpus->puvlpus->poqcpus->tarlpus->golypus->harxpus->fevwpus->rudwpus->jiddpus->macgpus->seyvpus->babgpus
  34. [actual] kastpus is gepfpus
  35. [actual] gepfpus is puvlpus
  36. [actual] puvlpus is poqcpus
  37. [actual] puvlpus is poqcpus and sagqpus
  38. [actual] puvlpus is poqcpus
  39. [actual] poqcpus is tarlpus
  40. [actual] tarlpus is golypus
  41. [actual] golypus is harxpus
  42. [actual] harxpus is fevwpus
  43. [actual] fevwpus is rudwpus
  44. [actual] rudwpus is jiddpus
  45. [actual] jiddpus is macgpus
  46. [actual] macgpus is seyvpus
  47. [actual] seyvpus is babgpus
  48. [actual] x is babgpus
  49. [actual] x is babgpus
  50. [actual] seyvpus is babgpus and others
  51. [planning] seyvpus is babgpus
  52. [planning] seyvpus is babgpus
  53. [actual] puvlpus is poqcpus and sagqpus
  54. [planning] puvlpus is poqcpus and sagqpus
  55. [actual] seyvpus is babgpus and fuczpus and majspus and jomspus
  56. [actual] macgpus is seyvpus
  57. [actual] seyvpus is a category containing macgpus
  58. [planning] macgpus is seyvpus
  59. [planning] seyvpus is babgpus
  60. [planning] macgpus is babgpus
  61. [planning] babgpus is a set of sets or something
  62. [planning] babgpus is a category
  63. [planning] seyvpus is a category
  64. [planning] seyvpus is babgpus
  65. [planning] seyvpus is babgpus
  66. [planning] seyvpus is babgpus
  67. [actual] golypus is harxpus and rurvpus
  68. [planning] golypus is harxpus
  69. [planning] golypus is rurvpus
  70. [planning] golypus is an element of harxpus and rurvpus
  71. [actual] harxpus is fevwpus and heqvpus
  72. [planning] harxpus is fevwpus and heqvpus
  73. [actual] seyvpus is babgpus
  74. [planning] seyvpus is an element of babgpus
  75. [actual] babgpus is a category of categories
  76. [planning] macgpus is seyvpus
  77. [actual] macgpus is an element of seyvpus
  78. [planning] x is babgpus
  79. [actual] x is kastpus
  80. [actual] kastpus is gepfpus
  81. [actual] x is gepfpus
  82. [actual] gepfpus is puvlpus
  83. [actual] x is puvlpus
  84. [actual] puvlpus is poqcpus
  85. [actual] x is poqcpus
  86. [actual] puvlpus is poqcpus
  87. [actual] poqcpus is tarlpus
  88. [actual] x is tarlpus
  89. [actual] tarlpus is golypus
  90. [planning] x is golypus
  91. [actual] golypus is harxpus
  92. [actual] x is harxpus
  93. [actual] golypus is harxpus
  94. [actual] golypus is rurvpus
  95. [actual] golypus is subset of harxpus
  96. [actual] harxpus is fevwpus
  97. [actual] x is fevwpus
  98. [actual] harxpus is fevwpus and heqvpus
  99. [actual] fevwpus is rudwpus
  100. [actual] x is rudwpus
  101. [actual] fevwpus is rudwpus and kabhpus
  102. [actual] rudwpus is jiddpus
  103. [planning] x is jiddpus
  104. [actual] rudwpus is jiddpus and puzdpus
  105. [actual] jiddpus is macgpus
  106. [planning] x is macgpus
  107. [actual] jiddpus is macgpus and xoxkpus
  108. [actual] macgpus is seyvpus
  109. [planning] x is seyvpus
  110. [actual] seyvpus is babgpus
  111. [planning] x is babgpus
  112. [actual] seyvpus is babgpus and fuczpus and majspus and jomspus
  113. [actual] seyvpus is subset of babgpus
  114. [actual] x is babgpus

=== 开始标准化和解析节点 ===
清洗后statements数: 114
标准化后节点数: 103
过滤掉的无效实体数: 11
标准化后的节点:
  1. [planning] x → babgpus (原始: x is babgpus)
  2. [actual] puvlpus → poqcpus and sagqpus (原始: puvlpus is poqcpus and sagqpus)
  3. [actual] kastpus → gepfpus (原始: kastpus is gepfpus)
  4. [actual] poqcpus → tarlpus (原始: poqcpus is tarlpus)
  5. [actual] fevwpus → rudwpus and kabhpus (原始: fevwpus is rudwpus and kabhpus)
  6. [actual] macgpus → seyvpus (原始: macgpus is seyvpus)
  7. [actual] tarlpus → golypus (原始: tarlpus is golypus)
  8. [actual] golypus → harxpus and rurvpus (原始: golypus is harxpus and rurvpus)
  9. [actual] x → kastpus (原始: x is kastpus)
  10. [actual] gepfpus → puvlpus (原始: gepfpus is puvlpus)
  11. [actual] rudwpus → jiddpus and puzdpus (原始: rudwpus is jiddpus and puzdpus)
  12. [actual] jiddpus → macgpus and xoxkpus (原始: jiddpus is macgpus and xoxkpus)
  13. [actual] harxpus → fevwpus and heqvpus (原始: harxpus is fevwpus and heqvpus)
  14. [actual] seyvpus → babgpus and fuczpus and majspus and jomspus (原始: seyvpus is babgpus and fuczpus and majspus and jomspus)
  15. [planning] x → babgpus (原始: x is babgpus)
  16. [actual] x → kastpus (原始: x is kastpus)
  17. [actual] x → kastpus (原始: x is kastpus)
  18. [actual] kastpus → gepfpus (原始: kastpus is gepfpus)
  19. [actual] gepfpus → puvlpus (原始: gepfpus is puvlpus)
  20. [actual] puvlpus → poqcpus and sagqpus (原始: puvlpus is poqcpus and sagqpus)
  21. [actual] poqcpus → tarlpus (原始: poqcpus is tarlpus)
  22. [actual] tarlpus → golypus (原始: tarlpus is golypus)
  23. [actual] golypus → harxpus and rurvpus (原始: golypus is harxpus and rurvpus)
  24. [actual] harxpus → fevwpus and heqvpus (原始: harxpus is fevwpus and heqvpus)
  25. [actual] fevwpus → rudwpus and kabhpus (原始: fevwpus is rudwpus and kabhpus)
  26. [actual] rudwpus → jiddpus and puzdpus (原始: rudwpus is jiddpus and puzdpus)
  27. [actual] jiddpus → macgpus and xoxkpus (原始: jiddpus is macgpus and xoxkpus)
  28. [actual] macgpus → seyvpus (原始: macgpus is seyvpus)
  29. [actual] seyvpus → babgpus and fuczpus and majspus and jomspus (原始: seyvpus is babgpus and fuczpus and majspus and jomspus)
  30. [actual] macgpus → seyvpus (原始: macgpus is seyvpus)
  31. [planning] seyvpus → babgpus (原始: seyvpus is babgpus)
  32. [planning] x → babgpus (原始: x is babgpus)
  33. [actual] x → kastpus->gepfpus->puvlpus->poqcpus->tarlpus->golypus->harxpus->fevwpus->rudwpus->jiddpus->macgpus->seyvpus->babgpus (原始: x is kastpus->gepfpus->puvlpus->poqcpus->tarlpus->golypus->harxpus->fevwpus->rudwpus->jiddpus->macgpus->seyvpus->babgpus)
  34. [actual] kastpus → gepfpus (原始: kastpus is gepfpus)
  35. [actual] gepfpus → puvlpus (原始: gepfpus is puvlpus)
  36. [actual] puvlpus → poqcpus (原始: puvlpus is poqcpus)
  37. [actual] puvlpus → poqcpus and sagqpus (原始: puvlpus is poqcpus and sagqpus)
  38. [actual] puvlpus → poqcpus (原始: puvlpus is poqcpus)
  39. [actual] poqcpus → tarlpus (原始: poqcpus is tarlpus)
  40. [actual] tarlpus → golypus (原始: tarlpus is golypus)
  41. [actual] golypus → harxpus (原始: golypus is harxpus)
  42. [actual] harxpus → fevwpus (原始: harxpus is fevwpus)
  43. [actual] fevwpus → rudwpus (原始: fevwpus is rudwpus)
  44. [actual] rudwpus → jiddpus (原始: rudwpus is jiddpus)
  45. [actual] jiddpus → macgpus (原始: jiddpus is macgpus)
  46. [actual] macgpus → seyvpus (原始: macgpus is seyvpus)
  47. [actual] seyvpus → babgpus (原始: seyvpus is babgpus)
  48. [actual] x → babgpus (原始: x is babgpus)
  49. [actual] x → babgpus (原始: x is babgpus)
  50. [planning] seyvpus → babgpus (原始: seyvpus is babgpus)
  51. [planning] seyvpus → babgpus (原始: seyvpus is babgpus)
  52. [actual] puvlpus → poqcpus and sagqpus (原始: puvlpus is poqcpus and sagqpus)
  53. [planning] puvlpus → poqcpus and sagqpus (原始: puvlpus is poqcpus and sagqpus)
  54. [actual] seyvpus → babgpus and fuczpus and majspus and jomspus (原始: seyvpus is babgpus and fuczpus and majspus and jomspus)
  55. [actual] macgpus → seyvpus (原始: macgpus is seyvpus)
  56. [planning] macgpus → seyvpus (原始: macgpus is seyvpus)
  57. [planning] seyvpus → babgpus (原始: seyvpus is babgpus)
  58. [planning] macgpus → babgpus (原始: macgpus is babgpus)
  59. [planning] seyvpus → babgpus (原始: seyvpus is babgpus)
  60. [planning] seyvpus → babgpus (原始: seyvpus is babgpus)
  61. [planning] seyvpus → babgpus (原始: seyvpus is babgpus)
  62. [actual] golypus → harxpus and rurvpus (原始: golypus is harxpus and rurvpus)
  63. [planning] golypus → harxpus (原始: golypus is harxpus)
  64. [planning] golypus → rurvpus (原始: golypus is rurvpus)
  65. [actual] harxpus → fevwpus and heqvpus (原始: harxpus is fevwpus and heqvpus)
  66. [planning] harxpus → fevwpus and heqvpus (原始: harxpus is fevwpus and heqvpus)
  67. [actual] seyvpus → babgpus (原始: seyvpus is babgpus)
  68. [planning] macgpus → seyvpus (原始: macgpus is seyvpus)
  69. [planning] x → babgpus (原始: x is babgpus)
  70. [actual] x → kastpus (原始: x is kastpus)
  71. [actual] kastpus → gepfpus (原始: kastpus is gepfpus)
  72. [actual] x → gepfpus (原始: x is gepfpus)
  73. [actual] gepfpus → puvlpus (原始: gepfpus is puvlpus)
  74. [actual] x → puvlpus (原始: x is puvlpus)
  75. [actual] puvlpus → poqcpus (原始: puvlpus is poqcpus)
  76. [actual] x → poqcpus (原始: x is poqcpus)
  77. [actual] puvlpus → poqcpus (原始: puvlpus is poqcpus)
  78. [actual] poqcpus → tarlpus (原始: poqcpus is tarlpus)
  79. [actual] x → tarlpus (原始: x is tarlpus)
  80. [actual] tarlpus → golypus (原始: tarlpus is golypus)
  81. [planning] x → golypus (原始: x is golypus)
  82. [actual] golypus → harxpus (原始: golypus is harxpus)
  83. [actual] x → harxpus (原始: x is harxpus)
  84. [actual] golypus → harxpus (原始: golypus is harxpus)
  85. [actual] golypus → rurvpus (原始: golypus is rurvpus)
  86. [actual] harxpus → fevwpus (原始: harxpus is fevwpus)
  87. [actual] x → fevwpus (原始: x is fevwpus)
  88. [actual] harxpus → fevwpus and heqvpus (原始: harxpus is fevwpus and heqvpus)
  89. [actual] fevwpus → rudwpus (原始: fevwpus is rudwpus)
  90. [actual] x → rudwpus (原始: x is rudwpus)
  91. [actual] fevwpus → rudwpus and kabhpus (原始: fevwpus is rudwpus and kabhpus)
  92. [actual] rudwpus → jiddpus (原始: rudwpus is jiddpus)
  93. [planning] x → jiddpus (原始: x is jiddpus)
  94. [actual] rudwpus → jiddpus and puzdpus (原始: rudwpus is jiddpus and puzdpus)
  95. [actual] jiddpus → macgpus (原始: jiddpus is macgpus)
  96. [planning] x → macgpus (原始: x is macgpus)
  97. [actual] jiddpus → macgpus and xoxkpus (原始: jiddpus is macgpus and xoxkpus)
  98. [actual] macgpus → seyvpus (原始: macgpus is seyvpus)
  99. [planning] x → seyvpus (原始: x is seyvpus)
  100. [actual] seyvpus → babgpus (原始: seyvpus is babgpus)
  101. [planning] x → babgpus (原始: x is babgpus)
  102. [actual] seyvpus → babgpus and fuczpus and majspus and jomspus (原始: seyvpus is babgpus and fuczpus and majspus and jomspus)
  103. [actual] x → babgpus (原始: x is babgpus)

开始新的后处理...
[后处理] 从LoG数据文件中获取到图数据，节点数: 21
[后处理] 加载LoG图，包含 21 个节点
  LoG节点 0: x is babgpus (规则: CE, 深度: 1)
  LoG节点 1: x is babgpus and fuczpus (规则: MP, 深度: 2)
  LoG节点 2: x is rudwpus (规则: MP, 深度: 3)
  LoG节点 3: rudwpus is babgpus and fuczpus (规则: CE, 深度: 3)
  LoG节点 4: x is poqcpus (规则: CE, 深度: 4)
  LoG节点 5: poqcpus is rudwpus (规则: MP, 深度: 4)
  LoG节点 6: rudwpus is babgpus and fuczpus and majspus (规则: MP, 深度: 4)
  LoG节点 7: x is poqcpus and sagqpus (规则: MP, 深度: 5)
  LoG节点 8: poqcpus is harxpus (规则: MP, 深度: 5)
  LoG节点 9: harxpus is rudwpus (规则: MP, 深度: 5)
  LoG节点 10: rudwpus is macgpus (规则: MP, 深度: 5)
  LoG节点 11: macgpus is babgpus and fuczpus and majspus (规则: CE, 深度: 5)
  LoG节点 12: x is gepfpus (规则: MP, 深度: 6)
  LoG节点 13: gepfpus is poqcpus and sagqpus (规则: MP, 深度: 6)
  LoG节点 14: poqcpus is golypus (规则: MP, 深度: 6)
  LoG节点 15: golypus is harxpus (规则: CE, 深度: 6)
  LoG节点 16: harxpus is fevwpus (规则: CE, 深度: 6)
  LoG节点 17: fevwpus is rudwpus (规则: CE, 深度: 6)
  LoG节点 18: rudwpus is jiddpus (规则: CE, 深度: 6)
  LoG节点 19: jiddpus is macgpus (规则: CE, 深度: 6)
  LoG节点 20: macgpus is babgpus and fuczpus and majspus and jomspus (规则: MP, 深度: 6)

============================================================
[后处理] 开始处理节点
============================================================
📊 初始状态:
   - 标准化节点数: 103
   - 初始条件数: 13
   - LoG图节点数: 21

📋 初始条件列表:
    1. puvlpus is poqcpus and sagqpus
    2. kastpus is gepfpus
    3. poqcpus is tarlpus
    4. fevwpus is rudwpus and kabhpus
    5. macgpus is seyvpus
    6. tarlpus is golypus
    7. golypus is harxpus and rurvpus
    8. x is kastpus
    9. gepfpus is puvlpus
   10. rudwpus is jiddpus and puzdpus
   11. jiddpus is macgpus and xoxkpus
   12. harxpus is fevwpus and heqvpus
   13. seyvpus is babgpus and fuczpus and majspus and jomspus

🔧 构建初始Statement列表...
✅ 初始Statement列表构建完成，包含 13 个前提节点

🔍 开始处理actual节点...

   节点 1: puvlpus is poqcpus and sagqpus
      ↻ 重复节点，计数: 2

   节点 2: kastpus is gepfpus
      ↻ 重复节点，计数: 2

   节点 3: poqcpus is tarlpus
      ↻ 重复节点，计数: 2

   节点 4: fevwpus is rudwpus and kabhpus
      ↻ 重复节点，计数: 2

   节点 5: macgpus is seyvpus
      ↻ 重复节点，计数: 2

   节点 6: tarlpus is golypus
      ↻ 重复节点，计数: 2

   节点 7: golypus is harxpus and rurvpus
      ↻ 重复节点，计数: 2

   节点 8: x is kastpus
      ↻ 重复节点，计数: 2

   节点 9: gepfpus is puvlpus
      ↻ 重复节点，计数: 2

   节点 10: rudwpus is jiddpus and puzdpus
      ↻ 重复节点，计数: 2

   节点 11: jiddpus is macgpus and xoxkpus
      ↻ 重复节点，计数: 2

   节点 12: harxpus is fevwpus and heqvpus
      ↻ 重复节点，计数: 2

   节点 13: seyvpus is babgpus and fuczpus and majspus and jomspus
      ↻ 重复节点，计数: 2

   节点 14: x is kastpus
      ↻ 重复节点，计数: 3

   节点 15: x is kastpus
      ↻ 重复节点，计数: 4

   节点 16: kastpus is gepfpus
      ↻ 重复节点，计数: 3

   节点 17: gepfpus is puvlpus
      ↻ 重复节点，计数: 3

   节点 18: puvlpus is poqcpus and sagqpus
      ↻ 重复节点，计数: 3

   节点 19: poqcpus is tarlpus
      ↻ 重复节点，计数: 3

   节点 20: tarlpus is golypus
      ↻ 重复节点，计数: 3

   节点 21: golypus is harxpus and rurvpus
      ↻ 重复节点，计数: 3

   节点 22: harxpus is fevwpus and heqvpus
      ↻ 重复节点，计数: 3

   节点 23: fevwpus is rudwpus and kabhpus
      ↻ 重复节点，计数: 3

   节点 24: rudwpus is jiddpus and puzdpus
      ↻ 重复节点，计数: 3

   节点 25: jiddpus is macgpus and xoxkpus
      ↻ 重复节点，计数: 3

   节点 26: macgpus is seyvpus
      ↻ 重复节点，计数: 3

   节点 27: seyvpus is babgpus and fuczpus and majspus and jomspus
      ↻ 重复节点，计数: 3

   节点 28: macgpus is seyvpus
      ↻ 重复节点，计数: 4

   节点 29: x is kastpus->gepfpus->puvlpus->poqcpus->tarlpus->golypus->harxpus->fevwpus->rudwpus->jiddpus->macgpus->seyvpus->babgpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 30: kastpus is gepfpus
      ↻ 重复节点，计数: 4

   节点 31: gepfpus is puvlpus
      ↻ 重复节点，计数: 4

   节点 32: puvlpus is poqcpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: puvlpus is poqcpus and sagqpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: puvlpus is poqcpus and sagqpus

   节点 33: puvlpus is poqcpus and sagqpus
      ↻ 重复节点，计数: 4

   节点 34: puvlpus is poqcpus
      ↻ 重复节点，计数: 2

   节点 35: poqcpus is tarlpus
      ↻ 重复节点，计数: 4

   节点 36: tarlpus is golypus
      ↻ 重复节点，计数: 4

   节点 37: golypus is harxpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: golypus is harxpus
      ✅ 验证成功 + LoG匹配

   节点 38: harxpus is fevwpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: harxpus is fevwpus
      ✅ 验证成功 + LoG匹配

   节点 39: fevwpus is rudwpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: fevwpus is rudwpus
      ✅ 验证成功 + LoG匹配

   节点 40: rudwpus is jiddpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: rudwpus is jiddpus
      ✅ 验证成功 + LoG匹配

   节点 41: jiddpus is macgpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: jiddpus is macgpus
      ✅ 验证成功 + LoG匹配

   节点 42: macgpus is seyvpus
      ↻ 重复节点，计数: 5

   节点 43: seyvpus is babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: seyvpus is babgpus and fuczpus and majspus and jomspus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: seyvpus is babgpus and fuczpus and majspus and jomspus

   节点 44: x is babgpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is babgpus
[子树点亮]     └─ 点亮依赖节点: x is babgpus and fuczpus (深度2)
[子树点亮]     └─ 点亮依赖节点: x is rudwpus (深度3)
[子树点亮]     └─ 点亮依赖节点: rudwpus is babgpus and fuczpus (深度3)
[子树点亮]     └─ 点亮依赖节点: x is poqcpus (深度4)
[子树点亮]     └─ 点亮依赖节点: poqcpus is rudwpus (深度4)
[子树点亮]     └─ 点亮依赖节点: rudwpus is babgpus and fuczpus and majspus (深度4)
[子树点亮]     └─ 点亮依赖节点: x is poqcpus and sagqpus (深度5)
[子树点亮]     └─ 点亮依赖节点: poqcpus is harxpus (深度5)
[子树点亮]     └─ 点亮依赖节点: harxpus is rudwpus (深度5)
[子树点亮]     └─ 点亮依赖节点: rudwpus is macgpus (深度5)
[子树点亮]     └─ 点亮依赖节点: macgpus is babgpus and fuczpus and majspus (深度5)
[子树点亮]     └─ 点亮依赖节点: x is gepfpus (深度6)
[子树点亮]     └─ 点亮依赖节点: gepfpus is poqcpus and sagqpus (深度6)
[子树点亮]     └─ 点亮依赖节点: poqcpus is golypus (深度6)
[子树点亮]     └─ 点亮依赖节点: macgpus is babgpus and fuczpus and majspus and jomspus (深度6)
[后处理]   └─ 自动点亮依赖子树: 15 个节点
      ✅ 验证成功 + LoG匹配

   节点 45: x is babgpus
      ↻ 重复节点，计数: 2

   节点 46: puvlpus is poqcpus and sagqpus
      ↻ 重复节点，计数: 5

   节点 47: seyvpus is babgpus and fuczpus and majspus and jomspus
      ↻ 重复节点，计数: 4

   节点 48: macgpus is seyvpus
      ↻ 重复节点，计数: 6

   节点 49: golypus is harxpus and rurvpus
      ↻ 重复节点，计数: 4

   节点 50: harxpus is fevwpus and heqvpus
      ↻ 重复节点，计数: 4

   节点 51: seyvpus is babgpus
      ↻ 重复节点，计数: 2

   节点 52: x is kastpus
      ↻ 重复节点，计数: 5

   节点 53: kastpus is gepfpus
      ↻ 重复节点，计数: 5

   节点 54: x is gepfpus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 55: gepfpus is puvlpus
      ↻ 重复节点，计数: 5

   节点 56: x is puvlpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is kastpus → kastpus is puvlpus
[后处理] 基于推理轨迹点亮节点，使用了 3 个前提条件:
  - 前提: x is kastpus
  - 前提: kastpus is gepfpus
  - 前提: gepfpus is puvlpus

   节点 57: puvlpus is poqcpus
      ↻ 重复节点，计数: 3

   节点 58: x is poqcpus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 59: puvlpus is poqcpus
      ↻ 重复节点，计数: 4

   节点 60: poqcpus is tarlpus
      ↻ 重复节点，计数: 5

   节点 61: x is tarlpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is kastpus → kastpus is tarlpus
[后处理] 基于推理轨迹点亮节点，使用了 5 个前提条件:
  - 前提: x is kastpus
  - 前提: kastpus is gepfpus
  - 前提: gepfpus is puvlpus
  - 前提: puvlpus is poqcpus
  - 前提: poqcpus is tarlpus

   节点 62: tarlpus is golypus
      ↻ 重复节点，计数: 5

   节点 63: golypus is harxpus
      ↻ 重复节点，计数: 2

   节点 64: x is harxpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is kastpus → kastpus is harxpus
[后处理] 基于推理轨迹点亮节点，使用了 7 个前提条件:
  - 前提: x is kastpus
  - 前提: kastpus is gepfpus
  - 前提: gepfpus is puvlpus
  - 前提: puvlpus is poqcpus
  - 前提: poqcpus is tarlpus
  - 前提: tarlpus is golypus
  - 前提: golypus is harxpus

   节点 65: golypus is harxpus
      ↻ 重复节点，计数: 3

   节点 66: golypus is rurvpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: golypus is harxpus and rurvpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: golypus is harxpus and rurvpus

   节点 67: harxpus is fevwpus
      ↻ 重复节点，计数: 2

   节点 68: x is fevwpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is kastpus → kastpus is fevwpus
[后处理] 基于推理轨迹点亮节点，使用了 8 个前提条件:
  - 前提: x is kastpus
  - 前提: kastpus is gepfpus
  - 前提: gepfpus is puvlpus
  - 前提: puvlpus is poqcpus
  - 前提: poqcpus is tarlpus
  - 前提: tarlpus is golypus
  - 前提: golypus is harxpus
  - 前提: harxpus is fevwpus

   节点 69: harxpus is fevwpus and heqvpus
      ↻ 重复节点，计数: 5

   节点 70: fevwpus is rudwpus
      ↻ 重复节点，计数: 2

   节点 71: x is rudwpus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 72: fevwpus is rudwpus and kabhpus
      ↻ 重复节点，计数: 4

   节点 73: rudwpus is jiddpus
      ↻ 重复节点，计数: 2

   节点 74: rudwpus is jiddpus and puzdpus
      ↻ 重复节点，计数: 4

   节点 75: jiddpus is macgpus
      ↻ 重复节点，计数: 2

   节点 76: jiddpus is macgpus and xoxkpus
      ↻ 重复节点，计数: 4

   节点 77: macgpus is seyvpus
      ↻ 重复节点，计数: 7

   节点 78: seyvpus is babgpus
      ↻ 重复节点，计数: 3

   节点 79: seyvpus is babgpus and fuczpus and majspus and jomspus
      ↻ 重复节点，计数: 5

   节点 80: x is babgpus
      ↻ 重复节点，计数: 3

🔍 分析推理路径完整性...

============================================================
[后处理] 处理完成
============================================================
📈 处理统计:
   - 处理的actual节点: 80
   - 新增节点: 17
   - 更新已存在节点: 63
   - 点亮的LoG节点: 21

🎯 推理质量统计:
   - 完美推理: 9 (节点正确 + 路径正确)
   - 部分推理: 8 (节点正确 + 路径部分错误)
   - 无效推理: 0 (节点错误或路径完全错误)
[LoG分析] LoG图: 21节点, 13前提, 复杂度1-13

📊 === Statement列表分析 ===
📈 节点统计:
   - 总节点数: 30
   - 前提节点: 13
   - 推理节点: 16
   - 幻觉节点: 1
   - 点亮LoG节点: 21

❌ 幻觉节点详情:
   - x is kastpus->gepfpus->puvlpus->poqcpus->tarlpus->golypus->harxpus->fevwpus->rudwpus->jiddpus->macgpus->seyvpus->babgpus (出现1次)

✅ 推理节点详情:
   🟢 puvlpus is poqcpus (出现4次, 质量:perfect)
   🟢 golypus is harxpus (出现3次, 质量:perfect)
   🟢 harxpus is fevwpus (出现2次, 质量:perfect)
   🟢 fevwpus is rudwpus (出现2次, 质量:perfect)
   🟢 rudwpus is jiddpus (出现2次, 质量:perfect)
   🟢 jiddpus is macgpus (出现2次, 质量:perfect)
   🟢 seyvpus is babgpus (出现3次, 质量:perfect)
   🟡 x is babgpus (出现3次, 质量:partial)
      ⚠️  无效依赖: ['x is kastpus->gepfpus->puvlpus->poqcpus->tarlpus->golypus->harxpus->fevwpus->rudwpus->jiddpus->macgpus->seyvpus->babgpus']
   🟡 x is gepfpus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['x is kastpus->gepfpus->puvlpus->poqcpus->tarlpus->golypus->harxpus->fevwpus->rudwpus->jiddpus->macgpus->seyvpus->babgpus']
   🟡 x is puvlpus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['x is kastpus->gepfpus->puvlpus->poqcpus->tarlpus->golypus->harxpus->fevwpus->rudwpus->jiddpus->macgpus->seyvpus->babgpus']
   🟡 x is poqcpus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['x is kastpus->gepfpus->puvlpus->poqcpus->tarlpus->golypus->harxpus->fevwpus->rudwpus->jiddpus->macgpus->seyvpus->babgpus']
   🟡 x is tarlpus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['x is kastpus->gepfpus->puvlpus->poqcpus->tarlpus->golypus->harxpus->fevwpus->rudwpus->jiddpus->macgpus->seyvpus->babgpus']
   🟡 x is harxpus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['x is kastpus->gepfpus->puvlpus->poqcpus->tarlpus->golypus->harxpus->fevwpus->rudwpus->jiddpus->macgpus->seyvpus->babgpus']
   🟢 golypus is rurvpus (出现1次, 质量:perfect)
   🟡 x is fevwpus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['x is kastpus->gepfpus->puvlpus->poqcpus->tarlpus->golypus->harxpus->fevwpus->rudwpus->jiddpus->macgpus->seyvpus->babgpus']
   🟡 x is rudwpus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['x is kastpus->gepfpus->puvlpus->poqcpus->tarlpus->golypus->harxpus->fevwpus->rudwpus->jiddpus->macgpus->seyvpus->babgpus']

🔥 点亮的LoG节点:
   - x is babgpus and fuczpus
   - rudwpus is babgpus and fuczpus
   - golypus is harxpus
   - x is babgpus
   - macgpus is babgpus and fuczpus and majspus
   - x is rudwpus
   - harxpus is fevwpus
   - harxpus is rudwpus
   - x is poqcpus and sagqpus
   - x is poqcpus
   - poqcpus is golypus
   - gepfpus is poqcpus and sagqpus
   - fevwpus is rudwpus
   - poqcpus is rudwpus
   - poqcpus is harxpus
   - macgpus is babgpus and fuczpus and majspus and jomspus
   - jiddpus is macgpus
   - rudwpus is jiddpus
   - x is gepfpus
   - rudwpus is babgpus and fuczpus and majspus
   - rudwpus is macgpus

============================================================
📊 计算评估指标
============================================================

🎯 计算Coverage指标...
   深度Coverage: 6/6 = 100.00%
   最深点亮节点: x is babgpus (第6层)
   节点Coverage: 21/21 = 100.00%
   前提条件Coverage: 13/13 = 100.00%
   各推理层点亮比例:
     第1层: 9/9 = 100.00%
     第2层: 5/5 = 100.00%
     第3层: 3/3 = 100.00%
     第4层: 2/2 = 100.00%
     第5层: 1/1 = 100.00%
     第6层: 1/1 = 100.00%

🎯 计算Precision指标...
   Error Rate: 1/17 = 5.88%
   可推导节点: 16/17
   Strict Error Rate: 9/17 = 52.94%
   严格有效节点: 8/17

   详细分析:
     完美推理: 9 (52.94%)
     部分推理: 8 (47.06%)
     无效推理: 0 (0.00%)

================================================================================
处理记录 37/50
================================================================================
记录索引: 36
问题状态: correct
📁 从缓存加载提取结果: evaluation_results.LoG_6.deepseek-reasoner_record_36.json
✅ 使用缓存结果:
   - 句子数: 71
   - 提取的语句数: 73
   - 初始条件数: 8

=== Statement提取完成 ===
总句子数: 71
成功提取: 70
失败提取: 1
总statements数: 73

=== 开始清洗Statement格式 ===
原始statements数: 73
清洗后statements数: 67
过滤掉的statements数: 6
清洗后的statements:
  1. [actual] zucxpus is watppus
  2. [planning] x is babgpus
  3. [planning] x is babrpus
  4. [planning] x is babspus
  5. [planning] babgpus is babgpus and babrpus and babspus
  6. [actual] zucxpus is watppus and jilbpus
  7. [actual] xuhhpus is xucrpus and kazcpus
  8. [actual] joxypus is lutgpus
  9. [actual] watppus is xuhhpus
  10. [actual] lutgpus is jujlpus
  11. [actual] lutgpus is babspus
  12. [actual] xucrpus is joxypus
  13. [actual] x is zucxpus
  14. [planning] x is babgpus
  15. [planning] x is babrpus
  16. [planning] x is babspus
  17. [actual] lutgpus is babspus
  18. [planning] x is babgpus
  19. [planning] x is babrpus
  20. [planning] x is babspus
  21. [planning] x is babgpus
  22. [planning] x is babrpus
  23. [planning] x is babspus
  24. [planning] x is babspus
  25. [actual] x is zucxpus
  26. [actual] x is zucxpus
  27. [actual] zucxpus is watppus and jilbpus
  28. [actual] x is watppus and jilbpus
  29. [actual] watppus is xuhhpus
  30. [actual] xuhhpus is xucrpus and kazcpus
  31. [actual] x is xucrpus and kazcpus
  32. [actual] xucrpus is joxypus
  33. [actual] x is joxypus
  34. [actual] joxypus is lutgpus
  35. [actual] x is lutgpus
  36. [actual] x is lutgpus
  37. [actual] x is babspus
  38. [actual] x is babspus
  39. [planning] x is babgpus
  40. [planning] x is babrpus
  41. [planning] x is babspus
  42. [actual] x is babspus
  43. [planning] x is A
  44. [planning] x is B
  45. [planning] x is C
  46. [actual] x is C
  47. [actual] x is babspus
  48. [actual] x is babgpus or babrpus or babspus
  49. [planning] x is any of these categories
  50. [actual] babspus is defined
  51. [actual] x is babspus
  52. [actual] x is zucxpus
  53. [actual] zucxpus is watppus
  54. [actual] x is watppus
  55. [actual] watppus is xuhhpus
  56. [actual] x is xuhhpus
  57. [actual] xuhhpus is xucrpus
  58. [actual] x is xucrpus
  59. [actual] xucrpus is joxypus
  60. [actual] x is joxypus
  61. [actual] joxypus is lutgpus
  62. [actual] x is lutgpus
  63. [actual] lutgpus is babspus
  64. [actual] x is babspus
  65. [actual] x is babspus
  66. [actual] x is babspus
  67. [actual] x is babgpus or babrpus or babspus

=== 开始标准化和解析节点 ===
清洗后statements数: 67
标准化后节点数: 61
过滤掉的无效实体数: 6
标准化后的节点:
  1. [actual] zucxpus → watppus (原始: zucxpus is watppus)
  2. [planning] x → babgpus (原始: x is babgpus)
  3. [planning] x → babrpus (原始: x is babrpus)
  4. [planning] x → babspus (原始: x is babspus)
  5. [planning] babgpus → babgpus and babrpus and babspus (原始: babgpus is babgpus and babrpus and babspus)
  6. [actual] zucxpus → watppus and jilbpus (原始: zucxpus is watppus and jilbpus)
  7. [actual] xuhhpus → xucrpus and kazcpus (原始: xuhhpus is xucrpus and kazcpus)
  8. [actual] joxypus → lutgpus (原始: joxypus is lutgpus)
  9. [actual] watppus → xuhhpus (原始: watppus is xuhhpus)
  10. [actual] lutgpus → jujlpus (原始: lutgpus is jujlpus)
  11. [actual] lutgpus → babspus (原始: lutgpus is babspus)
  12. [actual] xucrpus → joxypus (原始: xucrpus is joxypus)
  13. [actual] x → zucxpus (原始: x is zucxpus)
  14. [planning] x → babgpus (原始: x is babgpus)
  15. [planning] x → babrpus (原始: x is babrpus)
  16. [planning] x → babspus (原始: x is babspus)
  17. [actual] lutgpus → babspus (原始: lutgpus is babspus)
  18. [planning] x → babgpus (原始: x is babgpus)
  19. [planning] x → babrpus (原始: x is babrpus)
  20. [planning] x → babspus (原始: x is babspus)
  21. [planning] x → babgpus (原始: x is babgpus)
  22. [planning] x → babrpus (原始: x is babrpus)
  23. [planning] x → babspus (原始: x is babspus)
  24. [planning] x → babspus (原始: x is babspus)
  25. [actual] x → zucxpus (原始: x is zucxpus)
  26. [actual] x → zucxpus (原始: x is zucxpus)
  27. [actual] zucxpus → watppus and jilbpus (原始: zucxpus is watppus and jilbpus)
  28. [actual] x → watppus and jilbpus (原始: x is watppus and jilbpus)
  29. [actual] watppus → xuhhpus (原始: watppus is xuhhpus)
  30. [actual] xuhhpus → xucrpus and kazcpus (原始: xuhhpus is xucrpus and kazcpus)
  31. [actual] x → xucrpus and kazcpus (原始: x is xucrpus and kazcpus)
  32. [actual] xucrpus → joxypus (原始: xucrpus is joxypus)
  33. [actual] x → joxypus (原始: x is joxypus)
  34. [actual] joxypus → lutgpus (原始: joxypus is lutgpus)
  35. [actual] x → lutgpus (原始: x is lutgpus)
  36. [actual] x → lutgpus (原始: x is lutgpus)
  37. [actual] x → babspus (原始: x is babspus)
  38. [actual] x → babspus (原始: x is babspus)
  39. [planning] x → babgpus (原始: x is babgpus)
  40. [planning] x → babrpus (原始: x is babrpus)
  41. [planning] x → babspus (原始: x is babspus)
  42. [actual] x → babspus (原始: x is babspus)
  43. [actual] x → babspus (原始: x is babspus)
  44. [actual] x → babgpus or babrpus or babspus (原始: x is babgpus or babrpus or babspus)
  45. [actual] x → babspus (原始: x is babspus)
  46. [actual] x → zucxpus (原始: x is zucxpus)
  47. [actual] zucxpus → watppus (原始: zucxpus is watppus)
  48. [actual] x → watppus (原始: x is watppus)
  49. [actual] watppus → xuhhpus (原始: watppus is xuhhpus)
  50. [actual] x → xuhhpus (原始: x is xuhhpus)
  51. [actual] xuhhpus → xucrpus (原始: xuhhpus is xucrpus)
  52. [actual] x → xucrpus (原始: x is xucrpus)
  53. [actual] xucrpus → joxypus (原始: xucrpus is joxypus)
  54. [actual] x → joxypus (原始: x is joxypus)
  55. [actual] joxypus → lutgpus (原始: joxypus is lutgpus)
  56. [actual] x → lutgpus (原始: x is lutgpus)
  57. [actual] lutgpus → babspus (原始: lutgpus is babspus)
  58. [actual] x → babspus (原始: x is babspus)
  59. [actual] x → babspus (原始: x is babspus)
  60. [actual] x → babspus (原始: x is babspus)
  61. [actual] x → babgpus or babrpus or babspus (原始: x is babgpus or babrpus or babspus)

开始新的后处理...
[后处理] 从LoG数据文件中获取到图数据，节点数: 12
[后处理] 加载LoG图，包含 12 个节点
  LoG节点 0: x is babgpus or babrpus or babspus (规则: DI, 深度: 1)
  LoG节点 1: x is babspus or babrpus (规则: DI, 深度: 2)
  LoG节点 2: x is babspus (规则: MP, 深度: 3)
  LoG节点 3: x is xucrpus (规则: MP, 深度: 4)
  LoG节点 4: xucrpus is babspus (规则: CE, 深度: 4)
  LoG节点 5: x is watppus (规则: CE, 深度: 5)
  LoG节点 6: watppus is xucrpus (规则: CE, 深度: 5)
  LoG节点 7: xucrpus is babspus and jujlpus (规则: MP, 深度: 5)
  LoG节点 8: x is watppus and jilbpus (规则: MP, 深度: 6)
  LoG节点 9: watppus is xucrpus and kazcpus (规则: MP, 深度: 6)
  LoG节点 10: xucrpus is lutgpus (规则: MP, 深度: 6)
  LoG节点 11: lutgpus is babspus and jujlpus (规则: CI, 深度: 6)

============================================================
[后处理] 开始处理节点
============================================================
📊 初始状态:
   - 标准化节点数: 61
   - 初始条件数: 8
   - LoG图节点数: 12

📋 初始条件列表:
    1. zucxpus is watppus and jilbpus
    2. xuhhpus is xucrpus and kazcpus
    3. joxypus is lutgpus
    4. watppus is xuhhpus
    5. lutgpus is jujlpus
    6. lutgpus is babspus
    7. xucrpus is joxypus
    8. x is zucxpus

🔧 构建初始Statement列表...
✅ 初始Statement列表构建完成，包含 8 个前提节点

🔍 开始处理actual节点...

   节点 1: zucxpus is watppus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: zucxpus is watppus and jilbpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: zucxpus is watppus and jilbpus

   节点 2: zucxpus is watppus and jilbpus
      ↻ 重复节点，计数: 2

   节点 3: xuhhpus is xucrpus and kazcpus
      ↻ 重复节点，计数: 2

   节点 4: joxypus is lutgpus
      ↻ 重复节点，计数: 2

   节点 5: watppus is xuhhpus
      ↻ 重复节点，计数: 2

   节点 6: lutgpus is jujlpus
      ↻ 重复节点，计数: 2

   节点 7: lutgpus is babspus
      ↻ 重复节点，计数: 2

   节点 8: xucrpus is joxypus
      ↻ 重复节点，计数: 2

   节点 9: x is zucxpus
      ↻ 重复节点，计数: 2

   节点 10: lutgpus is babspus
      ↻ 重复节点，计数: 3

   节点 11: x is zucxpus
      ↻ 重复节点，计数: 3

   节点 12: x is zucxpus
      ↻ 重复节点，计数: 4

   节点 13: zucxpus is watppus and jilbpus
      ↻ 重复节点，计数: 3

   节点 14: x is watppus and jilbpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is watppus and jilbpus
      ✅ 验证成功 + LoG匹配

   节点 15: watppus is xuhhpus
      ↻ 重复节点，计数: 3

   节点 16: xuhhpus is xucrpus and kazcpus
      ↻ 重复节点，计数: 3

   节点 17: x is xucrpus and kazcpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is zucxpus → zucxpus is xucrpus and kazcpus
[后处理] 基于推理轨迹点亮节点，使用了 4 个前提条件:
  - 前提: x is zucxpus
  - 前提: zucxpus is watppus
  - 前提: watppus is xuhhpus
  - 前提: xuhhpus is xucrpus and kazcpus
  ✓ 点亮LoG节点: x is xucrpus
[子树点亮]     └─ 点亮依赖节点: x is watppus (深度5)
[子树点亮]     └─ 点亮依赖节点: watppus is xucrpus (深度5)
[子树点亮]     └─ 点亮依赖节点: watppus is xucrpus and kazcpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 3 个节点
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 18: xucrpus is joxypus
      ↻ 重复节点，计数: 3

   节点 19: x is joxypus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is zucxpus → zucxpus is joxypus
[后处理] 基于推理轨迹点亮节点，使用了 5 个前提条件:
  - 前提: x is zucxpus
  - 前提: zucxpus is watppus
  - 前提: watppus is xuhhpus
  - 前提: xuhhpus is xucrpus and kazcpus
  - 前提: xucrpus is joxypus

   节点 20: joxypus is lutgpus
      ↻ 重复节点，计数: 3

   节点 21: x is lutgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is zucxpus → zucxpus is lutgpus
[后处理] 基于推理轨迹点亮节点，使用了 6 个前提条件:
  - 前提: x is zucxpus
  - 前提: zucxpus is watppus
  - 前提: watppus is xuhhpus
  - 前提: xuhhpus is xucrpus and kazcpus
  - 前提: xucrpus is joxypus
  - 前提: joxypus is lutgpus
  ✓ 点亮LoG节点: xucrpus is lutgpus
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 22: x is lutgpus
      ↻ 重复节点，计数: 2

   节点 23: x is babspus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is babspus
[子树点亮]     └─ 点亮依赖节点: xucrpus is babspus (深度4)
[子树点亮]     └─ 点亮依赖节点: xucrpus is babspus and jujlpus (深度5)
[子树点亮]     └─ 点亮依赖节点: lutgpus is babspus and jujlpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 3 个节点
      ✅ 验证成功 + LoG匹配

   节点 24: x is babspus
      ↻ 重复节点，计数: 2

   节点 25: x is babspus
      ↻ 重复节点，计数: 3

   节点 26: x is babspus
      ↻ 重复节点，计数: 4

   节点 27: x is babgpus or babrpus or babspus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is babgpus or babrpus or babspus
[子树点亮]     └─ 点亮依赖节点: x is babspus or babrpus (深度2)
[后处理]   └─ 自动点亮依赖子树: 1 个节点
      ✅ 验证成功 + LoG匹配

   节点 28: x is babspus
      ↻ 重复节点，计数: 5

   节点 29: x is zucxpus
      ↻ 重复节点，计数: 5

   节点 30: zucxpus is watppus
      ↻ 重复节点，计数: 2

   节点 31: x is watppus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 32: watppus is xuhhpus
      ↻ 重复节点，计数: 4

   节点 33: x is xuhhpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is zucxpus → zucxpus is xuhhpus
[后处理] 基于推理轨迹点亮节点，使用了 3 个前提条件:
  - 前提: x is zucxpus
  - 前提: zucxpus is watppus
  - 前提: watppus is xuhhpus

   节点 34: xuhhpus is xucrpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: xuhhpus is xucrpus and kazcpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: xuhhpus is xucrpus and kazcpus

   节点 35: x is xucrpus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 36: xucrpus is joxypus
      ↻ 重复节点，计数: 4

   节点 37: x is joxypus
      ↻ 重复节点，计数: 2

   节点 38: joxypus is lutgpus
      ↻ 重复节点，计数: 4

   节点 39: x is lutgpus
      ↻ 重复节点，计数: 3

   节点 40: lutgpus is babspus
      ↻ 重复节点，计数: 4

   节点 41: x is babspus
      ↻ 重复节点，计数: 6

   节点 42: x is babspus
      ↻ 重复节点，计数: 7

   节点 43: x is babspus
      ↻ 重复节点，计数: 8

   节点 44: x is babgpus or babrpus or babspus
      ↻ 重复节点，计数: 2

🔍 分析推理路径完整性...

============================================================
[后处理] 处理完成
============================================================
📈 处理统计:
   - 处理的actual节点: 44
   - 新增节点: 11
   - 更新已存在节点: 33
   - 点亮的LoG节点: 12

🎯 推理质量统计:
   - 完美推理: 11 (节点正确 + 路径正确)
   - 部分推理: 0 (节点正确 + 路径部分错误)
   - 无效推理: 0 (节点错误或路径完全错误)
[LoG分析] LoG图: 12节点, 8前提, 复杂度1-8

📊 === Statement列表分析 ===
📈 节点统计:
   - 总节点数: 19
   - 前提节点: 8
   - 推理节点: 11
   - 幻觉节点: 0
   - 点亮LoG节点: 12

✅ 推理节点详情:
   🟢 zucxpus is watppus (出现2次, 质量:perfect)
   🟢 x is watppus and jilbpus (出现1次, 质量:perfect)
   🟢 x is xucrpus and kazcpus (出现1次, 质量:perfect)
   🟢 x is joxypus (出现2次, 质量:perfect)
   🟢 x is lutgpus (出现3次, 质量:perfect)
   🟢 x is babspus (出现8次, 质量:perfect)
   🟢 x is babgpus or babrpus or babspus (出现2次, 质量:perfect)
   🟢 x is watppus (出现1次, 质量:perfect)
   🟢 x is xuhhpus (出现1次, 质量:perfect)
   🟢 xuhhpus is xucrpus (出现1次, 质量:perfect)
   🟢 x is xucrpus (出现1次, 质量:perfect)

🔥 点亮的LoG节点:
   - xucrpus is babspus and jujlpus
   - x is babspus
   - xucrpus is lutgpus
   - xucrpus is babspus
   - lutgpus is babspus and jujlpus
   - x is watppus and jilbpus
   - x is xucrpus
   - watppus is xucrpus
   - x is babgpus or babrpus or babspus
   - watppus is xucrpus and kazcpus
   - x is babspus or babrpus
   - x is watppus

============================================================
📊 计算评估指标
============================================================

🎯 计算Coverage指标...
   深度Coverage: 6/6 = 100.00%
   最深点亮节点: x is babgpus or babrpus or babspus (第6层)
   节点Coverage: 12/12 = 100.00%
   前提条件Coverage: 8/8 = 100.00%
   各推理层点亮比例:
     第1层: 4/4 = 100.00%
     第2层: 3/3 = 100.00%
     第3层: 2/2 = 100.00%
     第4层: 1/1 = 100.00%
     第5层: 1/1 = 100.00%
     第6层: 1/1 = 100.00%

🎯 计算Precision指标...
   Error Rate: 0/11 = 0.00%
   可推导节点: 11/11
   Strict Error Rate: 0/11 = 0.00%
   严格有效节点: 11/11

   详细分析:
     完美推理: 11 (100.00%)
     部分推理: 0 (0.00%)
     无效推理: 0 (0.00%)

================================================================================
处理记录 38/50
================================================================================
记录索引: 37
问题状态: correct
📁 从缓存加载提取结果: evaluation_results.LoG_6.deepseek-reasoner_record_37.json
✅ 使用缓存结果:
   - 句子数: 74
   - 提取的语句数: 109
   - 初始条件数: 17

=== Statement提取完成 ===
总句子数: 74
成功提取: 74
失败提取: 0
总statements数: 109

=== 开始清洗Statement格式 ===
原始statements数: 109
清洗后statements数: 109
过滤掉的statements数: 0

=== 开始标准化和解析节点 ===
清洗后statements数: 109
标准化后节点数: 98
过滤掉的无效实体数: 11
标准化后的节点:
  1. [planning] x → babgpus (原始: x is babgpus)
  2. [actual] x → budtpus and siqxpus (原始: x is budtpus and siqxpus)
  3. [actual] x → budtpus and siqxpus (原始: x is budtpus and siqxpus)
  4. [planning] x → babgpus (原始: x is babgpus)
  5. [actual] babgpus → cumgpus and juddpus and vucppus (原始: babgpus is cumgpus and juddpus and vucppus)
  6. [actual] cumgpus → babgpus and juddpus and vucppus (原始: cumgpus is babgpus and juddpus and vucppus)
  7. [actual] cumgpus → babgpus (原始: cumgpus is babgpus)
  8. [planning] x → cumgpus (原始: x is cumgpus)
  9. [planning] x → babgpus (原始: x is babgpus)
  10. [actual] laylpus → sapdpus (原始: laylpus is sapdpus)
  11. [actual] ziccpus → xechpus and kavkpus (原始: ziccpus is xechpus and kavkpus)
  12. [actual] budtpus → ziccpus and fonppus and jewnpus (原始: budtpus is ziccpus and fonppus and jewnpus)
  13. [actual] x → budtpus and siqxpus (原始: x is budtpus and siqxpus)
  14. [actual] cumgpus → babgpus and juddpus and vucppus (原始: cumgpus is babgpus and juddpus and vucppus)
  15. [actual] xechpus → rahspus (原始: xechpus is rahspus)
  16. [actual] fokxpus → veyvpus and tudxpus (原始: fokxpus is veyvpus and tudxpus)
  17. [actual] voybpus → yovlpus (原始: voybpus is yovlpus)
  18. [actual] rahspus → kiyzpus and jiwfpus and qayjpus (原始: rahspus is kiyzpus and jiwfpus and qayjpus)
  19. [actual] kiyzpus → circpus and kukmpus (原始: kiyzpus is circpus and kukmpus)
  20. [actual] yiyppus → fokxpus (原始: yiyppus is fokxpus)
  21. [actual] sapdpus → yiyppus (原始: sapdpus is yiyppus)
  22. [actual] bitvpus → voybpus (原始: bitvpus is voybpus)
  23. [actual] circpus → sasfpus (原始: circpus is sasfpus)
  24. [actual] bitvpus → laylpus (原始: bitvpus is laylpus)
  25. [actual] sasfpus → bitvpus (原始: sasfpus is bitvpus)
  26. [actual] veyvpus → cumgpus (原始: veyvpus is cumgpus)
  27. [actual] x → budtpus (原始: x is budtpus)
  28. [actual] budtpus → ziccpus and fonppus and jewnpus (原始: budtpus is ziccpus and fonppus and jewnpus)
  29. [actual] ziccpus → xechpus and kavkpus (原始: ziccpus is xechpus and kavkpus)
  30. [actual] xechpus → rahspus (原始: xechpus is rahspus)
  31. [actual] rahspus → kiyzpus and jiwfpus and qayjpus (原始: rahspus is kiyzpus and jiwfpus and qayjpus)
  32. [actual] kiyzpus → circpus and kukmpus (原始: kiyzpus is circpus and kukmpus)
  33. [actual] circpus → sasfpus (原始: circpus is sasfpus)
  34. [actual] sasfpus → bitvpus (原始: sasfpus is bitvpus)
  35. [actual] bitvpus → voybpus and laylpus (原始: bitvpus is voybpus and laylpus)
  36. [actual] bitvpus → voybpus (原始: bitvpus is voybpus)
  37. [actual] voybpus → yovlpus (原始: voybpus is yovlpus)
  38. [planning] voybpus → yovlpus (原始: voybpus is yovlpus)
  39. [actual] bitvpus → laylpus (原始: bitvpus is laylpus)
  40. [actual] laylpus → sapdpus (原始: laylpus is sapdpus)
  41. [actual] sapdpus → yiyppus (原始: sapdpus is yiyppus)
  42. [actual] yiyppus → fokxpus (原始: yiyppus is fokxpus)
  43. [actual] fokxpus → veyvpus and tudxpus (原始: fokxpus is veyvpus and tudxpus)
  44. [actual] veyvpus → cumgpus (原始: veyvpus is cumgpus)
  45. [actual] cumgpus → babgpus and juddpus and vucppus (原始: cumgpus is babgpus and juddpus and vucppus)
  46. [actual] x → bitvpus (原始: x is bitvpus)
  47. [actual] bitvpus → laylpus (原始: bitvpus is laylpus)
  48. [actual] laylpus → sapdpus (原始: laylpus is sapdpus)
  49. [actual] sapdpus → yiyppus (原始: sapdpus is yiyppus)
  50. [actual] yiyppus → fokxpus (原始: yiyppus is fokxpus)
  51. [actual] fokxpus → veyvpus (原始: fokxpus is veyvpus)
  52. [actual] veyvpus → cumgpus (原始: veyvpus is cumgpus)
  53. [actual] cumgpus → babgpus (原始: cumgpus is babgpus)
  54. [planning] x → babgpus (原始: x is babgpus)
  55. [actual] x → budtpus (原始: x is budtpus)
  56. [actual] budtpus → ziccpus (原始: budtpus is ziccpus)
  57. [actual] ziccpus → xechpus (原始: ziccpus is xechpus)
  58. [actual] xechpus → rahspus (原始: xechpus is rahspus)
  59. [actual] rahspus → kiyzpus (原始: rahspus is kiyzpus)
  60. [actual] kiyzpus → circpus (原始: kiyzpus is circpus)
  61. [actual] circpus → sasfpus (原始: circpus is sasfpus)
  62. [actual] sasfpus → bitvpus (原始: sasfpus is bitvpus)
  63. [actual] bitvpus → laylpus (原始: bitvpus is laylpus)
  64. [actual] laylpus → sapdpus (原始: laylpus is sapdpus)
  65. [actual] sapdpus → yiyppus (原始: sapdpus is yiyppus)
  66. [actual] yiyppus → fokxpus (原始: yiyppus is fokxpus)
  67. [actual] fokxpus → veyvpus (原始: fokxpus is veyvpus)
  68. [actual] veyvpus → cumgpus (原始: veyvpus is cumgpus)
  69. [actual] cumgpus → babgpus (原始: cumgpus is babgpus)
  70. [actual] x → bitvpus (原始: x is bitvpus)
  71. [actual] bitvpus → babgpus (原始: bitvpus is babgpus)
  72. [actual] x → babgpus (原始: x is babgpus)
  73. [planning] x → babgpus (原始: x is babgpus)
  74. [actual] cumgpus → babgpus (原始: cumgpus is babgpus)
  75. [planning] x → babgpus (原始: x is babgpus)
  76. [actual] bitvpus → voybpus (原始: bitvpus is voybpus)
  77. [actual] voybpus → yovlpus (原始: voybpus is yovlpus)
  78. [planning] bitvpus → babgpus (原始: bitvpus is babgpus)
  79. [actual] bitvpus → laylpus (原始: bitvpus is laylpus)
  80. [actual] sasfpus → bitvpus (原始: sasfpus is bitvpus)
  81. [actual] circpus → sasfpus (原始: circpus is sasfpus)
  82. [actual] x → babgpus (原始: x is babgpus)
  83. [actual] x → budtpus (原始: x is budtpus)
  84. [actual] budtpus → ziccpus (原始: budtpus is ziccpus)
  85. [actual] ziccpus → xechpus (原始: ziccpus is xechpus)
  86. [actual] xechpus → rahspus (原始: xechpus is rahspus)
  87. [actual] kiyzpus → circpus (原始: kiyzpus is circpus)
  88. [actual] circpus → sasfpus (原始: circpus is sasfpus)
  89. [actual] sasfpus → bitvpus (原始: sasfpus is bitvpus)
  90. [actual] bitvpus → sasfpus (原始: bitvpus is sasfpus)
  91. [actual] bitvpus → laylpus (原始: bitvpus is laylpus)
  92. [actual] laylpus → sapdpus (原始: laylpus is sapdpus)
  93. [actual] sapdpus → yiyppus (原始: sapdpus is yiyppus)
  94. [actual] yiyppus → fokxpus (原始: yiyppus is fokxpus)
  95. [actual] fokxpus → veyvpus (原始: fokxpus is veyvpus)
  96. [actual] veyvpus → cumgpus (原始: veyvpus is cumgpus)
  97. [actual] cumgpus → babgpus (原始: cumgpus is babgpus)
  98. [actual] x → babgpus (原始: x is babgpus)

开始新的后处理...
[后处理] 从LoG数据文件中获取到图数据，节点数: 27
[后处理] 加载LoG图，包含 27 个节点
  LoG节点 0: x is babgpus (规则: MP, 深度: 1)
  LoG节点 1: x is kiyzpus (规则: CE, 深度: 2)
  LoG节点 2: kiyzpus is babgpus (规则: MP, 深度: 2)
  LoG节点 3: x is kiyzpus and jiwfpus (规则: MP, 深度: 3)
  LoG节点 4: kiyzpus is sapdpus (规则: CE, 深度: 3)
  LoG节点 5: sapdpus is babgpus (规则: CE, 深度: 3)
  LoG节点 6: x is ziccpus (规则: CE, 深度: 4)
  LoG节点 7: ziccpus is kiyzpus and jiwfpus (规则: CE, 深度: 4)
  LoG节点 8: kiyzpus is sapdpus and yovlpus (规则: MP, 深度: 4)
  LoG节点 9: sapdpus is babgpus and juddpus (规则: MP, 深度: 4)
  LoG节点 10: x is ziccpus and fonppus (规则: MP, 深度: 5)
  LoG节点 11: ziccpus is kiyzpus and jiwfpus and qayjpus (规则: MP, 深度: 5)
  LoG节点 12: kiyzpus is bitvpus (规则: MP, 深度: 5)
  LoG节点 13: bitvpus is sapdpus and yovlpus (规则: CI, 深度: 5)
  LoG节点 14: sapdpus is veyvpus (规则: MP, 深度: 5)
  LoG节点 15: veyvpus is babgpus and juddpus (规则: CE, 深度: 5)
  LoG节点 16: x is budtpus (规则: CE, 深度: 6)
  LoG节点 17: budtpus is ziccpus and fonppus (规则: CE, 深度: 6)
  LoG节点 18: ziccpus is xechpus (规则: CE, 深度: 6)
  LoG节点 19: xechpus is kiyzpus and jiwfpus and qayjpus (规则: MP, 深度: 6)
  LoG节点 20: kiyzpus is circpus (规则: CE, 深度: 6)
  LoG节点 21: circpus is bitvpus (规则: MP, 深度: 6)
  LoG节点 22: bitvpus is sapdpus (规则: MP, 深度: 6)
  LoG节点 23: bitvpus is yovlpus (规则: MP, 深度: 6)
  LoG节点 24: sapdpus is fokxpus (规则: MP, 深度: 6)
  LoG节点 25: fokxpus is veyvpus (规则: CE, 深度: 6)
  LoG节点 26: veyvpus is babgpus and juddpus and vucppus (规则: MP, 深度: 6)

============================================================
[后处理] 开始处理节点
============================================================
📊 初始状态:
   - 标准化节点数: 98
   - 初始条件数: 17
   - LoG图节点数: 27

📋 初始条件列表:
    1. laylpus is sapdpus
    2. ziccpus is xechpus and kavkpus
    3. budtpus is ziccpus and fonppus and jewnpus
    4. x is budtpus and siqxpus
    5. cumgpus is babgpus and juddpus and vucppus
    6. xechpus is rahspus
    7. fokxpus is veyvpus and tudxpus
    8. voybpus is yovlpus
    9. rahspus is kiyzpus and jiwfpus and qayjpus
   10. kiyzpus is circpus and kukmpus
   11. yiyppus is fokxpus
   12. sapdpus is yiyppus
   13. bitvpus is voybpus
   14. circpus is sasfpus
   15. bitvpus is laylpus
   16. sasfpus is bitvpus
   17. veyvpus is cumgpus

🔧 构建初始Statement列表...
✅ 初始Statement列表构建完成，包含 17 个前提节点

🔍 开始处理actual节点...

   节点 1: x is budtpus and siqxpus
      ↻ 重复节点，计数: 2

   节点 2: x is budtpus and siqxpus
      ↻ 重复节点，计数: 3

   节点 3: babgpus is cumgpus and juddpus and vucppus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 4: cumgpus is babgpus and juddpus and vucppus
      ↻ 重复节点，计数: 2

   节点 5: cumgpus is babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: cumgpus is babgpus and juddpus and vucppus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: cumgpus is babgpus and juddpus and vucppus

   节点 6: laylpus is sapdpus
      ↻ 重复节点，计数: 2

   节点 7: ziccpus is xechpus and kavkpus
      ↻ 重复节点，计数: 2

   节点 8: budtpus is ziccpus and fonppus and jewnpus
      ↻ 重复节点，计数: 2

   节点 9: x is budtpus and siqxpus
      ↻ 重复节点，计数: 4

   节点 10: cumgpus is babgpus and juddpus and vucppus
      ↻ 重复节点，计数: 3

   节点 11: xechpus is rahspus
      ↻ 重复节点，计数: 2

   节点 12: fokxpus is veyvpus and tudxpus
      ↻ 重复节点，计数: 2

   节点 13: voybpus is yovlpus
      ↻ 重复节点，计数: 2

   节点 14: rahspus is kiyzpus and jiwfpus and qayjpus
      ↻ 重复节点，计数: 2

   节点 15: kiyzpus is circpus and kukmpus
      ↻ 重复节点，计数: 2

   节点 16: yiyppus is fokxpus
      ↻ 重复节点，计数: 2

   节点 17: sapdpus is yiyppus
      ↻ 重复节点，计数: 2

   节点 18: bitvpus is voybpus
      ↻ 重复节点，计数: 2

   节点 19: circpus is sasfpus
      ↻ 重复节点，计数: 2

   节点 20: bitvpus is laylpus
      ↻ 重复节点，计数: 2

   节点 21: sasfpus is bitvpus
      ↻ 重复节点，计数: 2

   节点 22: veyvpus is cumgpus
      ↻ 重复节点，计数: 2

   节点 23: x is budtpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is budtpus
      ✅ 验证成功 + LoG匹配

   节点 24: budtpus is ziccpus and fonppus and jewnpus
      ↻ 重复节点，计数: 3

   节点 25: ziccpus is xechpus and kavkpus
      ↻ 重复节点，计数: 3

   节点 26: xechpus is rahspus
      ↻ 重复节点，计数: 3

   节点 27: rahspus is kiyzpus and jiwfpus and qayjpus
      ↻ 重复节点，计数: 3

   节点 28: kiyzpus is circpus and kukmpus
      ↻ 重复节点，计数: 3

   节点 29: circpus is sasfpus
      ↻ 重复节点，计数: 3

   节点 30: sasfpus is bitvpus
      ↻ 重复节点，计数: 3

   节点 31: bitvpus is voybpus and laylpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CI
      📋 推理路径: CI规则: bitvpus is voybpus → bitvpus is laylpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: bitvpus is voybpus
  - 前提: bitvpus is laylpus

   节点 32: bitvpus is voybpus
      ↻ 重复节点，计数: 3

   节点 33: voybpus is yovlpus
      ↻ 重复节点，计数: 3

   节点 34: bitvpus is laylpus
      ↻ 重复节点，计数: 3

   节点 35: laylpus is sapdpus
      ↻ 重复节点，计数: 3

   节点 36: sapdpus is yiyppus
      ↻ 重复节点，计数: 3

   节点 37: yiyppus is fokxpus
      ↻ 重复节点，计数: 3

   节点 38: fokxpus is veyvpus and tudxpus
      ↻ 重复节点，计数: 3

   节点 39: veyvpus is cumgpus
      ↻ 重复节点，计数: 3

   节点 40: cumgpus is babgpus and juddpus and vucppus
      ↻ 重复节点，计数: 4

   节点 41: x is bitvpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is budtpus → budtpus is bitvpus
[后处理] 基于推理轨迹点亮节点，使用了 8 个前提条件:
  - 前提: x is budtpus
  - 前提: budtpus is ziccpus and fonppus and jewnpus
  - 前提: ziccpus is xechpus and kavkpus
  - 前提: xechpus is rahspus
  - 前提: rahspus is kiyzpus and jiwfpus and qayjpus
  - 前提: kiyzpus is circpus and kukmpus
  - 前提: circpus is sasfpus
  - 前提: sasfpus is bitvpus
  ✓ 点亮LoG节点: x is kiyzpus
[子树点亮]     └─ 点亮依赖节点: x is kiyzpus and jiwfpus (深度3)
[子树点亮]     └─ 点亮依赖节点: x is ziccpus (深度4)
[子树点亮]     └─ 点亮依赖节点: ziccpus is kiyzpus and jiwfpus (深度4)
[子树点亮]     └─ 点亮依赖节点: x is ziccpus and fonppus (深度5)
[子树点亮]     └─ 点亮依赖节点: ziccpus is kiyzpus and jiwfpus and qayjpus (深度5)
[子树点亮]     └─ 点亮依赖节点: budtpus is ziccpus and fonppus (深度6)
[子树点亮]     └─ 点亮依赖节点: ziccpus is xechpus (深度6)
[子树点亮]     └─ 点亮依赖节点: xechpus is kiyzpus and jiwfpus and qayjpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 8 个节点
  ✓ 点亮LoG节点: kiyzpus is bitvpus
[子树点亮]     └─ 点亮依赖节点: kiyzpus is circpus (深度6)
[子树点亮]     └─ 点亮依赖节点: circpus is bitvpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 2 个节点
[后处理] 通过推理轨迹额外点亮了 2 个LoG节点

   节点 42: bitvpus is laylpus
      ↻ 重复节点，计数: 4

   节点 43: laylpus is sapdpus
      ↻ 重复节点，计数: 4

   节点 44: sapdpus is yiyppus
      ↻ 重复节点，计数: 4

   节点 45: yiyppus is fokxpus
      ↻ 重复节点，计数: 4

   节点 46: fokxpus is veyvpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: fokxpus is veyvpus
      ✅ 验证成功 + LoG匹配

   节点 47: veyvpus is cumgpus
      ↻ 重复节点，计数: 4

   节点 48: cumgpus is babgpus
      ↻ 重复节点，计数: 2

   节点 49: x is budtpus
      ↻ 重复节点，计数: 2

   节点 50: budtpus is ziccpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: budtpus is ziccpus and fonppus and jewnpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: budtpus is ziccpus and fonppus and jewnpus

   节点 51: ziccpus is xechpus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 52: xechpus is rahspus
      ↻ 重复节点，计数: 4

   节点 53: rahspus is kiyzpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: rahspus is kiyzpus and jiwfpus and qayjpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: rahspus is kiyzpus and jiwfpus and qayjpus

   节点 54: kiyzpus is circpus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 55: circpus is sasfpus
      ↻ 重复节点，计数: 4

   节点 56: sasfpus is bitvpus
      ↻ 重复节点，计数: 4

   节点 57: bitvpus is laylpus
      ↻ 重复节点，计数: 5

   节点 58: laylpus is sapdpus
      ↻ 重复节点，计数: 5

   节点 59: sapdpus is yiyppus
      ↻ 重复节点，计数: 5

   节点 60: yiyppus is fokxpus
      ↻ 重复节点，计数: 5

   节点 61: fokxpus is veyvpus
      ↻ 重复节点，计数: 2

   节点 62: veyvpus is cumgpus
      ↻ 重复节点，计数: 5

   节点 63: cumgpus is babgpus
      ↻ 重复节点，计数: 3

   节点 64: x is bitvpus
      ↻ 重复节点，计数: 2

   节点 65: bitvpus is babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: bitvpus is laylpus → laylpus is babgpus
[后处理] 基于推理轨迹点亮节点，使用了 7 个前提条件:
  - 前提: bitvpus is laylpus
  - 前提: laylpus is sapdpus
  - 前提: sapdpus is yiyppus
  - 前提: yiyppus is fokxpus
  - 前提: fokxpus is veyvpus
  - 前提: veyvpus is cumgpus
  - 前提: cumgpus is babgpus
  ✓ 点亮LoG节点: sapdpus is babgpus
[子树点亮]     └─ 点亮依赖节点: sapdpus is babgpus and juddpus (深度4)
[子树点亮]     └─ 点亮依赖节点: sapdpus is veyvpus (深度5)
[子树点亮]     └─ 点亮依赖节点: veyvpus is babgpus and juddpus (深度5)
[子树点亮]     └─ 点亮依赖节点: sapdpus is fokxpus (深度6)
[子树点亮]     └─ 点亮依赖节点: veyvpus is babgpus and juddpus and vucppus (深度6)
[后处理]   └─ 自动点亮依赖子树: 5 个节点
  ✓ 点亮LoG节点: bitvpus is sapdpus
[后处理] 通过推理轨迹额外点亮了 2 个LoG节点

   节点 66: x is babgpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is babgpus
[子树点亮]     └─ 点亮依赖节点: kiyzpus is babgpus (深度2)
[子树点亮]     └─ 点亮依赖节点: kiyzpus is sapdpus (深度3)
[子树点亮]     └─ 点亮依赖节点: kiyzpus is sapdpus and yovlpus (深度4)
[子树点亮]     └─ 点亮依赖节点: bitvpus is sapdpus and yovlpus (深度5)
[子树点亮]     └─ 点亮依赖节点: bitvpus is yovlpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 5 个节点
      ✅ 验证成功 + LoG匹配

   节点 67: cumgpus is babgpus
      ↻ 重复节点，计数: 4

   节点 68: bitvpus is voybpus
      ↻ 重复节点，计数: 4

   节点 69: voybpus is yovlpus
      ↻ 重复节点，计数: 4

   节点 70: bitvpus is laylpus
      ↻ 重复节点，计数: 6

   节点 71: sasfpus is bitvpus
      ↻ 重复节点，计数: 5

   节点 72: circpus is sasfpus
      ↻ 重复节点，计数: 5

   节点 73: x is babgpus
      ↻ 重复节点，计数: 2

   节点 74: x is budtpus
      ↻ 重复节点，计数: 3

   节点 75: budtpus is ziccpus
      ↻ 重复节点，计数: 2

   节点 76: ziccpus is xechpus
      ↻ 重复节点，计数: 2

   节点 77: xechpus is rahspus
      ↻ 重复节点，计数: 5

   节点 78: kiyzpus is circpus
      ↻ 重复节点，计数: 2

   节点 79: circpus is sasfpus
      ↻ 重复节点，计数: 6

   节点 80: sasfpus is bitvpus
      ↻ 重复节点，计数: 6

   节点 81: bitvpus is sasfpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 82: bitvpus is laylpus
      ↻ 重复节点，计数: 7

   节点 83: laylpus is sapdpus
      ↻ 重复节点，计数: 6

   节点 84: sapdpus is yiyppus
      ↻ 重复节点，计数: 6

   节点 85: yiyppus is fokxpus
      ↻ 重复节点，计数: 6

   节点 86: fokxpus is veyvpus
      ↻ 重复节点，计数: 3

   节点 87: veyvpus is cumgpus
      ↻ 重复节点，计数: 6

   节点 88: cumgpus is babgpus
      ↻ 重复节点，计数: 5

   节点 89: x is babgpus
      ↻ 重复节点，计数: 3

🔍 分析推理路径完整性...

============================================================
[后处理] 处理完成
============================================================
📈 处理统计:
   - 处理的actual节点: 89
   - 新增节点: 13
   - 更新已存在节点: 76
   - 点亮的LoG节点: 27

🎯 推理质量统计:
   - 完美推理: 11 (节点正确 + 路径正确)
   - 部分推理: 2 (节点正确 + 路径部分错误)
   - 无效推理: 0 (节点错误或路径完全错误)
[LoG分析] LoG图: 27节点, 17前提, 复杂度1-17

📊 === Statement列表分析 ===
📈 节点统计:
   - 总节点数: 30
   - 前提节点: 17
   - 推理节点: 11
   - 幻觉节点: 2
   - 点亮LoG节点: 27

❌ 幻觉节点详情:
   - babgpus is cumgpus and juddpus and vucppus (出现1次)
   - bitvpus is sasfpus (出现1次)

✅ 推理节点详情:
   🟢 cumgpus is babgpus (出现5次, 质量:perfect)
   🟢 x is budtpus (出现3次, 质量:perfect)
   🟡 bitvpus is voybpus and laylpus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['bitvpus is sasfpus']
   🟢 x is bitvpus (出现2次, 质量:perfect)
   🟢 fokxpus is veyvpus (出现3次, 质量:perfect)
   🟢 budtpus is ziccpus (出现2次, 质量:perfect)
   🟢 ziccpus is xechpus (出现2次, 质量:perfect)
   🟢 rahspus is kiyzpus (出现1次, 质量:perfect)
   🟢 kiyzpus is circpus (出现2次, 质量:perfect)
   🟡 bitvpus is babgpus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['bitvpus is sasfpus']
   🟢 x is babgpus (出现3次, 质量:perfect)

🔥 点亮的LoG节点:
   - x is ziccpus and fonppus
   - ziccpus is kiyzpus and jiwfpus and qayjpus
   - kiyzpus is babgpus
   - kiyzpus is bitvpus
   - budtpus is ziccpus and fonppus
   - bitvpus is sapdpus
   - bitvpus is sapdpus and yovlpus
   - veyvpus is babgpus and juddpus
   - x is babgpus
   - sapdpus is babgpus and juddpus
   - x is kiyzpus and jiwfpus
   - sapdpus is veyvpus
   - veyvpus is babgpus and juddpus and vucppus
   - ziccpus is xechpus
   - x is ziccpus
   - x is kiyzpus
   - xechpus is kiyzpus and jiwfpus and qayjpus
   - fokxpus is veyvpus
   - sapdpus is fokxpus
   - kiyzpus is circpus
   - sapdpus is babgpus
   - ziccpus is kiyzpus and jiwfpus
   - kiyzpus is sapdpus and yovlpus
   - bitvpus is yovlpus
   - x is budtpus
   - kiyzpus is sapdpus
   - circpus is bitvpus

============================================================
📊 计算评估指标
============================================================

🎯 计算Coverage指标...
   深度Coverage: 6/6 = 100.00%
   最深点亮节点: x is babgpus (第6层)
   节点Coverage: 27/27 = 100.00%
   前提条件Coverage: 17/17 = 100.00%
   各推理层点亮比例:
     第1层: 11/11 = 100.00%
     第2层: 6/6 = 100.00%
     第3层: 4/4 = 100.00%
     第4层: 3/3 = 100.00%
     第5层: 2/2 = 100.00%
     第6层: 1/1 = 100.00%

🎯 计算Precision指标...
   Error Rate: 2/13 = 15.38%
   可推导节点: 11/13
   Strict Error Rate: 4/13 = 30.77%
   严格有效节点: 9/13

   详细分析:
     完美推理: 11 (84.62%)
     部分推理: 2 (15.38%)
     无效推理: 0 (0.00%)

================================================================================
处理记录 39/50
================================================================================
记录索引: 38
问题状态: correct
📁 从缓存加载提取结果: evaluation_results.LoG_6.deepseek-reasoner_record_38.json
✅ 使用缓存结果:
   - 句子数: 115
   - 提取的语句数: 178
   - 初始条件数: 28

=== Statement提取完成 ===
总句子数: 115
成功提取: 115
失败提取: 0
总statements数: 178

=== 开始清洗Statement格式 ===
原始statements数: 178
清洗后statements数: 164
过滤掉的statements数: 14
清洗后的statements:
  1. [planning] x is babgpus
  2. [planning] x is babrpus
  3. [actual] lerwpus is babgpus and rayspus
  4. [actual] x is relmpus and muqcpus
  5. [planning] x is babgpus
  6. [planning] x is babgpus
  7. [actual] lerwpus is yexbpus
  8. [actual] yexbpus is lerwpus and pazjpus
  9. [actual] x is relmpus
  10. [actual] relmpus is babgpus
  11. [actual] x is babgpus
  12. [actual] x is relmpus
  13. [actual] relmpus is babgpus
  14. [actual] x is babgpus
  15. [planning] x is babgpus and babkpus and babmpus
  16. [planning] x is babgpus
  17. [planning] x is relmpus
  18. [planning] x is babgpus
  19. [actual] vezypus is bicwpus
  20. [actual] fadgpus is kilxpus
  21. [actual] daxjpus is zepdpus and wusbpus
  22. [actual] jadppus is rakmpus and yenwpus
  23. [actual] zepdpus is jadppus
  24. [actual] yijrpus is husvpus
  25. [actual] herjpus is kihlpus
  26. [actual] degvpus is yatrpus
  27. [actual] vodvpus is hopfpus
  28. [actual] x is fadgpus
  29. [actual] rakmpus is kinhpus
  30. [actual] x is wutvpus
  31. [actual] getqpus is herjpus and hittpus
  32. [actual] zajzpus is vodvpus
  33. [actual] rakmpus is suhqpus
  34. [actual] yatrpus is getqpus
  35. [actual] bicwpus is zajzpus and qabvpus
  36. [actual] hopfpus is yijrpus
  37. [actual] kinhpus is yurppus
  38. [actual] kilxpus is rujkpus
  39. [actual] benwpus is daxjpus
  40. [actual] kihlpus is luvbpus
  41. [actual] husvpus is babgpus and hifspus
  42. [actual] husvpus is xoqtpus and dijwpus
  43. [actual] suhqpus is babrpus
  44. [actual] rujkpus is vezypus
  45. [actual] luvbpus is benwpus and nebjpus
  46. [actual] wutvpus is degvpus
  47. [actual] x is fadgpus
  48. [actual] x is wutvpus
  49. [actual] x is fadgpus and wutvpus
  50. [planning] x is babgpus and babrpus
  51. [actual] babgpus is mentioned in husvpus
  52. [actual] husvpus is babgpus and hifspus
  53. [actual] suhqpus is babrpus
  54. [planning] x is husvpus for babgpus
  55. [planning] x is suhqpus for babrpus
  56. [actual] x is fadgpus
  57. [actual] x is wutvpus
  58. [actual] fadgpus is kilxpus
  59. [actual] lerwpus is babgpus and rayspus
  60. [actual] x is relmpus and muqcpus
  61. [actual] x is babgpus
  62. [actual] relmpus is babgpus
  63. [actual] kilxpus is rujkpus
  64. [actual] rujkpus is vezypus
  65. [actual] vezypus is bicwpus
  66. [actual] x is babgpus
  67. [actual] yexbpus is lerwpus and pazjpus
  68. [planning] x is babgpus and babkpus and babmpus?
  69. [actual] bicwpus is zajzpus and qabvpus
  70. [actual] zajzpus is vodvpus
  71. [actual] vodvpus is hopfpus
  72. [actual] hopfpus is yijrpus
  73. [actual] lerwpus is babgpus and rayspus
  74. [actual] x is relmpus and muqcpus
  75. [planning] x is babgpus
  76. [planning] x is babgpus
  77. [planning] lerwpus is yexbpus
  78. [planning] yexbpus is lerwpus and pazjpus
  79. [actual] x is relmpus
  80. [actual] relmpus is babgpus
  81. [actual] x is babgpus
  82. [actual] x is relmpus
  83. [actual] relmpus is babgpus
  84. [actual] x is babgpus
  85. [planning] x is babgpus and babkpus and babmpus
  86. [planning] x is babgpus
  87. [planning] x is relmpus
  88. [planning] x is babgpus
  89. [planning] x is babgpus
  90. [actual] yijrpus is husvpus
  91. [actual] husvpus is babgpus and hifspus
  92. [actual] lerwpus is babgpus and rayspus
  93. [actual] x is relmpus and muqcpus
  94. [actual] x is babgpus
  95. [actual] relmpus is babgpus
  96. [actual] x is babgpus
  97. [actual] x is relmpus
  98. [actual] relmpus is babgpus
  99. [actual] lerwpus is yexbpus
  100. [actual] yexbpus is lerwpus and pazjpus
  101. [actual] x is husvpus
  102. [actual] babgpus is husvpus
  103. [actual] x is babgpus
  104. [planning] x is babrpus
  105. [actual] babrpus is suhqpus
  106. [actual] suhqpus is babrpus
  107. [actual] wutvpus is degvpus
  108. [actual] degvpus is yatrpus
  109. [actual] yatrpus is getqpus
  110. [actual] getqpus is herjpus and hittpus
  111. [actual] herjpus is kihlpus
  112. [actual] kihlpus is luvbpus
  113. [actual] luvbpus is benwpus and nebjpus
  114. [actual] benwpus is daxjpus
  115. [actual] x is babgpus
  116. [actual] yexbpus is lerwpus and pazjpus
  117. [planning] x is babgpus and babkpus and babmpus?
  118. [actual] daxjpus is zepdpus and wusbpus
  119. [actual] zepdpus is jadppus
  120. [actual] x is babgpus
  121. [actual] yexbpus is lerwpus and pazjpus
  122. [actual] lerwpus is yexbpus
  123. [planning] x is babgpus
  124. [actual] jadppus is rakmpus and yenwpus
  125. [actual] rakmpus is kinhpus
  126. [actual] rakmpus is suhqpus
  127. [actual] kinhpus is yurppus
  128. [actual] rakmpus is suhqpus
  129. [actual] suhqpus is babrpus
  130. [actual] luvbpus is benwpus
  131. [actual] benwpus is daxjpus
  132. [actual] daxjpus is zepdpus
  133. [actual] zepdpus is jadppus
  134. [actual] jadppus is rakmpus
  135. [actual] rakmpus is suhqpus
  136. [actual] suhqpus is babrpus
  137. [actual] x is wutvpus
  138. [actual] wutvpus is degvpus
  139. [actual] degvpus is yatrpus
  140. [actual] yatrpus is getqpus
  141. [actual] getqpus is herjpus
  142. [actual] herjpus is kihlpus
  143. [actual] kihlpus is luvbpus
  144. [actual] luvbpus is benwpus
  145. [actual] benwpus is daxjpus
  146. [actual] daxjpus is zepdpus
  147. [actual] zepdpus is jadppus
  148. [actual] jadppus is rakmpus
  149. [actual] rakmpus is suhqpus
  150. [actual] suhqpus is babrpus
  151. [actual] x is babgpus
  152. [actual] x is babgpus
  153. [actual] x is babrpus
  154. [actual] x is fadgpus
  155. [actual] fadgpus is husvpus and babgpus
  156. [actual] x is wutvpus
  157. [actual] wutvpus is babrpus
  158. [actual] x is fadgpus
  159. [actual] x is wutvpus
  160. [actual] x is babgpus and babrpus
  161. [actual] husvpus is xoqtpus and dijwpus
  162. [actual] husvpus is babgpus
  163. [actual] suhqpus is babrpus
  164. [actual] rakmpus is suhqpus

=== 开始标准化和解析节点 ===
清洗后statements数: 164
标准化后节点数: 159
过滤掉的无效实体数: 5
标准化后的节点:
  1. [planning] x → babgpus (原始: x is babgpus)
  2. [planning] x → babrpus (原始: x is babrpus)
  3. [actual] lerwpus → babgpus and rayspus (原始: lerwpus is babgpus and rayspus)
  4. [actual] x → relmpus and muqcpus (原始: x is relmpus and muqcpus)
  5. [planning] x → babgpus (原始: x is babgpus)
  6. [planning] x → babgpus (原始: x is babgpus)
  7. [actual] lerwpus → yexbpus (原始: lerwpus is yexbpus)
  8. [actual] yexbpus → lerwpus and pazjpus (原始: yexbpus is lerwpus and pazjpus)
  9. [actual] x → relmpus (原始: x is relmpus)
  10. [actual] relmpus → babgpus (原始: relmpus is babgpus)
  11. [actual] x → babgpus (原始: x is babgpus)
  12. [actual] x → relmpus (原始: x is relmpus)
  13. [actual] relmpus → babgpus (原始: relmpus is babgpus)
  14. [actual] x → babgpus (原始: x is babgpus)
  15. [planning] x → babgpus and babkpus and babmpus (原始: x is babgpus and babkpus and babmpus)
  16. [planning] x → babgpus (原始: x is babgpus)
  17. [planning] x → relmpus (原始: x is relmpus)
  18. [planning] x → babgpus (原始: x is babgpus)
  19. [actual] vezypus → bicwpus (原始: vezypus is bicwpus)
  20. [actual] fadgpus → kilxpus (原始: fadgpus is kilxpus)
  21. [actual] daxjpus → zepdpus and wusbpus (原始: daxjpus is zepdpus and wusbpus)
  22. [actual] jadppus → rakmpus and yenwpus (原始: jadppus is rakmpus and yenwpus)
  23. [actual] zepdpus → jadppus (原始: zepdpus is jadppus)
  24. [actual] yijrpus → husvpus (原始: yijrpus is husvpus)
  25. [actual] herjpus → kihlpus (原始: herjpus is kihlpus)
  26. [actual] degvpus → yatrpus (原始: degvpus is yatrpus)
  27. [actual] vodvpus → hopfpus (原始: vodvpus is hopfpus)
  28. [actual] x → fadgpus (原始: x is fadgpus)
  29. [actual] rakmpus → kinhpus (原始: rakmpus is kinhpus)
  30. [actual] x → wutvpus (原始: x is wutvpus)
  31. [actual] getqpus → herjpus and hittpus (原始: getqpus is herjpus and hittpus)
  32. [actual] zajzpus → vodvpus (原始: zajzpus is vodvpus)
  33. [actual] rakmpus → suhqpus (原始: rakmpus is suhqpus)
  34. [actual] yatrpus → getqpus (原始: yatrpus is getqpus)
  35. [actual] bicwpus → zajzpus and qabvpus (原始: bicwpus is zajzpus and qabvpus)
  36. [actual] hopfpus → yijrpus (原始: hopfpus is yijrpus)
  37. [actual] kinhpus → yurppus (原始: kinhpus is yurppus)
  38. [actual] kilxpus → rujkpus (原始: kilxpus is rujkpus)
  39. [actual] benwpus → daxjpus (原始: benwpus is daxjpus)
  40. [actual] kihlpus → luvbpus (原始: kihlpus is luvbpus)
  41. [actual] husvpus → babgpus and hifspus (原始: husvpus is babgpus and hifspus)
  42. [actual] husvpus → xoqtpus and dijwpus (原始: husvpus is xoqtpus and dijwpus)
  43. [actual] suhqpus → babrpus (原始: suhqpus is babrpus)
  44. [actual] rujkpus → vezypus (原始: rujkpus is vezypus)
  45. [actual] luvbpus → benwpus and nebjpus (原始: luvbpus is benwpus and nebjpus)
  46. [actual] wutvpus → degvpus (原始: wutvpus is degvpus)
  47. [actual] x → fadgpus (原始: x is fadgpus)
  48. [actual] x → wutvpus (原始: x is wutvpus)
  49. [actual] x → fadgpus and wutvpus (原始: x is fadgpus and wutvpus)
  50. [planning] x → babgpus and babrpus (原始: x is babgpus and babrpus)
  51. [actual] husvpus → babgpus and hifspus (原始: husvpus is babgpus and hifspus)
  52. [actual] suhqpus → babrpus (原始: suhqpus is babrpus)
  53. [actual] x → fadgpus (原始: x is fadgpus)
  54. [actual] x → wutvpus (原始: x is wutvpus)
  55. [actual] fadgpus → kilxpus (原始: fadgpus is kilxpus)
  56. [actual] lerwpus → babgpus and rayspus (原始: lerwpus is babgpus and rayspus)
  57. [actual] x → relmpus and muqcpus (原始: x is relmpus and muqcpus)
  58. [actual] x → babgpus (原始: x is babgpus)
  59. [actual] relmpus → babgpus (原始: relmpus is babgpus)
  60. [actual] kilxpus → rujkpus (原始: kilxpus is rujkpus)
  61. [actual] rujkpus → vezypus (原始: rujkpus is vezypus)
  62. [actual] vezypus → bicwpus (原始: vezypus is bicwpus)
  63. [actual] x → babgpus (原始: x is babgpus)
  64. [actual] yexbpus → lerwpus and pazjpus (原始: yexbpus is lerwpus and pazjpus)
  65. [actual] bicwpus → zajzpus and qabvpus (原始: bicwpus is zajzpus and qabvpus)
  66. [actual] zajzpus → vodvpus (原始: zajzpus is vodvpus)
  67. [actual] vodvpus → hopfpus (原始: vodvpus is hopfpus)
  68. [actual] hopfpus → yijrpus (原始: hopfpus is yijrpus)
  69. [actual] lerwpus → babgpus and rayspus (原始: lerwpus is babgpus and rayspus)
  70. [actual] x → relmpus and muqcpus (原始: x is relmpus and muqcpus)
  71. [planning] x → babgpus (原始: x is babgpus)
  72. [planning] x → babgpus (原始: x is babgpus)
  73. [planning] lerwpus → yexbpus (原始: lerwpus is yexbpus)
  74. [planning] yexbpus → lerwpus and pazjpus (原始: yexbpus is lerwpus and pazjpus)
  75. [actual] x → relmpus (原始: x is relmpus)
  76. [actual] relmpus → babgpus (原始: relmpus is babgpus)
  77. [actual] x → babgpus (原始: x is babgpus)
  78. [actual] x → relmpus (原始: x is relmpus)
  79. [actual] relmpus → babgpus (原始: relmpus is babgpus)
  80. [actual] x → babgpus (原始: x is babgpus)
  81. [planning] x → babgpus and babkpus and babmpus (原始: x is babgpus and babkpus and babmpus)
  82. [planning] x → babgpus (原始: x is babgpus)
  83. [planning] x → relmpus (原始: x is relmpus)
  84. [planning] x → babgpus (原始: x is babgpus)
  85. [planning] x → babgpus (原始: x is babgpus)
  86. [actual] yijrpus → husvpus (原始: yijrpus is husvpus)
  87. [actual] husvpus → babgpus and hifspus (原始: husvpus is babgpus and hifspus)
  88. [actual] lerwpus → babgpus and rayspus (原始: lerwpus is babgpus and rayspus)
  89. [actual] x → relmpus and muqcpus (原始: x is relmpus and muqcpus)
  90. [actual] x → babgpus (原始: x is babgpus)
  91. [actual] relmpus → babgpus (原始: relmpus is babgpus)
  92. [actual] x → babgpus (原始: x is babgpus)
  93. [actual] x → relmpus (原始: x is relmpus)
  94. [actual] relmpus → babgpus (原始: relmpus is babgpus)
  95. [actual] lerwpus → yexbpus (原始: lerwpus is yexbpus)
  96. [actual] yexbpus → lerwpus and pazjpus (原始: yexbpus is lerwpus and pazjpus)
  97. [actual] x → husvpus (原始: x is husvpus)
  98. [actual] babgpus → husvpus (原始: babgpus is husvpus)
  99. [actual] x → babgpus (原始: x is babgpus)
  100. [planning] x → babrpus (原始: x is babrpus)
  101. [actual] babrpus → suhqpus (原始: babrpus is suhqpus)
  102. [actual] suhqpus → babrpus (原始: suhqpus is babrpus)
  103. [actual] wutvpus → degvpus (原始: wutvpus is degvpus)
  104. [actual] degvpus → yatrpus (原始: degvpus is yatrpus)
  105. [actual] yatrpus → getqpus (原始: yatrpus is getqpus)
  106. [actual] getqpus → herjpus and hittpus (原始: getqpus is herjpus and hittpus)
  107. [actual] herjpus → kihlpus (原始: herjpus is kihlpus)
  108. [actual] kihlpus → luvbpus (原始: kihlpus is luvbpus)
  109. [actual] luvbpus → benwpus and nebjpus (原始: luvbpus is benwpus and nebjpus)
  110. [actual] benwpus → daxjpus (原始: benwpus is daxjpus)
  111. [actual] x → babgpus (原始: x is babgpus)
  112. [actual] yexbpus → lerwpus and pazjpus (原始: yexbpus is lerwpus and pazjpus)
  113. [actual] daxjpus → zepdpus and wusbpus (原始: daxjpus is zepdpus and wusbpus)
  114. [actual] zepdpus → jadppus (原始: zepdpus is jadppus)
  115. [actual] x → babgpus (原始: x is babgpus)
  116. [actual] yexbpus → lerwpus and pazjpus (原始: yexbpus is lerwpus and pazjpus)
  117. [actual] lerwpus → yexbpus (原始: lerwpus is yexbpus)
  118. [planning] x → babgpus (原始: x is babgpus)
  119. [actual] jadppus → rakmpus and yenwpus (原始: jadppus is rakmpus and yenwpus)
  120. [actual] rakmpus → kinhpus (原始: rakmpus is kinhpus)
  121. [actual] rakmpus → suhqpus (原始: rakmpus is suhqpus)
  122. [actual] kinhpus → yurppus (原始: kinhpus is yurppus)
  123. [actual] rakmpus → suhqpus (原始: rakmpus is suhqpus)
  124. [actual] suhqpus → babrpus (原始: suhqpus is babrpus)
  125. [actual] luvbpus → benwpus (原始: luvbpus is benwpus)
  126. [actual] benwpus → daxjpus (原始: benwpus is daxjpus)
  127. [actual] daxjpus → zepdpus (原始: daxjpus is zepdpus)
  128. [actual] zepdpus → jadppus (原始: zepdpus is jadppus)
  129. [actual] jadppus → rakmpus (原始: jadppus is rakmpus)
  130. [actual] rakmpus → suhqpus (原始: rakmpus is suhqpus)
  131. [actual] suhqpus → babrpus (原始: suhqpus is babrpus)
  132. [actual] x → wutvpus (原始: x is wutvpus)
  133. [actual] wutvpus → degvpus (原始: wutvpus is degvpus)
  134. [actual] degvpus → yatrpus (原始: degvpus is yatrpus)
  135. [actual] yatrpus → getqpus (原始: yatrpus is getqpus)
  136. [actual] getqpus → herjpus (原始: getqpus is herjpus)
  137. [actual] herjpus → kihlpus (原始: herjpus is kihlpus)
  138. [actual] kihlpus → luvbpus (原始: kihlpus is luvbpus)
  139. [actual] luvbpus → benwpus (原始: luvbpus is benwpus)
  140. [actual] benwpus → daxjpus (原始: benwpus is daxjpus)
  141. [actual] daxjpus → zepdpus (原始: daxjpus is zepdpus)
  142. [actual] zepdpus → jadppus (原始: zepdpus is jadppus)
  143. [actual] jadppus → rakmpus (原始: jadppus is rakmpus)
  144. [actual] rakmpus → suhqpus (原始: rakmpus is suhqpus)
  145. [actual] suhqpus → babrpus (原始: suhqpus is babrpus)
  146. [actual] x → babgpus (原始: x is babgpus)
  147. [actual] x → babgpus (原始: x is babgpus)
  148. [actual] x → babrpus (原始: x is babrpus)
  149. [actual] x → fadgpus (原始: x is fadgpus)
  150. [actual] fadgpus → husvpus and babgpus (原始: fadgpus is husvpus and babgpus)
  151. [actual] x → wutvpus (原始: x is wutvpus)
  152. [actual] wutvpus → babrpus (原始: wutvpus is babrpus)
  153. [actual] x → fadgpus (原始: x is fadgpus)
  154. [actual] x → wutvpus (原始: x is wutvpus)
  155. [actual] x → babgpus and babrpus (原始: x is babgpus and babrpus)
  156. [actual] husvpus → xoqtpus and dijwpus (原始: husvpus is xoqtpus and dijwpus)
  157. [actual] husvpus → babgpus (原始: husvpus is babgpus)
  158. [actual] suhqpus → babrpus (原始: suhqpus is babrpus)
  159. [actual] rakmpus → suhqpus (原始: rakmpus is suhqpus)

开始新的后处理...
[后处理] 从LoG数据文件中获取到图数据，节点数: 36
[后处理] 加载LoG图，包含 36 个节点
  LoG节点 0: x is babgpus and babrpus (规则: CI, 深度: 1)
  LoG节点 1: x is babgpus (规则: CE, 深度: 2)
  LoG节点 2: x is babrpus (规则: MP, 深度: 2)
  LoG节点 3: x is babgpus and xoqtpus (规则: MP, 深度: 3)
  LoG节点 4: x is zepdpus (规则: MP, 深度: 3)
  LoG节点 5: zepdpus is babrpus (规则: CE, 深度: 3)
  LoG节点 6: x is zajzpus (规则: MP, 深度: 4)
  LoG节点 7: zajzpus is babgpus and xoqtpus (规则: MP, 深度: 4)
  LoG节点 8: x is luvbpus (规则: MP, 深度: 4)
  LoG节点 9: luvbpus is zepdpus (规则: CE, 深度: 4)
  LoG节点 10: zepdpus is babrpus and yurppus (规则: MP, 深度: 4)
  LoG节点 11: x is vezypus (规则: MP, 深度: 5)
  LoG节点 12: vezypus is zajzpus (规则: CE, 深度: 5)
  LoG节点 13: zajzpus is husvpus (规则: MP, 深度: 5)
  LoG节点 14: husvpus is babgpus and xoqtpus (规则: CI, 深度: 5)
  LoG节点 15: x is getqpus (规则: MP, 深度: 5)
  LoG节点 16: getqpus is luvbpus (规则: MP, 深度: 5)
  LoG节点 17: luvbpus is zepdpus and wusbpus (规则: MP, 深度: 5)
  LoG节点 18: zepdpus is rakmpus (规则: CE, 深度: 5)
  LoG节点 19: rakmpus is babrpus and yurppus (规则: CI, 深度: 5)
  LoG节点 20: x is kilxpus (规则: MP, 深度: 6)
  LoG节点 21: kilxpus is vezypus (规则: MP, 深度: 6)
  LoG节点 22: vezypus is zajzpus and qabvpus (规则: MP, 深度: 6)
  LoG节点 23: zajzpus is hopfpus (规则: MP, 深度: 6)
  LoG节点 24: hopfpus is husvpus (规则: MP, 深度: 6)
  LoG节点 25: husvpus is babgpus (规则: CE, 深度: 6)
  LoG节点 26: husvpus is xoqtpus (规则: CE, 深度: 6)
  LoG节点 27: x is degvpus (规则: MP, 深度: 6)
  LoG节点 28: degvpus is getqpus (规则: MP, 深度: 6)
  LoG节点 29: getqpus is herjpus (规则: CE, 深度: 6)
  LoG节点 30: herjpus is luvbpus (规则: MP, 深度: 6)
  LoG节点 31: luvbpus is benwpus (规则: CE, 深度: 6)
  LoG节点 32: benwpus is zepdpus and wusbpus (规则: MP, 深度: 6)
  LoG节点 33: zepdpus is rakmpus and yenwpus (规则: MP, 深度: 6)
  LoG节点 34: rakmpus is babrpus (规则: MP, 深度: 6)
  LoG节点 35: rakmpus is yurppus (规则: MP, 深度: 6)

============================================================
[后处理] 开始处理节点
============================================================
📊 初始状态:
   - 标准化节点数: 159
   - 初始条件数: 28
   - LoG图节点数: 36

📋 初始条件列表:
    1. vezypus is bicwpus
    2. fadgpus is kilxpus
    3. daxjpus is zepdpus and wusbpus
    4. jadppus is rakmpus and yenwpus
    5. zepdpus is jadppus
    6. yijrpus is husvpus
    7. herjpus is kihlpus
    8. degvpus is yatrpus
    9. vodvpus is hopfpus
   10. x is fadgpus
   11. rakmpus is kinhpus
   12. x is wutvpus
   13. getqpus is herjpus and hittpus
   14. zajzpus is vodvpus
   15. rakmpus is suhqpus
   16. yatrpus is getqpus
   17. bicwpus is zajzpus and qabvpus
   18. hopfpus is yijrpus
   19. kinhpus is yurppus
   20. kilxpus is rujkpus
   21. benwpus is daxjpus
   22. kihlpus is luvbpus
   23. husvpus is babgpus and hifspus
   24. husvpus is xoqtpus and dijwpus
   25. suhqpus is babrpus
   26. rujkpus is vezypus
   27. luvbpus is benwpus and nebjpus
   28. wutvpus is degvpus

🔧 构建初始Statement列表...
✅ 初始Statement列表构建完成，包含 28 个前提节点

🔍 开始处理actual节点...

   节点 1: lerwpus is babgpus and rayspus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 2: x is relmpus and muqcpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 3: lerwpus is yexbpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 4: yexbpus is lerwpus and pazjpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 5: x is relmpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: x is relmpus and muqcpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: x is relmpus and muqcpus

   节点 6: relmpus is babgpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 7: x is babgpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is babgpus
[子树点亮]     └─ 点亮依赖节点: x is babgpus and xoqtpus (深度3)
[子树点亮]     └─ 点亮依赖节点: x is zajzpus (深度4)
[子树点亮]     └─ 点亮依赖节点: zajzpus is babgpus and xoqtpus (深度4)
[子树点亮]     └─ 点亮依赖节点: x is vezypus (深度5)
[子树点亮]     └─ 点亮依赖节点: vezypus is zajzpus (深度5)
[子树点亮]     └─ 点亮依赖节点: zajzpus is husvpus (深度5)
[子树点亮]     └─ 点亮依赖节点: husvpus is babgpus and xoqtpus (深度5)
[子树点亮]     └─ 点亮依赖节点: x is kilxpus (深度6)
[子树点亮]     └─ 点亮依赖节点: kilxpus is vezypus (深度6)
[子树点亮]     └─ 点亮依赖节点: vezypus is zajzpus and qabvpus (深度6)
[子树点亮]     └─ 点亮依赖节点: zajzpus is hopfpus (深度6)
[子树点亮]     └─ 点亮依赖节点: hopfpus is husvpus (深度6)
[子树点亮]     └─ 点亮依赖节点: husvpus is babgpus (深度6)
[子树点亮]     └─ 点亮依赖节点: husvpus is xoqtpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 14 个节点
      ✅ 验证成功 + LoG匹配

   节点 8: x is relmpus
      ↻ 重复节点，计数: 2

   节点 9: relmpus is babgpus
      ↻ 重复节点，计数: 2

   节点 10: x is babgpus
      ↻ 重复节点，计数: 2

   节点 11: vezypus is bicwpus
      ↻ 重复节点，计数: 2

   节点 12: fadgpus is kilxpus
      ↻ 重复节点，计数: 2

   节点 13: daxjpus is zepdpus and wusbpus
      ↻ 重复节点，计数: 2

   节点 14: jadppus is rakmpus and yenwpus
      ↻ 重复节点，计数: 2

   节点 15: zepdpus is jadppus
      ↻ 重复节点，计数: 2

   节点 16: yijrpus is husvpus
      ↻ 重复节点，计数: 2

   节点 17: herjpus is kihlpus
      ↻ 重复节点，计数: 2

   节点 18: degvpus is yatrpus
      ↻ 重复节点，计数: 2

   节点 19: vodvpus is hopfpus
      ↻ 重复节点，计数: 2

   节点 20: x is fadgpus
      ↻ 重复节点，计数: 2

   节点 21: rakmpus is kinhpus
      ↻ 重复节点，计数: 2

   节点 22: x is wutvpus
      ↻ 重复节点，计数: 2

   节点 23: getqpus is herjpus and hittpus
      ↻ 重复节点，计数: 2

   节点 24: zajzpus is vodvpus
      ↻ 重复节点，计数: 2

   节点 25: rakmpus is suhqpus
      ↻ 重复节点，计数: 2

   节点 26: yatrpus is getqpus
      ↻ 重复节点，计数: 2

   节点 27: bicwpus is zajzpus and qabvpus
      ↻ 重复节点，计数: 2

   节点 28: hopfpus is yijrpus
      ↻ 重复节点，计数: 2

   节点 29: kinhpus is yurppus
      ↻ 重复节点，计数: 2

   节点 30: kilxpus is rujkpus
      ↻ 重复节点，计数: 2

   节点 31: benwpus is daxjpus
      ↻ 重复节点，计数: 2

   节点 32: kihlpus is luvbpus
      ↻ 重复节点，计数: 2

   节点 33: husvpus is babgpus and hifspus
      ↻ 重复节点，计数: 2

   节点 34: husvpus is xoqtpus and dijwpus
      ↻ 重复节点，计数: 2

   节点 35: suhqpus is babrpus
      ↻ 重复节点，计数: 2

   节点 36: rujkpus is vezypus
      ↻ 重复节点，计数: 2

   节点 37: luvbpus is benwpus and nebjpus
      ↻ 重复节点，计数: 2

   节点 38: wutvpus is degvpus
      ↻ 重复节点，计数: 2

   节点 39: x is fadgpus
      ↻ 重复节点，计数: 3

   节点 40: x is wutvpus
      ↻ 重复节点，计数: 3

   节点 41: x is fadgpus and wutvpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CI
      📋 推理路径: CI规则: x is fadgpus → x is wutvpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: x is fadgpus
  - 前提: x is wutvpus

   节点 42: husvpus is babgpus and hifspus
      ↻ 重复节点，计数: 3

   节点 43: suhqpus is babrpus
      ↻ 重复节点，计数: 3

   节点 44: x is fadgpus
      ↻ 重复节点，计数: 4

   节点 45: x is wutvpus
      ↻ 重复节点，计数: 4

   节点 46: fadgpus is kilxpus
      ↻ 重复节点，计数: 3

   节点 47: lerwpus is babgpus and rayspus
      ↻ 重复节点，计数: 2

   节点 48: x is relmpus and muqcpus
      ↻ 重复节点，计数: 2

   节点 49: x is babgpus
      ↻ 重复节点，计数: 3

   节点 50: relmpus is babgpus
      ↻ 重复节点，计数: 3

   节点 51: kilxpus is rujkpus
      ↻ 重复节点，计数: 3

   节点 52: rujkpus is vezypus
      ↻ 重复节点，计数: 3

   节点 53: vezypus is bicwpus
      ↻ 重复节点，计数: 3

   节点 54: x is babgpus
      ↻ 重复节点，计数: 4

   节点 55: yexbpus is lerwpus and pazjpus
      ↻ 重复节点，计数: 2

   节点 56: bicwpus is zajzpus and qabvpus
      ↻ 重复节点，计数: 3

   节点 57: zajzpus is vodvpus
      ↻ 重复节点，计数: 3

   节点 58: vodvpus is hopfpus
      ↻ 重复节点，计数: 3

   节点 59: hopfpus is yijrpus
      ↻ 重复节点，计数: 3

   节点 60: lerwpus is babgpus and rayspus
      ↻ 重复节点，计数: 3

   节点 61: x is relmpus and muqcpus
      ↻ 重复节点，计数: 3

   节点 62: x is relmpus
      ↻ 重复节点，计数: 3

   节点 63: relmpus is babgpus
      ↻ 重复节点，计数: 4

   节点 64: x is babgpus
      ↻ 重复节点，计数: 5

   节点 65: x is relmpus
      ↻ 重复节点，计数: 4

   节点 66: relmpus is babgpus
      ↻ 重复节点，计数: 5

   节点 67: x is babgpus
      ↻ 重复节点，计数: 6

   节点 68: yijrpus is husvpus
      ↻ 重复节点，计数: 3

   节点 69: husvpus is babgpus and hifspus
      ↻ 重复节点，计数: 4

   节点 70: lerwpus is babgpus and rayspus
      ↻ 重复节点，计数: 4

   节点 71: x is relmpus and muqcpus
      ↻ 重复节点，计数: 4

   节点 72: x is babgpus
      ↻ 重复节点，计数: 7

   节点 73: relmpus is babgpus
      ↻ 重复节点，计数: 6

   节点 74: x is babgpus
      ↻ 重复节点，计数: 8

   节点 75: x is relmpus
      ↻ 重复节点，计数: 5

   节点 76: relmpus is babgpus
      ↻ 重复节点，计数: 7

   节点 77: lerwpus is yexbpus
      ↻ 重复节点，计数: 2

   节点 78: yexbpus is lerwpus and pazjpus
      ↻ 重复节点，计数: 3

   节点 79: x is husvpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is fadgpus → fadgpus is husvpus
[后处理] 基于推理轨迹点亮节点，使用了 10 个前提条件:
  - 前提: x is fadgpus
  - 前提: fadgpus is kilxpus
  - 前提: kilxpus is rujkpus
  - 前提: rujkpus is vezypus
  - 前提: vezypus is bicwpus
  - 前提: bicwpus is zajzpus and qabvpus
  - 前提: zajzpus is vodvpus
  - 前提: vodvpus is hopfpus
  - 前提: hopfpus is yijrpus
  - 前提: yijrpus is husvpus

   节点 80: babgpus is husvpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 81: x is babgpus
      ↻ 重复节点，计数: 9

   节点 82: babrpus is suhqpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 83: suhqpus is babrpus
      ↻ 重复节点，计数: 4

   节点 84: wutvpus is degvpus
      ↻ 重复节点，计数: 3

   节点 85: degvpus is yatrpus
      ↻ 重复节点，计数: 3

   节点 86: yatrpus is getqpus
      ↻ 重复节点，计数: 3

   节点 87: getqpus is herjpus and hittpus
      ↻ 重复节点，计数: 3

   节点 88: herjpus is kihlpus
      ↻ 重复节点，计数: 3

   节点 89: kihlpus is luvbpus
      ↻ 重复节点，计数: 3

   节点 90: luvbpus is benwpus and nebjpus
      ↻ 重复节点，计数: 3

   节点 91: benwpus is daxjpus
      ↻ 重复节点，计数: 3

   节点 92: x is babgpus
      ↻ 重复节点，计数: 10

   节点 93: yexbpus is lerwpus and pazjpus
      ↻ 重复节点，计数: 4

   节点 94: daxjpus is zepdpus and wusbpus
      ↻ 重复节点，计数: 3

   节点 95: zepdpus is jadppus
      ↻ 重复节点，计数: 3

   节点 96: x is babgpus
      ↻ 重复节点，计数: 11

   节点 97: yexbpus is lerwpus and pazjpus
      ↻ 重复节点，计数: 5

   节点 98: lerwpus is yexbpus
      ↻ 重复节点，计数: 3

   节点 99: jadppus is rakmpus and yenwpus
      ↻ 重复节点，计数: 3

   节点 100: rakmpus is kinhpus
      ↻ 重复节点，计数: 3

   节点 101: rakmpus is suhqpus
      ↻ 重复节点，计数: 3

   节点 102: kinhpus is yurppus
      ↻ 重复节点，计数: 3

   节点 103: rakmpus is suhqpus
      ↻ 重复节点，计数: 4

   节点 104: suhqpus is babrpus
      ↻ 重复节点，计数: 5

   节点 105: luvbpus is benwpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: luvbpus is benwpus
      ✅ 验证成功 + LoG匹配

   节点 106: benwpus is daxjpus
      ↻ 重复节点，计数: 4

   节点 107: daxjpus is zepdpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: daxjpus is zepdpus and wusbpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: daxjpus is zepdpus and wusbpus

   节点 108: zepdpus is jadppus
      ↻ 重复节点，计数: 4

   节点 109: jadppus is rakmpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: jadppus is rakmpus and yenwpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: jadppus is rakmpus and yenwpus

   节点 110: rakmpus is suhqpus
      ↻ 重复节点，计数: 5

   节点 111: suhqpus is babrpus
      ↻ 重复节点，计数: 6

   节点 112: x is wutvpus
      ↻ 重复节点，计数: 5

   节点 113: wutvpus is degvpus
      ↻ 重复节点，计数: 4

   节点 114: degvpus is yatrpus
      ↻ 重复节点，计数: 4

   节点 115: yatrpus is getqpus
      ↻ 重复节点，计数: 4

   节点 116: getqpus is herjpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: getqpus is herjpus
      ✅ 验证成功 + LoG匹配

   节点 117: herjpus is kihlpus
      ↻ 重复节点，计数: 4

   节点 118: kihlpus is luvbpus
      ↻ 重复节点，计数: 4

   节点 119: luvbpus is benwpus
      ↻ 重复节点，计数: 2

   节点 120: benwpus is daxjpus
      ↻ 重复节点，计数: 5

   节点 121: daxjpus is zepdpus
      ↻ 重复节点，计数: 2

   节点 122: zepdpus is jadppus
      ↻ 重复节点，计数: 5

   节点 123: jadppus is rakmpus
      ↻ 重复节点，计数: 2

   节点 124: rakmpus is suhqpus
      ↻ 重复节点，计数: 6

   节点 125: suhqpus is babrpus
      ↻ 重复节点，计数: 7

   节点 126: x is babgpus
      ↻ 重复节点，计数: 12

   节点 127: x is babgpus
      ↻ 重复节点，计数: 13

   节点 128: x is babrpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is babrpus
[子树点亮]     └─ 点亮依赖节点: x is zepdpus (深度3)
[子树点亮]     └─ 点亮依赖节点: zepdpus is babrpus (深度3)
[子树点亮]     └─ 点亮依赖节点: x is luvbpus (深度4)
[子树点亮]     └─ 点亮依赖节点: luvbpus is zepdpus (深度4)
[子树点亮]     └─ 点亮依赖节点: zepdpus is babrpus and yurppus (深度4)
[子树点亮]     └─ 点亮依赖节点: x is getqpus (深度5)
[子树点亮]     └─ 点亮依赖节点: getqpus is luvbpus (深度5)
[子树点亮]     └─ 点亮依赖节点: luvbpus is zepdpus and wusbpus (深度5)
[子树点亮]     └─ 点亮依赖节点: zepdpus is rakmpus (深度5)
[子树点亮]     └─ 点亮依赖节点: rakmpus is babrpus and yurppus (深度5)
[子树点亮]     └─ 点亮依赖节点: x is degvpus (深度6)
[子树点亮]     └─ 点亮依赖节点: degvpus is getqpus (深度6)
[子树点亮]     └─ 点亮依赖节点: herjpus is luvbpus (深度6)
[子树点亮]     └─ 点亮依赖节点: benwpus is zepdpus and wusbpus (深度6)
[子树点亮]     └─ 点亮依赖节点: zepdpus is rakmpus and yenwpus (深度6)
[子树点亮]     └─ 点亮依赖节点: rakmpus is babrpus (深度6)
[子树点亮]     └─ 点亮依赖节点: rakmpus is yurppus (深度6)
[后处理]   └─ 自动点亮依赖子树: 17 个节点
      ✅ 验证成功 + LoG匹配

   节点 129: x is fadgpus
      ↻ 重复节点，计数: 5

   节点 130: fadgpus is husvpus and babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: fadgpus is kilxpus → kilxpus is husvpus and babgpus
[后处理] 基于推理轨迹点亮节点，使用了 10 个前提条件:
  - 前提: fadgpus is kilxpus
  - 前提: kilxpus is rujkpus
  - 前提: rujkpus is vezypus
  - 前提: vezypus is bicwpus
  - 前提: bicwpus is zajzpus and qabvpus
  - 前提: zajzpus is vodvpus
  - 前提: vodvpus is hopfpus
  - 前提: hopfpus is yijrpus
  - 前提: yijrpus is husvpus
  - 前提: husvpus is babgpus and hifspus

   节点 131: x is wutvpus
      ↻ 重复节点，计数: 6

   节点 132: wutvpus is babrpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: wutvpus is degvpus → degvpus is babrpus
[后处理] 基于推理轨迹点亮节点，使用了 13 个前提条件:
  - 前提: wutvpus is degvpus
  - 前提: degvpus is yatrpus
  - 前提: yatrpus is getqpus
  - 前提: getqpus is herjpus
  - 前提: herjpus is kihlpus
  - 前提: kihlpus is luvbpus
  - 前提: luvbpus is benwpus
  - 前提: benwpus is daxjpus
  - 前提: daxjpus is zepdpus
  - 前提: zepdpus is jadppus
  - 前提: jadppus is rakmpus
  - 前提: rakmpus is suhqpus
  - 前提: suhqpus is babrpus

   节点 133: x is fadgpus
      ↻ 重复节点，计数: 6

   节点 134: x is wutvpus
      ↻ 重复节点，计数: 7

   节点 135: x is babgpus and babrpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is babgpus and babrpus
      ✅ 验证成功 + LoG匹配

   节点 136: husvpus is xoqtpus and dijwpus
      ↻ 重复节点，计数: 3

   节点 137: husvpus is babgpus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 138: suhqpus is babrpus
      ↻ 重复节点，计数: 8

   节点 139: rakmpus is suhqpus
      ↻ 重复节点，计数: 7

🔍 分析推理路径完整性...

============================================================
[后处理] 处理完成
============================================================
📈 处理统计:
   - 处理的actual节点: 139
   - 新增节点: 20
   - 更新已存在节点: 119
   - 点亮的LoG节点: 36

🎯 推理质量统计:
   - 完美推理: 11 (节点正确 + 路径正确)
   - 部分推理: 7 (节点正确 + 路径部分错误)
   - 无效推理: 2 (节点错误或路径完全错误)
[LoG分析] LoG图: 36节点, 28前提, 复杂度1-28

📊 === Statement列表分析 ===
📈 节点统计:
   - 总节点数: 48
   - 前提节点: 28
   - 推理节点: 13
   - 幻觉节点: 7
   - 点亮LoG节点: 36

❌ 幻觉节点详情:
   - lerwpus is babgpus and rayspus (出现4次)
   - x is relmpus and muqcpus (出现4次)
   - lerwpus is yexbpus (出现3次)
   - yexbpus is lerwpus and pazjpus (出现5次)
   - relmpus is babgpus (出现7次)
   - babgpus is husvpus (出现1次)
   - babrpus is suhqpus (出现1次)

✅ 推理节点详情:
   🟡 x is relmpus (出现5次, 质量:partial)
      ⚠️  无效依赖: ['x is relmpus and muqcpus']
   🟡 x is babgpus (出现13次, 质量:partial)
      ⚠️  无效依赖: ['x is relmpus and muqcpus', 'relmpus is babgpus']
   🟡 x is fadgpus and wutvpus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['x is relmpus and muqcpus']
   🟡 x is husvpus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['x is relmpus and muqcpus', 'babgpus is husvpus']
   🟢 luvbpus is benwpus (出现2次, 质量:perfect)
   🟢 daxjpus is zepdpus (出现2次, 质量:perfect)
   🟢 jadppus is rakmpus (出现2次, 质量:perfect)
   🟢 getqpus is herjpus (出现1次, 质量:perfect)
   🟡 x is babrpus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['x is relmpus and muqcpus']
   🟢 fadgpus is husvpus and babgpus (出现1次, 质量:perfect)
   🟢 wutvpus is babrpus (出现1次, 质量:perfect)
   🟡 x is babgpus and babrpus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['x is relmpus and muqcpus']
   🟡 husvpus is babgpus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['relmpus is babgpus']

🔥 点亮的LoG节点:
   - luvbpus is benwpus
   - zajzpus is babgpus and xoqtpus
   - zajzpus is husvpus
   - husvpus is xoqtpus
   - rakmpus is yurppus
   - x is zepdpus
   - husvpus is babgpus and xoqtpus
   - degvpus is getqpus
   - zepdpus is babrpus
   - zepdpus is rakmpus
   - x is babrpus
   - x is babgpus
   - kilxpus is vezypus
   - luvbpus is zepdpus and wusbpus
   - x is kilxpus
   - getqpus is herjpus
   - zajzpus is hopfpus
   - x is babgpus and xoqtpus
   - x is vezypus
   - getqpus is luvbpus
   - rakmpus is babrpus and yurppus
   - x is babgpus and babrpus
   - vezypus is zajzpus and qabvpus
   - luvbpus is zepdpus
   - x is luvbpus
   - x is zajzpus
   - benwpus is zepdpus and wusbpus
   - vezypus is zajzpus
   - x is degvpus
   - hopfpus is husvpus
   - zepdpus is babrpus and yurppus
   - x is getqpus
   - rakmpus is babrpus
   - zepdpus is rakmpus and yenwpus
   - herjpus is luvbpus
   - husvpus is babgpus

============================================================
📊 计算评估指标
============================================================

🎯 计算Coverage指标...
   深度Coverage: 6/6 = 100.00%
   最深点亮节点: x is babgpus and babrpus (第6层)
   节点Coverage: 36/36 = 100.00%
   前提条件Coverage: 28/28 = 100.00%
   各推理层点亮比例:
     第1层: 16/16 = 100.00%
     第2层: 9/9 = 100.00%
     第3层: 5/5 = 100.00%
     第4层: 3/3 = 100.00%
     第5层: 2/2 = 100.00%
     第6层: 1/1 = 100.00%

🎯 计算Precision指标...
   Error Rate: 7/20 = 35.00%
   可推导节点: 13/20
   Strict Error Rate: 14/20 = 70.00%
   严格有效节点: 6/20

   详细分析:
     完美推理: 11 (55.00%)
     部分推理: 7 (35.00%)
     无效推理: 2 (10.00%)

================================================================================
处理记录 40/50
================================================================================
记录索引: 39
问题状态: correct
📁 从缓存加载提取结果: evaluation_results.LoG_6.deepseek-reasoner_record_39.json
✅ 使用缓存结果:
   - 句子数: 102
   - 提取的语句数: 161
   - 初始条件数: 30

=== Statement提取完成 ===
总句子数: 102
成功提取: 102
失败提取: 0
总statements数: 161

=== 开始清洗Statement格式 ===
原始statements数: 161
清洗后statements数: 152
过滤掉的statements数: 9
清洗后的statements:
  1. [planning] x is babgpus
  2. [actual] x is niwhpus
  3. [actual] x is niwhpus
  4. [planning] niwhpus is babgpus
  5. [actual] caxjpus is sizwpus and nusxpus
  6. [actual] xekhpus is nonwpus
  7. [actual] niwhpus is lowypus
  8. [actual] hudrpus is marppus
  9. [actual] depqpus is lemcpus
  10. [actual] reglpus is dodqpus
  11. [actual] yibvpus is vitmpus
  12. [actual] qiwhpus is reqjpus
  13. [actual] sizwpus is ladypus
  14. [actual] veyspus is reglpus and voyppus
  15. [actual] nonwpus is yibvpus
  16. [actual] kiphpus is mirhpus
  17. [actual] natcpus is depqpus and yevrpus
  18. [actual] bocxpus is qiwhpus
  19. [actual] depqpus is hudrpus
  20. [actual] zuykpus is yahhpus
  21. [actual] husvpus is veyspus and bexnpus
  22. [actual] hizppus is zuykpus
  23. [actual] lowypus is hizppus
  24. [actual] qiwhpus is caxjpus
  25. [actual] yahhpus is natcpus and pudnpus
  26. [actual] yibvpus is babgpus
  27. [actual] ladypus is husvpus and zejhpus
  28. [actual] wommpus is zoqjpus
  29. [actual] marppus is kiphpus and zudypus
  30. [actual] x is niwhpus
  31. [actual] mirhpus is wommpus
  32. [actual] dodqpus is xekhpus and dowspus
  33. [actual] wommpus is mirbpus
  34. [actual] mirbpus is bocxpus
  35. [actual] x is niwhpus
  36. [actual] niwhpus is lowypus
  37. [actual] lowypus is hizppus
  38. [actual] hizppus is zuykpus
  39. [actual] zuykpus is yahhpus
  40. [actual] yahhpus is natcpus and pudnpus
  41. [actual] yibvpus is babgpus
  42. [actual] fromnonwpus is yibvpus
  43. [actual] xekhpus is nonwpus
  44. [actual] dodqpus is xekhpus
  45. [actual] dowspus is dodqpus
  46. [actual] reglpus is dodqpus
  47. [actual] veyspus is reglpus
  48. [planning] niwhpus is yibvpus
  49. [actual] qiwhpus is caxjpus
  50. [actual] caxjpus is sizwpus
  51. [actual] sizwpus is ladypus
  52. [actual] ladypus is husvpus
  53. [actual] husvpus is veyspus
  54. [actual] veyspus is reglpus
  55. [actual] reglpus is dodqpus
  56. [actual] dodqpus is xekhpus
  57. [actual] xekhpus is nonwpus
  58. [actual] nonwpus is yibvpus
  59. [actual] yibvpus is babgpus
  60. [actual] x is niwhpus
  61. [planning] niwhpus is babgpus
  62. [actual] niwhpus is lowypus
  63. [actual] lowypus is hizppus
  64. [actual] hizppus is zuykpus
  65. [actual] zuykpus is yahhpus
  66. [actual] yahhpus is natcpus and pudnpus
  67. [actual] natcpus is depqpus and yevrpus
  68. [actual] depqpus is hudrpus
  69. [actual] hudrpus is marppus
  70. [actual] marppus is kiphpus and zudypus
  71. [actual] kiphpus is mirhpus
  72. [actual] mirhpus is wommpus
  73. [actual] wommpus is mirbpus
  74. [actual] mirbpus is bocxpus
  75. [actual] bocxpus is qiwhpus
  76. [actual] qiwhpus is babgpus
  77. [planning] niwhpus is babgpus
  78. [actual] yibvpus is babgpus
  79. [planning] niwhpus is yibvpus
  80. [planning] niwhpus is a category that is yibvpus
  81. [actual] niwhpus is lowypus
  82. [actual] lowypus is hizppus
  83. [actual] niwhpus is hizppus
  84. [actual] yahhpus is natcpus
  85. [actual] natcpus is depqpus and yevrpus
  86. [actual] yahhpus is depqpus
  87. [planning] yahhpus is depqpus
  88. [actual] yahhpus is natcpus
  89. [actual] natcpus is depqpus
  90. [actual] yahhpus is depqpus
  91. [planning] yahhpus is depqpus
  92. [actual] yahhpus is natcpus and pudnpus
  93. [actual] natcpus is depqpus
  94. [actual] yahhpus is depqpus
  95. [actual] depqpus is hudrpus
  96. [actual] yahhpus is hudrpus
  97. [actual] zuykpus is yahhpus
  98. [actual] zuykpus is depqpus
  99. [actual] lowypus is hizppus
  100. [actual] hizppus is zuykpus
  101. [actual] niwhpus is zuykpus
  102. [actual] zuykpus is yahhpus
  103. [actual] niwhpus is yahhpus
  104. [actual] yahhpus is natcpus
  105. [actual] niwhpus is natcpus
  106. [actual] natcpus is depqpus
  107. [actual] niwhpus is depqpus
  108. [actual] depqpus is hudrpus
  109. [actual] niwhpus is hudrpus
  110. [actual] hudrpus is marppus
  111. [actual] niwhpus is marppus
  112. [actual] marppus is kiphpus and zudypus
  113. [actual] niwhpus is kiphpus
  114. [actual] kiphpus is mirhpus
  115. [actual] niwhpus is mirhpus
  116. [actual] mirhpus is wommpus
  117. [actual] niwhpus is wommpus
  118. [actual] wommpus is mirbpus
  119. [planning] niwhpus is mirbpus
  120. [actual] mirbpus is bocxpus
  121. [planning] niwhpus is bocxpus
  122. [actual] bocxpus is qiwhpus
  123. [actual] niwhpus is qiwhpus
  124. [actual] qiwhpus is caxjpus
  125. [actual] niwhpus is caxjpus
  126. [actual] caxjpus is sizwpus and nusxpus
  127. [actual] niwhpus is sizwpus
  128. [actual] sizwpus is ladypus
  129. [planning] niwhpus is ladypus
  130. [actual] ladypus is husvpus and zejhpus
  131. [actual] niwhpus is husvpus
  132. [actual] husvpus is veyspus and bexnpus
  133. [actual] niwhpus is veyspus
  134. [actual] veyspus is reglpus and voyppus
  135. [actual] niwhpus is reglpus
  136. [actual] reglpus is dodqpus
  137. [actual] niwhpus is dodqpus
  138. [actual] dodqpus is xekhpus and dowspus
  139. [actual] niwhpus is xekhpus
  140. [actual] xekhpus is nonwpus
  141. [actual] niwhpus is nonwpus
  142. [actual] nonwpus is yibvpus
  143. [actual] niwhpus is yibvpus
  144. [actual] yibvpus is babgpus
  145. [actual] niwhpus is babgpus
  146. [actual] x is niwhpus
  147. [actual] x is babgpus
  148. [actual] qiwhpus is caxjpus
  149. [actual] x is niwhpus
  150. [actual] niwhpus is babgpus
  151. [actual] x is babgpus
  152. [planning] x is babgpus

=== 开始标准化和解析节点 ===
清洗后statements数: 152
标准化后节点数: 151
过滤掉的无效实体数: 1
标准化后的节点:
  1. [planning] x → babgpus (原始: x is babgpus)
  2. [actual] x → niwhpus (原始: x is niwhpus)
  3. [actual] x → niwhpus (原始: x is niwhpus)
  4. [planning] niwhpus → babgpus (原始: niwhpus is babgpus)
  5. [actual] caxjpus → sizwpus and nusxpus (原始: caxjpus is sizwpus and nusxpus)
  6. [actual] xekhpus → nonwpus (原始: xekhpus is nonwpus)
  7. [actual] niwhpus → lowypus (原始: niwhpus is lowypus)
  8. [actual] hudrpus → marppus (原始: hudrpus is marppus)
  9. [actual] depqpus → lemcpus (原始: depqpus is lemcpus)
  10. [actual] reglpus → dodqpus (原始: reglpus is dodqpus)
  11. [actual] yibvpus → vitmpus (原始: yibvpus is vitmpus)
  12. [actual] qiwhpus → reqjpus (原始: qiwhpus is reqjpus)
  13. [actual] sizwpus → ladypus (原始: sizwpus is ladypus)
  14. [actual] veyspus → reglpus and voyppus (原始: veyspus is reglpus and voyppus)
  15. [actual] nonwpus → yibvpus (原始: nonwpus is yibvpus)
  16. [actual] kiphpus → mirhpus (原始: kiphpus is mirhpus)
  17. [actual] natcpus → depqpus and yevrpus (原始: natcpus is depqpus and yevrpus)
  18. [actual] bocxpus → qiwhpus (原始: bocxpus is qiwhpus)
  19. [actual] depqpus → hudrpus (原始: depqpus is hudrpus)
  20. [actual] zuykpus → yahhpus (原始: zuykpus is yahhpus)
  21. [actual] husvpus → veyspus and bexnpus (原始: husvpus is veyspus and bexnpus)
  22. [actual] hizppus → zuykpus (原始: hizppus is zuykpus)
  23. [actual] lowypus → hizppus (原始: lowypus is hizppus)
  24. [actual] qiwhpus → caxjpus (原始: qiwhpus is caxjpus)
  25. [actual] yahhpus → natcpus and pudnpus (原始: yahhpus is natcpus and pudnpus)
  26. [actual] yibvpus → babgpus (原始: yibvpus is babgpus)
  27. [actual] ladypus → husvpus and zejhpus (原始: ladypus is husvpus and zejhpus)
  28. [actual] wommpus → zoqjpus (原始: wommpus is zoqjpus)
  29. [actual] marppus → kiphpus and zudypus (原始: marppus is kiphpus and zudypus)
  30. [actual] x → niwhpus (原始: x is niwhpus)
  31. [actual] mirhpus → wommpus (原始: mirhpus is wommpus)
  32. [actual] dodqpus → xekhpus and dowspus (原始: dodqpus is xekhpus and dowspus)
  33. [actual] wommpus → mirbpus (原始: wommpus is mirbpus)
  34. [actual] mirbpus → bocxpus (原始: mirbpus is bocxpus)
  35. [actual] x → niwhpus (原始: x is niwhpus)
  36. [actual] niwhpus → lowypus (原始: niwhpus is lowypus)
  37. [actual] lowypus → hizppus (原始: lowypus is hizppus)
  38. [actual] hizppus → zuykpus (原始: hizppus is zuykpus)
  39. [actual] zuykpus → yahhpus (原始: zuykpus is yahhpus)
  40. [actual] yahhpus → natcpus and pudnpus (原始: yahhpus is natcpus and pudnpus)
  41. [actual] yibvpus → babgpus (原始: yibvpus is babgpus)
  42. [actual] fromnonwpus → yibvpus (原始: fromnonwpus is yibvpus)
  43. [actual] xekhpus → nonwpus (原始: xekhpus is nonwpus)
  44. [actual] dodqpus → xekhpus (原始: dodqpus is xekhpus)
  45. [actual] dowspus → dodqpus (原始: dowspus is dodqpus)
  46. [actual] reglpus → dodqpus (原始: reglpus is dodqpus)
  47. [actual] veyspus → reglpus (原始: veyspus is reglpus)
  48. [planning] niwhpus → yibvpus (原始: niwhpus is yibvpus)
  49. [actual] qiwhpus → caxjpus (原始: qiwhpus is caxjpus)
  50. [actual] caxjpus → sizwpus (原始: caxjpus is sizwpus)
  51. [actual] sizwpus → ladypus (原始: sizwpus is ladypus)
  52. [actual] ladypus → husvpus (原始: ladypus is husvpus)
  53. [actual] husvpus → veyspus (原始: husvpus is veyspus)
  54. [actual] veyspus → reglpus (原始: veyspus is reglpus)
  55. [actual] reglpus → dodqpus (原始: reglpus is dodqpus)
  56. [actual] dodqpus → xekhpus (原始: dodqpus is xekhpus)
  57. [actual] xekhpus → nonwpus (原始: xekhpus is nonwpus)
  58. [actual] nonwpus → yibvpus (原始: nonwpus is yibvpus)
  59. [actual] yibvpus → babgpus (原始: yibvpus is babgpus)
  60. [actual] x → niwhpus (原始: x is niwhpus)
  61. [planning] niwhpus → babgpus (原始: niwhpus is babgpus)
  62. [actual] niwhpus → lowypus (原始: niwhpus is lowypus)
  63. [actual] lowypus → hizppus (原始: lowypus is hizppus)
  64. [actual] hizppus → zuykpus (原始: hizppus is zuykpus)
  65. [actual] zuykpus → yahhpus (原始: zuykpus is yahhpus)
  66. [actual] yahhpus → natcpus and pudnpus (原始: yahhpus is natcpus and pudnpus)
  67. [actual] natcpus → depqpus and yevrpus (原始: natcpus is depqpus and yevrpus)
  68. [actual] depqpus → hudrpus (原始: depqpus is hudrpus)
  69. [actual] hudrpus → marppus (原始: hudrpus is marppus)
  70. [actual] marppus → kiphpus and zudypus (原始: marppus is kiphpus and zudypus)
  71. [actual] kiphpus → mirhpus (原始: kiphpus is mirhpus)
  72. [actual] mirhpus → wommpus (原始: mirhpus is wommpus)
  73. [actual] wommpus → mirbpus (原始: wommpus is mirbpus)
  74. [actual] mirbpus → bocxpus (原始: mirbpus is bocxpus)
  75. [actual] bocxpus → qiwhpus (原始: bocxpus is qiwhpus)
  76. [actual] qiwhpus → babgpus (原始: qiwhpus is babgpus)
  77. [planning] niwhpus → babgpus (原始: niwhpus is babgpus)
  78. [actual] yibvpus → babgpus (原始: yibvpus is babgpus)
  79. [planning] niwhpus → yibvpus (原始: niwhpus is yibvpus)
  80. [actual] niwhpus → lowypus (原始: niwhpus is lowypus)
  81. [actual] lowypus → hizppus (原始: lowypus is hizppus)
  82. [actual] niwhpus → hizppus (原始: niwhpus is hizppus)
  83. [actual] yahhpus → natcpus (原始: yahhpus is natcpus)
  84. [actual] natcpus → depqpus and yevrpus (原始: natcpus is depqpus and yevrpus)
  85. [actual] yahhpus → depqpus (原始: yahhpus is depqpus)
  86. [planning] yahhpus → depqpus (原始: yahhpus is depqpus)
  87. [actual] yahhpus → natcpus (原始: yahhpus is natcpus)
  88. [actual] natcpus → depqpus (原始: natcpus is depqpus)
  89. [actual] yahhpus → depqpus (原始: yahhpus is depqpus)
  90. [planning] yahhpus → depqpus (原始: yahhpus is depqpus)
  91. [actual] yahhpus → natcpus and pudnpus (原始: yahhpus is natcpus and pudnpus)
  92. [actual] natcpus → depqpus (原始: natcpus is depqpus)
  93. [actual] yahhpus → depqpus (原始: yahhpus is depqpus)
  94. [actual] depqpus → hudrpus (原始: depqpus is hudrpus)
  95. [actual] yahhpus → hudrpus (原始: yahhpus is hudrpus)
  96. [actual] zuykpus → yahhpus (原始: zuykpus is yahhpus)
  97. [actual] zuykpus → depqpus (原始: zuykpus is depqpus)
  98. [actual] lowypus → hizppus (原始: lowypus is hizppus)
  99. [actual] hizppus → zuykpus (原始: hizppus is zuykpus)
  100. [actual] niwhpus → zuykpus (原始: niwhpus is zuykpus)
  101. [actual] zuykpus → yahhpus (原始: zuykpus is yahhpus)
  102. [actual] niwhpus → yahhpus (原始: niwhpus is yahhpus)
  103. [actual] yahhpus → natcpus (原始: yahhpus is natcpus)
  104. [actual] niwhpus → natcpus (原始: niwhpus is natcpus)
  105. [actual] natcpus → depqpus (原始: natcpus is depqpus)
  106. [actual] niwhpus → depqpus (原始: niwhpus is depqpus)
  107. [actual] depqpus → hudrpus (原始: depqpus is hudrpus)
  108. [actual] niwhpus → hudrpus (原始: niwhpus is hudrpus)
  109. [actual] hudrpus → marppus (原始: hudrpus is marppus)
  110. [actual] niwhpus → marppus (原始: niwhpus is marppus)
  111. [actual] marppus → kiphpus and zudypus (原始: marppus is kiphpus and zudypus)
  112. [actual] niwhpus → kiphpus (原始: niwhpus is kiphpus)
  113. [actual] kiphpus → mirhpus (原始: kiphpus is mirhpus)
  114. [actual] niwhpus → mirhpus (原始: niwhpus is mirhpus)
  115. [actual] mirhpus → wommpus (原始: mirhpus is wommpus)
  116. [actual] niwhpus → wommpus (原始: niwhpus is wommpus)
  117. [actual] wommpus → mirbpus (原始: wommpus is mirbpus)
  118. [planning] niwhpus → mirbpus (原始: niwhpus is mirbpus)
  119. [actual] mirbpus → bocxpus (原始: mirbpus is bocxpus)
  120. [planning] niwhpus → bocxpus (原始: niwhpus is bocxpus)
  121. [actual] bocxpus → qiwhpus (原始: bocxpus is qiwhpus)
  122. [actual] niwhpus → qiwhpus (原始: niwhpus is qiwhpus)
  123. [actual] qiwhpus → caxjpus (原始: qiwhpus is caxjpus)
  124. [actual] niwhpus → caxjpus (原始: niwhpus is caxjpus)
  125. [actual] caxjpus → sizwpus and nusxpus (原始: caxjpus is sizwpus and nusxpus)
  126. [actual] niwhpus → sizwpus (原始: niwhpus is sizwpus)
  127. [actual] sizwpus → ladypus (原始: sizwpus is ladypus)
  128. [planning] niwhpus → ladypus (原始: niwhpus is ladypus)
  129. [actual] ladypus → husvpus and zejhpus (原始: ladypus is husvpus and zejhpus)
  130. [actual] niwhpus → husvpus (原始: niwhpus is husvpus)
  131. [actual] husvpus → veyspus and bexnpus (原始: husvpus is veyspus and bexnpus)
  132. [actual] niwhpus → veyspus (原始: niwhpus is veyspus)
  133. [actual] veyspus → reglpus and voyppus (原始: veyspus is reglpus and voyppus)
  134. [actual] niwhpus → reglpus (原始: niwhpus is reglpus)
  135. [actual] reglpus → dodqpus (原始: reglpus is dodqpus)
  136. [actual] niwhpus → dodqpus (原始: niwhpus is dodqpus)
  137. [actual] dodqpus → xekhpus and dowspus (原始: dodqpus is xekhpus and dowspus)
  138. [actual] niwhpus → xekhpus (原始: niwhpus is xekhpus)
  139. [actual] xekhpus → nonwpus (原始: xekhpus is nonwpus)
  140. [actual] niwhpus → nonwpus (原始: niwhpus is nonwpus)
  141. [actual] nonwpus → yibvpus (原始: nonwpus is yibvpus)
  142. [actual] niwhpus → yibvpus (原始: niwhpus is yibvpus)
  143. [actual] yibvpus → babgpus (原始: yibvpus is babgpus)
  144. [actual] niwhpus → babgpus (原始: niwhpus is babgpus)
  145. [actual] x → niwhpus (原始: x is niwhpus)
  146. [actual] x → babgpus (原始: x is babgpus)
  147. [actual] qiwhpus → caxjpus (原始: qiwhpus is caxjpus)
  148. [actual] x → niwhpus (原始: x is niwhpus)
  149. [actual] niwhpus → babgpus (原始: niwhpus is babgpus)
  150. [actual] x → babgpus (原始: x is babgpus)
  151. [planning] x → babgpus (原始: x is babgpus)

开始新的后处理...
[后处理] 从LoG数据文件中获取到图数据，节点数: 41
[后处理] 加载LoG图，包含 41 个节点
  LoG节点 0: x is babgpus (规则: MP, 深度: 1)
  LoG节点 1: x is mirbpus (规则: MP, 深度: 2)
  LoG节点 2: mirbpus is babgpus (规则: MP, 深度: 2)
  LoG节点 3: x is hudrpus (规则: MP, 深度: 3)
  LoG节点 4: hudrpus is mirbpus (规则: CE, 深度: 3)
  LoG节点 5: mirbpus is husvpus (规则: MP, 深度: 3)
  LoG节点 6: husvpus is babgpus (规则: MP, 深度: 3)
  LoG节点 7: x is natcpus (规则: MP, 深度: 4)
  LoG节点 8: natcpus is hudrpus (规则: CE, 深度: 4)
  LoG节点 9: hudrpus is mirbpus and zoqjpus (规则: MP, 深度: 4)
  LoG节点 10: mirbpus is caxjpus (规则: CE, 深度: 4)
  LoG节点 11: caxjpus is husvpus (规则: CE, 深度: 4)
  LoG节点 12: husvpus is xekhpus (规则: MP, 深度: 4)
  LoG节点 13: xekhpus is babgpus (规则: CE, 深度: 4)
  LoG节点 14: x is zuykpus (规则: MP, 深度: 5)
  LoG节点 15: zuykpus is natcpus (规则: CE, 深度: 5)
  LoG节点 16: natcpus is hudrpus and lemcpus (规则: MP, 深度: 5)
  LoG节点 17: hudrpus is kiphpus (规则: CE, 深度: 5)
  LoG节点 18: kiphpus is mirbpus and zoqjpus (规则: MP, 深度: 5)
  LoG节点 19: mirbpus is caxjpus and reqjpus (规则: MP, 深度: 5)
  LoG节点 20: caxjpus is husvpus and zejhpus (规则: MP, 深度: 5)
  LoG节点 21: husvpus is reglpus (规则: MP, 深度: 5)
  LoG节点 22: reglpus is xekhpus (规则: CE, 深度: 5)
  LoG节点 23: xekhpus is babgpus and vitmpus (规则: MP, 深度: 5)
  LoG节点 24: x is lowypus (规则: MP, 深度: 6)
  LoG节点 25: lowypus is zuykpus (规则: MP, 深度: 6)
  LoG节点 26: zuykpus is natcpus and pudnpus (规则: MP, 深度: 6)
  LoG节点 27: natcpus is depqpus (规则: CE, 深度: 6)
  LoG节点 28: depqpus is hudrpus and lemcpus (规则: CI, 深度: 6)
  LoG节点 29: hudrpus is kiphpus and zudypus (规则: MP, 深度: 6)
  LoG节点 30: kiphpus is wommpus (规则: MP, 深度: 6)
  LoG节点 31: wommpus is mirbpus and zoqjpus (规则: CI, 深度: 6)
  LoG节点 32: mirbpus is qiwhpus (规则: MP, 深度: 6)
  LoG节点 33: qiwhpus is caxjpus and reqjpus (规则: CI, 深度: 6)
  LoG节点 34: caxjpus is sizwpus (规则: CE, 深度: 6)
  LoG节点 35: sizwpus is husvpus and zejhpus (规则: MP, 深度: 6)
  LoG节点 36: husvpus is veyspus (规则: CE, 深度: 6)
  LoG节点 37: veyspus is reglpus (规则: CE, 深度: 6)
  LoG节点 38: reglpus is xekhpus and dowspus (规则: MP, 深度: 6)
  LoG节点 39: xekhpus is yibvpus (规则: MP, 深度: 6)
  LoG节点 40: yibvpus is babgpus and vitmpus (规则: CI, 深度: 6)

============================================================
[后处理] 开始处理节点
============================================================
📊 初始状态:
   - 标准化节点数: 151
   - 初始条件数: 30
   - LoG图节点数: 41

📋 初始条件列表:
    1. caxjpus is sizwpus and nusxpus
    2. xekhpus is nonwpus
    3. niwhpus is lowypus
    4. hudrpus is marppus
    5. depqpus is lemcpus
    6. reglpus is dodqpus
    7. yibvpus is vitmpus
    8. qiwhpus is reqjpus
    9. sizwpus is ladypus
   10. veyspus is reglpus and voyppus
   11. nonwpus is yibvpus
   12. kiphpus is mirhpus
   13. natcpus is depqpus and yevrpus
   14. bocxpus is qiwhpus
   15. depqpus is hudrpus
   16. zuykpus is yahhpus
   17. husvpus is veyspus and bexnpus
   18. hizppus is zuykpus
   19. lowypus is hizppus
   20. qiwhpus is caxjpus
   21. yahhpus is natcpus and pudnpus
   22. yibvpus is babgpus
   23. ladypus is husvpus and zejhpus
   24. wommpus is zoqjpus
   25. marppus is kiphpus and zudypus
   26. x is niwhpus
   27. mirhpus is wommpus
   28. dodqpus is xekhpus and dowspus
   29. wommpus is mirbpus
   30. mirbpus is bocxpus

🔧 构建初始Statement列表...
✅ 初始Statement列表构建完成，包含 30 个前提节点

🔍 开始处理actual节点...

   节点 1: x is niwhpus
      ↻ 重复节点，计数: 2

   节点 2: x is niwhpus
      ↻ 重复节点，计数: 3

   节点 3: caxjpus is sizwpus and nusxpus
      ↻ 重复节点，计数: 2

   节点 4: xekhpus is nonwpus
      ↻ 重复节点，计数: 2

   节点 5: niwhpus is lowypus
      ↻ 重复节点，计数: 2

   节点 6: hudrpus is marppus
      ↻ 重复节点，计数: 2

   节点 7: depqpus is lemcpus
      ↻ 重复节点，计数: 2

   节点 8: reglpus is dodqpus
      ↻ 重复节点，计数: 2

   节点 9: yibvpus is vitmpus
      ↻ 重复节点，计数: 2

   节点 10: qiwhpus is reqjpus
      ↻ 重复节点，计数: 2

   节点 11: sizwpus is ladypus
      ↻ 重复节点，计数: 2

   节点 12: veyspus is reglpus and voyppus
      ↻ 重复节点，计数: 2

   节点 13: nonwpus is yibvpus
      ↻ 重复节点，计数: 2

   节点 14: kiphpus is mirhpus
      ↻ 重复节点，计数: 2

   节点 15: natcpus is depqpus and yevrpus
      ↻ 重复节点，计数: 2

   节点 16: bocxpus is qiwhpus
      ↻ 重复节点，计数: 2

   节点 17: depqpus is hudrpus
      ↻ 重复节点，计数: 2

   节点 18: zuykpus is yahhpus
      ↻ 重复节点，计数: 2

   节点 19: husvpus is veyspus and bexnpus
      ↻ 重复节点，计数: 2

   节点 20: hizppus is zuykpus
      ↻ 重复节点，计数: 2

   节点 21: lowypus is hizppus
      ↻ 重复节点，计数: 2

   节点 22: qiwhpus is caxjpus
      ↻ 重复节点，计数: 2

   节点 23: yahhpus is natcpus and pudnpus
      ↻ 重复节点，计数: 2

   节点 24: yibvpus is babgpus
      ↻ 重复节点，计数: 2

   节点 25: ladypus is husvpus and zejhpus
      ↻ 重复节点，计数: 2

   节点 26: wommpus is zoqjpus
      ↻ 重复节点，计数: 2

   节点 27: marppus is kiphpus and zudypus
      ↻ 重复节点，计数: 2

   节点 28: x is niwhpus
      ↻ 重复节点，计数: 4

   节点 29: mirhpus is wommpus
      ↻ 重复节点，计数: 2

   节点 30: dodqpus is xekhpus and dowspus
      ↻ 重复节点，计数: 2

   节点 31: wommpus is mirbpus
      ↻ 重复节点，计数: 2

   节点 32: mirbpus is bocxpus
      ↻ 重复节点，计数: 2

   节点 33: x is niwhpus
      ↻ 重复节点，计数: 5

   节点 34: niwhpus is lowypus
      ↻ 重复节点，计数: 3

   节点 35: lowypus is hizppus
      ↻ 重复节点，计数: 3

   节点 36: hizppus is zuykpus
      ↻ 重复节点，计数: 3

   节点 37: zuykpus is yahhpus
      ↻ 重复节点，计数: 3

   节点 38: yahhpus is natcpus and pudnpus
      ↻ 重复节点，计数: 3

   节点 39: yibvpus is babgpus
      ↻ 重复节点，计数: 3

   节点 40: fromnonwpus is yibvpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 41: xekhpus is nonwpus
      ↻ 重复节点，计数: 3

   节点 42: dodqpus is xekhpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: dodqpus is xekhpus and dowspus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: dodqpus is xekhpus and dowspus

   节点 43: dowspus is dodqpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 44: reglpus is dodqpus
      ↻ 重复节点，计数: 3

   节点 45: veyspus is reglpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: veyspus is reglpus
      ✅ 验证成功 + LoG匹配

   节点 46: qiwhpus is caxjpus
      ↻ 重复节点，计数: 3

   节点 47: caxjpus is sizwpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: caxjpus is sizwpus
      ✅ 验证成功 + LoG匹配

   节点 48: sizwpus is ladypus
      ↻ 重复节点，计数: 3

   节点 49: ladypus is husvpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: ladypus is husvpus and zejhpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: ladypus is husvpus and zejhpus

   节点 50: husvpus is veyspus
      🔍 验证新节点...
[后处理] 点亮LoG节点: husvpus is veyspus
      ✅ 验证成功 + LoG匹配

   节点 51: veyspus is reglpus
      ↻ 重复节点，计数: 2

   节点 52: reglpus is dodqpus
      ↻ 重复节点，计数: 4

   节点 53: dodqpus is xekhpus
      ↻ 重复节点，计数: 2

   节点 54: xekhpus is nonwpus
      ↻ 重复节点，计数: 4

   节点 55: nonwpus is yibvpus
      ↻ 重复节点，计数: 3

   节点 56: yibvpus is babgpus
      ↻ 重复节点，计数: 4

   节点 57: x is niwhpus
      ↻ 重复节点，计数: 6

   节点 58: niwhpus is lowypus
      ↻ 重复节点，计数: 4

   节点 59: lowypus is hizppus
      ↻ 重复节点，计数: 4

   节点 60: hizppus is zuykpus
      ↻ 重复节点，计数: 4

   节点 61: zuykpus is yahhpus
      ↻ 重复节点，计数: 4

   节点 62: yahhpus is natcpus and pudnpus
      ↻ 重复节点，计数: 4

   节点 63: natcpus is depqpus and yevrpus
      ↻ 重复节点，计数: 3

   节点 64: depqpus is hudrpus
      ↻ 重复节点，计数: 3

   节点 65: hudrpus is marppus
      ↻ 重复节点，计数: 3

   节点 66: marppus is kiphpus and zudypus
      ↻ 重复节点，计数: 3

   节点 67: kiphpus is mirhpus
      ↻ 重复节点，计数: 3

   节点 68: mirhpus is wommpus
      ↻ 重复节点，计数: 3

   节点 69: wommpus is mirbpus
      ↻ 重复节点，计数: 3

   节点 70: mirbpus is bocxpus
      ↻ 重复节点，计数: 3

   节点 71: bocxpus is qiwhpus
      ↻ 重复节点，计数: 3

   节点 72: qiwhpus is babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: qiwhpus is caxjpus → caxjpus is babgpus
[后处理] 基于推理轨迹点亮节点，使用了 11 个前提条件:
  - 前提: qiwhpus is caxjpus
  - 前提: caxjpus is sizwpus
  - 前提: sizwpus is ladypus
  - 前提: ladypus is husvpus
  - 前提: husvpus is veyspus
  - 前提: veyspus is reglpus
  - 前提: reglpus is dodqpus
  - 前提: dodqpus is xekhpus
  - 前提: xekhpus is nonwpus
  - 前提: nonwpus is yibvpus
  - 前提: yibvpus is babgpus
  ✓ 点亮LoG节点: husvpus is babgpus
[子树点亮]     └─ 点亮依赖节点: husvpus is xekhpus (深度4)
[子树点亮]     └─ 点亮依赖节点: xekhpus is babgpus (深度4)
[子树点亮]     └─ 点亮依赖节点: husvpus is reglpus (深度5)
[子树点亮]     └─ 点亮依赖节点: reglpus is xekhpus (深度5)
[子树点亮]     └─ 点亮依赖节点: xekhpus is babgpus and vitmpus (深度5)
[子树点亮]     └─ 点亮依赖节点: reglpus is xekhpus and dowspus (深度6)
[子树点亮]     └─ 点亮依赖节点: xekhpus is yibvpus (深度6)
[子树点亮]     └─ 点亮依赖节点: yibvpus is babgpus and vitmpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 8 个节点
  ✓ 点亮LoG节点: caxjpus is husvpus
[子树点亮]     └─ 点亮依赖节点: caxjpus is husvpus and zejhpus (深度5)
[子树点亮]     └─ 点亮依赖节点: sizwpus is husvpus and zejhpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 2 个节点
[后处理] 通过推理轨迹额外点亮了 2 个LoG节点

   节点 73: yibvpus is babgpus
      ↻ 重复节点，计数: 5

   节点 74: niwhpus is lowypus
      ↻ 重复节点，计数: 5

   节点 75: lowypus is hizppus
      ↻ 重复节点，计数: 5

   节点 76: niwhpus is hizppus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: niwhpus is lowypus → lowypus is hizppus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: niwhpus is lowypus
  - 前提: lowypus is hizppus

   节点 77: yahhpus is natcpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: yahhpus is natcpus and pudnpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: yahhpus is natcpus and pudnpus

   节点 78: natcpus is depqpus and yevrpus
      ↻ 重复节点，计数: 4

   节点 79: yahhpus is depqpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: yahhpus is natcpus → natcpus is depqpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: yahhpus is natcpus
  - 前提: natcpus is depqpus and yevrpus
  ✓ 点亮LoG节点: natcpus is depqpus
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 80: yahhpus is natcpus
      ↻ 重复节点，计数: 2

   节点 81: natcpus is depqpus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 82: yahhpus is depqpus
      ↻ 重复节点，计数: 2

   节点 83: yahhpus is natcpus and pudnpus
      ↻ 重复节点，计数: 5

   节点 84: natcpus is depqpus
      ↻ 重复节点，计数: 2

   节点 85: yahhpus is depqpus
      ↻ 重复节点，计数: 3

   节点 86: depqpus is hudrpus
      ↻ 重复节点，计数: 4

   节点 87: yahhpus is hudrpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: yahhpus is natcpus → natcpus is hudrpus
[后处理] 基于推理轨迹点亮节点，使用了 3 个前提条件:
  - 前提: yahhpus is natcpus
  - 前提: natcpus is depqpus
  - 前提: depqpus is hudrpus
  ✓ 点亮LoG节点: natcpus is hudrpus
[子树点亮]     └─ 点亮依赖节点: natcpus is hudrpus and lemcpus (深度5)
[子树点亮]     └─ 点亮依赖节点: depqpus is hudrpus and lemcpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 2 个节点
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 88: zuykpus is yahhpus
      ↻ 重复节点，计数: 5

   节点 89: zuykpus is depqpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: zuykpus is yahhpus → yahhpus is depqpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: zuykpus is yahhpus
  - 前提: yahhpus is depqpus

   节点 90: lowypus is hizppus
      ↻ 重复节点，计数: 6

   节点 91: hizppus is zuykpus
      ↻ 重复节点，计数: 5

   节点 92: niwhpus is zuykpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: niwhpus is lowypus → lowypus is zuykpus
[后处理] 基于推理轨迹点亮节点，使用了 3 个前提条件:
  - 前提: niwhpus is lowypus
  - 前提: lowypus is hizppus
  - 前提: hizppus is zuykpus
  ✓ 点亮LoG节点: lowypus is zuykpus
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 93: zuykpus is yahhpus
      ↻ 重复节点，计数: 6

   节点 94: niwhpus is yahhpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: niwhpus is lowypus → lowypus is yahhpus
[后处理] 基于推理轨迹点亮节点，使用了 4 个前提条件:
  - 前提: niwhpus is lowypus
  - 前提: lowypus is hizppus
  - 前提: hizppus is zuykpus
  - 前提: zuykpus is yahhpus

   节点 95: yahhpus is natcpus
      ↻ 重复节点，计数: 3

   节点 96: niwhpus is natcpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: niwhpus is lowypus → lowypus is natcpus
[后处理] 基于推理轨迹点亮节点，使用了 5 个前提条件:
  - 前提: niwhpus is lowypus
  - 前提: lowypus is hizppus
  - 前提: hizppus is zuykpus
  - 前提: zuykpus is yahhpus
  - 前提: yahhpus is natcpus
  ✓ 点亮LoG节点: zuykpus is natcpus
[子树点亮]     └─ 点亮依赖节点: zuykpus is natcpus and pudnpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 1 个节点
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 97: natcpus is depqpus
      ↻ 重复节点，计数: 3

   节点 98: niwhpus is depqpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: niwhpus is lowypus → lowypus is depqpus
[后处理] 基于推理轨迹点亮节点，使用了 4 个前提条件:
  - 前提: niwhpus is lowypus
  - 前提: lowypus is hizppus
  - 前提: hizppus is zuykpus
  - 前提: zuykpus is depqpus

   节点 99: depqpus is hudrpus
      ↻ 重复节点，计数: 5

   节点 100: niwhpus is hudrpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: niwhpus is lowypus → lowypus is hudrpus
[后处理] 基于推理轨迹点亮节点，使用了 5 个前提条件:
  - 前提: niwhpus is lowypus
  - 前提: lowypus is hizppus
  - 前提: hizppus is zuykpus
  - 前提: zuykpus is yahhpus
  - 前提: yahhpus is hudrpus

   节点 101: hudrpus is marppus
      ↻ 重复节点，计数: 4

   节点 102: niwhpus is marppus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: niwhpus is lowypus → lowypus is marppus
[后处理] 基于推理轨迹点亮节点，使用了 8 个前提条件:
  - 前提: niwhpus is lowypus
  - 前提: lowypus is hizppus
  - 前提: hizppus is zuykpus
  - 前提: zuykpus is yahhpus
  - 前提: yahhpus is natcpus
  - 前提: natcpus is depqpus
  - 前提: depqpus is hudrpus
  - 前提: hudrpus is marppus

   节点 103: marppus is kiphpus and zudypus
      ↻ 重复节点，计数: 4

   节点 104: niwhpus is kiphpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: niwhpus is lowypus → lowypus is kiphpus
[后处理] 基于推理轨迹点亮节点，使用了 9 个前提条件:
  - 前提: niwhpus is lowypus
  - 前提: lowypus is hizppus
  - 前提: hizppus is zuykpus
  - 前提: zuykpus is yahhpus
  - 前提: yahhpus is natcpus
  - 前提: natcpus is depqpus
  - 前提: depqpus is hudrpus
  - 前提: hudrpus is marppus
  - 前提: marppus is kiphpus and zudypus
  ✓ 点亮LoG节点: hudrpus is kiphpus
[子树点亮]     └─ 点亮依赖节点: hudrpus is kiphpus and zudypus (深度6)
[后处理]   └─ 自动点亮依赖子树: 1 个节点
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 105: kiphpus is mirhpus
      ↻ 重复节点，计数: 4

   节点 106: niwhpus is mirhpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: niwhpus is lowypus → lowypus is mirhpus
[后处理] 基于推理轨迹点亮节点，使用了 10 个前提条件:
  - 前提: niwhpus is lowypus
  - 前提: lowypus is hizppus
  - 前提: hizppus is zuykpus
  - 前提: zuykpus is yahhpus
  - 前提: yahhpus is natcpus
  - 前提: natcpus is depqpus
  - 前提: depqpus is hudrpus
  - 前提: hudrpus is marppus
  - 前提: marppus is kiphpus and zudypus
  - 前提: kiphpus is mirhpus

   节点 107: mirhpus is wommpus
      ↻ 重复节点，计数: 4

   节点 108: niwhpus is wommpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: niwhpus is lowypus → lowypus is wommpus
[后处理] 基于推理轨迹点亮节点，使用了 11 个前提条件:
  - 前提: niwhpus is lowypus
  - 前提: lowypus is hizppus
  - 前提: hizppus is zuykpus
  - 前提: zuykpus is yahhpus
  - 前提: yahhpus is natcpus
  - 前提: natcpus is depqpus
  - 前提: depqpus is hudrpus
  - 前提: hudrpus is marppus
  - 前提: marppus is kiphpus and zudypus
  - 前提: kiphpus is mirhpus
  - 前提: mirhpus is wommpus
  ✓ 点亮LoG节点: kiphpus is wommpus
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 109: wommpus is mirbpus
      ↻ 重复节点，计数: 4

   节点 110: mirbpus is bocxpus
      ↻ 重复节点，计数: 4

   节点 111: bocxpus is qiwhpus
      ↻ 重复节点，计数: 4

   节点 112: niwhpus is qiwhpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: niwhpus is lowypus → lowypus is qiwhpus
[后处理] 基于推理轨迹点亮节点，使用了 14 个前提条件:
  - 前提: niwhpus is lowypus
  - 前提: lowypus is hizppus
  - 前提: hizppus is zuykpus
  - 前提: zuykpus is yahhpus
  - 前提: yahhpus is natcpus
  - 前提: natcpus is depqpus
  - 前提: depqpus is hudrpus
  - 前提: hudrpus is marppus
  - 前提: marppus is kiphpus and zudypus
  - 前提: kiphpus is mirhpus
  - 前提: mirhpus is wommpus
  - 前提: wommpus is mirbpus
  - 前提: mirbpus is bocxpus
  - 前提: bocxpus is qiwhpus
  ✓ 点亮LoG节点: hudrpus is mirbpus
[子树点亮]     └─ 点亮依赖节点: hudrpus is mirbpus and zoqjpus (深度4)
[子树点亮]     └─ 点亮依赖节点: kiphpus is mirbpus and zoqjpus (深度5)
[子树点亮]     └─ 点亮依赖节点: wommpus is mirbpus and zoqjpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 3 个节点
  ✓ 点亮LoG节点: mirbpus is qiwhpus
[后处理] 通过推理轨迹额外点亮了 2 个LoG节点

   节点 113: qiwhpus is caxjpus
      ↻ 重复节点，计数: 4

   节点 114: niwhpus is caxjpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: niwhpus is lowypus → lowypus is caxjpus
[后处理] 基于推理轨迹点亮节点，使用了 15 个前提条件:
  - 前提: niwhpus is lowypus
  - 前提: lowypus is hizppus
  - 前提: hizppus is zuykpus
  - 前提: zuykpus is yahhpus
  - 前提: yahhpus is natcpus
  - 前提: natcpus is depqpus
  - 前提: depqpus is hudrpus
  - 前提: hudrpus is marppus
  - 前提: marppus is kiphpus and zudypus
  - 前提: kiphpus is mirhpus
  - 前提: mirhpus is wommpus
  - 前提: wommpus is mirbpus
  - 前提: mirbpus is bocxpus
  - 前提: bocxpus is qiwhpus
  - 前提: qiwhpus is caxjpus
  ✓ 点亮LoG节点: mirbpus is caxjpus
[子树点亮]     └─ 点亮依赖节点: mirbpus is caxjpus and reqjpus (深度5)
[子树点亮]     └─ 点亮依赖节点: qiwhpus is caxjpus and reqjpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 2 个节点
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 115: caxjpus is sizwpus and nusxpus
      ↻ 重复节点，计数: 3

   节点 116: niwhpus is sizwpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: niwhpus is lowypus → lowypus is sizwpus
[后处理] 基于推理轨迹点亮节点，使用了 16 个前提条件:
  - 前提: niwhpus is lowypus
  - 前提: lowypus is hizppus
  - 前提: hizppus is zuykpus
  - 前提: zuykpus is yahhpus
  - 前提: yahhpus is natcpus
  - 前提: natcpus is depqpus
  - 前提: depqpus is hudrpus
  - 前提: hudrpus is marppus
  - 前提: marppus is kiphpus and zudypus
  - 前提: kiphpus is mirhpus
  - 前提: mirhpus is wommpus
  - 前提: wommpus is mirbpus
  - 前提: mirbpus is bocxpus
  - 前提: bocxpus is qiwhpus
  - 前提: qiwhpus is caxjpus
  - 前提: caxjpus is sizwpus

   节点 117: sizwpus is ladypus
      ↻ 重复节点，计数: 4

   节点 118: ladypus is husvpus and zejhpus
      ↻ 重复节点，计数: 3

   节点 119: niwhpus is husvpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: niwhpus is lowypus → lowypus is husvpus
[后处理] 基于推理轨迹点亮节点，使用了 18 个前提条件:
  - 前提: niwhpus is lowypus
  - 前提: lowypus is hizppus
  - 前提: hizppus is zuykpus
  - 前提: zuykpus is yahhpus
  - 前提: yahhpus is natcpus
  - 前提: natcpus is depqpus
  - 前提: depqpus is hudrpus
  - 前提: hudrpus is marppus
  - 前提: marppus is kiphpus and zudypus
  - 前提: kiphpus is mirhpus
  - 前提: mirhpus is wommpus
  - 前提: wommpus is mirbpus
  - 前提: mirbpus is bocxpus
  - 前提: bocxpus is qiwhpus
  - 前提: qiwhpus is caxjpus
  - 前提: caxjpus is sizwpus
  - 前提: sizwpus is ladypus
  - 前提: ladypus is husvpus
  ✓ 点亮LoG节点: mirbpus is husvpus
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 120: husvpus is veyspus and bexnpus
      ↻ 重复节点，计数: 3

   节点 121: niwhpus is veyspus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: niwhpus is lowypus → lowypus is veyspus
[后处理] 基于推理轨迹点亮节点，使用了 19 个前提条件:
  - 前提: niwhpus is lowypus
  - 前提: lowypus is hizppus
  - 前提: hizppus is zuykpus
  - 前提: zuykpus is yahhpus
  - 前提: yahhpus is natcpus
  - 前提: natcpus is depqpus
  - 前提: depqpus is hudrpus
  - 前提: hudrpus is marppus
  - 前提: marppus is kiphpus and zudypus
  - 前提: kiphpus is mirhpus
  - 前提: mirhpus is wommpus
  - 前提: wommpus is mirbpus
  - 前提: mirbpus is bocxpus
  - 前提: bocxpus is qiwhpus
  - 前提: qiwhpus is caxjpus
  - 前提: caxjpus is sizwpus
  - 前提: sizwpus is ladypus
  - 前提: ladypus is husvpus
  - 前提: husvpus is veyspus

   节点 122: veyspus is reglpus and voyppus
      ↻ 重复节点，计数: 3

   节点 123: niwhpus is reglpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: niwhpus is lowypus → lowypus is reglpus
[后处理] 基于推理轨迹点亮节点，使用了 20 个前提条件:
  - 前提: niwhpus is lowypus
  - 前提: lowypus is hizppus
  - 前提: hizppus is zuykpus
  - 前提: zuykpus is yahhpus
  - 前提: yahhpus is natcpus
  - 前提: natcpus is depqpus
  - 前提: depqpus is hudrpus
  - 前提: hudrpus is marppus
  - 前提: marppus is kiphpus and zudypus
  - 前提: kiphpus is mirhpus
  - 前提: mirhpus is wommpus
  - 前提: wommpus is mirbpus
  - 前提: mirbpus is bocxpus
  - 前提: bocxpus is qiwhpus
  - 前提: qiwhpus is caxjpus
  - 前提: caxjpus is sizwpus
  - 前提: sizwpus is ladypus
  - 前提: ladypus is husvpus
  - 前提: husvpus is veyspus
  - 前提: veyspus is reglpus

   节点 124: reglpus is dodqpus
      ↻ 重复节点，计数: 5

   节点 125: niwhpus is dodqpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: niwhpus is lowypus → lowypus is dodqpus
[后处理] 基于推理轨迹点亮节点，使用了 21 个前提条件:
  - 前提: niwhpus is lowypus
  - 前提: lowypus is hizppus
  - 前提: hizppus is zuykpus
  - 前提: zuykpus is yahhpus
  - 前提: yahhpus is natcpus
  - 前提: natcpus is depqpus
  - 前提: depqpus is hudrpus
  - 前提: hudrpus is marppus
  - 前提: marppus is kiphpus and zudypus
  - 前提: kiphpus is mirhpus
  - 前提: mirhpus is wommpus
  - 前提: wommpus is mirbpus
  - 前提: mirbpus is bocxpus
  - 前提: bocxpus is qiwhpus
  - 前提: qiwhpus is caxjpus
  - 前提: caxjpus is sizwpus
  - 前提: sizwpus is ladypus
  - 前提: ladypus is husvpus
  - 前提: husvpus is veyspus
  - 前提: veyspus is reglpus
  - 前提: reglpus is dodqpus

   节点 126: dodqpus is xekhpus and dowspus
      ↻ 重复节点，计数: 3

   节点 127: niwhpus is xekhpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: niwhpus is lowypus → lowypus is xekhpus
[后处理] 基于推理轨迹点亮节点，使用了 22 个前提条件:
  - 前提: niwhpus is lowypus
  - 前提: lowypus is hizppus
  - 前提: hizppus is zuykpus
  - 前提: zuykpus is yahhpus
  - 前提: yahhpus is natcpus
  - 前提: natcpus is depqpus
  - 前提: depqpus is hudrpus
  - 前提: hudrpus is marppus
  - 前提: marppus is kiphpus and zudypus
  - 前提: kiphpus is mirhpus
  - 前提: mirhpus is wommpus
  - 前提: wommpus is mirbpus
  - 前提: mirbpus is bocxpus
  - 前提: bocxpus is qiwhpus
  - 前提: qiwhpus is caxjpus
  - 前提: caxjpus is sizwpus
  - 前提: sizwpus is ladypus
  - 前提: ladypus is husvpus
  - 前提: husvpus is veyspus
  - 前提: veyspus is reglpus
  - 前提: reglpus is dodqpus
  - 前提: dodqpus is xekhpus

   节点 128: xekhpus is nonwpus
      ↻ 重复节点，计数: 5

   节点 129: niwhpus is nonwpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: niwhpus is lowypus → lowypus is nonwpus
[后处理] 基于推理轨迹点亮节点，使用了 23 个前提条件:
  - 前提: niwhpus is lowypus
  - 前提: lowypus is hizppus
  - 前提: hizppus is zuykpus
  - 前提: zuykpus is yahhpus
  - 前提: yahhpus is natcpus
  - 前提: natcpus is depqpus
  - 前提: depqpus is hudrpus
  - 前提: hudrpus is marppus
  - 前提: marppus is kiphpus and zudypus
  - 前提: kiphpus is mirhpus
  - 前提: mirhpus is wommpus
  - 前提: wommpus is mirbpus
  - 前提: mirbpus is bocxpus
  - 前提: bocxpus is qiwhpus
  - 前提: qiwhpus is caxjpus
  - 前提: caxjpus is sizwpus
  - 前提: sizwpus is ladypus
  - 前提: ladypus is husvpus
  - 前提: husvpus is veyspus
  - 前提: veyspus is reglpus
  - 前提: reglpus is dodqpus
  - 前提: dodqpus is xekhpus
  - 前提: xekhpus is nonwpus

   节点 130: nonwpus is yibvpus
      ↻ 重复节点，计数: 4

   节点 131: niwhpus is yibvpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: niwhpus is lowypus → lowypus is yibvpus
[后处理] 基于推理轨迹点亮节点，使用了 24 个前提条件:
  - 前提: niwhpus is lowypus
  - 前提: lowypus is hizppus
  - 前提: hizppus is zuykpus
  - 前提: zuykpus is yahhpus
  - 前提: yahhpus is natcpus
  - 前提: natcpus is depqpus
  - 前提: depqpus is hudrpus
  - 前提: hudrpus is marppus
  - 前提: marppus is kiphpus and zudypus
  - 前提: kiphpus is mirhpus
  - 前提: mirhpus is wommpus
  - 前提: wommpus is mirbpus
  - 前提: mirbpus is bocxpus
  - 前提: bocxpus is qiwhpus
  - 前提: qiwhpus is caxjpus
  - 前提: caxjpus is sizwpus
  - 前提: sizwpus is ladypus
  - 前提: ladypus is husvpus
  - 前提: husvpus is veyspus
  - 前提: veyspus is reglpus
  - 前提: reglpus is dodqpus
  - 前提: dodqpus is xekhpus
  - 前提: xekhpus is nonwpus
  - 前提: nonwpus is yibvpus

   节点 132: yibvpus is babgpus
      ↻ 重复节点，计数: 6

   节点 133: niwhpus is babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: niwhpus is lowypus → lowypus is babgpus
[后处理] 基于推理轨迹点亮节点，使用了 15 个前提条件:
  - 前提: niwhpus is lowypus
  - 前提: lowypus is hizppus
  - 前提: hizppus is zuykpus
  - 前提: zuykpus is yahhpus
  - 前提: yahhpus is natcpus
  - 前提: natcpus is depqpus
  - 前提: depqpus is hudrpus
  - 前提: hudrpus is marppus
  - 前提: marppus is kiphpus and zudypus
  - 前提: kiphpus is mirhpus
  - 前提: mirhpus is wommpus
  - 前提: wommpus is mirbpus
  - 前提: mirbpus is bocxpus
  - 前提: bocxpus is qiwhpus
  - 前提: qiwhpus is babgpus
  ✓ 点亮LoG节点: mirbpus is babgpus
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 134: x is niwhpus
      ↻ 重复节点，计数: 7

   节点 135: x is babgpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is babgpus
[子树点亮]     └─ 点亮依赖节点: x is mirbpus (深度2)
[子树点亮]     └─ 点亮依赖节点: x is hudrpus (深度3)
[子树点亮]     └─ 点亮依赖节点: x is natcpus (深度4)
[子树点亮]     └─ 点亮依赖节点: x is zuykpus (深度5)
[子树点亮]     └─ 点亮依赖节点: x is lowypus (深度6)
[后处理]   └─ 自动点亮依赖子树: 5 个节点
      ✅ 验证成功 + LoG匹配

   节点 136: qiwhpus is caxjpus
      ↻ 重复节点，计数: 5

   节点 137: x is niwhpus
      ↻ 重复节点，计数: 8

   节点 138: niwhpus is babgpus
      ↻ 重复节点，计数: 2

   节点 139: x is babgpus
      ↻ 重复节点，计数: 2

🔍 分析推理路径完整性...

============================================================
[后处理] 处理完成
============================================================
📈 处理统计:
   - 处理的actual节点: 139
   - 新增节点: 35
   - 更新已存在节点: 104
   - 点亮的LoG节点: 41

🎯 推理质量统计:
   - 完美推理: 33 (节点正确 + 路径正确)
   - 部分推理: 2 (节点正确 + 路径部分错误)
   - 无效推理: 0 (节点错误或路径完全错误)
[LoG分析] LoG图: 41节点, 30前提, 复杂度1-30

📊 === Statement列表分析 ===
📈 节点统计:
   - 总节点数: 65
   - 前提节点: 30
   - 推理节点: 33
   - 幻觉节点: 2
   - 点亮LoG节点: 41

❌ 幻觉节点详情:
   - fromnonwpus is yibvpus (出现1次)
   - dowspus is dodqpus (出现1次)

✅ 推理节点详情:
   🟢 dodqpus is xekhpus (出现2次, 质量:perfect)
   🟢 veyspus is reglpus (出现2次, 质量:perfect)
   🟢 caxjpus is sizwpus (出现1次, 质量:perfect)
   🟢 ladypus is husvpus (出现1次, 质量:perfect)
   🟢 husvpus is veyspus (出现1次, 质量:perfect)
   🟢 qiwhpus is babgpus (出现1次, 质量:perfect)
   🟢 niwhpus is hizppus (出现1次, 质量:perfect)
   🟢 yahhpus is natcpus (出现3次, 质量:perfect)
   🟢 yahhpus is depqpus (出现3次, 质量:perfect)
   🟢 natcpus is depqpus (出现3次, 质量:perfect)
   🟢 yahhpus is hudrpus (出现1次, 质量:perfect)
   🟢 zuykpus is depqpus (出现1次, 质量:perfect)
   🟢 niwhpus is zuykpus (出现1次, 质量:perfect)
   🟢 niwhpus is yahhpus (出现1次, 质量:perfect)
   🟢 niwhpus is natcpus (出现1次, 质量:perfect)
   🟢 niwhpus is depqpus (出现1次, 质量:perfect)
   🟢 niwhpus is hudrpus (出现1次, 质量:perfect)
   🟢 niwhpus is marppus (出现1次, 质量:perfect)
   🟢 niwhpus is kiphpus (出现1次, 质量:perfect)
   🟢 niwhpus is mirhpus (出现1次, 质量:perfect)
   🟢 niwhpus is wommpus (出现1次, 质量:perfect)
   🟢 niwhpus is qiwhpus (出现1次, 质量:perfect)
   🟢 niwhpus is caxjpus (出现1次, 质量:perfect)
   🟢 niwhpus is sizwpus (出现1次, 质量:perfect)
   🟢 niwhpus is husvpus (出现1次, 质量:perfect)
   🟢 niwhpus is veyspus (出现1次, 质量:perfect)
   🟢 niwhpus is reglpus (出现1次, 质量:perfect)
   🟡 niwhpus is dodqpus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['dowspus is dodqpus']
   🟢 niwhpus is xekhpus (出现1次, 质量:perfect)
   🟢 niwhpus is nonwpus (出现1次, 质量:perfect)
   🟡 niwhpus is yibvpus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['fromnonwpus is yibvpus']
   🟢 niwhpus is babgpus (出现2次, 质量:perfect)
   🟢 x is babgpus (出现2次, 质量:perfect)

🔥 点亮的LoG节点:
   - hudrpus is mirbpus
   - mirbpus is babgpus
   - qiwhpus is caxjpus and reqjpus
   - mirbpus is caxjpus and reqjpus
   - wommpus is mirbpus and zoqjpus
   - natcpus is hudrpus and lemcpus
   - hudrpus is mirbpus and zoqjpus
   - husvpus is reglpus
   - hudrpus is kiphpus
   - mirbpus is caxjpus
   - x is natcpus
   - reglpus is xekhpus
   - x is babgpus
   - mirbpus is husvpus
   - x is lowypus
   - kiphpus is mirbpus and zoqjpus
   - caxjpus is sizwpus
   - xekhpus is babgpus
   - xekhpus is yibvpus
   - zuykpus is natcpus and pudnpus
   - x is hudrpus
   - husvpus is veyspus
   - kiphpus is wommpus
   - caxjpus is husvpus and zejhpus
   - natcpus is hudrpus
   - x is mirbpus
   - x is zuykpus
   - hudrpus is kiphpus and zudypus
   - mirbpus is qiwhpus
   - caxjpus is husvpus
   - xekhpus is babgpus and vitmpus
   - depqpus is hudrpus and lemcpus
   - sizwpus is husvpus and zejhpus
   - reglpus is xekhpus and dowspus
   - yibvpus is babgpus and vitmpus
   - lowypus is zuykpus
   - veyspus is reglpus
   - husvpus is xekhpus
   - zuykpus is natcpus
   - husvpus is babgpus
   - natcpus is depqpus

============================================================
📊 计算评估指标
============================================================

🎯 计算Coverage指标...
   深度Coverage: 6/6 = 100.00%
   最深点亮节点: x is babgpus (第6层)
   节点Coverage: 41/41 = 100.00%
   前提条件Coverage: 30/30 = 100.00%
   各推理层点亮比例:
     第1层: 17/17 = 100.00%
     第2层: 10/10 = 100.00%
     第3层: 7/7 = 100.00%
     第4层: 4/4 = 100.00%
     第5层: 2/2 = 100.00%
     第6层: 1/1 = 100.00%

🎯 计算Precision指标...
   Error Rate: 2/35 = 5.71%
   可推导节点: 33/35
   Strict Error Rate: 4/35 = 11.43%
   严格有效节点: 31/35

   详细分析:
     完美推理: 33 (94.29%)
     部分推理: 2 (5.71%)
     无效推理: 0 (0.00%)

================================================================================
处理记录 41/50
================================================================================
记录索引: 40
问题状态: correct
📁 从缓存加载提取结果: evaluation_results.LoG_6.deepseek-reasoner_record_40.json
✅ 使用缓存结果:
   - 句子数: 61
   - 提取的语句数: 80
   - 初始条件数: 19

=== Statement提取完成 ===
总句子数: 61
成功提取: 61
失败提取: 0
总statements数: 80

=== 开始清洗Statement格式 ===
原始statements数: 80
清洗后statements数: 80
过滤掉的statements数: 0

=== 开始标准化和解析节点 ===
清洗后statements数: 80
标准化后节点数: 79
过滤掉的无效实体数: 1
标准化后的节点:
  1. [planning] x → babgpus (原始: x is babgpus)
  2. [planning] x → babrpus (原始: x is babrpus)
  3. [actual] x → verjpus (原始: x is verjpus)
  4. [actual] x → verjpus (原始: x is verjpus)
  5. [actual] verjpus → huybpus and wuzwpus (原始: verjpus is huybpus and wuzwpus)
  6. [actual] x → huybpus and wuzwpus (原始: x is huybpus and wuzwpus)
  7. [planning] x → babgpus (原始: x is babgpus)
  8. [actual] babgpus → fexhpus (原始: babgpus is fexhpus)
  9. [actual] fexhpus → babgpus (原始: fexhpus is babgpus)
  10. [planning] x → fexhpus (原始: x is fexhpus)
  11. [actual] kafppus → kuxspus and domkpus (原始: kafppus is kuxspus and domkpus)
  12. [actual] hawypus → nemlpus (原始: hawypus is nemlpus)
  13. [actual] kuxspus → peqppus (原始: kuxspus is peqppus)
  14. [actual] kabqpus → jizspus and vewbpus (原始: kabqpus is jizspus and vewbpus)
  15. [actual] verjpus → huybpus and wuzwpus (原始: verjpus is huybpus and wuzwpus)
  16. [actual] manppus → zimhpus (原始: manppus is zimhpus)
  17. [actual] peqppus → ruygpus and tulvpus and jecbpus (原始: peqppus is ruygpus and tulvpus and jecbpus)
  18. [actual] jizspus → pacrpus (原始: jizspus is pacrpus)
  19. [actual] zimhpus → roznpus and fapfpus and xummpus (原始: zimhpus is roznpus and fapfpus and xummpus)
  20. [actual] huybpus → xucjpus (原始: huybpus is xucjpus)
  21. [actual] ruygpus → kabqpus and narspus (原始: ruygpus is kabqpus and narspus)
  22. [actual] fexhpus → babgpus (原始: fexhpus is babgpus)
  23. [actual] xucjpus → cazfpus and kugcpus and zemmpus (原始: xucjpus is cazfpus and kugcpus and zemmpus)
  24. [actual] x → verjpus (原始: x is verjpus)
  25. [actual] cazfpus → hawypus and yusypus (原始: cazfpus is hawypus and yusypus)
  26. [actual] jayxpus → fexhpus (原始: jayxpus is fexhpus)
  27. [actual] roznpus → kafppus (原始: roznpus is kafppus)
  28. [actual] pacrpus → jayxpus (原始: pacrpus is jayxpus)
  29. [actual] nemlpus → manppus (原始: nemlpus is manppus)
  30. [planning] x → babgpus (原始: x is babgpus)
  31. [actual] x → verjpus (原始: x is verjpus)
  32. [actual] verjpus → huybpus (原始: verjpus is huybpus)
  33. [actual] huybpus → xucjpus (原始: huybpus is xucjpus)
  34. [actual] x → xucjpus (原始: x is xucjpus)
  35. [actual] xucjpus → cazfpus and kugcpus and zemmpus (原始: xucjpus is cazfpus and kugcpus and zemmpus)
  36. [planning] x → cazfpus (原始: x is cazfpus)
  37. [actual] cazfpus → hawypus and yusypus (原始: cazfpus is hawypus and yusypus)
  38. [actual] x → hawypus and yusypus (原始: x is hawypus and yusypus)
  39. [actual] hawypus → nemlpus (原始: hawypus is nemlpus)
  40. [planning] x → nemlpus (原始: x is nemlpus)
  41. [actual] nemlpus → manppus (原始: nemlpus is manppus)
  42. [actual] x → manppus (原始: x is manppus)
  43. [actual] manppus → zimhpus (原始: manppus is zimhpus)
  44. [planning] x → zimhpus (原始: x is zimhpus)
  45. [actual] zimhpus → roznpus and fapfpus and xummpus (原始: zimhpus is roznpus and fapfpus and xummpus)
  46. [actual] x → roznpus (原始: x is roznpus)
  47. [actual] roznpus → kafppus (原始: roznpus is kafppus)
  48. [actual] x → kafppus (原始: x is kafppus)
  49. [actual] kafppus → kuxspus and domkpus (原始: kafppus is kuxspus and domkpus)
  50. [actual] x → kuxspus (原始: x is kuxspus)
  51. [actual] kuxspus → peqppus (原始: kuxspus is peqppus)
  52. [actual] x → peqppus (原始: x is peqppus)
  53. [actual] peqppus → ruygpus and tulvpus and jecbpus (原始: peqppus is ruygpus and tulvpus and jecbpus)
  54. [actual] x → ruygpus (原始: x is ruygpus)
  55. [actual] ruygpus → kabqpus and narspus (原始: ruygpus is kabqpus and narspus)
  56. [actual] x → kabqpus (原始: x is kabqpus)
  57. [actual] kabqpus → jizspus and vewbpus (原始: kabqpus is jizspus and vewbpus)
  58. [actual] x → jizspus (原始: x is jizspus)
  59. [actual] jizspus → pacrpus (原始: jizspus is pacrpus)
  60. [planning] x → pacrpus (原始: x is pacrpus)
  61. [actual] pacrpus → jayxpus (原始: pacrpus is jayxpus)
  62. [planning] x → jayxpus (原始: x is jayxpus)
  63. [actual] jayxpus → fexhpus (原始: jayxpus is fexhpus)
  64. [actual] x → fexhpus (原始: x is fexhpus)
  65. [actual] fexhpus → babgpus (原始: fexhpus is babgpus)
  66. [actual] x → babgpus (原始: x is babgpus)
  67. [actual] x → babgpus (原始: x is babgpus)
  68. [planning] x → babgpus or babrpus (原始: x is babgpus or babrpus)
  69. [actual] x → babgpus (原始: x is babgpus)
  70. [actual] x → babgpus or babrpus (原始: x is babgpus or babrpus)
  71. [actual] x → babgpus (原始: x is babgpus)
  72. [actual] x → babgpus or babrpus (原始: x is babgpus or babrpus)
  73. [planning] x → babgpus (原始: x is babgpus)
  74. [planning] x → babrpus (原始: x is babrpus)
  75. [actual] x → babgpus (原始: x is babgpus)
  76. [actual] x → babgpus or babrpus (原始: x is babgpus or babrpus)
  77. [planning] x → babrpus (原始: x is babrpus)
  78. [actual] x → babgpus (原始: x is babgpus)
  79. [actual] x → babgpus (原始: x is babgpus)

开始新的后处理...
[后处理] 从LoG数据文件中获取到图数据，节点数: 30
[后处理] 加载LoG图，包含 30 个节点
  LoG节点 0: x is babgpus or babrpus (规则: MP, 深度: 1)
  LoG节点 1: x is roznpus (规则: MP, 深度: 2)
  LoG节点 2: roznpus is babgpus or babrpus (规则: MP, 深度: 2)
  LoG节点 3: x is cazfpus (规则: CE, 深度: 3)
  LoG节点 4: cazfpus is roznpus (规则: CE, 深度: 3)
  LoG节点 5: roznpus is ruygpus (规则: CE, 深度: 3)
  LoG节点 6: ruygpus is babgpus or babrpus (规则: DI, 深度: 3)
  LoG节点 7: x is cazfpus and kugcpus (规则: MP, 深度: 4)
  LoG节点 8: cazfpus is roznpus and fapfpus (规则: MP, 深度: 4)
  LoG节点 9: roznpus is ruygpus and tulvpus (规则: MP, 深度: 4)
  LoG节点 10: ruygpus is babgpus (规则: MP, 深度: 4)
  LoG节点 11: x is huybpus (规则: CE, 深度: 5)
  LoG节点 12: huybpus is cazfpus and kugcpus (规则: CE, 深度: 5)
  LoG节点 13: cazfpus is manppus (规则: MP, 深度: 5)
  LoG节点 14: manppus is roznpus and fapfpus (规则: CE, 深度: 5)
  LoG节点 15: roznpus is kuxspus (规则: CE, 深度: 5)
  LoG节点 16: kuxspus is ruygpus and tulvpus (规则: CE, 深度: 5)
  LoG节点 17: ruygpus is jizspus (规则: MP, 深度: 5)
  LoG节点 18: jizspus is babgpus (规则: MP, 深度: 5)
  LoG节点 19: x is huybpus and wuzwpus (规则: MP, 深度: 6)
  LoG节点 20: huybpus is cazfpus and kugcpus and zemmpus (规则: MP, 深度: 6)
  LoG节点 21: cazfpus is hawypus (规则: CE, 深度: 6)
  LoG节点 22: hawypus is manppus (规则: MP, 深度: 6)
  LoG节点 23: manppus is roznpus and fapfpus and xummpus (规则: MP, 深度: 6)
  LoG节点 24: roznpus is kuxspus and domkpus (规则: MP, 深度: 6)
  LoG节点 25: kuxspus is ruygpus and tulvpus and jecbpus (规则: MP, 深度: 6)
  LoG节点 26: ruygpus is kabqpus (规则: CE, 深度: 6)
  LoG节点 27: kabqpus is jizspus (规则: CE, 深度: 6)
  LoG节点 28: jizspus is jayxpus (规则: MP, 深度: 6)
  LoG节点 29: jayxpus is babgpus (规则: MP, 深度: 6)

============================================================
[后处理] 开始处理节点
============================================================
📊 初始状态:
   - 标准化节点数: 79
   - 初始条件数: 19
   - LoG图节点数: 30

📋 初始条件列表:
    1. kafppus is kuxspus and domkpus
    2. hawypus is nemlpus
    3. kuxspus is peqppus
    4. kabqpus is jizspus and vewbpus
    5. verjpus is huybpus and wuzwpus
    6. manppus is zimhpus
    7. peqppus is ruygpus and tulvpus and jecbpus
    8. jizspus is pacrpus
    9. zimhpus is roznpus and fapfpus and xummpus
   10. huybpus is xucjpus
   11. ruygpus is kabqpus and narspus
   12. fexhpus is babgpus
   13. xucjpus is cazfpus and kugcpus and zemmpus
   14. x is verjpus
   15. cazfpus is hawypus and yusypus
   16. jayxpus is fexhpus
   17. roznpus is kafppus
   18. pacrpus is jayxpus
   19. nemlpus is manppus

🔧 构建初始Statement列表...
✅ 初始Statement列表构建完成，包含 19 个前提节点

🔍 开始处理actual节点...

   节点 1: x is verjpus
      ↻ 重复节点，计数: 2

   节点 2: x is verjpus
      ↻ 重复节点，计数: 3

   节点 3: verjpus is huybpus and wuzwpus
      ↻ 重复节点，计数: 2

   节点 4: x is huybpus and wuzwpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is huybpus and wuzwpus
      ✅ 验证成功 + LoG匹配

   节点 5: babgpus is fexhpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 6: fexhpus is babgpus
      ↻ 重复节点，计数: 2

   节点 7: kafppus is kuxspus and domkpus
      ↻ 重复节点，计数: 2

   节点 8: hawypus is nemlpus
      ↻ 重复节点，计数: 2

   节点 9: kuxspus is peqppus
      ↻ 重复节点，计数: 2

   节点 10: kabqpus is jizspus and vewbpus
      ↻ 重复节点，计数: 2

   节点 11: verjpus is huybpus and wuzwpus
      ↻ 重复节点，计数: 3

   节点 12: manppus is zimhpus
      ↻ 重复节点，计数: 2

   节点 13: peqppus is ruygpus and tulvpus and jecbpus
      ↻ 重复节点，计数: 2

   节点 14: jizspus is pacrpus
      ↻ 重复节点，计数: 2

   节点 15: zimhpus is roznpus and fapfpus and xummpus
      ↻ 重复节点，计数: 2

   节点 16: huybpus is xucjpus
      ↻ 重复节点，计数: 2

   节点 17: ruygpus is kabqpus and narspus
      ↻ 重复节点，计数: 2

   节点 18: fexhpus is babgpus
      ↻ 重复节点，计数: 3

   节点 19: xucjpus is cazfpus and kugcpus and zemmpus
      ↻ 重复节点，计数: 2

   节点 20: x is verjpus
      ↻ 重复节点，计数: 4

   节点 21: cazfpus is hawypus and yusypus
      ↻ 重复节点，计数: 2

   节点 22: jayxpus is fexhpus
      ↻ 重复节点，计数: 2

   节点 23: roznpus is kafppus
      ↻ 重复节点，计数: 2

   节点 24: pacrpus is jayxpus
      ↻ 重复节点，计数: 2

   节点 25: nemlpus is manppus
      ↻ 重复节点，计数: 2

   节点 26: x is verjpus
      ↻ 重复节点，计数: 5

   节点 27: verjpus is huybpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: verjpus is huybpus and wuzwpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: verjpus is huybpus and wuzwpus

   节点 28: huybpus is xucjpus
      ↻ 重复节点，计数: 3

   节点 29: x is xucjpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is verjpus → verjpus is xucjpus
[后处理] 基于推理轨迹点亮节点，使用了 3 个前提条件:
  - 前提: x is verjpus
  - 前提: verjpus is huybpus
  - 前提: huybpus is xucjpus
  ✓ 点亮LoG节点: x is huybpus
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 30: xucjpus is cazfpus and kugcpus and zemmpus
      ↻ 重复节点，计数: 3

   节点 31: cazfpus is hawypus and yusypus
      ↻ 重复节点，计数: 3

   节点 32: x is hawypus and yusypus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is verjpus → verjpus is hawypus and yusypus
[后处理] 基于推理轨迹点亮节点，使用了 5 个前提条件:
  - 前提: x is verjpus
  - 前提: verjpus is huybpus
  - 前提: huybpus is xucjpus
  - 前提: xucjpus is cazfpus and kugcpus and zemmpus
  - 前提: cazfpus is hawypus and yusypus
  ✓ 点亮LoG节点: x is cazfpus
[子树点亮]     └─ 点亮依赖节点: x is cazfpus and kugcpus (深度4)
[子树点亮]     └─ 点亮依赖节点: huybpus is cazfpus and kugcpus (深度5)
[子树点亮]     └─ 点亮依赖节点: huybpus is cazfpus and kugcpus and zemmpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 3 个节点
  ✓ 点亮LoG节点: cazfpus is hawypus
[后处理] 通过推理轨迹额外点亮了 2 个LoG节点

   节点 33: hawypus is nemlpus
      ↻ 重复节点，计数: 3

   节点 34: nemlpus is manppus
      ↻ 重复节点，计数: 3

   节点 35: x is manppus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is verjpus → verjpus is manppus
[后处理] 基于推理轨迹点亮节点，使用了 7 个前提条件:
  - 前提: x is verjpus
  - 前提: verjpus is huybpus
  - 前提: huybpus is xucjpus
  - 前提: xucjpus is cazfpus and kugcpus and zemmpus
  - 前提: cazfpus is hawypus and yusypus
  - 前提: hawypus is nemlpus
  - 前提: nemlpus is manppus
  ✓ 点亮LoG节点: cazfpus is manppus
[子树点亮]     └─ 点亮依赖节点: hawypus is manppus (深度6)
[后处理]   └─ 自动点亮依赖子树: 1 个节点
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 36: manppus is zimhpus
      ↻ 重复节点，计数: 3

   节点 37: zimhpus is roznpus and fapfpus and xummpus
      ↻ 重复节点，计数: 3

   节点 38: x is roznpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is roznpus
[子树点亮]     └─ 点亮依赖节点: cazfpus is roznpus (深度3)
[子树点亮]     └─ 点亮依赖节点: cazfpus is roznpus and fapfpus (深度4)
[子树点亮]     └─ 点亮依赖节点: manppus is roznpus and fapfpus (深度5)
[子树点亮]     └─ 点亮依赖节点: manppus is roznpus and fapfpus and xummpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 4 个节点
      ✅ 验证成功 + LoG匹配

   节点 39: roznpus is kafppus
      ↻ 重复节点，计数: 3

   节点 40: x is kafppus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is verjpus → verjpus is kafppus
[后处理] 基于推理轨迹点亮节点，使用了 10 个前提条件:
  - 前提: x is verjpus
  - 前提: verjpus is huybpus
  - 前提: huybpus is xucjpus
  - 前提: xucjpus is cazfpus and kugcpus and zemmpus
  - 前提: cazfpus is hawypus and yusypus
  - 前提: hawypus is nemlpus
  - 前提: nemlpus is manppus
  - 前提: manppus is zimhpus
  - 前提: zimhpus is roznpus and fapfpus and xummpus
  - 前提: roznpus is kafppus

   节点 41: kafppus is kuxspus and domkpus
      ↻ 重复节点，计数: 3

   节点 42: x is kuxspus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is verjpus → verjpus is kuxspus
[后处理] 基于推理轨迹点亮节点，使用了 11 个前提条件:
  - 前提: x is verjpus
  - 前提: verjpus is huybpus
  - 前提: huybpus is xucjpus
  - 前提: xucjpus is cazfpus and kugcpus and zemmpus
  - 前提: cazfpus is hawypus and yusypus
  - 前提: hawypus is nemlpus
  - 前提: nemlpus is manppus
  - 前提: manppus is zimhpus
  - 前提: zimhpus is roznpus and fapfpus and xummpus
  - 前提: roznpus is kafppus
  - 前提: kafppus is kuxspus and domkpus
  ✓ 点亮LoG节点: roznpus is kuxspus
[子树点亮]     └─ 点亮依赖节点: roznpus is kuxspus and domkpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 1 个节点
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 43: kuxspus is peqppus
      ↻ 重复节点，计数: 3

   节点 44: x is peqppus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is verjpus → verjpus is peqppus
[后处理] 基于推理轨迹点亮节点，使用了 12 个前提条件:
  - 前提: x is verjpus
  - 前提: verjpus is huybpus
  - 前提: huybpus is xucjpus
  - 前提: xucjpus is cazfpus and kugcpus and zemmpus
  - 前提: cazfpus is hawypus and yusypus
  - 前提: hawypus is nemlpus
  - 前提: nemlpus is manppus
  - 前提: manppus is zimhpus
  - 前提: zimhpus is roznpus and fapfpus and xummpus
  - 前提: roznpus is kafppus
  - 前提: kafppus is kuxspus and domkpus
  - 前提: kuxspus is peqppus

   节点 45: peqppus is ruygpus and tulvpus and jecbpus
      ↻ 重复节点，计数: 3

   节点 46: x is ruygpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is verjpus → verjpus is ruygpus
[后处理] 基于推理轨迹点亮节点，使用了 13 个前提条件:
  - 前提: x is verjpus
  - 前提: verjpus is huybpus
  - 前提: huybpus is xucjpus
  - 前提: xucjpus is cazfpus and kugcpus and zemmpus
  - 前提: cazfpus is hawypus and yusypus
  - 前提: hawypus is nemlpus
  - 前提: nemlpus is manppus
  - 前提: manppus is zimhpus
  - 前提: zimhpus is roznpus and fapfpus and xummpus
  - 前提: roznpus is kafppus
  - 前提: kafppus is kuxspus and domkpus
  - 前提: kuxspus is peqppus
  - 前提: peqppus is ruygpus and tulvpus and jecbpus
  ✓ 点亮LoG节点: roznpus is ruygpus
[子树点亮]     └─ 点亮依赖节点: roznpus is ruygpus and tulvpus (深度4)
[子树点亮]     └─ 点亮依赖节点: kuxspus is ruygpus and tulvpus (深度5)
[子树点亮]     └─ 点亮依赖节点: kuxspus is ruygpus and tulvpus and jecbpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 3 个节点
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 47: ruygpus is kabqpus and narspus
      ↻ 重复节点，计数: 3

   节点 48: x is kabqpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is verjpus → verjpus is kabqpus
[后处理] 基于推理轨迹点亮节点，使用了 14 个前提条件:
  - 前提: x is verjpus
  - 前提: verjpus is huybpus
  - 前提: huybpus is xucjpus
  - 前提: xucjpus is cazfpus and kugcpus and zemmpus
  - 前提: cazfpus is hawypus and yusypus
  - 前提: hawypus is nemlpus
  - 前提: nemlpus is manppus
  - 前提: manppus is zimhpus
  - 前提: zimhpus is roznpus and fapfpus and xummpus
  - 前提: roznpus is kafppus
  - 前提: kafppus is kuxspus and domkpus
  - 前提: kuxspus is peqppus
  - 前提: peqppus is ruygpus and tulvpus and jecbpus
  - 前提: ruygpus is kabqpus and narspus
  ✓ 点亮LoG节点: ruygpus is kabqpus
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 49: kabqpus is jizspus and vewbpus
      ↻ 重复节点，计数: 3

   节点 50: x is jizspus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is verjpus → verjpus is jizspus
[后处理] 基于推理轨迹点亮节点，使用了 15 个前提条件:
  - 前提: x is verjpus
  - 前提: verjpus is huybpus
  - 前提: huybpus is xucjpus
  - 前提: xucjpus is cazfpus and kugcpus and zemmpus
  - 前提: cazfpus is hawypus and yusypus
  - 前提: hawypus is nemlpus
  - 前提: nemlpus is manppus
  - 前提: manppus is zimhpus
  - 前提: zimhpus is roznpus and fapfpus and xummpus
  - 前提: roznpus is kafppus
  - 前提: kafppus is kuxspus and domkpus
  - 前提: kuxspus is peqppus
  - 前提: peqppus is ruygpus and tulvpus and jecbpus
  - 前提: ruygpus is kabqpus and narspus
  - 前提: kabqpus is jizspus and vewbpus
  ✓ 点亮LoG节点: ruygpus is jizspus
[子树点亮]     └─ 点亮依赖节点: kabqpus is jizspus (深度6)
[后处理]   └─ 自动点亮依赖子树: 1 个节点
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 51: jizspus is pacrpus
      ↻ 重复节点，计数: 3

   节点 52: pacrpus is jayxpus
      ↻ 重复节点，计数: 3

   节点 53: jayxpus is fexhpus
      ↻ 重复节点，计数: 3

   节点 54: x is fexhpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is verjpus → verjpus is fexhpus
[后处理] 基于推理轨迹点亮节点，使用了 18 个前提条件:
  - 前提: x is verjpus
  - 前提: verjpus is huybpus
  - 前提: huybpus is xucjpus
  - 前提: xucjpus is cazfpus and kugcpus and zemmpus
  - 前提: cazfpus is hawypus and yusypus
  - 前提: hawypus is nemlpus
  - 前提: nemlpus is manppus
  - 前提: manppus is zimhpus
  - 前提: zimhpus is roznpus and fapfpus and xummpus
  - 前提: roznpus is kafppus
  - 前提: kafppus is kuxspus and domkpus
  - 前提: kuxspus is peqppus
  - 前提: peqppus is ruygpus and tulvpus and jecbpus
  - 前提: ruygpus is kabqpus and narspus
  - 前提: kabqpus is jizspus and vewbpus
  - 前提: jizspus is pacrpus
  - 前提: pacrpus is jayxpus
  - 前提: jayxpus is fexhpus
  ✓ 点亮LoG节点: jizspus is jayxpus
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 55: fexhpus is babgpus
      ↻ 重复节点，计数: 4

   节点 56: x is babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is verjpus → verjpus is babgpus
[后处理] 基于推理轨迹点亮节点，使用了 19 个前提条件:
  - 前提: x is verjpus
  - 前提: verjpus is huybpus
  - 前提: huybpus is xucjpus
  - 前提: xucjpus is cazfpus and kugcpus and zemmpus
  - 前提: cazfpus is hawypus and yusypus
  - 前提: hawypus is nemlpus
  - 前提: nemlpus is manppus
  - 前提: manppus is zimhpus
  - 前提: zimhpus is roznpus and fapfpus and xummpus
  - 前提: roznpus is kafppus
  - 前提: kafppus is kuxspus and domkpus
  - 前提: kuxspus is peqppus
  - 前提: peqppus is ruygpus and tulvpus and jecbpus
  - 前提: ruygpus is kabqpus and narspus
  - 前提: kabqpus is jizspus and vewbpus
  - 前提: jizspus is pacrpus
  - 前提: pacrpus is jayxpus
  - 前提: jayxpus is fexhpus
  - 前提: fexhpus is babgpus
  ✓ 点亮LoG节点: x is babgpus or babrpus
[子树点亮]     └─ 点亮依赖节点: roznpus is babgpus or babrpus (深度2)
[子树点亮]     └─ 点亮依赖节点: ruygpus is babgpus or babrpus (深度3)
[子树点亮]     └─ 点亮依赖节点: ruygpus is babgpus (深度4)
[子树点亮]     └─ 点亮依赖节点: jizspus is babgpus (深度5)
[子树点亮]     └─ 点亮依赖节点: jayxpus is babgpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 5 个节点
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 57: x is babgpus
      ↻ 重复节点，计数: 2

   节点 58: x is babgpus
      ↻ 重复节点，计数: 3

   节点 59: x is babgpus or babrpus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 60: x is babgpus
      ↻ 重复节点，计数: 4

   节点 61: x is babgpus or babrpus
      ↻ 重复节点，计数: 2

   节点 62: x is babgpus
      ↻ 重复节点，计数: 5

   节点 63: x is babgpus or babrpus
      ↻ 重复节点，计数: 3

   节点 64: x is babgpus
      ↻ 重复节点，计数: 6

   节点 65: x is babgpus
      ↻ 重复节点，计数: 7

🔍 分析推理路径完整性...

============================================================
[后处理] 处理完成
============================================================
📈 处理统计:
   - 处理的actual节点: 65
   - 新增节点: 16
   - 更新已存在节点: 49
   - 点亮的LoG节点: 30

🎯 推理质量统计:
   - 完美推理: 15 (节点正确 + 路径正确)
   - 部分推理: 1 (节点正确 + 路径部分错误)
   - 无效推理: 0 (节点错误或路径完全错误)
[LoG分析] LoG图: 30节点, 19前提, 复杂度1-19

📊 === Statement列表分析 ===
📈 节点统计:
   - 总节点数: 35
   - 前提节点: 19
   - 推理节点: 15
   - 幻觉节点: 1
   - 点亮LoG节点: 30

❌ 幻觉节点详情:
   - babgpus is fexhpus (出现1次)

✅ 推理节点详情:
   🟢 x is huybpus and wuzwpus (出现1次, 质量:perfect)
   🟢 verjpus is huybpus (出现1次, 质量:perfect)
   🟢 x is xucjpus (出现1次, 质量:perfect)
   🟢 x is hawypus and yusypus (出现1次, 质量:perfect)
   🟢 x is manppus (出现1次, 质量:perfect)
   🟢 x is roznpus (出现1次, 质量:perfect)
   🟢 x is kafppus (出现1次, 质量:perfect)
   🟢 x is kuxspus (出现1次, 质量:perfect)
   🟢 x is peqppus (出现1次, 质量:perfect)
   🟢 x is ruygpus (出现1次, 质量:perfect)
   🟢 x is kabqpus (出现1次, 质量:perfect)
   🟢 x is jizspus (出现1次, 质量:perfect)
   🟡 x is fexhpus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['babgpus is fexhpus']
   🟢 x is babgpus (出现7次, 质量:perfect)
   🟢 x is babgpus or babrpus (出现3次, 质量:perfect)

🔥 点亮的LoG节点:
   - cazfpus is hawypus
   - x is huybpus
   - ruygpus is jizspus
   - kabqpus is jizspus
   - cazfpus is roznpus
   - roznpus is kuxspus and domkpus
   - x is cazfpus and kugcpus
   - ruygpus is babgpus
   - manppus is roznpus and fapfpus
   - huybpus is cazfpus and kugcpus
   - manppus is roznpus and fapfpus and xummpus
   - kuxspus is ruygpus and tulvpus and jecbpus
   - cazfpus is manppus
   - roznpus is ruygpus
   - x is cazfpus
   - roznpus is babgpus or babrpus
   - ruygpus is babgpus or babrpus
   - huybpus is cazfpus and kugcpus and zemmpus
   - cazfpus is roznpus and fapfpus
   - x is babgpus or babrpus
   - roznpus is kuxspus
   - roznpus is ruygpus and tulvpus
   - jizspus is jayxpus
   - jizspus is babgpus
   - jayxpus is babgpus
   - ruygpus is kabqpus
   - x is huybpus and wuzwpus
   - x is roznpus
   - kuxspus is ruygpus and tulvpus
   - hawypus is manppus

============================================================
📊 计算评估指标
============================================================

🎯 计算Coverage指标...
   深度Coverage: 6/6 = 100.00%
   最深点亮节点: x is babgpus or babrpus (第6层)
   节点Coverage: 30/30 = 100.00%
   前提条件Coverage: 19/19 = 100.00%
   各推理层点亮比例:
     第1层: 11/11 = 100.00%
     第2层: 8/8 = 100.00%
     第3层: 4/4 = 100.00%
     第4层: 4/4 = 100.00%
     第5层: 2/2 = 100.00%
     第6层: 1/1 = 100.00%

🎯 计算Precision指标...
   Error Rate: 1/16 = 6.25%
   可推导节点: 15/16
   Strict Error Rate: 2/16 = 12.50%
   严格有效节点: 14/16

   详细分析:
     完美推理: 15 (93.75%)
     部分推理: 1 (6.25%)
     无效推理: 0 (0.00%)

================================================================================
处理记录 42/50
================================================================================
记录索引: 41
问题状态: correct
📁 从缓存加载提取结果: evaluation_results.LoG_6.deepseek-reasoner_record_41.json
✅ 使用缓存结果:
   - 句子数: 76
   - 提取的语句数: 107
   - 初始条件数: 20

=== Statement提取完成 ===
总句子数: 76
成功提取: 76
失败提取: 0
总statements数: 107

=== 开始清洗Statement格式 ===
原始statements数: 107
清洗后statements数: 98
过滤掉的statements数: 9
清洗后的statements:
  1. [planning] x is babgpus and babrpus
  2. [planning] x is babgpus
  3. [planning] x is babrpus
  4. [actual] x is yoscpus
  5. [actual] x is yoscpus
  6. [actual] yoscpus is fexxpus and rathpus
  7. [actual] yoscpus is fexxpus and rathpus
  8. [actual] fexxpus is bezppus
  9. [actual] fexxpus is bezppus
  10. [actual] bezppus is giqzpus
  11. [actual] bezppus is tikspus
  12. [actual] bezppus is giqzpus and tikspus
  13. [actual] giqzpus is tongpus and horkpus
  14. [actual] giqzpus is fajtpus
  15. [actual] giqzpus is tongpus and horkpus
  16. [actual] giqzpus is fajtpus
  17. [actual] babgpus is mentioned in wobgpus is babgpus and wuplpus
  18. [actual] wobgpus is jovtpus
  19. [actual] jovtpus is wobgpus
  20. [actual] bubxpus is jovtpus
  21. [actual] bubxpus is tedqpus
  22. [actual] nugqpus is bubxpus
  23. [actual] gelbpus is nugqpus
  24. [actual] gelbpus is josmpus
  25. [actual] gelbpus is qaclpus
  26. [actual] x is yoscpus
  27. [actual] yoscpus is fexxpus and rathpus
  28. [actual] fexxpus is bezppus
  29. [actual] bezppus is giqzpus and tikspus
  30. [actual] giqzpus is tongpus and horkpus
  31. [actual] giqzpus is fajtpus
  32. [actual] x is yihhpus and gasdpus
  33. [actual] x is yihhpus
  34. [actual] yihhpus is donxpus and xeqqpus and qozzpus
  35. [actual] donxpus is reybpus
  36. [actual] reybpus is yozxpus and wibnpus
  37. [actual] yozxpus is mufzpus and didqpus
  38. [actual] mufzpus is dorqpus and gunzpus
  39. [actual] dorqpus is gelbpus and texjpus
  40. [actual] gelbpus is nugqpus and josmpus and qaclpus
  41. [actual] nugqpus is bubxpus
  42. [actual] bubxpus is jovtpus and tedqpus
  43. [actual] jovtpus is wobgpus
  44. [actual] wobgpus is babgpus and wuplpus
  45. [actual] x is yihhpus
  46. [actual] yihhpus is donxpus
  47. [actual] donxpus is reybpus
  48. [actual] reybpus is yozxpus
  49. [actual] yozxpus is mufzpus
  50. [actual] mufzpus is dorqpus
  51. [actual] dorqpus is gelbpus
  52. [actual] gelbpus is nugqpus
  53. [actual] nugqpus is bubxpus
  54. [actual] bubxpus is jovtpus
  55. [actual] jovtpus is wobgpus
  56. [actual] wobgpus is babgpus
  57. [actual] x is babgpus
  58. [planning] x is babrpus
  59. [actual] babrpus is mentioned in tongpus
  60. [actual] tongpus is babrpus and xiqspus
  61. [actual] tongpus is giqzpus and horkpus
  62. [actual] x is yoscpus
  63. [actual] yoscpus is fexxpus
  64. [actual] fexxpus is bezppus
  65. [actual] bezppus is giqzpus
  66. [planning] x is giqzpus
  67. [actual] x is yoscpus
  68. [actual] yoscpus is fexxpus and rathpus
  69. [actual] fexxpus is bezppus
  70. [actual] bezppus is giqzpus and tikspus
  71. [actual] yoscpus is fexxpus
  72. [actual] fexxpus is bezppus
  73. [actual] yoscpus is bezppus
  74. [planning] yoscpus is bezppus
  75. [actual] yoscpus is fexxpus
  76. [actual] fexxpus is bezppus
  77. [planning] yoscpus is bezppus
  78. [planning] bezppus is giqzpus
  79. [planning] yoscpus is giqzpus
  80. [actual] x is yoscpus
  81. [actual] yoscpus is fexxpus
  82. [actual] x is fexxpus
  83. [actual] fexxpus is bezppus
  84. [actual] x is bezppus
  85. [actual] bezppus is giqzpus and tikspus
  86. [actual] x is giqzpus
  87. [actual] x is tikspus
  88. [actual] giqzpus is tongpus and horkpus
  89. [actual] x is tongpus
  90. [actual] tongpus is babrpus and xiqspus
  91. [actual] x is babrpus
  92. [actual] x is babrpus
  93. [actual] x is yihhpus
  94. [actual] yihhpus is babgpus
  95. [actual] x is babrpus
  96. [planning] x is babgpus and babrpus
  97. [actual] x is babgpus and babrpus
  98. [actual] giqzpus is fajtpus

=== 开始标准化和解析节点 ===
清洗后statements数: 98
标准化后节点数: 96
过滤掉的无效实体数: 2
标准化后的节点:
  1. [planning] x → babgpus and babrpus (原始: x is babgpus and babrpus)
  2. [planning] x → babgpus (原始: x is babgpus)
  3. [planning] x → babrpus (原始: x is babrpus)
  4. [actual] x → yoscpus (原始: x is yoscpus)
  5. [actual] x → yoscpus (原始: x is yoscpus)
  6. [actual] yoscpus → fexxpus and rathpus (原始: yoscpus is fexxpus and rathpus)
  7. [actual] yoscpus → fexxpus and rathpus (原始: yoscpus is fexxpus and rathpus)
  8. [actual] fexxpus → bezppus (原始: fexxpus is bezppus)
  9. [actual] fexxpus → bezppus (原始: fexxpus is bezppus)
  10. [actual] bezppus → giqzpus (原始: bezppus is giqzpus)
  11. [actual] bezppus → tikspus (原始: bezppus is tikspus)
  12. [actual] bezppus → giqzpus and tikspus (原始: bezppus is giqzpus and tikspus)
  13. [actual] giqzpus → tongpus and horkpus (原始: giqzpus is tongpus and horkpus)
  14. [actual] giqzpus → fajtpus (原始: giqzpus is fajtpus)
  15. [actual] giqzpus → tongpus and horkpus (原始: giqzpus is tongpus and horkpus)
  16. [actual] giqzpus → fajtpus (原始: giqzpus is fajtpus)
  17. [actual] wobgpus → jovtpus (原始: wobgpus is jovtpus)
  18. [actual] jovtpus → wobgpus (原始: jovtpus is wobgpus)
  19. [actual] bubxpus → jovtpus (原始: bubxpus is jovtpus)
  20. [actual] bubxpus → tedqpus (原始: bubxpus is tedqpus)
  21. [actual] nugqpus → bubxpus (原始: nugqpus is bubxpus)
  22. [actual] gelbpus → nugqpus (原始: gelbpus is nugqpus)
  23. [actual] gelbpus → josmpus (原始: gelbpus is josmpus)
  24. [actual] gelbpus → qaclpus (原始: gelbpus is qaclpus)
  25. [actual] x → yoscpus (原始: x is yoscpus)
  26. [actual] yoscpus → fexxpus and rathpus (原始: yoscpus is fexxpus and rathpus)
  27. [actual] fexxpus → bezppus (原始: fexxpus is bezppus)
  28. [actual] bezppus → giqzpus and tikspus (原始: bezppus is giqzpus and tikspus)
  29. [actual] giqzpus → tongpus and horkpus (原始: giqzpus is tongpus and horkpus)
  30. [actual] giqzpus → fajtpus (原始: giqzpus is fajtpus)
  31. [actual] x → yihhpus and gasdpus (原始: x is yihhpus and gasdpus)
  32. [actual] x → yihhpus (原始: x is yihhpus)
  33. [actual] yihhpus → donxpus and xeqqpus and qozzpus (原始: yihhpus is donxpus and xeqqpus and qozzpus)
  34. [actual] donxpus → reybpus (原始: donxpus is reybpus)
  35. [actual] reybpus → yozxpus and wibnpus (原始: reybpus is yozxpus and wibnpus)
  36. [actual] yozxpus → mufzpus and didqpus (原始: yozxpus is mufzpus and didqpus)
  37. [actual] mufzpus → dorqpus and gunzpus (原始: mufzpus is dorqpus and gunzpus)
  38. [actual] dorqpus → gelbpus and texjpus (原始: dorqpus is gelbpus and texjpus)
  39. [actual] gelbpus → nugqpus and josmpus and qaclpus (原始: gelbpus is nugqpus and josmpus and qaclpus)
  40. [actual] nugqpus → bubxpus (原始: nugqpus is bubxpus)
  41. [actual] bubxpus → jovtpus and tedqpus (原始: bubxpus is jovtpus and tedqpus)
  42. [actual] jovtpus → wobgpus (原始: jovtpus is wobgpus)
  43. [actual] wobgpus → babgpus and wuplpus (原始: wobgpus is babgpus and wuplpus)
  44. [actual] x → yihhpus (原始: x is yihhpus)
  45. [actual] yihhpus → donxpus (原始: yihhpus is donxpus)
  46. [actual] donxpus → reybpus (原始: donxpus is reybpus)
  47. [actual] reybpus → yozxpus (原始: reybpus is yozxpus)
  48. [actual] yozxpus → mufzpus (原始: yozxpus is mufzpus)
  49. [actual] mufzpus → dorqpus (原始: mufzpus is dorqpus)
  50. [actual] dorqpus → gelbpus (原始: dorqpus is gelbpus)
  51. [actual] gelbpus → nugqpus (原始: gelbpus is nugqpus)
  52. [actual] nugqpus → bubxpus (原始: nugqpus is bubxpus)
  53. [actual] bubxpus → jovtpus (原始: bubxpus is jovtpus)
  54. [actual] jovtpus → wobgpus (原始: jovtpus is wobgpus)
  55. [actual] wobgpus → babgpus (原始: wobgpus is babgpus)
  56. [actual] x → babgpus (原始: x is babgpus)
  57. [planning] x → babrpus (原始: x is babrpus)
  58. [actual] tongpus → babrpus and xiqspus (原始: tongpus is babrpus and xiqspus)
  59. [actual] tongpus → giqzpus and horkpus (原始: tongpus is giqzpus and horkpus)
  60. [actual] x → yoscpus (原始: x is yoscpus)
  61. [actual] yoscpus → fexxpus (原始: yoscpus is fexxpus)
  62. [actual] fexxpus → bezppus (原始: fexxpus is bezppus)
  63. [actual] bezppus → giqzpus (原始: bezppus is giqzpus)
  64. [planning] x → giqzpus (原始: x is giqzpus)
  65. [actual] x → yoscpus (原始: x is yoscpus)
  66. [actual] yoscpus → fexxpus and rathpus (原始: yoscpus is fexxpus and rathpus)
  67. [actual] fexxpus → bezppus (原始: fexxpus is bezppus)
  68. [actual] bezppus → giqzpus and tikspus (原始: bezppus is giqzpus and tikspus)
  69. [actual] yoscpus → fexxpus (原始: yoscpus is fexxpus)
  70. [actual] fexxpus → bezppus (原始: fexxpus is bezppus)
  71. [actual] yoscpus → bezppus (原始: yoscpus is bezppus)
  72. [planning] yoscpus → bezppus (原始: yoscpus is bezppus)
  73. [actual] yoscpus → fexxpus (原始: yoscpus is fexxpus)
  74. [actual] fexxpus → bezppus (原始: fexxpus is bezppus)
  75. [planning] yoscpus → bezppus (原始: yoscpus is bezppus)
  76. [planning] bezppus → giqzpus (原始: bezppus is giqzpus)
  77. [planning] yoscpus → giqzpus (原始: yoscpus is giqzpus)
  78. [actual] x → yoscpus (原始: x is yoscpus)
  79. [actual] yoscpus → fexxpus (原始: yoscpus is fexxpus)
  80. [actual] x → fexxpus (原始: x is fexxpus)
  81. [actual] fexxpus → bezppus (原始: fexxpus is bezppus)
  82. [actual] x → bezppus (原始: x is bezppus)
  83. [actual] bezppus → giqzpus and tikspus (原始: bezppus is giqzpus and tikspus)
  84. [actual] x → giqzpus (原始: x is giqzpus)
  85. [actual] x → tikspus (原始: x is tikspus)
  86. [actual] giqzpus → tongpus and horkpus (原始: giqzpus is tongpus and horkpus)
  87. [actual] x → tongpus (原始: x is tongpus)
  88. [actual] tongpus → babrpus and xiqspus (原始: tongpus is babrpus and xiqspus)
  89. [actual] x → babrpus (原始: x is babrpus)
  90. [actual] x → babrpus (原始: x is babrpus)
  91. [actual] x → yihhpus (原始: x is yihhpus)
  92. [actual] yihhpus → babgpus (原始: yihhpus is babgpus)
  93. [actual] x → babrpus (原始: x is babrpus)
  94. [planning] x → babgpus and babrpus (原始: x is babgpus and babrpus)
  95. [actual] x → babgpus and babrpus (原始: x is babgpus and babrpus)
  96. [actual] giqzpus → fajtpus (原始: giqzpus is fajtpus)

开始新的后处理...
[后处理] 从LoG数据文件中获取到图数据，节点数: 36
[后处理] 加载LoG图，包含 36 个节点
  LoG节点 0: x is babgpus and babrpus (规则: CI, 深度: 1)
  LoG节点 1: x is babgpus (规则: MP, 深度: 2)
  LoG节点 2: x is babrpus (规则: CE, 深度: 2)
  LoG节点 3: x is dorqpus (规则: MP, 深度: 3)
  LoG节点 4: dorqpus is babgpus (规则: MP, 深度: 3)
  LoG节点 5: x is babrpus and hodcpus (规则: MP, 深度: 3)
  LoG节点 6: x is donxpus (规则: CE, 深度: 4)
  LoG节点 7: donxpus is dorqpus (规则: MP, 深度: 4)
  LoG节点 8: dorqpus is nugqpus (规则: CE, 深度: 4)
  LoG节点 9: nugqpus is babgpus (规则: MP, 深度: 4)
  LoG节点 10: x is giqzpus (规则: MP, 深度: 4)
  LoG节点 11: giqzpus is babrpus and hodcpus (规则: CI, 深度: 4)
  LoG节点 12: x is donxpus and xeqqpus (规则: MP, 深度: 5)
  LoG节点 13: donxpus is yozxpus (规则: CE, 深度: 5)
  LoG节点 14: yozxpus is dorqpus (规则: MP, 深度: 5)
  LoG节点 15: dorqpus is nugqpus and josmpus (规则: MP, 深度: 5)
  LoG节点 16: nugqpus is jovtpus (规则: CE, 深度: 5)
  LoG节点 17: jovtpus is babgpus (规则: CE, 深度: 5)
  LoG节点 18: x is fexxpus (规则: CE, 深度: 5)
  LoG节点 19: fexxpus is giqzpus (规则: CE, 深度: 5)
  LoG节点 20: giqzpus is babrpus (规则: MP, 深度: 5)
  LoG节点 21: giqzpus is hodcpus (规则: CE, 深度: 5)
  LoG节点 22: x is yihhpus (规则: CE, 深度: 6)
  LoG节点 23: yihhpus is donxpus and xeqqpus (规则: CE, 深度: 6)
  LoG节点 24: donxpus is yozxpus and wibnpus (规则: MP, 深度: 6)
  LoG节点 25: yozxpus is mufzpus (规则: CE, 深度: 6)
  LoG节点 26: mufzpus is dorqpus (规则: CE, 深度: 6)
  LoG节点 27: dorqpus is gelbpus (规则: CE, 深度: 6)
  LoG节点 28: gelbpus is nugqpus and josmpus (规则: CE, 深度: 6)
  LoG节点 29: nugqpus is jovtpus and tedqpus (规则: MP, 深度: 6)
  LoG节点 30: jovtpus is babgpus and wuplpus (规则: MP, 深度: 6)
  LoG节点 31: x is fexxpus and rathpus (规则: MP, 深度: 6)
  LoG节点 32: fexxpus is giqzpus and tikspus (规则: MP, 深度: 6)
  LoG节点 33: giqzpus is tongpus (规则: CE, 深度: 6)
  LoG节点 34: tongpus is babrpus (规则: CE, 深度: 6)
  LoG节点 35: giqzpus is hodcpus and yosbpus (规则: MP, 深度: 6)

============================================================
[后处理] 开始处理节点
============================================================
📊 初始状态:
   - 标准化节点数: 96
   - 初始条件数: 20
   - LoG图节点数: 36

📋 初始条件列表:
    1. donxpus is reybpus
    2. fexxpus is bezppus
    3. yoscpus is fexxpus and rathpus
    4. x is yoscpus
    5. jovtpus is wobgpus
    6. gelbpus is nugqpus and josmpus and qaclpus
    7. bezppus is giqzpus and tikspus
    8. x is yihhpus and gasdpus
    9. mufzpus is dorqpus and gunzpus
   10. bubxpus is jovtpus and tedqpus
   11. wobgpus is babgpus and wuplpus
   12. fajtpus is hodcpus and yosbpus
   13. tongpus is babrpus and xiqspus
   14. reybpus is yozxpus and wibnpus
   15. dorqpus is gelbpus and texjpus
   16. giqzpus is tongpus and horkpus
   17. giqzpus is fajtpus
   18. yozxpus is mufzpus and didqpus
   19. yihhpus is donxpus and xeqqpus and qozzpus
   20. nugqpus is bubxpus

🔧 构建初始Statement列表...
✅ 初始Statement列表构建完成，包含 20 个前提节点

🔍 开始处理actual节点...

   节点 1: x is yoscpus
      ↻ 重复节点，计数: 2

   节点 2: x is yoscpus
      ↻ 重复节点，计数: 3

   节点 3: yoscpus is fexxpus and rathpus
      ↻ 重复节点，计数: 2

   节点 4: yoscpus is fexxpus and rathpus
      ↻ 重复节点，计数: 3

   节点 5: fexxpus is bezppus
      ↻ 重复节点，计数: 2

   节点 6: fexxpus is bezppus
      ↻ 重复节点，计数: 3

   节点 7: bezppus is giqzpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: bezppus is giqzpus and tikspus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: bezppus is giqzpus and tikspus

   节点 8: bezppus is tikspus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: bezppus is giqzpus and tikspus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: bezppus is giqzpus and tikspus

   节点 9: bezppus is giqzpus and tikspus
      ↻ 重复节点，计数: 2

   节点 10: giqzpus is tongpus and horkpus
      ↻ 重复节点，计数: 2

   节点 11: giqzpus is fajtpus
      ↻ 重复节点，计数: 2

   节点 12: giqzpus is tongpus and horkpus
      ↻ 重复节点，计数: 3

   节点 13: giqzpus is fajtpus
      ↻ 重复节点，计数: 3

   节点 14: wobgpus is jovtpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 15: jovtpus is wobgpus
      ↻ 重复节点，计数: 2

   节点 16: bubxpus is jovtpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: bubxpus is jovtpus and tedqpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: bubxpus is jovtpus and tedqpus

   节点 17: bubxpus is tedqpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: bubxpus is jovtpus and tedqpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: bubxpus is jovtpus and tedqpus

   节点 18: nugqpus is bubxpus
      ↻ 重复节点，计数: 2

   节点 19: gelbpus is nugqpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: gelbpus is nugqpus and josmpus and qaclpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: gelbpus is nugqpus and josmpus and qaclpus
  ✓ 点亮LoG节点: gelbpus is nugqpus and josmpus
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 20: gelbpus is josmpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: gelbpus is nugqpus and josmpus and qaclpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: gelbpus is nugqpus and josmpus and qaclpus

   节点 21: gelbpus is qaclpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: gelbpus is nugqpus and josmpus and qaclpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: gelbpus is nugqpus and josmpus and qaclpus

   节点 22: x is yoscpus
      ↻ 重复节点，计数: 4

   节点 23: yoscpus is fexxpus and rathpus
      ↻ 重复节点，计数: 4

   节点 24: fexxpus is bezppus
      ↻ 重复节点，计数: 4

   节点 25: bezppus is giqzpus and tikspus
      ↻ 重复节点，计数: 3

   节点 26: giqzpus is tongpus and horkpus
      ↻ 重复节点，计数: 4

   节点 27: giqzpus is fajtpus
      ↻ 重复节点，计数: 4

   节点 28: x is yihhpus and gasdpus
      ↻ 重复节点，计数: 2

   节点 29: x is yihhpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is yihhpus
      ✅ 验证成功 + LoG匹配

   节点 30: yihhpus is donxpus and xeqqpus and qozzpus
      ↻ 重复节点，计数: 2

   节点 31: donxpus is reybpus
      ↻ 重复节点，计数: 2

   节点 32: reybpus is yozxpus and wibnpus
      ↻ 重复节点，计数: 2

   节点 33: yozxpus is mufzpus and didqpus
      ↻ 重复节点，计数: 2

   节点 34: mufzpus is dorqpus and gunzpus
      ↻ 重复节点，计数: 2

   节点 35: dorqpus is gelbpus and texjpus
      ↻ 重复节点，计数: 2

   节点 36: gelbpus is nugqpus and josmpus and qaclpus
      ↻ 重复节点，计数: 2

   节点 37: nugqpus is bubxpus
      ↻ 重复节点，计数: 3

   节点 38: bubxpus is jovtpus and tedqpus
      ↻ 重复节点，计数: 2

   节点 39: jovtpus is wobgpus
      ↻ 重复节点，计数: 3

   节点 40: wobgpus is babgpus and wuplpus
      ↻ 重复节点，计数: 2

   节点 41: x is yihhpus
      ↻ 重复节点，计数: 2

   节点 42: yihhpus is donxpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: yihhpus is donxpus and xeqqpus and qozzpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: yihhpus is donxpus and xeqqpus and qozzpus
  ✓ 点亮LoG节点: yihhpus is donxpus and xeqqpus
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 43: donxpus is reybpus
      ↻ 重复节点，计数: 3

   节点 44: reybpus is yozxpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: reybpus is yozxpus and wibnpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: reybpus is yozxpus and wibnpus

   节点 45: yozxpus is mufzpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: yozxpus is mufzpus
      ✅ 验证成功 + LoG匹配

   节点 46: mufzpus is dorqpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: mufzpus is dorqpus
      ✅ 验证成功 + LoG匹配

   节点 47: dorqpus is gelbpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: dorqpus is gelbpus
      ✅ 验证成功 + LoG匹配

   节点 48: gelbpus is nugqpus
      ↻ 重复节点，计数: 2

   节点 49: nugqpus is bubxpus
      ↻ 重复节点，计数: 4

   节点 50: bubxpus is jovtpus
      ↻ 重复节点，计数: 2

   节点 51: jovtpus is wobgpus
      ↻ 重复节点，计数: 4

   节点 52: wobgpus is babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: wobgpus is babgpus and wuplpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: wobgpus is babgpus and wuplpus

   节点 53: x is babgpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is babgpus
[子树点亮]     └─ 点亮依赖节点: x is dorqpus (深度3)
[子树点亮]     └─ 点亮依赖节点: dorqpus is babgpus (深度3)
[子树点亮]     └─ 点亮依赖节点: x is donxpus (深度4)
[子树点亮]     └─ 点亮依赖节点: donxpus is dorqpus (深度4)
[子树点亮]     └─ 点亮依赖节点: dorqpus is nugqpus (深度4)
[子树点亮]     └─ 点亮依赖节点: nugqpus is babgpus (深度4)
[子树点亮]     └─ 点亮依赖节点: x is donxpus and xeqqpus (深度5)
[子树点亮]     └─ 点亮依赖节点: donxpus is yozxpus (深度5)
[子树点亮]     └─ 点亮依赖节点: yozxpus is dorqpus (深度5)
[子树点亮]     └─ 点亮依赖节点: dorqpus is nugqpus and josmpus (深度5)
[子树点亮]     └─ 点亮依赖节点: nugqpus is jovtpus (深度5)
[子树点亮]     └─ 点亮依赖节点: jovtpus is babgpus (深度5)
[子树点亮]     └─ 点亮依赖节点: donxpus is yozxpus and wibnpus (深度6)
[子树点亮]     └─ 点亮依赖节点: nugqpus is jovtpus and tedqpus (深度6)
[子树点亮]     └─ 点亮依赖节点: jovtpus is babgpus and wuplpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 15 个节点
      ✅ 验证成功 + LoG匹配

   节点 54: tongpus is babrpus and xiqspus
      ↻ 重复节点，计数: 2

   节点 55: tongpus is giqzpus and horkpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 56: x is yoscpus
      ↻ 重复节点，计数: 5

   节点 57: yoscpus is fexxpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: yoscpus is fexxpus and rathpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: yoscpus is fexxpus and rathpus

   节点 58: fexxpus is bezppus
      ↻ 重复节点，计数: 5

   节点 59: bezppus is giqzpus
      ↻ 重复节点，计数: 2

   节点 60: x is yoscpus
      ↻ 重复节点，计数: 6

   节点 61: yoscpus is fexxpus and rathpus
      ↻ 重复节点，计数: 5

   节点 62: fexxpus is bezppus
      ↻ 重复节点，计数: 6

   节点 63: bezppus is giqzpus and tikspus
      ↻ 重复节点，计数: 4

   节点 64: yoscpus is fexxpus
      ↻ 重复节点，计数: 2

   节点 65: fexxpus is bezppus
      ↻ 重复节点，计数: 7

   节点 66: yoscpus is bezppus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: yoscpus is fexxpus → fexxpus is bezppus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: yoscpus is fexxpus
  - 前提: fexxpus is bezppus

   节点 67: yoscpus is fexxpus
      ↻ 重复节点，计数: 3

   节点 68: fexxpus is bezppus
      ↻ 重复节点，计数: 8

   节点 69: x is yoscpus
      ↻ 重复节点，计数: 7

   节点 70: yoscpus is fexxpus
      ↻ 重复节点，计数: 4

   节点 71: x is fexxpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is fexxpus
[子树点亮]     └─ 点亮依赖节点: x is fexxpus and rathpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 1 个节点
      ✅ 验证成功 + LoG匹配

   节点 72: fexxpus is bezppus
      ↻ 重复节点，计数: 9

   节点 73: x is bezppus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is yoscpus → yoscpus is bezppus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: x is yoscpus
  - 前提: yoscpus is bezppus

   节点 74: bezppus is giqzpus and tikspus
      ↻ 重复节点，计数: 5

   节点 75: x is giqzpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is giqzpus
[子树点亮]     └─ 点亮依赖节点: fexxpus is giqzpus (深度5)
[子树点亮]     └─ 点亮依赖节点: fexxpus is giqzpus and tikspus (深度6)
[后处理]   └─ 自动点亮依赖子树: 2 个节点
      ✅ 验证成功 + LoG匹配

   节点 76: x is tikspus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is yoscpus → yoscpus is tikspus
[后处理] 基于推理轨迹点亮节点，使用了 4 个前提条件:
  - 前提: x is yoscpus
  - 前提: yoscpus is fexxpus
  - 前提: fexxpus is bezppus
  - 前提: bezppus is tikspus

   节点 77: giqzpus is tongpus and horkpus
      ↻ 重复节点，计数: 5

   节点 78: x is tongpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is yoscpus → yoscpus is tongpus
[后处理] 基于推理轨迹点亮节点，使用了 5 个前提条件:
  - 前提: x is yoscpus
  - 前提: yoscpus is fexxpus
  - 前提: fexxpus is bezppus
  - 前提: bezppus is giqzpus
  - 前提: giqzpus is tongpus and horkpus
  ✓ 点亮LoG节点: giqzpus is tongpus
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 79: tongpus is babrpus and xiqspus
      ↻ 重复节点，计数: 3

   节点 80: x is babrpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is babrpus
[子树点亮]     └─ 点亮依赖节点: x is babrpus and hodcpus (深度3)
[子树点亮]     └─ 点亮依赖节点: giqzpus is babrpus and hodcpus (深度4)
[子树点亮]     └─ 点亮依赖节点: giqzpus is babrpus (深度5)
[子树点亮]     └─ 点亮依赖节点: giqzpus is hodcpus (深度5)
[子树点亮]     └─ 点亮依赖节点: tongpus is babrpus (深度6)
[子树点亮]     └─ 点亮依赖节点: giqzpus is hodcpus and yosbpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 6 个节点
      ✅ 验证成功 + LoG匹配

   节点 81: x is babrpus
      ↻ 重复节点，计数: 2

   节点 82: x is yihhpus
      ↻ 重复节点，计数: 3

   节点 83: yihhpus is babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: yihhpus is donxpus → donxpus is babgpus
[后处理] 基于推理轨迹点亮节点，使用了 11 个前提条件:
  - 前提: yihhpus is donxpus
  - 前提: donxpus is reybpus
  - 前提: reybpus is yozxpus
  - 前提: yozxpus is mufzpus
  - 前提: mufzpus is dorqpus
  - 前提: dorqpus is gelbpus
  - 前提: gelbpus is nugqpus
  - 前提: nugqpus is bubxpus
  - 前提: bubxpus is jovtpus
  - 前提: jovtpus is wobgpus
  - 前提: wobgpus is babgpus

   节点 84: x is babrpus
      ↻ 重复节点，计数: 3

   节点 85: x is babgpus and babrpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is babgpus and babrpus
      ✅ 验证成功 + LoG匹配

   节点 86: giqzpus is fajtpus
      ↻ 重复节点，计数: 5

🔍 分析推理路径完整性...

============================================================
[后处理] 处理完成
============================================================
📈 处理统计:
   - 处理的actual节点: 86
   - 新增节点: 27
   - 更新已存在节点: 59
   - 点亮的LoG节点: 36

🎯 推理质量统计:
   - 完美推理: 25 (节点正确 + 路径正确)
   - 部分推理: 2 (节点正确 + 路径部分错误)
   - 无效推理: 0 (节点错误或路径完全错误)
[LoG分析] LoG图: 36节点, 20前提, 复杂度1-20

📊 === Statement列表分析 ===
📈 节点统计:
   - 总节点数: 47
   - 前提节点: 20
   - 推理节点: 25
   - 幻觉节点: 2
   - 点亮LoG节点: 36

❌ 幻觉节点详情:
   - wobgpus is jovtpus (出现1次)
   - tongpus is giqzpus and horkpus (出现1次)

✅ 推理节点详情:
   🟢 bezppus is giqzpus (出现2次, 质量:perfect)
   🟢 bezppus is tikspus (出现1次, 质量:perfect)
   🟡 bubxpus is jovtpus (出现2次, 质量:partial)
      ⚠️  无效依赖: ['wobgpus is jovtpus']
   🟢 bubxpus is tedqpus (出现1次, 质量:perfect)
   🟢 gelbpus is nugqpus (出现2次, 质量:perfect)
   🟢 gelbpus is josmpus (出现1次, 质量:perfect)
   🟢 gelbpus is qaclpus (出现1次, 质量:perfect)
   🟢 x is yihhpus (出现3次, 质量:perfect)
   🟢 yihhpus is donxpus (出现1次, 质量:perfect)
   🟢 reybpus is yozxpus (出现1次, 质量:perfect)
   🟢 yozxpus is mufzpus (出现1次, 质量:perfect)
   🟢 mufzpus is dorqpus (出现1次, 质量:perfect)
   🟢 dorqpus is gelbpus (出现1次, 质量:perfect)
   🟡 wobgpus is babgpus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['wobgpus is jovtpus']
   🟢 x is babgpus (出现1次, 质量:perfect)
   🟢 yoscpus is fexxpus (出现4次, 质量:perfect)
   🟢 yoscpus is bezppus (出现1次, 质量:perfect)
   🟢 x is fexxpus (出现1次, 质量:perfect)
   🟢 x is bezppus (出现1次, 质量:perfect)
   🟢 x is giqzpus (出现1次, 质量:perfect)
   🟢 x is tikspus (出现1次, 质量:perfect)
   🟢 x is tongpus (出现1次, 质量:perfect)
   🟢 x is babrpus (出现3次, 质量:perfect)
   🟢 yihhpus is babgpus (出现1次, 质量:perfect)
   🟢 x is babgpus and babrpus (出现1次, 质量:perfect)

🔥 点亮的LoG节点:
   - x is donxpus and xeqqpus
   - tongpus is babrpus
   - giqzpus is babrpus and hodcpus
   - dorqpus is babgpus
   - donxpus is yozxpus and wibnpus
   - fexxpus is giqzpus and tikspus
   - mufzpus is dorqpus
   - dorqpus is nugqpus and josmpus
   - x is fexxpus and rathpus
   - x is babrpus
   - x is babgpus
   - nugqpus is babgpus
   - giqzpus is tongpus
   - giqzpus is hodcpus and yosbpus
   - yozxpus is mufzpus
   - jovtpus is babgpus
   - x is fexxpus
   - x is donxpus
   - x is giqzpus
   - giqzpus is babrpus
   - yihhpus is donxpus and xeqqpus
   - x is babgpus and babrpus
   - gelbpus is nugqpus and josmpus
   - dorqpus is gelbpus
   - yozxpus is dorqpus
   - nugqpus is jovtpus
   - x is yihhpus
   - fexxpus is giqzpus
   - x is babrpus and hodcpus
   - donxpus is yozxpus
   - nugqpus is jovtpus and tedqpus
   - jovtpus is babgpus and wuplpus
   - giqzpus is hodcpus
   - dorqpus is nugqpus
   - x is dorqpus
   - donxpus is dorqpus

============================================================
📊 计算评估指标
============================================================

🎯 计算Coverage指标...
   深度Coverage: 6/6 = 100.00%
   最深点亮节点: x is babgpus and babrpus (第6层)
   节点Coverage: 36/36 = 100.00%
   前提条件Coverage: 19/20 = 95.00%
   各推理层点亮比例:
     第1层: 14/14 = 100.00%
     第2层: 10/10 = 100.00%
     第3层: 6/6 = 100.00%
     第4层: 3/3 = 100.00%
     第5层: 2/2 = 100.00%
     第6层: 1/1 = 100.00%

🎯 计算Precision指标...
   Error Rate: 2/27 = 7.41%
   可推导节点: 25/27
   Strict Error Rate: 4/27 = 14.81%
   严格有效节点: 23/27

   详细分析:
     完美推理: 25 (92.59%)
     部分推理: 2 (7.41%)
     无效推理: 0 (0.00%)

================================================================================
处理记录 43/50
================================================================================
记录索引: 42
问题状态: correct
📁 从缓存加载提取结果: evaluation_results.LoG_6.deepseek-reasoner_record_42.json
✅ 使用缓存结果:
   - 句子数: 375
   - 提取的语句数: 592
   - 初始条件数: 7

=== Statement提取完成 ===
总句子数: 375
成功提取: 375
失败提取: 0
总statements数: 592

=== 开始清洗Statement格式 ===
原始statements数: 592
清洗后statements数: 427
过滤掉的statements数: 165
清洗后的statements:
  1. [planning] x is babgpus
  2. [planning] x is babrpus
  3. [planning] x is babspus
  4. [actual] fotdpus is qoxhpus
  5. [actual] kiwlpus is yawlpus
  6. [actual] kiwlpus is forcpus
  7. [actual] x is fotdpus
  8. [actual] kiwlpus is babrpus
  9. [actual] puzdpus is kiwlpus and qadppus
  10. [actual] qoxhpus is puzdpus and bamgpus and pelcpus
  11. [planning] x is babgpus
  12. [planning] x is babrpus
  13. [planning] x is babspus
  14. [actual] kiwlpus is babrpus
  15. [actual] kiwlpus is babrpus
  16. [actual] x is fotdpus
  17. [actual] fotdpus is qoxhpus
  18. [actual] x is fotdpus
  19. [actual] fotdpus is qoxhpus
  20. [actual] qoxhpus is puzdpus and bamgpus and pelcpus
  21. [actual] qoxhpus is puzdpus and bamgpus and pelcpus
  22. [actual] puzdpus is a subset of qoxhpus
  23. [actual] puzdpus is kiwlpus and qadppus
  24. [actual] puzdpus is kiwlpus and qadppus
  25. [actual] kiwlpus is babrpus
  26. [actual] kiwlpus is puzdpus
  27. [actual] puzdpus is qoxhpus
  28. [planning] x is babgpus
  29. [actual] x is fotdpus
  30. [actual] fotdpus is qoxhpus
  31. [actual] x is qoxhpus
  32. [planning] x is babrpus
  33. [planning] x is the others
  34. [actual] kiwlpus is babrpus
  35. [planning] x is related to kiwlpus
  36. [actual] x is fotdpus
  37. [actual] fotdpus is qoxhpus
  38. [actual] puzdpus is kiwlpus
  39. [actual] kiwlpus is babrpus
  40. [actual] x is fotdpus
  41. [actual] fotdpus is qoxhpus
  42. [actual] kiwlpus is babrpus
  43. [planning] x is kiwlpus
  44. [planning] x is directly babrpus
  45. [actual] x is qoxhpus
  46. [planning] x is kiwlpus
  47. [actual] fotdpus is qoxhpus
  48. [actual] fotdpus is an element of the set qoxhpus
  49. [planning] fotdpus is a subset of qoxhpus
  50. [actual] puzdpus is kiwlpus and qadppus
  51. [actual] qoxhpus is puzdpus and bamgpus and pelcpus
  52. [planning] fotdpus is qoxhpus
  53. [planning] fotdpus is qoxhpus
  54. [actual] kiwlpus is yawlpus
  55. [planning] kiwlpus is yawlpus
  56. [actual] kiwlpus is forcpus
  57. [actual] kiwlpus is babrpus
  58. [actual] puzdpus is kiwlpus and qadppus
  59. [actual] qoxhpus is puzdpus and bamgpus and pelcpus
  60. [actual] x is fotdpus
  61. [planning] x is fotdpus
  62. [planning] x is fotdpus
  63. [actual] x is fotdpus
  64. [planning] x is fotdpus
  65. [actual] x is fotdpus
  66. [actual] fotdpus is a category that contains x
  67. [actual] fotdpus is qoxhpus
  68. [planning] x is babgpus
  69. [planning] x is babrpus
  70. [planning] x is babspus
  71. [actual] kiwlpus is babrpus
  72. [planning] x is babrpus
  73. [actual] x is fotdpus
  74. [actual] fotdpus is qoxhpus
  75. [actual] qoxhpus is puzdpus
  76. [actual] puzdpus is kiwlpus
  77. [actual] puzdpus is qadppus
  78. [actual] kiwlpus is puzdpus
  79. [actual] puzdpus is qoxhpus
  80. [actual] x is fotdpus
  81. [actual] fotdpus is qoxhpus
  82. [planning] x is kiwlpus
  83. [actual] qoxhpus is puzdpus and bamgpus and pelcpus
  84. [actual] fotdpus is qoxhpus
  85. [planning] fotdpus is puzdpus and bamgpus and pelcpus
  86. [planning] fotdpus is a subset of puzdpus and bamgpus and pelcpus
  87. [planning] fotdpus is separate
  88. [actual] fotdpus is puzdpus and bamgpus and pelcpus
  89. [planning] qoxhpus is puzdpus and bamgpus and pelcpus
  90. [actual] fotdpus is qoxhpus
  91. [planning] fotdpus is a subset of puzdpus
  92. [planning] fotdpus is a subset of bamgpus
  93. [planning] fotdpus is a subset of pelcpus
  94. [planning] fotdpus is another subset
  95. [actual] kiwlpus is puzdpus
  96. [actual] puzdpus is qoxhpus
  97. [actual] fotdpus is qoxhpus
  98. [planning] fotdpus is qoxhpus
  99. [planning] puzdpus is qoxhpus
  100. [planning] fotdpus is puzdpus
  101. [planning] fotdpus is puzdpus and puzdpus is fotdpus
  102. [planning] fotdpus is babgpus
  103. [planning] puzdpus is babgpus
  104. [planning] fotdpus is babgpus and babkpus and babmpus
  105. [actual] kiwlpus is babrpus
  106. [planning] x is kiwlpus
  107. [planning] x is babrpus
  108. [actual] x is fotdpus
  109. [planning] fotdpus is kiwlpus
  110. [actual] fotdpus is qoxhpus
  111. [actual] kiwlpus is yawlpus
  112. [actual] kiwlpus is forcpus
  113. [actual] kiwlpus is babrpus
  114. [actual] puzdpus is kiwlpus and qadppus
  115. [planning] kiwlpus is puzdpus
  116. [planning] qadppus is puzdpus
  117. [planning] puzdpus is kiwlpus
  118. [actual] puzdpus is kiwlpus and qadppus
  119. [actual] qoxhpus is puzdpus and bamgpus and pelcpus
  120. [planning] qoxhpus is puzdpus
  121. [planning] qoxhpus is bamgpus
  122. [planning] qoxhpus is pelcpus
  123. [actual] qoxhpus is puzdpus and bamgpus and pelcpus
  124. [actual] puzdpus is kiwlpus and qadppus
  125. [actual] kiwlpus is yawlpus
  126. [planning] puzdpus is kiwlpus
  127. [planning] puzdpus is qadppus
  128. [actual] qoxhpus is puzdpus and bamgpus and pelcpus
  129. [planning] qoxhpus is puzdpus
  130. [planning] qoxhpus is bamgpus
  131. [planning] qoxhpus is pelcpus
  132. [planning] puzdpus is a category
  133. [actual] kiwlpus is babrpus
  134. [actual] kiwlpus is babrpus
  135. [actual] babrpus is a category containing kiwlpus
  136. [actual] puzdpus is kiwlpus and qadppus
  137. [actual] kiwlpus is yawlpus
  138. [planning] puzdpus is kiwlpus
  139. [planning] kiwlpus is a category
  140. [planning] puzdpus is a member of kiwlpus
  141. [planning] kiwlpus is a member of other categories
  142. [planning] x is babgpus
  143. [planning] x is babrpus
  144. [planning] x is babspus
  145. [actual] x is fotdpus
  146. [actual] x is fotdpus category
  147. [actual] fotdpus is qoxhpus
  148. [actual] fotdpus is qoxhpus category
  149. [actual] qoxhpus is puzdpus and bamgpus and pelcpus
  150. [actual] puzdpus is kiwlpus and qadppus
  151. [planning] puzdpus is kiwlpus and qadppus
  152. [actual] qoxhpus is puzdpus and bamgpus and pelcpus
  153. [planning] puzdpus is qoxhpus
  154. [planning] qoxhpus is puzdpus
  155. [planning] qoxhpus is puzdpus
  156. [actual] fotdpus is qoxhpus
  157. [planning] fotdpus is a subset
  158. [actual] puzdpus is kiwlpus and qadppus
  159. [planning] kiwlpus is categories
  160. [planning] qadppus is categories
  161. [planning] puzdpus is member of kiwlpus
  162. [planning] puzdpus is member of qadppus
  163. [actual] kiwlpus is yawlpus
  164. [actual] kiwlpus is a member of yawlpus
  165. [planning] kiwlpus is a category
  166. [planning] kiwlpus is a member of another category
  167. [actual] kiwlpus is forcpus
  168. [actual] kiwlpus is member of forcpus
  169. [actual] kiwlpus is babrpus
  170. [actual] qoxhpus is puzdpus and bamgpus and pelcpus
  171. [actual] puzdpus is a category that contains qoxhpus
  172. [actual] puzdpus is kiwlpus and qadppus
  173. [actual] puzdpus is kiwlpus
  174. [actual] fotdpus is qoxhpus
  175. [actual] kiwlpus is yawlpus
  176. [actual] kiwlpus is yawlpus
  177. [actual] kiwlpus is forcpus
  178. [actual] x is fotdpus
  179. [actual] kiwlpus is babrpus
  180. [actual] kiwlpus is babrpus
  181. [actual] puzdpus is kiwlpus and qadppus
  182. [actual] qoxhpus is puzdpus and bamgpus and pelcpus
  183. [actual] qoxhpus is puzdpus
  184. [actual] qoxhpus is bamgpus
  185. [actual] qoxhpus is pelcpus
  186. [actual] qoxhpus is bamgpus
  187. [actual] qoxhpus is pelcpus
  188. [actual] puzdpus is kiwlpus
  189. [actual] kiwlpus is yawlpus
  190. [actual] kiwlpus is forcpus
  191. [actual] kiwlpus is babrpus
  192. [planning] x is babgpus
  193. [planning] x is babrpus
  194. [planning] x is babspus
  195. [actual] kiwlpus is babrpus
  196. [planning] x is babrpus
  197. [actual] x is fotdpus
  198. [actual] fotdpus is qoxhpus
  199. [actual] qoxhpus is puzdpus
  200. [actual] puzdpus is kiwlpus
  201. [actual] kiwlpus is babrpus
  202. [actual] x is fotdpus
  203. [actual] fotdpus is qoxhpus
  204. [planning] x is qoxhpus
  205. [actual] fotdpus is a category
  206. [actual] x is fotdpus
  207. [actual] fotdpus is a set
  208. [actual] x is an element of fotdpus
  209. [actual] qoxhpus is a set of sets
  210. [actual] qoxhpus is puzdpus
  211. [actual] kiwlpus is babrpus
  212. [planning] x is babrpus
  213. [actual] x is fotdpus
  214. [actual] fotdpus is qoxhpus
  215. [actual] qoxhpus is puzdpus
  216. [actual] puzdpus is kiwlpus
  217. [planning] puzdpus is kiwlpus
  218. [planning] puzdpus is a set that contains qoxhpus
  219. [actual] puzdpus is kiwlpus
  220. [actual] puzdpus is qadppus
  221. [actual] puzdpus is kiwlpus
  222. [planning] qoxhpus is puzdpus
  223. [planning] qoxhpus is puzdpus
  224. [actual] qoxhpus is puzdpus
  225. [planning] qoxhpus is puzdpus
  226. [actual] qoxhpus is puzdpus
  227. [actual] x is fotdpus
  228. [actual] x is fotdpus
  229. [actual] fotdpus is qoxhpus
  230. [planning] x is babgpus
  231. [planning] x is babrpus
  232. [planning] x is babspus
  233. [actual] kiwlpus is babrpus
  234. [planning] x is babrpus
  235. [actual] kiwlpus is babrpus
  236. [planning] x is babgpus or babrpus or babspus
  237. [planning] x is babgpus
  238. [actual] kiwlpus is babrpus
  239. [planning] x is babrpus
  240. [planning] x is kiwlpus or something
  241. [planning] x is babrpus
  242. [planning] x is babgpus or babrpus or babspus
  243. [planning] x is babrpus
  244. [actual] kiwlpus is babrpus
  245. [actual] qoxhpus is puzdpus and bamgpus and pelcpus
  246. [actual] qoxhpus is puzdpus and bamgpus and pelcpus
  247. [actual] fotdpus is qoxhpus
  248. [actual] fotdpus is puzdpus
  249. [actual] fotdpus is bamgpus
  250. [actual] fotdpus is pelcpus
  251. [actual] puzdpus is kiwlpus and qadppus
  252. [planning] puzdpus is kiwlpus
  253. [planning] puzdpus is qadppus
  254. [actual] kiwlpus is other things
  255. [actual] kiwlpus is yawlpus
  256. [planning] x is fotdpus
  257. [planning] fotdpus is qoxhpus
  258. [planning] qoxhpus is puzdpus
  259. [planning] puzdpus is kiwlpus
  260. [planning] kiwlpus is babrpus
  261. [planning] x is babrpus?
  262. [planning] x is a subset of babrpus
  263. [planning] x is babrpus
  264. [planning] x is babrpus
  265. [actual] x is fotdpus
  266. [planning] x is babrpus
  267. [planning] x is fotdpus
  268. [planning] fotdpus is a category
  269. [planning] x is an individual
  270. [planning] x is an instance or a subset
  271. [planning] x is babgpus
  272. [planning] x is babrpus
  273. [planning] x is babspus
  274. [actual] qoxhpus is puzdpus and bamgpus and pelcpus
  275. [actual] puzdpus is kiwlpus and qadppus
  276. [actual] x is babrpus
  277. [actual] x is babrpus
  278. [planning] x is babrpus
  279. [actual] bamgpus is babgpus
  280. [planning] bamgpus is differentbabgpus
  281. [actual] x is babrpus
  282. [planning] x is babrpus
  283. [planning] x is babgpus or babrpus or babspus
  284. [actual] fotdpus is qoxhpus
  285. [planning] fotdpus is qoxhpus
  286. [actual] x is fotdpus
  287. [actual] kiwlpus is babrpus
  288. [actual] kiwlpus is yawlpus
  289. [actual] puzdpus is kiwlpus and qadppus
  290. [actual] puzdpus is kiwlpus
  291. [actual] puzdpus is qadppus
  292. [actual] kiwlpus is babrpus
  293. [planning] puzdpus is babrpus
  294. [planning] x is babrpus
  295. [actual] qoxhpus is puzdpus and bamgpus and pelcpus
  296. [planning] qoxhpus is puzdpus
  297. [planning] qoxhpus is bamgpus
  298. [planning] qoxhpus is pelcpus
  299. [planning] qoxhpus is puzdpus and bamgpus
  300. [planning] qoxhpus is puzdpus and pelcpus
  301. [planning] qoxhpus is bamgpus and pelcpus
  302. [actual] qoxhpus is puzdpus
  303. [actual] puzdpus is kiwlpus
  304. [actual] x is babrpus
  305. [planning] x is babgpus or babrpus or babspus
  306. [actual] puzdpus is kiwlpus and qadppus
  307. [planning] x is fotdpus
  308. [planning] x is qoxhpus
  309. [planning] x is puzdpus
  310. [planning] x is babrpus
  311. [actual] x is fotdpus
  312. [actual] fotdpus is qoxhpus
  313. [actual] qoxhpus is puzdpus
  314. [actual] puzdpus is babrpus
  315. [planning] x is babrpus
  316. [planning] x is B
  317. [actual] kiwlpus is babrpus
  318. [actual] puzdpus is kiwlpus and qadppus
  319. [actual] kiwlpus is a category that contains puzdpus
  320. [planning] puzdpus is kiwlpus and qadppus
  321. [actual] qoxhpus is puzdpus and bamgpus and pelcpus
  322. [planning] x is babrpus
  323. [planning] x is others
  324. [actual] fotdpus is qoxhpus
  325. [actual] qoxhpus is puzdpus and
  326. [actual] qoxhpus is puzdpus
  327. [actual] fotdpus is qoxhpus
  328. [planning] fotdpus is puzdpus
  329. [actual] x is a set that is babrpus
  330. [actual] x is fotdpus
  331. [actual] x is qoxhpus
  332. [actual] x is puzdpus
  333. [actual] x is kiwlpus
  334. [actual] kiwlpus is babrpus
  335. [planning] x is babrpus
  336. [planning] x is babrpus only if all these sets are subsets
  337. [planning] x is babgpus or babrpus or babspus
  338. [actual] kiwlpus is yawlpus
  339. [actual] kiwlpus is forcpus
  340. [actual] kiwlpus is babrpus
  341. [planning] kiwlpus is a subset of yawlpus
  342. [planning] kiwlpus is an element of yawlpus
  343. [actual] puzdpus is kiwlpus and qadppus
  344. [planning] puzdpus is subset of kiwlpus
  345. [planning] kiwlpus is subset of babrpus
  346. [planning] puzdpus is subset of babrpus
  347. [actual] puzdpus is an element of kiwlpus
  348. [actual] kiwlpus is an element of babrpus
  349. [actual] puzdpus is babrpus only if babrpus contains all elements of kiwlpus
  350. [actual] kiwlpus is babrpus
  351. [planning] puzdpus is babrpus
  352. [planning] kiwlpus is an element of babrpus
  353. [planning] babrpus is a superset
  354. [actual] puzdpus is an element of kiwlpus
  355. [actual] kiwlpus is an element of babrpus
  356. [actual] kiwlpus is puzdpus
  357. [actual] x is an element of babrpus
  358. [actual] x is babrpus
  359. [planning] x is babrpus
  360. [actual] puzdpus is kiwlpus and qadppus
  361. [actual] qoxhpus is puzdpus and bamgpus and pelcpus
  362. [planning] x is babrpus
  363. [planning] x is babgpus or babrpus or babspus
  364. [actual] kiwlpus is babrpus
  365. [actual] fotdpus is qoxhpus
  366. [actual] fotdpus is qoxhpus
  367. [actual] x is fotdpus
  368. [actual] x is a subset of fotdpus
  369. [actual] x is an element of fotdpus
  370. [actual] fotdpus is a subset of qoxhpus
  371. [actual] x is an element of qoxhpus
  372. [planning] x is an element of B
  373. [planning] x is fotdpus
  374. [planning] x is B
  375. [planning] x is A
  376. [actual] x is fotdpus
  377. [actual] fotdpus is qoxhpus
  378. [planning] x is qoxhpus
  379. [actual] qoxhpus is puzdpus and bamgpus and pelcpus
  380. [planning] x is puzdpus
  381. [planning] x is bamgpus
  382. [planning] x is pelcpus
  383. [actual] puzdpus is kiwlpus and qadppus
  384. [actual] x is kiwlpus
  385. [actual] x is qadppus
  386. [actual] kiwlpus is babrpus
  387. [actual] x is babrpus
  388. [actual] x is babrpus
  389. [actual] x is bamgpus and pelcpus
  390. [planning] x is babrpus
  391. [planning] x is babrpus or babgpus or babspus
  392. [planning] x is babgpus
  393. [planning] x is babspus
  394. [actual] x is babrpus
  395. [planning] x is babgpus or babspus
  396. [planning] x is an individual
  397. [planning] fotdpus is a category
  398. [actual] x is fotdpus
  399. [actual] x is fotdpus
  400. [actual] fotdpus is qoxhpus
  401. [planning] fotdpus is qoxhpus
  402. [actual] kiwlpus is yawlpus
  403. [actual] kiwlpus is a category
  404. [actual] kiwlpus is yawlpus
  405. [actual] puzdpus is kiwlpus and qadppus
  406. [actual] puzdpus is kiwlpus
  407. [actual] puzdpus is qadppus
  408. [actual] qoxhpus is puzdpus and bamgpus and pelcpus
  409. [actual] x is fotdpus
  410. [actual] fotdpus is qoxhpus
  411. [actual] qoxhpus is puzdpus
  412. [actual] puzdpus is kiwlpus
  413. [actual] kiwlpus is babrpus
  414. [actual] x is babrpus
  415. [actual] x is babrpus
  416. [actual] x is babrpus
  417. [planning] x is babrpus
  418. [actual] x is babrpus
  419. [planning] x is A
  420. [actual] x is babrpus
  421. [planning] x is babrpus
  422. [actual] kiwlpus is babrpus
  423. [actual] x is kiwlpus
  424. [actual] x is babrpus
  425. [actual] x is babrpus
  426. [actual] x is babgpus or babrpus or babspus
  427. [actual] x is babrpus

=== 开始标准化和解析节点 ===
清洗后statements数: 427
标准化后节点数: 354
过滤掉的无效实体数: 73
标准化后的节点:
  1. [planning] x → babgpus (原始: x is babgpus)
  2. [planning] x → babrpus (原始: x is babrpus)
  3. [planning] x → babspus (原始: x is babspus)
  4. [actual] fotdpus → qoxhpus (原始: fotdpus is qoxhpus)
  5. [actual] kiwlpus → yawlpus (原始: kiwlpus is yawlpus)
  6. [actual] kiwlpus → forcpus (原始: kiwlpus is forcpus)
  7. [actual] x → fotdpus (原始: x is fotdpus)
  8. [actual] kiwlpus → babrpus (原始: kiwlpus is babrpus)
  9. [actual] puzdpus → kiwlpus and qadppus (原始: puzdpus is kiwlpus and qadppus)
  10. [actual] qoxhpus → puzdpus and bamgpus and pelcpus (原始: qoxhpus is puzdpus and bamgpus and pelcpus)
  11. [planning] x → babgpus (原始: x is babgpus)
  12. [planning] x → babrpus (原始: x is babrpus)
  13. [planning] x → babspus (原始: x is babspus)
  14. [actual] kiwlpus → babrpus (原始: kiwlpus is babrpus)
  15. [actual] kiwlpus → babrpus (原始: kiwlpus is babrpus)
  16. [actual] x → fotdpus (原始: x is fotdpus)
  17. [actual] fotdpus → qoxhpus (原始: fotdpus is qoxhpus)
  18. [actual] x → fotdpus (原始: x is fotdpus)
  19. [actual] fotdpus → qoxhpus (原始: fotdpus is qoxhpus)
  20. [actual] qoxhpus → puzdpus and bamgpus and pelcpus (原始: qoxhpus is puzdpus and bamgpus and pelcpus)
  21. [actual] qoxhpus → puzdpus and bamgpus and pelcpus (原始: qoxhpus is puzdpus and bamgpus and pelcpus)
  22. [actual] puzdpus → kiwlpus and qadppus (原始: puzdpus is kiwlpus and qadppus)
  23. [actual] puzdpus → kiwlpus and qadppus (原始: puzdpus is kiwlpus and qadppus)
  24. [actual] kiwlpus → babrpus (原始: kiwlpus is babrpus)
  25. [actual] kiwlpus → puzdpus (原始: kiwlpus is puzdpus)
  26. [actual] puzdpus → qoxhpus (原始: puzdpus is qoxhpus)
  27. [planning] x → babgpus (原始: x is babgpus)
  28. [actual] x → fotdpus (原始: x is fotdpus)
  29. [actual] fotdpus → qoxhpus (原始: fotdpus is qoxhpus)
  30. [actual] x → qoxhpus (原始: x is qoxhpus)
  31. [planning] x → babrpus (原始: x is babrpus)
  32. [actual] kiwlpus → babrpus (原始: kiwlpus is babrpus)
  33. [actual] x → fotdpus (原始: x is fotdpus)
  34. [actual] fotdpus → qoxhpus (原始: fotdpus is qoxhpus)
  35. [actual] puzdpus → kiwlpus (原始: puzdpus is kiwlpus)
  36. [actual] kiwlpus → babrpus (原始: kiwlpus is babrpus)
  37. [actual] x → fotdpus (原始: x is fotdpus)
  38. [actual] fotdpus → qoxhpus (原始: fotdpus is qoxhpus)
  39. [actual] kiwlpus → babrpus (原始: kiwlpus is babrpus)
  40. [planning] x → kiwlpus (原始: x is kiwlpus)
  41. [actual] x → qoxhpus (原始: x is qoxhpus)
  42. [planning] x → kiwlpus (原始: x is kiwlpus)
  43. [actual] fotdpus → qoxhpus (原始: fotdpus is qoxhpus)
  44. [actual] puzdpus → kiwlpus and qadppus (原始: puzdpus is kiwlpus and qadppus)
  45. [actual] qoxhpus → puzdpus and bamgpus and pelcpus (原始: qoxhpus is puzdpus and bamgpus and pelcpus)
  46. [planning] fotdpus → qoxhpus (原始: fotdpus is qoxhpus)
  47. [planning] fotdpus → qoxhpus (原始: fotdpus is qoxhpus)
  48. [actual] kiwlpus → yawlpus (原始: kiwlpus is yawlpus)
  49. [planning] kiwlpus → yawlpus (原始: kiwlpus is yawlpus)
  50. [actual] kiwlpus → forcpus (原始: kiwlpus is forcpus)
  51. [actual] kiwlpus → babrpus (原始: kiwlpus is babrpus)
  52. [actual] puzdpus → kiwlpus and qadppus (原始: puzdpus is kiwlpus and qadppus)
  53. [actual] qoxhpus → puzdpus and bamgpus and pelcpus (原始: qoxhpus is puzdpus and bamgpus and pelcpus)
  54. [actual] x → fotdpus (原始: x is fotdpus)
  55. [planning] x → fotdpus (原始: x is fotdpus)
  56. [planning] x → fotdpus (原始: x is fotdpus)
  57. [actual] x → fotdpus (原始: x is fotdpus)
  58. [planning] x → fotdpus (原始: x is fotdpus)
  59. [actual] x → fotdpus (原始: x is fotdpus)
  60. [actual] fotdpus → qoxhpus (原始: fotdpus is qoxhpus)
  61. [planning] x → babgpus (原始: x is babgpus)
  62. [planning] x → babrpus (原始: x is babrpus)
  63. [planning] x → babspus (原始: x is babspus)
  64. [actual] kiwlpus → babrpus (原始: kiwlpus is babrpus)
  65. [planning] x → babrpus (原始: x is babrpus)
  66. [actual] x → fotdpus (原始: x is fotdpus)
  67. [actual] fotdpus → qoxhpus (原始: fotdpus is qoxhpus)
  68. [actual] qoxhpus → puzdpus (原始: qoxhpus is puzdpus)
  69. [actual] puzdpus → kiwlpus (原始: puzdpus is kiwlpus)
  70. [actual] puzdpus → qadppus (原始: puzdpus is qadppus)
  71. [actual] kiwlpus → puzdpus (原始: kiwlpus is puzdpus)
  72. [actual] puzdpus → qoxhpus (原始: puzdpus is qoxhpus)
  73. [actual] x → fotdpus (原始: x is fotdpus)
  74. [actual] fotdpus → qoxhpus (原始: fotdpus is qoxhpus)
  75. [planning] x → kiwlpus (原始: x is kiwlpus)
  76. [actual] qoxhpus → puzdpus and bamgpus and pelcpus (原始: qoxhpus is puzdpus and bamgpus and pelcpus)
  77. [actual] fotdpus → qoxhpus (原始: fotdpus is qoxhpus)
  78. [planning] fotdpus → puzdpus and bamgpus and pelcpus (原始: fotdpus is puzdpus and bamgpus and pelcpus)
  79. [actual] fotdpus → puzdpus and bamgpus and pelcpus (原始: fotdpus is puzdpus and bamgpus and pelcpus)
  80. [planning] qoxhpus → puzdpus and bamgpus and pelcpus (原始: qoxhpus is puzdpus and bamgpus and pelcpus)
  81. [actual] fotdpus → qoxhpus (原始: fotdpus is qoxhpus)
  82. [actual] kiwlpus → puzdpus (原始: kiwlpus is puzdpus)
  83. [actual] puzdpus → qoxhpus (原始: puzdpus is qoxhpus)
  84. [actual] fotdpus → qoxhpus (原始: fotdpus is qoxhpus)
  85. [planning] fotdpus → qoxhpus (原始: fotdpus is qoxhpus)
  86. [planning] puzdpus → qoxhpus (原始: puzdpus is qoxhpus)
  87. [planning] fotdpus → puzdpus (原始: fotdpus is puzdpus)
  88. [planning] fotdpus → babgpus (原始: fotdpus is babgpus)
  89. [planning] puzdpus → babgpus (原始: puzdpus is babgpus)
  90. [planning] fotdpus → babgpus and babkpus and babmpus (原始: fotdpus is babgpus and babkpus and babmpus)
  91. [actual] kiwlpus → babrpus (原始: kiwlpus is babrpus)
  92. [planning] x → kiwlpus (原始: x is kiwlpus)
  93. [planning] x → babrpus (原始: x is babrpus)
  94. [actual] x → fotdpus (原始: x is fotdpus)
  95. [planning] fotdpus → kiwlpus (原始: fotdpus is kiwlpus)
  96. [actual] fotdpus → qoxhpus (原始: fotdpus is qoxhpus)
  97. [actual] kiwlpus → yawlpus (原始: kiwlpus is yawlpus)
  98. [actual] kiwlpus → forcpus (原始: kiwlpus is forcpus)
  99. [actual] kiwlpus → babrpus (原始: kiwlpus is babrpus)
  100. [actual] puzdpus → kiwlpus and qadppus (原始: puzdpus is kiwlpus and qadppus)
  101. [planning] kiwlpus → puzdpus (原始: kiwlpus is puzdpus)
  102. [planning] qadppus → puzdpus (原始: qadppus is puzdpus)
  103. [planning] puzdpus → kiwlpus (原始: puzdpus is kiwlpus)
  104. [actual] puzdpus → kiwlpus and qadppus (原始: puzdpus is kiwlpus and qadppus)
  105. [actual] qoxhpus → puzdpus and bamgpus and pelcpus (原始: qoxhpus is puzdpus and bamgpus and pelcpus)
  106. [planning] qoxhpus → puzdpus (原始: qoxhpus is puzdpus)
  107. [planning] qoxhpus → bamgpus (原始: qoxhpus is bamgpus)
  108. [planning] qoxhpus → pelcpus (原始: qoxhpus is pelcpus)
  109. [actual] qoxhpus → puzdpus and bamgpus and pelcpus (原始: qoxhpus is puzdpus and bamgpus and pelcpus)
  110. [actual] puzdpus → kiwlpus and qadppus (原始: puzdpus is kiwlpus and qadppus)
  111. [actual] kiwlpus → yawlpus (原始: kiwlpus is yawlpus)
  112. [planning] puzdpus → kiwlpus (原始: puzdpus is kiwlpus)
  113. [planning] puzdpus → qadppus (原始: puzdpus is qadppus)
  114. [actual] qoxhpus → puzdpus and bamgpus and pelcpus (原始: qoxhpus is puzdpus and bamgpus and pelcpus)
  115. [planning] qoxhpus → puzdpus (原始: qoxhpus is puzdpus)
  116. [planning] qoxhpus → bamgpus (原始: qoxhpus is bamgpus)
  117. [planning] qoxhpus → pelcpus (原始: qoxhpus is pelcpus)
  118. [actual] kiwlpus → babrpus (原始: kiwlpus is babrpus)
  119. [actual] kiwlpus → babrpus (原始: kiwlpus is babrpus)
  120. [actual] puzdpus → kiwlpus and qadppus (原始: puzdpus is kiwlpus and qadppus)
  121. [actual] kiwlpus → yawlpus (原始: kiwlpus is yawlpus)
  122. [planning] puzdpus → kiwlpus (原始: puzdpus is kiwlpus)
  123. [planning] x → babgpus (原始: x is babgpus)
  124. [planning] x → babrpus (原始: x is babrpus)
  125. [planning] x → babspus (原始: x is babspus)
  126. [actual] x → fotdpus (原始: x is fotdpus)
  127. [actual] fotdpus → qoxhpus (原始: fotdpus is qoxhpus)
  128. [actual] qoxhpus → puzdpus and bamgpus and pelcpus (原始: qoxhpus is puzdpus and bamgpus and pelcpus)
  129. [actual] puzdpus → kiwlpus and qadppus (原始: puzdpus is kiwlpus and qadppus)
  130. [planning] puzdpus → kiwlpus and qadppus (原始: puzdpus is kiwlpus and qadppus)
  131. [actual] qoxhpus → puzdpus and bamgpus and pelcpus (原始: qoxhpus is puzdpus and bamgpus and pelcpus)
  132. [planning] puzdpus → qoxhpus (原始: puzdpus is qoxhpus)
  133. [planning] qoxhpus → puzdpus (原始: qoxhpus is puzdpus)
  134. [planning] qoxhpus → puzdpus (原始: qoxhpus is puzdpus)
  135. [actual] fotdpus → qoxhpus (原始: fotdpus is qoxhpus)
  136. [actual] puzdpus → kiwlpus and qadppus (原始: puzdpus is kiwlpus and qadppus)
  137. [actual] kiwlpus → yawlpus (原始: kiwlpus is yawlpus)
  138. [actual] kiwlpus → forcpus (原始: kiwlpus is forcpus)
  139. [actual] kiwlpus → babrpus (原始: kiwlpus is babrpus)
  140. [actual] qoxhpus → puzdpus and bamgpus and pelcpus (原始: qoxhpus is puzdpus and bamgpus and pelcpus)
  141. [actual] puzdpus → kiwlpus and qadppus (原始: puzdpus is kiwlpus and qadppus)
  142. [actual] puzdpus → kiwlpus (原始: puzdpus is kiwlpus)
  143. [actual] fotdpus → qoxhpus (原始: fotdpus is qoxhpus)
  144. [actual] kiwlpus → yawlpus (原始: kiwlpus is yawlpus)
  145. [actual] kiwlpus → yawlpus (原始: kiwlpus is yawlpus)
  146. [actual] kiwlpus → forcpus (原始: kiwlpus is forcpus)
  147. [actual] x → fotdpus (原始: x is fotdpus)
  148. [actual] kiwlpus → babrpus (原始: kiwlpus is babrpus)
  149. [actual] kiwlpus → babrpus (原始: kiwlpus is babrpus)
  150. [actual] puzdpus → kiwlpus and qadppus (原始: puzdpus is kiwlpus and qadppus)
  151. [actual] qoxhpus → puzdpus and bamgpus and pelcpus (原始: qoxhpus is puzdpus and bamgpus and pelcpus)
  152. [actual] qoxhpus → puzdpus (原始: qoxhpus is puzdpus)
  153. [actual] qoxhpus → bamgpus (原始: qoxhpus is bamgpus)
  154. [actual] qoxhpus → pelcpus (原始: qoxhpus is pelcpus)
  155. [actual] qoxhpus → bamgpus (原始: qoxhpus is bamgpus)
  156. [actual] qoxhpus → pelcpus (原始: qoxhpus is pelcpus)
  157. [actual] puzdpus → kiwlpus (原始: puzdpus is kiwlpus)
  158. [actual] kiwlpus → yawlpus (原始: kiwlpus is yawlpus)
  159. [actual] kiwlpus → forcpus (原始: kiwlpus is forcpus)
  160. [actual] kiwlpus → babrpus (原始: kiwlpus is babrpus)
  161. [planning] x → babgpus (原始: x is babgpus)
  162. [planning] x → babrpus (原始: x is babrpus)
  163. [planning] x → babspus (原始: x is babspus)
  164. [actual] kiwlpus → babrpus (原始: kiwlpus is babrpus)
  165. [planning] x → babrpus (原始: x is babrpus)
  166. [actual] x → fotdpus (原始: x is fotdpus)
  167. [actual] fotdpus → qoxhpus (原始: fotdpus is qoxhpus)
  168. [actual] qoxhpus → puzdpus (原始: qoxhpus is puzdpus)
  169. [actual] puzdpus → kiwlpus (原始: puzdpus is kiwlpus)
  170. [actual] kiwlpus → babrpus (原始: kiwlpus is babrpus)
  171. [actual] x → fotdpus (原始: x is fotdpus)
  172. [actual] fotdpus → qoxhpus (原始: fotdpus is qoxhpus)
  173. [planning] x → qoxhpus (原始: x is qoxhpus)
  174. [actual] x → fotdpus (原始: x is fotdpus)
  175. [actual] qoxhpus → puzdpus (原始: qoxhpus is puzdpus)
  176. [actual] kiwlpus → babrpus (原始: kiwlpus is babrpus)
  177. [planning] x → babrpus (原始: x is babrpus)
  178. [actual] x → fotdpus (原始: x is fotdpus)
  179. [actual] fotdpus → qoxhpus (原始: fotdpus is qoxhpus)
  180. [actual] qoxhpus → puzdpus (原始: qoxhpus is puzdpus)
  181. [actual] puzdpus → kiwlpus (原始: puzdpus is kiwlpus)
  182. [planning] puzdpus → kiwlpus (原始: puzdpus is kiwlpus)
  183. [actual] puzdpus → kiwlpus (原始: puzdpus is kiwlpus)
  184. [actual] puzdpus → qadppus (原始: puzdpus is qadppus)
  185. [actual] puzdpus → kiwlpus (原始: puzdpus is kiwlpus)
  186. [planning] qoxhpus → puzdpus (原始: qoxhpus is puzdpus)
  187. [planning] qoxhpus → puzdpus (原始: qoxhpus is puzdpus)
  188. [actual] qoxhpus → puzdpus (原始: qoxhpus is puzdpus)
  189. [planning] qoxhpus → puzdpus (原始: qoxhpus is puzdpus)
  190. [actual] qoxhpus → puzdpus (原始: qoxhpus is puzdpus)
  191. [actual] x → fotdpus (原始: x is fotdpus)
  192. [actual] x → fotdpus (原始: x is fotdpus)
  193. [actual] fotdpus → qoxhpus (原始: fotdpus is qoxhpus)
  194. [planning] x → babgpus (原始: x is babgpus)
  195. [planning] x → babrpus (原始: x is babrpus)
  196. [planning] x → babspus (原始: x is babspus)
  197. [actual] kiwlpus → babrpus (原始: kiwlpus is babrpus)
  198. [planning] x → babrpus (原始: x is babrpus)
  199. [actual] kiwlpus → babrpus (原始: kiwlpus is babrpus)
  200. [planning] x → babgpus or babrpus or babspus (原始: x is babgpus or babrpus or babspus)
  201. [planning] x → babgpus (原始: x is babgpus)
  202. [actual] kiwlpus → babrpus (原始: kiwlpus is babrpus)
  203. [planning] x → babrpus (原始: x is babrpus)
  204. [planning] x → babrpus (原始: x is babrpus)
  205. [planning] x → babgpus or babrpus or babspus (原始: x is babgpus or babrpus or babspus)
  206. [planning] x → babrpus (原始: x is babrpus)
  207. [actual] kiwlpus → babrpus (原始: kiwlpus is babrpus)
  208. [actual] qoxhpus → puzdpus and bamgpus and pelcpus (原始: qoxhpus is puzdpus and bamgpus and pelcpus)
  209. [actual] qoxhpus → puzdpus and bamgpus and pelcpus (原始: qoxhpus is puzdpus and bamgpus and pelcpus)
  210. [actual] fotdpus → qoxhpus (原始: fotdpus is qoxhpus)
  211. [actual] fotdpus → puzdpus (原始: fotdpus is puzdpus)
  212. [actual] fotdpus → bamgpus (原始: fotdpus is bamgpus)
  213. [actual] fotdpus → pelcpus (原始: fotdpus is pelcpus)
  214. [actual] puzdpus → kiwlpus and qadppus (原始: puzdpus is kiwlpus and qadppus)
  215. [planning] puzdpus → kiwlpus (原始: puzdpus is kiwlpus)
  216. [planning] puzdpus → qadppus (原始: puzdpus is qadppus)
  217. [actual] kiwlpus → yawlpus (原始: kiwlpus is yawlpus)
  218. [planning] x → fotdpus (原始: x is fotdpus)
  219. [planning] fotdpus → qoxhpus (原始: fotdpus is qoxhpus)
  220. [planning] qoxhpus → puzdpus (原始: qoxhpus is puzdpus)
  221. [planning] puzdpus → kiwlpus (原始: puzdpus is kiwlpus)
  222. [planning] kiwlpus → babrpus (原始: kiwlpus is babrpus)
  223. [planning] x → babrpus (原始: x is babrpus)
  224. [planning] x → babrpus (原始: x is babrpus)
  225. [actual] x → fotdpus (原始: x is fotdpus)
  226. [planning] x → babrpus (原始: x is babrpus)
  227. [planning] x → fotdpus (原始: x is fotdpus)
  228. [planning] x → babgpus (原始: x is babgpus)
  229. [planning] x → babrpus (原始: x is babrpus)
  230. [planning] x → babspus (原始: x is babspus)
  231. [actual] qoxhpus → puzdpus and bamgpus and pelcpus (原始: qoxhpus is puzdpus and bamgpus and pelcpus)
  232. [actual] puzdpus → kiwlpus and qadppus (原始: puzdpus is kiwlpus and qadppus)
  233. [actual] x → babrpus (原始: x is babrpus)
  234. [actual] x → babrpus (原始: x is babrpus)
  235. [planning] x → babrpus (原始: x is babrpus)
  236. [actual] bamgpus → babgpus (原始: bamgpus is babgpus)
  237. [planning] bamgpus → differentbabgpus (原始: bamgpus is differentbabgpus)
  238. [actual] x → babrpus (原始: x is babrpus)
  239. [planning] x → babrpus (原始: x is babrpus)
  240. [planning] x → babgpus or babrpus or babspus (原始: x is babgpus or babrpus or babspus)
  241. [actual] fotdpus → qoxhpus (原始: fotdpus is qoxhpus)
  242. [planning] fotdpus → qoxhpus (原始: fotdpus is qoxhpus)
  243. [actual] x → fotdpus (原始: x is fotdpus)
  244. [actual] kiwlpus → babrpus (原始: kiwlpus is babrpus)
  245. [actual] kiwlpus → yawlpus (原始: kiwlpus is yawlpus)
  246. [actual] puzdpus → kiwlpus and qadppus (原始: puzdpus is kiwlpus and qadppus)
  247. [actual] puzdpus → kiwlpus (原始: puzdpus is kiwlpus)
  248. [actual] puzdpus → qadppus (原始: puzdpus is qadppus)
  249. [actual] kiwlpus → babrpus (原始: kiwlpus is babrpus)
  250. [planning] puzdpus → babrpus (原始: puzdpus is babrpus)
  251. [planning] x → babrpus (原始: x is babrpus)
  252. [actual] qoxhpus → puzdpus and bamgpus and pelcpus (原始: qoxhpus is puzdpus and bamgpus and pelcpus)
  253. [planning] qoxhpus → puzdpus (原始: qoxhpus is puzdpus)
  254. [planning] qoxhpus → bamgpus (原始: qoxhpus is bamgpus)
  255. [planning] qoxhpus → pelcpus (原始: qoxhpus is pelcpus)
  256. [planning] qoxhpus → puzdpus and bamgpus (原始: qoxhpus is puzdpus and bamgpus)
  257. [planning] qoxhpus → puzdpus and pelcpus (原始: qoxhpus is puzdpus and pelcpus)
  258. [planning] qoxhpus → bamgpus and pelcpus (原始: qoxhpus is bamgpus and pelcpus)
  259. [actual] qoxhpus → puzdpus (原始: qoxhpus is puzdpus)
  260. [actual] puzdpus → kiwlpus (原始: puzdpus is kiwlpus)
  261. [actual] x → babrpus (原始: x is babrpus)
  262. [planning] x → babgpus or babrpus or babspus (原始: x is babgpus or babrpus or babspus)
  263. [actual] puzdpus → kiwlpus and qadppus (原始: puzdpus is kiwlpus and qadppus)
  264. [planning] x → fotdpus (原始: x is fotdpus)
  265. [planning] x → qoxhpus (原始: x is qoxhpus)
  266. [planning] x → puzdpus (原始: x is puzdpus)
  267. [planning] x → babrpus (原始: x is babrpus)
  268. [actual] x → fotdpus (原始: x is fotdpus)
  269. [actual] fotdpus → qoxhpus (原始: fotdpus is qoxhpus)
  270. [actual] qoxhpus → puzdpus (原始: qoxhpus is puzdpus)
  271. [actual] puzdpus → babrpus (原始: puzdpus is babrpus)
  272. [planning] x → babrpus (原始: x is babrpus)
  273. [actual] kiwlpus → babrpus (原始: kiwlpus is babrpus)
  274. [actual] puzdpus → kiwlpus and qadppus (原始: puzdpus is kiwlpus and qadppus)
  275. [planning] puzdpus → kiwlpus and qadppus (原始: puzdpus is kiwlpus and qadppus)
  276. [actual] qoxhpus → puzdpus and bamgpus and pelcpus (原始: qoxhpus is puzdpus and bamgpus and pelcpus)
  277. [planning] x → babrpus (原始: x is babrpus)
  278. [actual] fotdpus → qoxhpus (原始: fotdpus is qoxhpus)
  279. [actual] qoxhpus → puzdpus (原始: qoxhpus is puzdpus)
  280. [actual] fotdpus → qoxhpus (原始: fotdpus is qoxhpus)
  281. [planning] fotdpus → puzdpus (原始: fotdpus is puzdpus)
  282. [actual] x → fotdpus (原始: x is fotdpus)
  283. [actual] x → qoxhpus (原始: x is qoxhpus)
  284. [actual] x → puzdpus (原始: x is puzdpus)
  285. [actual] x → kiwlpus (原始: x is kiwlpus)
  286. [actual] kiwlpus → babrpus (原始: kiwlpus is babrpus)
  287. [planning] x → babrpus (原始: x is babrpus)
  288. [planning] x → babgpus or babrpus or babspus (原始: x is babgpus or babrpus or babspus)
  289. [actual] kiwlpus → yawlpus (原始: kiwlpus is yawlpus)
  290. [actual] kiwlpus → forcpus (原始: kiwlpus is forcpus)
  291. [actual] kiwlpus → babrpus (原始: kiwlpus is babrpus)
  292. [actual] puzdpus → kiwlpus and qadppus (原始: puzdpus is kiwlpus and qadppus)
  293. [actual] kiwlpus → babrpus (原始: kiwlpus is babrpus)
  294. [planning] puzdpus → babrpus (原始: puzdpus is babrpus)
  295. [actual] kiwlpus → puzdpus (原始: kiwlpus is puzdpus)
  296. [actual] x → babrpus (原始: x is babrpus)
  297. [planning] x → babrpus (原始: x is babrpus)
  298. [actual] puzdpus → kiwlpus and qadppus (原始: puzdpus is kiwlpus and qadppus)
  299. [actual] qoxhpus → puzdpus and bamgpus and pelcpus (原始: qoxhpus is puzdpus and bamgpus and pelcpus)
  300. [planning] x → babrpus (原始: x is babrpus)
  301. [planning] x → babgpus or babrpus or babspus (原始: x is babgpus or babrpus or babspus)
  302. [actual] kiwlpus → babrpus (原始: kiwlpus is babrpus)
  303. [actual] fotdpus → qoxhpus (原始: fotdpus is qoxhpus)
  304. [actual] fotdpus → qoxhpus (原始: fotdpus is qoxhpus)
  305. [actual] x → fotdpus (原始: x is fotdpus)
  306. [planning] x → fotdpus (原始: x is fotdpus)
  307. [actual] x → fotdpus (原始: x is fotdpus)
  308. [actual] fotdpus → qoxhpus (原始: fotdpus is qoxhpus)
  309. [planning] x → qoxhpus (原始: x is qoxhpus)
  310. [actual] qoxhpus → puzdpus and bamgpus and pelcpus (原始: qoxhpus is puzdpus and bamgpus and pelcpus)
  311. [planning] x → puzdpus (原始: x is puzdpus)
  312. [planning] x → bamgpus (原始: x is bamgpus)
  313. [planning] x → pelcpus (原始: x is pelcpus)
  314. [actual] puzdpus → kiwlpus and qadppus (原始: puzdpus is kiwlpus and qadppus)
  315. [actual] x → kiwlpus (原始: x is kiwlpus)
  316. [actual] x → qadppus (原始: x is qadppus)
  317. [actual] kiwlpus → babrpus (原始: kiwlpus is babrpus)
  318. [actual] x → babrpus (原始: x is babrpus)
  319. [actual] x → babrpus (原始: x is babrpus)
  320. [actual] x → bamgpus and pelcpus (原始: x is bamgpus and pelcpus)
  321. [planning] x → babrpus (原始: x is babrpus)
  322. [planning] x → babrpus or babgpus or babspus (原始: x is babrpus or babgpus or babspus)
  323. [planning] x → babgpus (原始: x is babgpus)
  324. [planning] x → babspus (原始: x is babspus)
  325. [actual] x → babrpus (原始: x is babrpus)
  326. [planning] x → babgpus or babspus (原始: x is babgpus or babspus)
  327. [actual] x → fotdpus (原始: x is fotdpus)
  328. [actual] x → fotdpus (原始: x is fotdpus)
  329. [actual] fotdpus → qoxhpus (原始: fotdpus is qoxhpus)
  330. [planning] fotdpus → qoxhpus (原始: fotdpus is qoxhpus)
  331. [actual] kiwlpus → yawlpus (原始: kiwlpus is yawlpus)
  332. [actual] kiwlpus → yawlpus (原始: kiwlpus is yawlpus)
  333. [actual] puzdpus → kiwlpus and qadppus (原始: puzdpus is kiwlpus and qadppus)
  334. [actual] puzdpus → kiwlpus (原始: puzdpus is kiwlpus)
  335. [actual] puzdpus → qadppus (原始: puzdpus is qadppus)
  336. [actual] qoxhpus → puzdpus and bamgpus and pelcpus (原始: qoxhpus is puzdpus and bamgpus and pelcpus)
  337. [actual] x → fotdpus (原始: x is fotdpus)
  338. [actual] fotdpus → qoxhpus (原始: fotdpus is qoxhpus)
  339. [actual] qoxhpus → puzdpus (原始: qoxhpus is puzdpus)
  340. [actual] puzdpus → kiwlpus (原始: puzdpus is kiwlpus)
  341. [actual] kiwlpus → babrpus (原始: kiwlpus is babrpus)
  342. [actual] x → babrpus (原始: x is babrpus)
  343. [actual] x → babrpus (原始: x is babrpus)
  344. [actual] x → babrpus (原始: x is babrpus)
  345. [planning] x → babrpus (原始: x is babrpus)
  346. [actual] x → babrpus (原始: x is babrpus)
  347. [actual] x → babrpus (原始: x is babrpus)
  348. [planning] x → babrpus (原始: x is babrpus)
  349. [actual] kiwlpus → babrpus (原始: kiwlpus is babrpus)
  350. [actual] x → kiwlpus (原始: x is kiwlpus)
  351. [actual] x → babrpus (原始: x is babrpus)
  352. [actual] x → babrpus (原始: x is babrpus)
  353. [actual] x → babgpus or babrpus or babspus (原始: x is babgpus or babrpus or babspus)
  354. [actual] x → babrpus (原始: x is babrpus)

开始新的后处理...
[后处理] 从LoG数据文件中获取到图数据，节点数: 11
[后处理] 加载LoG图，包含 11 个节点
  LoG节点 0: x is babgpus or babrpus or babspus (规则: DI, 深度: 1)
  LoG节点 1: x is babrpus (规则: CE, 深度: 2)
  LoG节点 2: x is babrpus and forcpus (规则: MP, 深度: 3)
  LoG节点 3: x is puzdpus (规则: CE, 深度: 4)
  LoG节点 4: puzdpus is babrpus and forcpus (规则: CE, 深度: 4)
  LoG节点 5: x is puzdpus and bamgpus (规则: MP, 深度: 5)
  LoG节点 6: puzdpus is babrpus and forcpus and yawlpus (规则: MP, 深度: 5)
  LoG节点 7: x is qoxhpus (规则: MP, 深度: 6)
  LoG节点 8: qoxhpus is puzdpus and bamgpus (规则: CE, 深度: 6)
  LoG节点 9: puzdpus is kiwlpus (规则: CE, 深度: 6)
  LoG节点 10: kiwlpus is babrpus and forcpus and yawlpus (规则: CI, 深度: 6)

============================================================
[后处理] 开始处理节点
============================================================
📊 初始状态:
   - 标准化节点数: 354
   - 初始条件数: 7
   - LoG图节点数: 11

📋 初始条件列表:
    1. fotdpus is qoxhpus
    2. kiwlpus is yawlpus
    3. kiwlpus is forcpus
    4. x is fotdpus
    5. kiwlpus is babrpus
    6. puzdpus is kiwlpus and qadppus
    7. qoxhpus is puzdpus and bamgpus and pelcpus

🔧 构建初始Statement列表...
✅ 初始Statement列表构建完成，包含 7 个前提节点

🔍 开始处理actual节点...

   节点 1: fotdpus is qoxhpus
      ↻ 重复节点，计数: 2

   节点 2: kiwlpus is yawlpus
      ↻ 重复节点，计数: 2

   节点 3: kiwlpus is forcpus
      ↻ 重复节点，计数: 2

   节点 4: x is fotdpus
      ↻ 重复节点，计数: 2

   节点 5: kiwlpus is babrpus
      ↻ 重复节点，计数: 2

   节点 6: puzdpus is kiwlpus and qadppus
      ↻ 重复节点，计数: 2

   节点 7: qoxhpus is puzdpus and bamgpus and pelcpus
      ↻ 重复节点，计数: 2

   节点 8: kiwlpus is babrpus
      ↻ 重复节点，计数: 3

   节点 9: kiwlpus is babrpus
      ↻ 重复节点，计数: 4

   节点 10: x is fotdpus
      ↻ 重复节点，计数: 3

   节点 11: fotdpus is qoxhpus
      ↻ 重复节点，计数: 3

   节点 12: x is fotdpus
      ↻ 重复节点，计数: 4

   节点 13: fotdpus is qoxhpus
      ↻ 重复节点，计数: 4

   节点 14: qoxhpus is puzdpus and bamgpus and pelcpus
      ↻ 重复节点，计数: 3

   节点 15: qoxhpus is puzdpus and bamgpus and pelcpus
      ↻ 重复节点，计数: 4

   节点 16: puzdpus is kiwlpus and qadppus
      ↻ 重复节点，计数: 3

   节点 17: puzdpus is kiwlpus and qadppus
      ↻ 重复节点，计数: 4

   节点 18: kiwlpus is babrpus
      ↻ 重复节点，计数: 5

   节点 19: kiwlpus is puzdpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 20: puzdpus is qoxhpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 21: x is fotdpus
      ↻ 重复节点，计数: 5

   节点 22: fotdpus is qoxhpus
      ↻ 重复节点，计数: 5

   节点 23: x is qoxhpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is qoxhpus
      ✅ 验证成功 + LoG匹配

   节点 24: kiwlpus is babrpus
      ↻ 重复节点，计数: 6

   节点 25: x is fotdpus
      ↻ 重复节点，计数: 6

   节点 26: fotdpus is qoxhpus
      ↻ 重复节点，计数: 6

   节点 27: puzdpus is kiwlpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: puzdpus is kiwlpus
      ✅ 验证成功 + LoG匹配

   节点 28: kiwlpus is babrpus
      ↻ 重复节点，计数: 7

   节点 29: x is fotdpus
      ↻ 重复节点，计数: 7

   节点 30: fotdpus is qoxhpus
      ↻ 重复节点，计数: 7

   节点 31: kiwlpus is babrpus
      ↻ 重复节点，计数: 8

   节点 32: x is qoxhpus
      ↻ 重复节点，计数: 2

   节点 33: fotdpus is qoxhpus
      ↻ 重复节点，计数: 8

   节点 34: puzdpus is kiwlpus and qadppus
      ↻ 重复节点，计数: 5

   节点 35: qoxhpus is puzdpus and bamgpus and pelcpus
      ↻ 重复节点，计数: 5

   节点 36: kiwlpus is yawlpus
      ↻ 重复节点，计数: 3

   节点 37: kiwlpus is forcpus
      ↻ 重复节点，计数: 3

   节点 38: kiwlpus is babrpus
      ↻ 重复节点，计数: 9

   节点 39: puzdpus is kiwlpus and qadppus
      ↻ 重复节点，计数: 6

   节点 40: qoxhpus is puzdpus and bamgpus and pelcpus
      ↻ 重复节点，计数: 6

   节点 41: x is fotdpus
      ↻ 重复节点，计数: 8

   节点 42: x is fotdpus
      ↻ 重复节点，计数: 9

   节点 43: x is fotdpus
      ↻ 重复节点，计数: 10

   节点 44: fotdpus is qoxhpus
      ↻ 重复节点，计数: 9

   节点 45: kiwlpus is babrpus
      ↻ 重复节点，计数: 10

   节点 46: x is fotdpus
      ↻ 重复节点，计数: 11

   节点 47: fotdpus is qoxhpus
      ↻ 重复节点，计数: 10

   节点 48: qoxhpus is puzdpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: qoxhpus is puzdpus and bamgpus and pelcpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: qoxhpus is puzdpus and bamgpus and pelcpus
  ✓ 点亮LoG节点: qoxhpus is puzdpus and bamgpus
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 49: puzdpus is kiwlpus
      ↻ 重复节点，计数: 2

   节点 50: puzdpus is qadppus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: puzdpus is kiwlpus and qadppus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: puzdpus is kiwlpus and qadppus

   节点 51: kiwlpus is puzdpus
      ↻ 重复节点，计数: 2

   节点 52: puzdpus is qoxhpus
      ↻ 重复节点，计数: 2

   节点 53: x is fotdpus
      ↻ 重复节点，计数: 12

   节点 54: fotdpus is qoxhpus
      ↻ 重复节点，计数: 11

   节点 55: qoxhpus is puzdpus and bamgpus and pelcpus
      ↻ 重复节点，计数: 7

   节点 56: fotdpus is qoxhpus
      ↻ 重复节点，计数: 12

   节点 57: fotdpus is puzdpus and bamgpus and pelcpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: fotdpus is qoxhpus → qoxhpus is puzdpus and bamgpus and pelcpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: fotdpus is qoxhpus
  - 前提: qoxhpus is puzdpus and bamgpus and pelcpus

   节点 58: fotdpus is qoxhpus
      ↻ 重复节点，计数: 13

   节点 59: kiwlpus is puzdpus
      ↻ 重复节点，计数: 3

   节点 60: puzdpus is qoxhpus
      ↻ 重复节点，计数: 3

   节点 61: fotdpus is qoxhpus
      ↻ 重复节点，计数: 14

   节点 62: kiwlpus is babrpus
      ↻ 重复节点，计数: 11

   节点 63: x is fotdpus
      ↻ 重复节点，计数: 13

   节点 64: fotdpus is qoxhpus
      ↻ 重复节点，计数: 15

   节点 65: kiwlpus is yawlpus
      ↻ 重复节点，计数: 4

   节点 66: kiwlpus is forcpus
      ↻ 重复节点，计数: 4

   节点 67: kiwlpus is babrpus
      ↻ 重复节点，计数: 12

   节点 68: puzdpus is kiwlpus and qadppus
      ↻ 重复节点，计数: 7

   节点 69: puzdpus is kiwlpus and qadppus
      ↻ 重复节点，计数: 8

   节点 70: qoxhpus is puzdpus and bamgpus and pelcpus
      ↻ 重复节点，计数: 8

   节点 71: qoxhpus is puzdpus and bamgpus and pelcpus
      ↻ 重复节点，计数: 9

   节点 72: puzdpus is kiwlpus and qadppus
      ↻ 重复节点，计数: 9

   节点 73: kiwlpus is yawlpus
      ↻ 重复节点，计数: 5

   节点 74: qoxhpus is puzdpus and bamgpus and pelcpus
      ↻ 重复节点，计数: 10

   节点 75: kiwlpus is babrpus
      ↻ 重复节点，计数: 13

   节点 76: kiwlpus is babrpus
      ↻ 重复节点，计数: 14

   节点 77: puzdpus is kiwlpus and qadppus
      ↻ 重复节点，计数: 10

   节点 78: kiwlpus is yawlpus
      ↻ 重复节点，计数: 6

   节点 79: x is fotdpus
      ↻ 重复节点，计数: 14

   节点 80: fotdpus is qoxhpus
      ↻ 重复节点，计数: 16

   节点 81: qoxhpus is puzdpus and bamgpus and pelcpus
      ↻ 重复节点，计数: 11

   节点 82: puzdpus is kiwlpus and qadppus
      ↻ 重复节点，计数: 11

   节点 83: qoxhpus is puzdpus and bamgpus and pelcpus
      ↻ 重复节点，计数: 12

   节点 84: fotdpus is qoxhpus
      ↻ 重复节点，计数: 17

   节点 85: puzdpus is kiwlpus and qadppus
      ↻ 重复节点，计数: 12

   节点 86: kiwlpus is yawlpus
      ↻ 重复节点，计数: 7

   节点 87: kiwlpus is forcpus
      ↻ 重复节点，计数: 5

   节点 88: kiwlpus is babrpus
      ↻ 重复节点，计数: 15

   节点 89: qoxhpus is puzdpus and bamgpus and pelcpus
      ↻ 重复节点，计数: 13

   节点 90: puzdpus is kiwlpus and qadppus
      ↻ 重复节点，计数: 13

   节点 91: puzdpus is kiwlpus
      ↻ 重复节点，计数: 3

   节点 92: fotdpus is qoxhpus
      ↻ 重复节点，计数: 18

   节点 93: kiwlpus is yawlpus
      ↻ 重复节点，计数: 8

   节点 94: kiwlpus is yawlpus
      ↻ 重复节点，计数: 9

   节点 95: kiwlpus is forcpus
      ↻ 重复节点，计数: 6

   节点 96: x is fotdpus
      ↻ 重复节点，计数: 15

   节点 97: kiwlpus is babrpus
      ↻ 重复节点，计数: 16

   节点 98: kiwlpus is babrpus
      ↻ 重复节点，计数: 17

   节点 99: puzdpus is kiwlpus and qadppus
      ↻ 重复节点，计数: 14

   节点 100: qoxhpus is puzdpus and bamgpus and pelcpus
      ↻ 重复节点，计数: 14

   节点 101: qoxhpus is puzdpus
      ↻ 重复节点，计数: 2

   节点 102: qoxhpus is bamgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: qoxhpus is puzdpus and bamgpus and pelcpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: qoxhpus is puzdpus and bamgpus and pelcpus

   节点 103: qoxhpus is pelcpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: qoxhpus is puzdpus and bamgpus and pelcpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: qoxhpus is puzdpus and bamgpus and pelcpus

   节点 104: qoxhpus is bamgpus
      ↻ 重复节点，计数: 2

   节点 105: qoxhpus is pelcpus
      ↻ 重复节点，计数: 2

   节点 106: puzdpus is kiwlpus
      ↻ 重复节点，计数: 4

   节点 107: kiwlpus is yawlpus
      ↻ 重复节点，计数: 10

   节点 108: kiwlpus is forcpus
      ↻ 重复节点，计数: 7

   节点 109: kiwlpus is babrpus
      ↻ 重复节点，计数: 18

   节点 110: kiwlpus is babrpus
      ↻ 重复节点，计数: 19

   节点 111: x is fotdpus
      ↻ 重复节点，计数: 16

   节点 112: fotdpus is qoxhpus
      ↻ 重复节点，计数: 19

   节点 113: qoxhpus is puzdpus
      ↻ 重复节点，计数: 3

   节点 114: puzdpus is kiwlpus
      ↻ 重复节点，计数: 5

   节点 115: kiwlpus is babrpus
      ↻ 重复节点，计数: 20

   节点 116: x is fotdpus
      ↻ 重复节点，计数: 17

   节点 117: fotdpus is qoxhpus
      ↻ 重复节点，计数: 20

   节点 118: x is fotdpus
      ↻ 重复节点，计数: 18

   节点 119: qoxhpus is puzdpus
      ↻ 重复节点，计数: 4

   节点 120: kiwlpus is babrpus
      ↻ 重复节点，计数: 21

   节点 121: x is fotdpus
      ↻ 重复节点，计数: 19

   节点 122: fotdpus is qoxhpus
      ↻ 重复节点，计数: 21

   节点 123: qoxhpus is puzdpus
      ↻ 重复节点，计数: 5

   节点 124: puzdpus is kiwlpus
      ↻ 重复节点，计数: 6

   节点 125: puzdpus is kiwlpus
      ↻ 重复节点，计数: 7

   节点 126: puzdpus is qadppus
      ↻ 重复节点，计数: 2

   节点 127: puzdpus is kiwlpus
      ↻ 重复节点，计数: 8

   节点 128: qoxhpus is puzdpus
      ↻ 重复节点，计数: 6

   节点 129: qoxhpus is puzdpus
      ↻ 重复节点，计数: 7

   节点 130: x is fotdpus
      ↻ 重复节点，计数: 20

   节点 131: x is fotdpus
      ↻ 重复节点，计数: 21

   节点 132: fotdpus is qoxhpus
      ↻ 重复节点，计数: 22

   节点 133: kiwlpus is babrpus
      ↻ 重复节点，计数: 22

   节点 134: kiwlpus is babrpus
      ↻ 重复节点，计数: 23

   节点 135: kiwlpus is babrpus
      ↻ 重复节点，计数: 24

   节点 136: kiwlpus is babrpus
      ↻ 重复节点，计数: 25

   节点 137: qoxhpus is puzdpus and bamgpus and pelcpus
      ↻ 重复节点，计数: 15

   节点 138: qoxhpus is puzdpus and bamgpus and pelcpus
      ↻ 重复节点，计数: 16

   节点 139: fotdpus is qoxhpus
      ↻ 重复节点，计数: 23

   节点 140: fotdpus is puzdpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: fotdpus is puzdpus and bamgpus and pelcpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: fotdpus is puzdpus and bamgpus and pelcpus

   节点 141: fotdpus is bamgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: fotdpus is puzdpus and bamgpus and pelcpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: fotdpus is puzdpus and bamgpus and pelcpus

   节点 142: fotdpus is pelcpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: fotdpus is puzdpus and bamgpus and pelcpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: fotdpus is puzdpus and bamgpus and pelcpus

   节点 143: puzdpus is kiwlpus and qadppus
      ↻ 重复节点，计数: 15

   节点 144: kiwlpus is yawlpus
      ↻ 重复节点，计数: 11

   节点 145: x is fotdpus
      ↻ 重复节点，计数: 22

   节点 146: qoxhpus is puzdpus and bamgpus and pelcpus
      ↻ 重复节点，计数: 17

   节点 147: puzdpus is kiwlpus and qadppus
      ↻ 重复节点，计数: 16

   节点 148: x is babrpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is babrpus
[子树点亮]     └─ 点亮依赖节点: x is babrpus and forcpus (深度3)
[子树点亮]     └─ 点亮依赖节点: x is puzdpus (深度4)
[子树点亮]     └─ 点亮依赖节点: puzdpus is babrpus and forcpus (深度4)
[子树点亮]     └─ 点亮依赖节点: x is puzdpus and bamgpus (深度5)
[子树点亮]     └─ 点亮依赖节点: puzdpus is babrpus and forcpus and yawlpus (深度5)
[子树点亮]     └─ 点亮依赖节点: kiwlpus is babrpus and forcpus and yawlpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 6 个节点
      ✅ 验证成功 + LoG匹配

   节点 149: x is babrpus
      ↻ 重复节点，计数: 2

   节点 150: bamgpus is babgpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 151: x is babrpus
      ↻ 重复节点，计数: 3

   节点 152: fotdpus is qoxhpus
      ↻ 重复节点，计数: 24

   节点 153: x is fotdpus
      ↻ 重复节点，计数: 23

   节点 154: kiwlpus is babrpus
      ↻ 重复节点，计数: 26

   节点 155: kiwlpus is yawlpus
      ↻ 重复节点，计数: 12

   节点 156: puzdpus is kiwlpus and qadppus
      ↻ 重复节点，计数: 17

   节点 157: puzdpus is kiwlpus
      ↻ 重复节点，计数: 9

   节点 158: puzdpus is qadppus
      ↻ 重复节点，计数: 3

   节点 159: kiwlpus is babrpus
      ↻ 重复节点，计数: 27

   节点 160: qoxhpus is puzdpus and bamgpus and pelcpus
      ↻ 重复节点，计数: 18

   节点 161: qoxhpus is puzdpus
      ↻ 重复节点，计数: 8

   节点 162: puzdpus is kiwlpus
      ↻ 重复节点，计数: 10

   节点 163: x is babrpus
      ↻ 重复节点，计数: 4

   节点 164: puzdpus is kiwlpus and qadppus
      ↻ 重复节点，计数: 18

   节点 165: x is fotdpus
      ↻ 重复节点，计数: 24

   节点 166: fotdpus is qoxhpus
      ↻ 重复节点，计数: 25

   节点 167: qoxhpus is puzdpus
      ↻ 重复节点，计数: 9

   节点 168: puzdpus is babrpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: puzdpus is kiwlpus → kiwlpus is babrpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: puzdpus is kiwlpus
  - 前提: kiwlpus is babrpus

   节点 169: kiwlpus is babrpus
      ↻ 重复节点，计数: 28

   节点 170: puzdpus is kiwlpus and qadppus
      ↻ 重复节点，计数: 19

   节点 171: qoxhpus is puzdpus and bamgpus and pelcpus
      ↻ 重复节点，计数: 19

   节点 172: fotdpus is qoxhpus
      ↻ 重复节点，计数: 26

   节点 173: qoxhpus is puzdpus
      ↻ 重复节点，计数: 10

   节点 174: fotdpus is qoxhpus
      ↻ 重复节点，计数: 27

   节点 175: x is fotdpus
      ↻ 重复节点，计数: 25

   节点 176: x is qoxhpus
      ↻ 重复节点，计数: 3

   节点 177: x is puzdpus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 178: x is kiwlpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is fotdpus → fotdpus is kiwlpus
[后处理] 基于推理轨迹点亮节点，使用了 4 个前提条件:
  - 前提: x is fotdpus
  - 前提: fotdpus is qoxhpus
  - 前提: qoxhpus is puzdpus
  - 前提: puzdpus is kiwlpus

   节点 179: kiwlpus is babrpus
      ↻ 重复节点，计数: 29

   节点 180: kiwlpus is yawlpus
      ↻ 重复节点，计数: 13

   节点 181: kiwlpus is forcpus
      ↻ 重复节点，计数: 8

   节点 182: kiwlpus is babrpus
      ↻ 重复节点，计数: 30

   节点 183: puzdpus is kiwlpus and qadppus
      ↻ 重复节点，计数: 20

   节点 184: kiwlpus is babrpus
      ↻ 重复节点，计数: 31

   节点 185: kiwlpus is puzdpus
      ↻ 重复节点，计数: 4

   节点 186: x is babrpus
      ↻ 重复节点，计数: 5

   节点 187: puzdpus is kiwlpus and qadppus
      ↻ 重复节点，计数: 21

   节点 188: qoxhpus is puzdpus and bamgpus and pelcpus
      ↻ 重复节点，计数: 20

   节点 189: kiwlpus is babrpus
      ↻ 重复节点，计数: 32

   节点 190: fotdpus is qoxhpus
      ↻ 重复节点，计数: 28

   节点 191: fotdpus is qoxhpus
      ↻ 重复节点，计数: 29

   节点 192: x is fotdpus
      ↻ 重复节点，计数: 26

   节点 193: x is fotdpus
      ↻ 重复节点，计数: 27

   节点 194: fotdpus is qoxhpus
      ↻ 重复节点，计数: 30

   节点 195: qoxhpus is puzdpus and bamgpus and pelcpus
      ↻ 重复节点，计数: 21

   节点 196: puzdpus is kiwlpus and qadppus
      ↻ 重复节点，计数: 22

   节点 197: x is kiwlpus
      ↻ 重复节点，计数: 2

   节点 198: x is qadppus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is fotdpus → fotdpus is qadppus
[后处理] 基于推理轨迹点亮节点，使用了 4 个前提条件:
  - 前提: x is fotdpus
  - 前提: fotdpus is qoxhpus
  - 前提: qoxhpus is puzdpus
  - 前提: puzdpus is qadppus

   节点 199: kiwlpus is babrpus
      ↻ 重复节点，计数: 33

   节点 200: x is babrpus
      ↻ 重复节点，计数: 6

   节点 201: x is babrpus
      ↻ 重复节点，计数: 7

   节点 202: x is bamgpus and pelcpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is fotdpus → fotdpus is bamgpus and pelcpus
[后处理] 基于推理轨迹点亮节点，使用了 4 个前提条件:
  - 前提: x is fotdpus
  - 前提: fotdpus is qoxhpus
  - 前提: qoxhpus is bamgpus
  - 前提: qoxhpus is pelcpus

   节点 203: x is babrpus
      ↻ 重复节点，计数: 8

   节点 204: x is fotdpus
      ↻ 重复节点，计数: 28

   节点 205: x is fotdpus
      ↻ 重复节点，计数: 29

   节点 206: fotdpus is qoxhpus
      ↻ 重复节点，计数: 31

   节点 207: kiwlpus is yawlpus
      ↻ 重复节点，计数: 14

   节点 208: kiwlpus is yawlpus
      ↻ 重复节点，计数: 15

   节点 209: puzdpus is kiwlpus and qadppus
      ↻ 重复节点，计数: 23

   节点 210: puzdpus is kiwlpus
      ↻ 重复节点，计数: 11

   节点 211: puzdpus is qadppus
      ↻ 重复节点，计数: 4

   节点 212: qoxhpus is puzdpus and bamgpus and pelcpus
      ↻ 重复节点，计数: 22

   节点 213: x is fotdpus
      ↻ 重复节点，计数: 30

   节点 214: fotdpus is qoxhpus
      ↻ 重复节点，计数: 32

   节点 215: qoxhpus is puzdpus
      ↻ 重复节点，计数: 11

   节点 216: puzdpus is kiwlpus
      ↻ 重复节点，计数: 12

   节点 217: kiwlpus is babrpus
      ↻ 重复节点，计数: 34

   节点 218: x is babrpus
      ↻ 重复节点，计数: 9

   节点 219: x is babrpus
      ↻ 重复节点，计数: 10

   节点 220: x is babrpus
      ↻ 重复节点，计数: 11

   节点 221: x is babrpus
      ↻ 重复节点，计数: 12

   节点 222: x is babrpus
      ↻ 重复节点，计数: 13

   节点 223: kiwlpus is babrpus
      ↻ 重复节点，计数: 35

   节点 224: x is kiwlpus
      ↻ 重复节点，计数: 3

   节点 225: x is babrpus
      ↻ 重复节点，计数: 14

   节点 226: x is babrpus
      ↻ 重复节点，计数: 15

   节点 227: x is babgpus or babrpus or babspus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is babgpus or babrpus or babspus
      ✅ 验证成功 + LoG匹配

   节点 228: x is babrpus
      ↻ 重复节点，计数: 16

🔍 分析推理路径完整性...

============================================================
[后处理] 处理完成
============================================================
📈 处理统计:
   - 处理的actual节点: 228
   - 新增节点: 20
   - 更新已存在节点: 208
   - 点亮的LoG节点: 11

🎯 推理质量统计:
   - 完美推理: 13 (节点正确 + 路径正确)
   - 部分推理: 7 (节点正确 + 路径部分错误)
   - 无效推理: 0 (节点错误或路径完全错误)
[LoG分析] LoG图: 11节点, 7前提, 复杂度1-7

📊 === Statement列表分析 ===
📈 节点统计:
   - 总节点数: 27
   - 前提节点: 7
   - 推理节点: 17
   - 幻觉节点: 3
   - 点亮LoG节点: 11

❌ 幻觉节点详情:
   - kiwlpus is puzdpus (出现4次)
   - puzdpus is qoxhpus (出现3次)
   - bamgpus is babgpus (出现1次)

✅ 推理节点详情:
   🟡 x is qoxhpus (出现3次, 质量:partial)
      ⚠️  无效依赖: ['puzdpus is qoxhpus']
   🟡 puzdpus is kiwlpus (出现12次, 质量:partial)
      ⚠️  无效依赖: ['puzdpus is qoxhpus']
   🟡 qoxhpus is puzdpus (出现11次, 质量:partial)
      ⚠️  无效依赖: ['kiwlpus is puzdpus']
   🟡 puzdpus is qadppus (出现4次, 质量:partial)
      ⚠️  无效依赖: ['puzdpus is qoxhpus']
   🟢 fotdpus is puzdpus and bamgpus and pelcpus (出现1次, 质量:perfect)
   🟢 qoxhpus is bamgpus (出现2次, 质量:perfect)
   🟢 qoxhpus is pelcpus (出现2次, 质量:perfect)
   🟡 fotdpus is puzdpus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['kiwlpus is puzdpus']
   🟢 fotdpus is bamgpus (出现1次, 质量:perfect)
   🟢 fotdpus is pelcpus (出现1次, 质量:perfect)
   🟢 x is babrpus (出现16次, 质量:perfect)
   🟡 puzdpus is babrpus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['puzdpus is qoxhpus']
   🟡 x is puzdpus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['kiwlpus is puzdpus']
   🟢 x is kiwlpus (出现3次, 质量:perfect)
   🟢 x is qadppus (出现1次, 质量:perfect)
   🟢 x is bamgpus and pelcpus (出现1次, 质量:perfect)
   🟢 x is babgpus or babrpus or babspus (出现1次, 质量:perfect)

🔥 点亮的LoG节点:
   - x is qoxhpus
   - x is babgpus or babrpus or babspus
   - puzdpus is babrpus and forcpus
   - x is puzdpus and bamgpus
   - qoxhpus is puzdpus and bamgpus
   - x is babrpus
   - puzdpus is babrpus and forcpus and yawlpus
   - puzdpus is kiwlpus
   - kiwlpus is babrpus and forcpus and yawlpus
   - x is babrpus and forcpus
   - x is puzdpus

============================================================
📊 计算评估指标
============================================================

🎯 计算Coverage指标...
   深度Coverage: 6/6 = 100.00%
   最深点亮节点: x is babgpus or babrpus or babspus (第6层)
   节点Coverage: 11/11 = 100.00%
   前提条件Coverage: 7/7 = 100.00%
   各推理层点亮比例:
     第1层: 4/4 = 100.00%
     第2层: 2/2 = 100.00%
     第3层: 2/2 = 100.00%
     第4层: 1/1 = 100.00%
     第5层: 1/1 = 100.00%
     第6层: 1/1 = 100.00%

🎯 计算Precision指标...
   Error Rate: 3/20 = 15.00%
   可推导节点: 17/20
   Strict Error Rate: 10/20 = 50.00%
   严格有效节点: 10/20

   详细分析:
     完美推理: 13 (65.00%)
     部分推理: 7 (35.00%)
     无效推理: 0 (0.00%)

================================================================================
处理记录 44/50
================================================================================
记录索引: 43
问题状态: correct
📁 从缓存加载提取结果: evaluation_results.LoG_6.deepseek-reasoner_record_43.json
✅ 使用缓存结果:
   - 句子数: 63
   - 提取的语句数: 83
   - 初始条件数: 6

=== Statement提取完成 ===
总句子数: 63
成功提取: 63
失败提取: 0
总statements数: 83

=== 开始清洗Statement格式 ===
原始statements数: 83
清洗后statements数: 79
过滤掉的statements数: 4
清洗后的statements:
  1. [actual] x is relmpus
  2. [actual] relmpus is babgpus
  3. [actual] x is babgpus
  4. [actual] yawbpus is babspus and cipfpus
  5. [actual] sihdpus is xekspus
  6. [actual] x is gegmpus
  7. [actual] yawbpus is cadypus and zarnpus
  8. [actual] xekspus is yawbpus
  9. [actual] gegmpus is sihdpus
  10. [planning] x is babgpus
  11. [planning] x is babrpus
  12. [planning] x is babspus
  13. [planning] x is babspus
  14. [actual] x is babgpus
  15. [actual] x is relmpus and relmpus is babgpus
  16. [actual] yawbpus is babspus and cipfpus
  17. [actual] yawbpus is babspus and cipfpus
  18. [actual] sihdpus is xekspus
  19. [actual] sihdpus is xekspus
  20. [actual] x is gegmpus
  21. [actual] x is gegmpus
  22. [actual] yawbpus is cadypus and zarnpus
  23. [actual] yawbpus is cadypus
  24. [actual] yawbpus is zarnpus
  25. [actual] xekspus is yawbpus
  26. [actual] xekspus is yawbpus
  27. [actual] gegmpus is sihdpus
  28. [actual] gegmpus is sihdpus
  29. [planning] x is babspus
  30. [planning] x is babgpus
  31. [planning] x is babrpus
  32. [planning] x is related to babspus
  33. [actual] x is gegmpus
  34. [actual] gegmpus is sihdpus
  35. [actual] x is sihdpus
  36. [planning] gegmpus is sihdpus
  37. [planning] x is gegmpus and any member of gegmpus is sihdpus
  38. [actual] sihdpus is xekspus
  39. [actual] x is xekspus
  40. [actual] xekspus is yawbpus
  41. [actual] x is yawbpus
  42. [actual] yawbpus is babspus
  43. [actual] x is yawbpus
  44. [actual] x is babspus
  45. [actual] x is babspus
  46. [planning] x is babgpus
  47. [planning] x is babrpus
  48. [planning] x is babspus
  49. [actual] x is babspus
  50. [planning] x is babspus
  51. [planning] x is babgpus
  52. [planning] x is babrpus
  53. [planning] x is babgpus or babrpus or babspus
  54. [planning] x is babspus
  55. [planning] x is babgpus and babrpus
  56. [actual] x is gegmpus
  57. [actual] gegmpus is sihdpus
  58. [actual] x is sihdpus
  59. [actual] sihdpus is xekspus
  60. [actual] x is xekspus
  61. [actual] xekspus is yawbpus
  62. [actual] x is yawbpus
  63. [actual] yawbpus is babspus
  64. [actual] x is babspus
  65. [actual] x is babspus
  66. [actual] x is babspus
  67. [planning] x is babgpus or babrpus or babspus
  68. [actual] gegmpus is sihdpus
  69. [actual] sihdpus is xekspus
  70. [planning] gegmpus is xekspus
  71. [actual] gegmpus is sihdpus
  72. [actual] gegmpus is xekspus
  73. [planning] x is gegmpus
  74. [planning] x is xekspus
  75. [actual] xekspus is yawbpus
  76. [planning] x is yawbpus
  77. [actual] yawbpus is babspus
  78. [actual] x is babspus
  79. [actual] x is babspus

=== 开始标准化和解析节点 ===
清洗后statements数: 79
标准化后节点数: 76
过滤掉的无效实体数: 3
标准化后的节点:
  1. [actual] x → relmpus (原始: x is relmpus)
  2. [actual] relmpus → babgpus (原始: relmpus is babgpus)
  3. [actual] x → babgpus (原始: x is babgpus)
  4. [actual] yawbpus → babspus and cipfpus (原始: yawbpus is babspus and cipfpus)
  5. [actual] sihdpus → xekspus (原始: sihdpus is xekspus)
  6. [actual] x → gegmpus (原始: x is gegmpus)
  7. [actual] yawbpus → cadypus and zarnpus (原始: yawbpus is cadypus and zarnpus)
  8. [actual] xekspus → yawbpus (原始: xekspus is yawbpus)
  9. [actual] gegmpus → sihdpus (原始: gegmpus is sihdpus)
  10. [planning] x → babgpus (原始: x is babgpus)
  11. [planning] x → babrpus (原始: x is babrpus)
  12. [planning] x → babspus (原始: x is babspus)
  13. [planning] x → babspus (原始: x is babspus)
  14. [actual] x → babgpus (原始: x is babgpus)
  15. [actual] yawbpus → babspus and cipfpus (原始: yawbpus is babspus and cipfpus)
  16. [actual] yawbpus → babspus and cipfpus (原始: yawbpus is babspus and cipfpus)
  17. [actual] sihdpus → xekspus (原始: sihdpus is xekspus)
  18. [actual] sihdpus → xekspus (原始: sihdpus is xekspus)
  19. [actual] x → gegmpus (原始: x is gegmpus)
  20. [actual] x → gegmpus (原始: x is gegmpus)
  21. [actual] yawbpus → cadypus and zarnpus (原始: yawbpus is cadypus and zarnpus)
  22. [actual] yawbpus → cadypus (原始: yawbpus is cadypus)
  23. [actual] yawbpus → zarnpus (原始: yawbpus is zarnpus)
  24. [actual] xekspus → yawbpus (原始: xekspus is yawbpus)
  25. [actual] xekspus → yawbpus (原始: xekspus is yawbpus)
  26. [actual] gegmpus → sihdpus (原始: gegmpus is sihdpus)
  27. [actual] gegmpus → sihdpus (原始: gegmpus is sihdpus)
  28. [planning] x → babspus (原始: x is babspus)
  29. [planning] x → babgpus (原始: x is babgpus)
  30. [planning] x → babrpus (原始: x is babrpus)
  31. [actual] x → gegmpus (原始: x is gegmpus)
  32. [actual] gegmpus → sihdpus (原始: gegmpus is sihdpus)
  33. [actual] x → sihdpus (原始: x is sihdpus)
  34. [planning] gegmpus → sihdpus (原始: gegmpus is sihdpus)
  35. [actual] sihdpus → xekspus (原始: sihdpus is xekspus)
  36. [actual] x → xekspus (原始: x is xekspus)
  37. [actual] xekspus → yawbpus (原始: xekspus is yawbpus)
  38. [actual] x → yawbpus (原始: x is yawbpus)
  39. [actual] yawbpus → babspus (原始: yawbpus is babspus)
  40. [actual] x → yawbpus (原始: x is yawbpus)
  41. [actual] x → babspus (原始: x is babspus)
  42. [actual] x → babspus (原始: x is babspus)
  43. [planning] x → babgpus (原始: x is babgpus)
  44. [planning] x → babrpus (原始: x is babrpus)
  45. [planning] x → babspus (原始: x is babspus)
  46. [actual] x → babspus (原始: x is babspus)
  47. [planning] x → babspus (原始: x is babspus)
  48. [planning] x → babgpus (原始: x is babgpus)
  49. [planning] x → babrpus (原始: x is babrpus)
  50. [planning] x → babgpus or babrpus or babspus (原始: x is babgpus or babrpus or babspus)
  51. [planning] x → babspus (原始: x is babspus)
  52. [planning] x → babgpus and babrpus (原始: x is babgpus and babrpus)
  53. [actual] x → gegmpus (原始: x is gegmpus)
  54. [actual] gegmpus → sihdpus (原始: gegmpus is sihdpus)
  55. [actual] x → sihdpus (原始: x is sihdpus)
  56. [actual] sihdpus → xekspus (原始: sihdpus is xekspus)
  57. [actual] x → xekspus (原始: x is xekspus)
  58. [actual] xekspus → yawbpus (原始: xekspus is yawbpus)
  59. [actual] x → yawbpus (原始: x is yawbpus)
  60. [actual] yawbpus → babspus (原始: yawbpus is babspus)
  61. [actual] x → babspus (原始: x is babspus)
  62. [actual] x → babspus (原始: x is babspus)
  63. [actual] x → babspus (原始: x is babspus)
  64. [planning] x → babgpus or babrpus or babspus (原始: x is babgpus or babrpus or babspus)
  65. [actual] gegmpus → sihdpus (原始: gegmpus is sihdpus)
  66. [actual] sihdpus → xekspus (原始: sihdpus is xekspus)
  67. [planning] gegmpus → xekspus (原始: gegmpus is xekspus)
  68. [actual] gegmpus → sihdpus (原始: gegmpus is sihdpus)
  69. [actual] gegmpus → xekspus (原始: gegmpus is xekspus)
  70. [planning] x → gegmpus (原始: x is gegmpus)
  71. [planning] x → xekspus (原始: x is xekspus)
  72. [actual] xekspus → yawbpus (原始: xekspus is yawbpus)
  73. [planning] x → yawbpus (原始: x is yawbpus)
  74. [actual] yawbpus → babspus (原始: yawbpus is babspus)
  75. [actual] x → babspus (原始: x is babspus)
  76. [actual] x → babspus (原始: x is babspus)

开始新的后处理...
[后处理] 从LoG数据文件中获取到图数据，节点数: 10
[后处理] 加载LoG图，包含 10 个节点
  LoG节点 0: x is babgpus or babrpus or babspus (规则: DI, 深度: 1)
  LoG节点 1: x is babrpus or babspus (规则: DI, 深度: 2)
  LoG节点 2: x is babspus (规则: CE, 深度: 3)
  LoG节点 3: x is babspus and cadypus (规则: MP, 深度: 4)
  LoG节点 4: x is yawbpus (规则: MP, 深度: 5)
  LoG节点 5: yawbpus is babspus and cadypus (规则: CI, 深度: 5)
  LoG节点 6: x is sihdpus (规则: MP, 深度: 6)
  LoG节点 7: sihdpus is yawbpus (规则: MP, 深度: 6)
  LoG节点 8: yawbpus is babspus (规则: CE, 深度: 6)
  LoG节点 9: yawbpus is cadypus (规则: CE, 深度: 6)

============================================================
[后处理] 开始处理节点
============================================================
📊 初始状态:
   - 标准化节点数: 76
   - 初始条件数: 6
   - LoG图节点数: 10

📋 初始条件列表:
    1. yawbpus is babspus and cipfpus
    2. sihdpus is xekspus
    3. x is gegmpus
    4. yawbpus is cadypus and zarnpus
    5. xekspus is yawbpus
    6. gegmpus is sihdpus

🔧 构建初始Statement列表...
✅ 初始Statement列表构建完成，包含 6 个前提节点

🔍 开始处理actual节点...

   节点 1: x is relmpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 2: relmpus is babgpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 3: x is babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is relmpus → relmpus is babgpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: x is relmpus
  - 前提: relmpus is babgpus
  ✓ 点亮LoG节点: x is babgpus or babrpus or babspus
[子树点亮]     └─ 点亮依赖节点: x is babrpus or babspus (深度2)
[子树点亮]     └─ 点亮依赖节点: x is babspus (深度3)
[子树点亮]     └─ 点亮依赖节点: x is babspus and cadypus (深度4)
[子树点亮]     └─ 点亮依赖节点: x is yawbpus (深度5)
[子树点亮]     └─ 点亮依赖节点: yawbpus is babspus and cadypus (深度5)
[子树点亮]     └─ 点亮依赖节点: x is sihdpus (深度6)
[子树点亮]     └─ 点亮依赖节点: sihdpus is yawbpus (深度6)
[子树点亮]     └─ 点亮依赖节点: yawbpus is babspus (深度6)
[子树点亮]     └─ 点亮依赖节点: yawbpus is cadypus (深度6)
[后处理]   └─ 自动点亮依赖子树: 9 个节点
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 4: yawbpus is babspus and cipfpus
      ↻ 重复节点，计数: 2

   节点 5: sihdpus is xekspus
      ↻ 重复节点，计数: 2

   节点 6: x is gegmpus
      ↻ 重复节点，计数: 2

   节点 7: yawbpus is cadypus and zarnpus
      ↻ 重复节点，计数: 2

   节点 8: xekspus is yawbpus
      ↻ 重复节点，计数: 2

   节点 9: gegmpus is sihdpus
      ↻ 重复节点，计数: 2

   节点 10: x is babgpus
      ↻ 重复节点，计数: 2

   节点 11: yawbpus is babspus and cipfpus
      ↻ 重复节点，计数: 3

   节点 12: yawbpus is babspus and cipfpus
      ↻ 重复节点，计数: 4

   节点 13: sihdpus is xekspus
      ↻ 重复节点，计数: 3

   节点 14: sihdpus is xekspus
      ↻ 重复节点，计数: 4

   节点 15: x is gegmpus
      ↻ 重复节点，计数: 3

   节点 16: x is gegmpus
      ↻ 重复节点，计数: 4

   节点 17: yawbpus is cadypus and zarnpus
      ↻ 重复节点，计数: 3

   节点 18: yawbpus is cadypus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 19: yawbpus is zarnpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: yawbpus is cadypus and zarnpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: yawbpus is cadypus and zarnpus

   节点 20: xekspus is yawbpus
      ↻ 重复节点，计数: 3

   节点 21: xekspus is yawbpus
      ↻ 重复节点，计数: 4

   节点 22: gegmpus is sihdpus
      ↻ 重复节点，计数: 3

   节点 23: gegmpus is sihdpus
      ↻ 重复节点，计数: 4

   节点 24: x is gegmpus
      ↻ 重复节点，计数: 5

   节点 25: gegmpus is sihdpus
      ↻ 重复节点，计数: 5

   节点 26: x is sihdpus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 27: sihdpus is xekspus
      ↻ 重复节点，计数: 5

   节点 28: x is xekspus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is gegmpus → gegmpus is xekspus
[后处理] 基于推理轨迹点亮节点，使用了 3 个前提条件:
  - 前提: x is gegmpus
  - 前提: gegmpus is sihdpus
  - 前提: sihdpus is xekspus

   节点 29: xekspus is yawbpus
      ↻ 重复节点，计数: 5

   节点 30: x is yawbpus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 31: yawbpus is babspus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 32: x is yawbpus
      ↻ 重复节点，计数: 2

   节点 33: x is babspus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 34: x is babspus
      ↻ 重复节点，计数: 2

   节点 35: x is babspus
      ↻ 重复节点，计数: 3

   节点 36: x is gegmpus
      ↻ 重复节点，计数: 6

   节点 37: gegmpus is sihdpus
      ↻ 重复节点，计数: 6

   节点 38: x is sihdpus
      ↻ 重复节点，计数: 2

   节点 39: sihdpus is xekspus
      ↻ 重复节点，计数: 6

   节点 40: x is xekspus
      ↻ 重复节点，计数: 2

   节点 41: xekspus is yawbpus
      ↻ 重复节点，计数: 6

   节点 42: x is yawbpus
      ↻ 重复节点，计数: 3

   节点 43: yawbpus is babspus
      ↻ 重复节点，计数: 2

   节点 44: x is babspus
      ↻ 重复节点，计数: 4

   节点 45: x is babspus
      ↻ 重复节点，计数: 5

   节点 46: x is babspus
      ↻ 重复节点，计数: 6

   节点 47: gegmpus is sihdpus
      ↻ 重复节点，计数: 7

   节点 48: sihdpus is xekspus
      ↻ 重复节点，计数: 7

   节点 49: gegmpus is sihdpus
      ↻ 重复节点，计数: 8

   节点 50: gegmpus is xekspus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: gegmpus is sihdpus → sihdpus is xekspus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: gegmpus is sihdpus
  - 前提: sihdpus is xekspus

   节点 51: xekspus is yawbpus
      ↻ 重复节点，计数: 7

   节点 52: yawbpus is babspus
      ↻ 重复节点，计数: 3

   节点 53: x is babspus
      ↻ 重复节点，计数: 7

   节点 54: x is babspus
      ↻ 重复节点，计数: 8

🔍 分析推理路径完整性...

============================================================
[后处理] 处理完成
============================================================
📈 处理统计:
   - 处理的actual节点: 54
   - 新增节点: 11
   - 更新已存在节点: 43
   - 点亮的LoG节点: 10

🎯 推理质量统计:
   - 完美推理: 6 (节点正确 + 路径正确)
   - 部分推理: 5 (节点正确 + 路径部分错误)
   - 无效推理: 0 (节点错误或路径完全错误)
[LoG分析] LoG图: 10节点, 6前提, 复杂度1-6

📊 === Statement列表分析 ===
📈 节点统计:
   - 总节点数: 17
   - 前提节点: 6
   - 推理节点: 9
   - 幻觉节点: 2
   - 点亮LoG节点: 10

❌ 幻觉节点详情:
   - x is relmpus (出现1次)
   - relmpus is babgpus (出现1次)

✅ 推理节点详情:
   🟡 x is babgpus (出现2次, 质量:partial)
      ⚠️  无效依赖: ['x is relmpus', 'relmpus is babgpus']
   🟢 yawbpus is cadypus (出现1次, 质量:perfect)
   🟢 yawbpus is zarnpus (出现1次, 质量:perfect)
   🟡 x is sihdpus (出现2次, 质量:partial)
      ⚠️  无效依赖: ['x is relmpus']
   🟡 x is xekspus (出现2次, 质量:partial)
      ⚠️  无效依赖: ['x is relmpus']
   🟡 x is yawbpus (出现3次, 质量:partial)
      ⚠️  无效依赖: ['x is relmpus']
   🟢 yawbpus is babspus (出现3次, 质量:perfect)
   🟡 x is babspus (出现8次, 质量:partial)
      ⚠️  无效依赖: ['x is relmpus']
   🟢 gegmpus is xekspus (出现1次, 质量:perfect)

🔥 点亮的LoG节点:
   - x is babspus
   - yawbpus is babspus and cadypus
   - sihdpus is yawbpus
   - x is sihdpus
   - x is babrpus or babspus
   - yawbpus is cadypus
   - x is yawbpus
   - x is babgpus or babrpus or babspus
   - x is babspus and cadypus
   - yawbpus is babspus

============================================================
📊 计算评估指标
============================================================

🎯 计算Coverage指标...
   深度Coverage: 6/6 = 100.00%
   最深点亮节点: x is babgpus or babrpus or babspus (第6层)
   节点Coverage: 10/10 = 100.00%
   前提条件Coverage: 6/6 = 100.00%
   各推理层点亮比例:
     第1层: 4/4 = 100.00%
     第2层: 2/2 = 100.00%
     第3层: 1/1 = 100.00%
     第4层: 1/1 = 100.00%
     第5层: 1/1 = 100.00%
     第6层: 1/1 = 100.00%

🎯 计算Precision指标...
   Error Rate: 2/11 = 18.18%
   可推导节点: 9/11
   Strict Error Rate: 7/11 = 63.64%
   严格有效节点: 4/11

   详细分析:
     完美推理: 6 (54.55%)
     部分推理: 5 (45.45%)
     无效推理: 0 (0.00%)

================================================================================
处理记录 45/50
================================================================================
记录索引: 44
问题状态: correct
📁 从缓存加载提取结果: evaluation_results.LoG_6.deepseek-reasoner_record_44.json
✅ 使用缓存结果:
   - 句子数: 133
   - 提取的语句数: 156
   - 初始条件数: 23

=== Statement提取完成 ===
总句子数: 133
成功提取: 133
失败提取: 0
总statements数: 156

=== 开始清洗Statement格式 ===
原始statements数: 156
清洗后statements数: 150
过滤掉的statements数: 6
清洗后的statements:
  1. [planning] x is babgpus
  2. [planning] x is babrpus
  3. [actual] x is wewrpus
  4. [planning] wewrpus is babgpus
  5. [planning] wewrpus is babrpus
  6. [planning] wewrpus is babgpus or babrpus
  7. [actual] x is wewrpus
  8. [actual] wewrpus is hajbpus
  9. [actual] hajbpus is vegppus
  10. [actual] vegppus is romfpus and jotqpus
  11. [actual] romfpus is jiclpus
  12. [actual] jiclpus is kuvkpus
  13. [actual] kuvkpus is gibnpus and qifgpus
  14. [actual] gibnpus is duplpus
  15. [actual] duplpus is vojypus
  16. [actual] vojypus is qorbpus and zidgpus
  17. [actual] qorbpus is yotbpus and cesrpus
  18. [actual] yotbpus is vuwgpus and doqwpus
  19. [actual] yotbpus is vuwgpus
  20. [actual] qorbpus is yotbpus and cesrpus
  21. [planning] yotbpus is doqwpus
  22. [actual] yotbpus is vuwgpus
  23. [actual] yotbpus is doqwpus
  24. [actual] qorbpus is yotbpus and cesrpus
  25. [actual] yotbpus is doqwpus
  26. [actual] yotbpus is vuwgpus
  27. [actual] yotbpus is doqwpus
  28. [actual] vegwpus is ganfpus
  29. [actual] lerwpus is babgpus and rayspus
  30. [actual] x is relmpus and muqcpus
  31. [planning] x is babgpus
  32. [planning] x is babgpus
  33. [actual] lerwpus is yexbpus
  34. [actual] yexbpus is lerwpus and pazjpus
  35. [actual] x is relmpus
  36. [actual] relmpus is babgpus
  37. [actual] x is babgpus
  38. [actual] x is relmpus
  39. [actual] relmpus is babgpus
  40. [actual] x is babgpus
  41. [planning] x is babgpus and babkpus and babmpus
  42. [planning] x is babgpus
  43. [planning] x is relmpus
  44. [planning] x is babgpus
  45. [planning] x is babgpus
  46. [actual] duplpus is vojypus
  47. [actual] kuvkpus is gibnpus and qifgpus
  48. [actual] vojypus is qorbpus and zidgpus
  49. [actual] qurqpus is babgpus and jekwpus
  50. [actual] yotbpus is vuwgpus
  51. [actual] x is wewrpus
  52. [actual] tirwpus is zozmpus and zagqpus
  53. [actual] romfpus is jiclpus
  54. [actual] bimfpus is tirwpus and gavzpus
  55. [actual] wewrpus is hajbpus
  56. [actual] zozmpus is ziqlpus
  57. [actual] doqwpus is ricypus and ziyrpus
  58. [actual] jiclpus is kuvkpus
  59. [actual] cipgpus is bimfpus
  60. [actual] hajbpus is vegppus
  61. [actual] sextpus is cipgpus
  62. [actual] qorbpus is yotbpus and cesrpus
  63. [actual] qurqpus is tulvpus and luyrpus
  64. [actual] ricypus is sextpus
  65. [actual] gibnpus is duplpus
  66. [actual] ziqlpus is qurqpus
  67. [actual] vegppus is romfpus and jotqpus
  68. [actual] yotbpus is doqwpus
  69. [actual] yotbpus is doqwpus
  70. [actual] x is wewrpus
  71. [actual] wewrpus is hajbpus
  72. [actual] hajbpus is vegppus
  73. [actual] vegppus is romfpus and jotqpus
  74. [actual] wewrpus is romfpus and jotqpus through hajbpus and vegppus
  75. [planning] romfpus is babgpus
  76. [actual] romfpus is jiclpus
  77. [actual] jiclpus is kuvkpus
  78. [actual] kuvkpus is gibnpus and qifgpus
  79. [actual] gibnpus is duplpus
  80. [actual] duplpus is vojypus
  81. [actual] vojypus is qorbpus and zidgpus
  82. [actual] qorbpus is yotbpus and cesrpus
  83. [actual] yotbpus is doqwpus
  84. [actual] doqwpus is ricypus and ziyrpus
  85. [actual] ricypus is sextpus
  86. [actual] sextpus is cipgpus
  87. [actual] cipgpus is bimfpus
  88. [actual] bimfpus is tirwpus and gavzpus
  89. [actual] tirwpus is zozmpus and zagqpus
  90. [actual] zozmpus is ziqlpus
  91. [actual] ziqlpus is qurqpus
  92. [actual] qurqpus is babgpus and jekwpus
  93. [actual] qurqpus is babgpus
  94. [actual] wewrpus is x
  95. [actual] x is babgpus
  96. [actual] x is wewrpus
  97. [actual] wewrpus is hajbpus
  98. [actual] hajbpus is vegppus
  99. [actual] vegppus is romfpus
  100. [actual] romfpus is jiclpus
  101. [actual] jiclpus is kuvkpus
  102. [actual] kuvkpus is gibnpus
  103. [actual] gibnpus is needed
  104. [actual] gibnpus is duplpus
  105. [actual] duplpus is vojypus
  106. [actual] vojypus is qorbpus
  107. [actual] qorbpus is needed
  108. [actual] qorbpus is yotbpus
  109. [actual] qorbpus is cesrpus
  110. [planning] qorbpus is yotbpus
  111. [actual] yotbpus is doqwpus
  112. [actual] doqwpus is ricypus
  113. [actual] ricypus is ziyrpus
  114. [actual] ricypus is sextpus
  115. [actual] sextpus is cipgpus
  116. [actual] cipgpus is bimfpus
  117. [actual] bimfpus is tirwpus
  118. [actual] tirwpus is gavzpus
  119. [actual] tirwpus is zozmpus
  120. [actual] tirwpus is zagqpus
  121. [planning] tirwpus is zozmpus
  122. [actual] zozmpus is ziqlpus
  123. [actual] ziqlpus is qurqpus
  124. [actual] qurqpus is babgpus and jekwpus
  125. [actual] x is wewrpus
  126. [actual] wewrpus is babgpus
  127. [actual] wewrpus is hajbpus
  128. [actual] hajbpus is vegppus
  129. [actual] vegppus is romfpus
  130. [actual] romfpus is babgpus
  131. [actual] qurqpus is babgpus
  132. [actual] x is babgpus
  133. [planning] x is babgpus
  134. [planning] x is babrpus
  135. [actual] x is babgpus
  136. [planning] x is babgpus or babrpus
  137. [actual] x is babgpus
  138. [planning] x is babgpus
  139. [planning] x is babrpus
  140. [actual] x is babgpus
  141. [actual] x is babgpus or babrpus
  142. [actual] yotbpus is vuwgpus
  143. [actual] yotbpus is doqwpus
  144. [planning] yotbpus is vuwgpus and doqwpus
  145. [actual] yotbpus is doqwpus
  146. [actual] yotbpus is vuwgpus
  147. [actual] qorbpus is yotbpus and cesrpus
  148. [actual] kuvkpus is gibnpus and qifgpus
  149. [actual] x is babgpus
  150. [actual] x is babgpus or babrpus

=== 开始标准化和解析节点 ===
清洗后statements数: 150
标准化后节点数: 147
过滤掉的无效实体数: 3
标准化后的节点:
  1. [planning] x → babgpus (原始: x is babgpus)
  2. [planning] x → babrpus (原始: x is babrpus)
  3. [actual] x → wewrpus (原始: x is wewrpus)
  4. [planning] wewrpus → babgpus (原始: wewrpus is babgpus)
  5. [planning] wewrpus → babrpus (原始: wewrpus is babrpus)
  6. [planning] wewrpus → babgpus or babrpus (原始: wewrpus is babgpus or babrpus)
  7. [actual] x → wewrpus (原始: x is wewrpus)
  8. [actual] wewrpus → hajbpus (原始: wewrpus is hajbpus)
  9. [actual] hajbpus → vegppus (原始: hajbpus is vegppus)
  10. [actual] vegppus → romfpus and jotqpus (原始: vegppus is romfpus and jotqpus)
  11. [actual] romfpus → jiclpus (原始: romfpus is jiclpus)
  12. [actual] jiclpus → kuvkpus (原始: jiclpus is kuvkpus)
  13. [actual] kuvkpus → gibnpus and qifgpus (原始: kuvkpus is gibnpus and qifgpus)
  14. [actual] gibnpus → duplpus (原始: gibnpus is duplpus)
  15. [actual] duplpus → vojypus (原始: duplpus is vojypus)
  16. [actual] vojypus → qorbpus and zidgpus (原始: vojypus is qorbpus and zidgpus)
  17. [actual] qorbpus → yotbpus and cesrpus (原始: qorbpus is yotbpus and cesrpus)
  18. [actual] yotbpus → vuwgpus and doqwpus (原始: yotbpus is vuwgpus and doqwpus)
  19. [actual] yotbpus → vuwgpus (原始: yotbpus is vuwgpus)
  20. [actual] qorbpus → yotbpus and cesrpus (原始: qorbpus is yotbpus and cesrpus)
  21. [planning] yotbpus → doqwpus (原始: yotbpus is doqwpus)
  22. [actual] yotbpus → vuwgpus (原始: yotbpus is vuwgpus)
  23. [actual] yotbpus → doqwpus (原始: yotbpus is doqwpus)
  24. [actual] qorbpus → yotbpus and cesrpus (原始: qorbpus is yotbpus and cesrpus)
  25. [actual] yotbpus → doqwpus (原始: yotbpus is doqwpus)
  26. [actual] yotbpus → vuwgpus (原始: yotbpus is vuwgpus)
  27. [actual] yotbpus → doqwpus (原始: yotbpus is doqwpus)
  28. [actual] vegwpus → ganfpus (原始: vegwpus is ganfpus)
  29. [actual] lerwpus → babgpus and rayspus (原始: lerwpus is babgpus and rayspus)
  30. [actual] x → relmpus and muqcpus (原始: x is relmpus and muqcpus)
  31. [planning] x → babgpus (原始: x is babgpus)
  32. [planning] x → babgpus (原始: x is babgpus)
  33. [actual] lerwpus → yexbpus (原始: lerwpus is yexbpus)
  34. [actual] yexbpus → lerwpus and pazjpus (原始: yexbpus is lerwpus and pazjpus)
  35. [actual] x → relmpus (原始: x is relmpus)
  36. [actual] relmpus → babgpus (原始: relmpus is babgpus)
  37. [actual] x → babgpus (原始: x is babgpus)
  38. [actual] x → relmpus (原始: x is relmpus)
  39. [actual] relmpus → babgpus (原始: relmpus is babgpus)
  40. [actual] x → babgpus (原始: x is babgpus)
  41. [planning] x → babgpus and babkpus and babmpus (原始: x is babgpus and babkpus and babmpus)
  42. [planning] x → babgpus (原始: x is babgpus)
  43. [planning] x → relmpus (原始: x is relmpus)
  44. [planning] x → babgpus (原始: x is babgpus)
  45. [planning] x → babgpus (原始: x is babgpus)
  46. [actual] duplpus → vojypus (原始: duplpus is vojypus)
  47. [actual] kuvkpus → gibnpus and qifgpus (原始: kuvkpus is gibnpus and qifgpus)
  48. [actual] vojypus → qorbpus and zidgpus (原始: vojypus is qorbpus and zidgpus)
  49. [actual] qurqpus → babgpus and jekwpus (原始: qurqpus is babgpus and jekwpus)
  50. [actual] yotbpus → vuwgpus (原始: yotbpus is vuwgpus)
  51. [actual] x → wewrpus (原始: x is wewrpus)
  52. [actual] tirwpus → zozmpus and zagqpus (原始: tirwpus is zozmpus and zagqpus)
  53. [actual] romfpus → jiclpus (原始: romfpus is jiclpus)
  54. [actual] bimfpus → tirwpus and gavzpus (原始: bimfpus is tirwpus and gavzpus)
  55. [actual] wewrpus → hajbpus (原始: wewrpus is hajbpus)
  56. [actual] zozmpus → ziqlpus (原始: zozmpus is ziqlpus)
  57. [actual] doqwpus → ricypus and ziyrpus (原始: doqwpus is ricypus and ziyrpus)
  58. [actual] jiclpus → kuvkpus (原始: jiclpus is kuvkpus)
  59. [actual] cipgpus → bimfpus (原始: cipgpus is bimfpus)
  60. [actual] hajbpus → vegppus (原始: hajbpus is vegppus)
  61. [actual] sextpus → cipgpus (原始: sextpus is cipgpus)
  62. [actual] qorbpus → yotbpus and cesrpus (原始: qorbpus is yotbpus and cesrpus)
  63. [actual] qurqpus → tulvpus and luyrpus (原始: qurqpus is tulvpus and luyrpus)
  64. [actual] ricypus → sextpus (原始: ricypus is sextpus)
  65. [actual] gibnpus → duplpus (原始: gibnpus is duplpus)
  66. [actual] ziqlpus → qurqpus (原始: ziqlpus is qurqpus)
  67. [actual] vegppus → romfpus and jotqpus (原始: vegppus is romfpus and jotqpus)
  68. [actual] yotbpus → doqwpus (原始: yotbpus is doqwpus)
  69. [actual] yotbpus → doqwpus (原始: yotbpus is doqwpus)
  70. [actual] x → wewrpus (原始: x is wewrpus)
  71. [actual] wewrpus → hajbpus (原始: wewrpus is hajbpus)
  72. [actual] hajbpus → vegppus (原始: hajbpus is vegppus)
  73. [actual] vegppus → romfpus and jotqpus (原始: vegppus is romfpus and jotqpus)
  74. [planning] romfpus → babgpus (原始: romfpus is babgpus)
  75. [actual] romfpus → jiclpus (原始: romfpus is jiclpus)
  76. [actual] jiclpus → kuvkpus (原始: jiclpus is kuvkpus)
  77. [actual] kuvkpus → gibnpus and qifgpus (原始: kuvkpus is gibnpus and qifgpus)
  78. [actual] gibnpus → duplpus (原始: gibnpus is duplpus)
  79. [actual] duplpus → vojypus (原始: duplpus is vojypus)
  80. [actual] vojypus → qorbpus and zidgpus (原始: vojypus is qorbpus and zidgpus)
  81. [actual] qorbpus → yotbpus and cesrpus (原始: qorbpus is yotbpus and cesrpus)
  82. [actual] yotbpus → doqwpus (原始: yotbpus is doqwpus)
  83. [actual] doqwpus → ricypus and ziyrpus (原始: doqwpus is ricypus and ziyrpus)
  84. [actual] ricypus → sextpus (原始: ricypus is sextpus)
  85. [actual] sextpus → cipgpus (原始: sextpus is cipgpus)
  86. [actual] cipgpus → bimfpus (原始: cipgpus is bimfpus)
  87. [actual] bimfpus → tirwpus and gavzpus (原始: bimfpus is tirwpus and gavzpus)
  88. [actual] tirwpus → zozmpus and zagqpus (原始: tirwpus is zozmpus and zagqpus)
  89. [actual] zozmpus → ziqlpus (原始: zozmpus is ziqlpus)
  90. [actual] ziqlpus → qurqpus (原始: ziqlpus is qurqpus)
  91. [actual] qurqpus → babgpus and jekwpus (原始: qurqpus is babgpus and jekwpus)
  92. [actual] qurqpus → babgpus (原始: qurqpus is babgpus)
  93. [actual] wewrpus → x (原始: wewrpus is x)
  94. [actual] x → babgpus (原始: x is babgpus)
  95. [actual] x → wewrpus (原始: x is wewrpus)
  96. [actual] wewrpus → hajbpus (原始: wewrpus is hajbpus)
  97. [actual] hajbpus → vegppus (原始: hajbpus is vegppus)
  98. [actual] vegppus → romfpus (原始: vegppus is romfpus)
  99. [actual] romfpus → jiclpus (原始: romfpus is jiclpus)
  100. [actual] jiclpus → kuvkpus (原始: jiclpus is kuvkpus)
  101. [actual] kuvkpus → gibnpus (原始: kuvkpus is gibnpus)
  102. [actual] gibnpus → duplpus (原始: gibnpus is duplpus)
  103. [actual] duplpus → vojypus (原始: duplpus is vojypus)
  104. [actual] vojypus → qorbpus (原始: vojypus is qorbpus)
  105. [actual] qorbpus → yotbpus (原始: qorbpus is yotbpus)
  106. [actual] qorbpus → cesrpus (原始: qorbpus is cesrpus)
  107. [planning] qorbpus → yotbpus (原始: qorbpus is yotbpus)
  108. [actual] yotbpus → doqwpus (原始: yotbpus is doqwpus)
  109. [actual] doqwpus → ricypus (原始: doqwpus is ricypus)
  110. [actual] ricypus → ziyrpus (原始: ricypus is ziyrpus)
  111. [actual] ricypus → sextpus (原始: ricypus is sextpus)
  112. [actual] sextpus → cipgpus (原始: sextpus is cipgpus)
  113. [actual] cipgpus → bimfpus (原始: cipgpus is bimfpus)
  114. [actual] bimfpus → tirwpus (原始: bimfpus is tirwpus)
  115. [actual] tirwpus → gavzpus (原始: tirwpus is gavzpus)
  116. [actual] tirwpus → zozmpus (原始: tirwpus is zozmpus)
  117. [actual] tirwpus → zagqpus (原始: tirwpus is zagqpus)
  118. [planning] tirwpus → zozmpus (原始: tirwpus is zozmpus)
  119. [actual] zozmpus → ziqlpus (原始: zozmpus is ziqlpus)
  120. [actual] ziqlpus → qurqpus (原始: ziqlpus is qurqpus)
  121. [actual] qurqpus → babgpus and jekwpus (原始: qurqpus is babgpus and jekwpus)
  122. [actual] x → wewrpus (原始: x is wewrpus)
  123. [actual] wewrpus → babgpus (原始: wewrpus is babgpus)
  124. [actual] wewrpus → hajbpus (原始: wewrpus is hajbpus)
  125. [actual] hajbpus → vegppus (原始: hajbpus is vegppus)
  126. [actual] vegppus → romfpus (原始: vegppus is romfpus)
  127. [actual] romfpus → babgpus (原始: romfpus is babgpus)
  128. [actual] qurqpus → babgpus (原始: qurqpus is babgpus)
  129. [actual] x → babgpus (原始: x is babgpus)
  130. [planning] x → babgpus (原始: x is babgpus)
  131. [planning] x → babrpus (原始: x is babrpus)
  132. [actual] x → babgpus (原始: x is babgpus)
  133. [planning] x → babgpus or babrpus (原始: x is babgpus or babrpus)
  134. [actual] x → babgpus (原始: x is babgpus)
  135. [planning] x → babgpus (原始: x is babgpus)
  136. [planning] x → babrpus (原始: x is babrpus)
  137. [actual] x → babgpus (原始: x is babgpus)
  138. [actual] x → babgpus or babrpus (原始: x is babgpus or babrpus)
  139. [actual] yotbpus → vuwgpus (原始: yotbpus is vuwgpus)
  140. [actual] yotbpus → doqwpus (原始: yotbpus is doqwpus)
  141. [planning] yotbpus → vuwgpus and doqwpus (原始: yotbpus is vuwgpus and doqwpus)
  142. [actual] yotbpus → doqwpus (原始: yotbpus is doqwpus)
  143. [actual] yotbpus → vuwgpus (原始: yotbpus is vuwgpus)
  144. [actual] qorbpus → yotbpus and cesrpus (原始: qorbpus is yotbpus and cesrpus)
  145. [actual] kuvkpus → gibnpus and qifgpus (原始: kuvkpus is gibnpus and qifgpus)
  146. [actual] x → babgpus (原始: x is babgpus)
  147. [actual] x → babgpus or babrpus (原始: x is babgpus or babrpus)

开始新的后处理...
[后处理] 从LoG数据文件中获取到图数据，节点数: 34
[后处理] 加载LoG图，包含 34 个节点
  LoG节点 0: x is babgpus or babrpus (规则: MP, 深度: 1)
  LoG节点 1: x is tirwpus (规则: MP, 深度: 2)
  LoG节点 2: tirwpus is babgpus or babrpus (规则: DI, 深度: 2)
  LoG节点 3: x is qorbpus (规则: MP, 深度: 3)
  LoG节点 4: qorbpus is tirwpus (规则: MP, 深度: 3)
  LoG节点 5: tirwpus is babgpus (规则: CE, 深度: 3)
  LoG节点 6: x is romfpus (规则: CE, 深度: 4)
  LoG节点 7: romfpus is qorbpus (规则: MP, 深度: 4)
  LoG节点 8: qorbpus is doqwpus (规则: CE, 深度: 4)
  LoG节点 9: doqwpus is tirwpus (规则: MP, 深度: 4)
  LoG节点 10: tirwpus is babgpus and tulvpus (规则: MP, 深度: 4)
  LoG节点 11: x is romfpus and jotqpus (规则: MP, 深度: 5)
  LoG节点 12: romfpus is gibnpus (规则: MP, 深度: 5)
  LoG节点 13: gibnpus is qorbpus (规则: MP, 深度: 5)
  LoG节点 14: qorbpus is doqwpus and vuwgpus (规则: MP, 深度: 5)
  LoG节点 15: doqwpus is cipgpus (规则: MP, 深度: 5)
  LoG节点 16: cipgpus is tirwpus (规则: CE, 深度: 5)
  LoG节点 17: tirwpus is qurqpus (规则: MP, 深度: 5)
  LoG节点 18: qurqpus is babgpus and tulvpus (规则: CI, 深度: 5)
  LoG节点 19: x is hajbpus (规则: MP, 深度: 6)
  LoG节点 20: hajbpus is romfpus and jotqpus (规则: MP, 深度: 6)
  LoG节点 21: romfpus is kuvkpus (规则: MP, 深度: 6)
  LoG节点 22: kuvkpus is gibnpus (规则: CE, 深度: 6)
  LoG节点 23: gibnpus is vojypus (规则: MP, 深度: 6)
  LoG节点 24: vojypus is qorbpus (规则: CE, 深度: 6)
  LoG节点 25: qorbpus is yotbpus (规则: CE, 深度: 6)
  LoG节点 26: yotbpus is doqwpus and vuwgpus (规则: CI, 深度: 6)
  LoG节点 27: doqwpus is ricypus (规则: CE, 深度: 6)
  LoG节点 28: ricypus is cipgpus (规则: MP, 深度: 6)
  LoG节点 29: cipgpus is tirwpus and gavzpus (规则: MP, 深度: 6)
  LoG节点 30: tirwpus is zozmpus (规则: CE, 深度: 6)
  LoG节点 31: zozmpus is qurqpus (规则: MP, 深度: 6)
  LoG节点 32: qurqpus is babgpus (规则: CE, 深度: 6)
  LoG节点 33: qurqpus is tulvpus (规则: CE, 深度: 6)

============================================================
[后处理] 开始处理节点
============================================================
📊 初始状态:
   - 标准化节点数: 147
   - 初始条件数: 23
   - LoG图节点数: 34

📋 初始条件列表:
    1. duplpus is vojypus
    2. kuvkpus is gibnpus and qifgpus
    3. vojypus is qorbpus and zidgpus
    4. qurqpus is babgpus and jekwpus
    5. yotbpus is vuwgpus
    6. x is wewrpus
    7. tirwpus is zozmpus and zagqpus
    8. romfpus is jiclpus
    9. bimfpus is tirwpus and gavzpus
   10. wewrpus is hajbpus
   11. zozmpus is ziqlpus
   12. doqwpus is ricypus and ziyrpus
   13. jiclpus is kuvkpus
   14. cipgpus is bimfpus
   15. hajbpus is vegppus
   16. sextpus is cipgpus
   17. qorbpus is yotbpus and cesrpus
   18. qurqpus is tulvpus and luyrpus
   19. ricypus is sextpus
   20. gibnpus is duplpus
   21. ziqlpus is qurqpus
   22. vegppus is romfpus and jotqpus
   23. yotbpus is doqwpus

🔧 构建初始Statement列表...
✅ 初始Statement列表构建完成，包含 23 个前提节点

🔍 开始处理actual节点...

   节点 1: x is wewrpus
      ↻ 重复节点，计数: 2

   节点 2: x is wewrpus
      ↻ 重复节点，计数: 3

   节点 3: wewrpus is hajbpus
      ↻ 重复节点，计数: 2

   节点 4: hajbpus is vegppus
      ↻ 重复节点，计数: 2

   节点 5: vegppus is romfpus and jotqpus
      ↻ 重复节点，计数: 2

   节点 6: romfpus is jiclpus
      ↻ 重复节点，计数: 2

   节点 7: jiclpus is kuvkpus
      ↻ 重复节点，计数: 2

   节点 8: kuvkpus is gibnpus and qifgpus
      ↻ 重复节点，计数: 2

   节点 9: gibnpus is duplpus
      ↻ 重复节点，计数: 2

   节点 10: duplpus is vojypus
      ↻ 重复节点，计数: 2

   节点 11: vojypus is qorbpus and zidgpus
      ↻ 重复节点，计数: 2

   节点 12: qorbpus is yotbpus and cesrpus
      ↻ 重复节点，计数: 2

   节点 13: yotbpus is vuwgpus and doqwpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CI
      📋 推理路径: CI规则: yotbpus is vuwgpus → yotbpus is doqwpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: yotbpus is vuwgpus
  - 前提: yotbpus is doqwpus
  ✓ 点亮LoG节点: yotbpus is doqwpus and vuwgpus
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 14: yotbpus is vuwgpus
      ↻ 重复节点，计数: 2

   节点 15: qorbpus is yotbpus and cesrpus
      ↻ 重复节点，计数: 3

   节点 16: yotbpus is vuwgpus
      ↻ 重复节点，计数: 3

   节点 17: yotbpus is doqwpus
      ↻ 重复节点，计数: 2

   节点 18: qorbpus is yotbpus and cesrpus
      ↻ 重复节点，计数: 4

   节点 19: yotbpus is doqwpus
      ↻ 重复节点，计数: 3

   节点 20: yotbpus is vuwgpus
      ↻ 重复节点，计数: 4

   节点 21: yotbpus is doqwpus
      ↻ 重复节点，计数: 4

   节点 22: vegwpus is ganfpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 23: lerwpus is babgpus and rayspus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 24: x is relmpus and muqcpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 25: lerwpus is yexbpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 26: yexbpus is lerwpus and pazjpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 27: x is relmpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: x is relmpus and muqcpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: x is relmpus and muqcpus

   节点 28: relmpus is babgpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 29: x is babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is wewrpus → wewrpus is babgpus
[后处理] 基于推理轨迹点亮节点，使用了 21 个前提条件:
  - 前提: x is wewrpus
  - 前提: wewrpus is hajbpus
  - 前提: hajbpus is vegppus
  - 前提: vegppus is romfpus and jotqpus
  - 前提: romfpus is jiclpus
  - 前提: jiclpus is kuvkpus
  - 前提: kuvkpus is gibnpus and qifgpus
  - 前提: gibnpus is duplpus
  - 前提: duplpus is vojypus
  - 前提: vojypus is qorbpus and zidgpus
  - 前提: qorbpus is yotbpus and cesrpus
  - 前提: yotbpus is doqwpus
  - 前提: doqwpus is ricypus and ziyrpus
  - 前提: ricypus is sextpus
  - 前提: sextpus is cipgpus
  - 前提: cipgpus is bimfpus
  - 前提: bimfpus is tirwpus and gavzpus
  - 前提: tirwpus is zozmpus and zagqpus
  - 前提: zozmpus is ziqlpus
  - 前提: ziqlpus is qurqpus
  - 前提: qurqpus is babgpus and jekwpus
  ✓ 点亮LoG节点: x is babgpus or babrpus
[子树点亮]     └─ 点亮依赖节点: x is tirwpus (深度2)
[子树点亮]     └─ 点亮依赖节点: tirwpus is babgpus or babrpus (深度2)
[子树点亮]     └─ 点亮依赖节点: x is qorbpus (深度3)
[子树点亮]     └─ 点亮依赖节点: qorbpus is tirwpus (深度3)
[子树点亮]     └─ 点亮依赖节点: tirwpus is babgpus (深度3)
[子树点亮]     └─ 点亮依赖节点: x is romfpus (深度4)
[子树点亮]     └─ 点亮依赖节点: romfpus is qorbpus (深度4)
[子树点亮]     └─ 点亮依赖节点: qorbpus is doqwpus (深度4)
[子树点亮]     └─ 点亮依赖节点: doqwpus is tirwpus (深度4)
[子树点亮]     └─ 点亮依赖节点: tirwpus is babgpus and tulvpus (深度4)
[子树点亮]     └─ 点亮依赖节点: x is romfpus and jotqpus (深度5)
[子树点亮]     └─ 点亮依赖节点: romfpus is gibnpus (深度5)
[子树点亮]     └─ 点亮依赖节点: gibnpus is qorbpus (深度5)
[子树点亮]     └─ 点亮依赖节点: qorbpus is doqwpus and vuwgpus (深度5)
[子树点亮]     └─ 点亮依赖节点: doqwpus is cipgpus (深度5)
[子树点亮]     └─ 点亮依赖节点: cipgpus is tirwpus (深度5)
[子树点亮]     └─ 点亮依赖节点: tirwpus is qurqpus (深度5)
[子树点亮]     └─ 点亮依赖节点: qurqpus is babgpus and tulvpus (深度5)
[子树点亮]     └─ 点亮依赖节点: x is hajbpus (深度6)
[子树点亮]     └─ 点亮依赖节点: hajbpus is romfpus and jotqpus (深度6)
[子树点亮]     └─ 点亮依赖节点: romfpus is kuvkpus (深度6)
[子树点亮]     └─ 点亮依赖节点: kuvkpus is gibnpus (深度6)
[子树点亮]     └─ 点亮依赖节点: gibnpus is vojypus (深度6)
[子树点亮]     └─ 点亮依赖节点: vojypus is qorbpus (深度6)
[子树点亮]     └─ 点亮依赖节点: qorbpus is yotbpus (深度6)
[子树点亮]     └─ 点亮依赖节点: doqwpus is ricypus (深度6)
[子树点亮]     └─ 点亮依赖节点: ricypus is cipgpus (深度6)
[子树点亮]     └─ 点亮依赖节点: cipgpus is tirwpus and gavzpus (深度6)
[子树点亮]     └─ 点亮依赖节点: tirwpus is zozmpus (深度6)
[子树点亮]     └─ 点亮依赖节点: zozmpus is qurqpus (深度6)
[子树点亮]     └─ 点亮依赖节点: qurqpus is babgpus (深度6)
[子树点亮]     └─ 点亮依赖节点: qurqpus is tulvpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 32 个节点
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 30: x is relmpus
      ↻ 重复节点，计数: 2

   节点 31: relmpus is babgpus
      ↻ 重复节点，计数: 2

   节点 32: x is babgpus
      ↻ 重复节点，计数: 2

   节点 33: duplpus is vojypus
      ↻ 重复节点，计数: 3

   节点 34: kuvkpus is gibnpus and qifgpus
      ↻ 重复节点，计数: 3

   节点 35: vojypus is qorbpus and zidgpus
      ↻ 重复节点，计数: 3

   节点 36: qurqpus is babgpus and jekwpus
      ↻ 重复节点，计数: 2

   节点 37: yotbpus is vuwgpus
      ↻ 重复节点，计数: 5

   节点 38: x is wewrpus
      ↻ 重复节点，计数: 4

   节点 39: tirwpus is zozmpus and zagqpus
      ↻ 重复节点，计数: 2

   节点 40: romfpus is jiclpus
      ↻ 重复节点，计数: 3

   节点 41: bimfpus is tirwpus and gavzpus
      ↻ 重复节点，计数: 2

   节点 42: wewrpus is hajbpus
      ↻ 重复节点，计数: 3

   节点 43: zozmpus is ziqlpus
      ↻ 重复节点，计数: 2

   节点 44: doqwpus is ricypus and ziyrpus
      ↻ 重复节点，计数: 2

   节点 45: jiclpus is kuvkpus
      ↻ 重复节点，计数: 3

   节点 46: cipgpus is bimfpus
      ↻ 重复节点，计数: 2

   节点 47: hajbpus is vegppus
      ↻ 重复节点，计数: 3

   节点 48: sextpus is cipgpus
      ↻ 重复节点，计数: 2

   节点 49: qorbpus is yotbpus and cesrpus
      ↻ 重复节点，计数: 5

   节点 50: qurqpus is tulvpus and luyrpus
      ↻ 重复节点，计数: 2

   节点 51: ricypus is sextpus
      ↻ 重复节点，计数: 2

   节点 52: gibnpus is duplpus
      ↻ 重复节点，计数: 3

   节点 53: ziqlpus is qurqpus
      ↻ 重复节点，计数: 2

   节点 54: vegppus is romfpus and jotqpus
      ↻ 重复节点，计数: 3

   节点 55: yotbpus is doqwpus
      ↻ 重复节点，计数: 5

   节点 56: yotbpus is doqwpus
      ↻ 重复节点，计数: 6

   节点 57: x is wewrpus
      ↻ 重复节点，计数: 5

   节点 58: wewrpus is hajbpus
      ↻ 重复节点，计数: 4

   节点 59: hajbpus is vegppus
      ↻ 重复节点，计数: 4

   节点 60: vegppus is romfpus and jotqpus
      ↻ 重复节点，计数: 4

   节点 61: romfpus is jiclpus
      ↻ 重复节点，计数: 4

   节点 62: jiclpus is kuvkpus
      ↻ 重复节点，计数: 4

   节点 63: kuvkpus is gibnpus and qifgpus
      ↻ 重复节点，计数: 4

   节点 64: gibnpus is duplpus
      ↻ 重复节点，计数: 4

   节点 65: duplpus is vojypus
      ↻ 重复节点，计数: 4

   节点 66: vojypus is qorbpus and zidgpus
      ↻ 重复节点，计数: 4

   节点 67: qorbpus is yotbpus and cesrpus
      ↻ 重复节点，计数: 6

   节点 68: yotbpus is doqwpus
      ↻ 重复节点，计数: 7

   节点 69: doqwpus is ricypus and ziyrpus
      ↻ 重复节点，计数: 3

   节点 70: ricypus is sextpus
      ↻ 重复节点，计数: 3

   节点 71: sextpus is cipgpus
      ↻ 重复节点，计数: 3

   节点 72: cipgpus is bimfpus
      ↻ 重复节点，计数: 3

   节点 73: bimfpus is tirwpus and gavzpus
      ↻ 重复节点，计数: 3

   节点 74: tirwpus is zozmpus and zagqpus
      ↻ 重复节点，计数: 3

   节点 75: zozmpus is ziqlpus
      ↻ 重复节点，计数: 3

   节点 76: ziqlpus is qurqpus
      ↻ 重复节点，计数: 3

   节点 77: qurqpus is babgpus and jekwpus
      ↻ 重复节点，计数: 3

   节点 78: qurqpus is babgpus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 79: wewrpus is x
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 80: x is babgpus
      ↻ 重复节点，计数: 3

   节点 81: x is wewrpus
      ↻ 重复节点，计数: 6

   节点 82: wewrpus is hajbpus
      ↻ 重复节点，计数: 5

   节点 83: hajbpus is vegppus
      ↻ 重复节点，计数: 5

   节点 84: vegppus is romfpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: vegppus is romfpus and jotqpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: vegppus is romfpus and jotqpus

   节点 85: romfpus is jiclpus
      ↻ 重复节点，计数: 5

   节点 86: jiclpus is kuvkpus
      ↻ 重复节点，计数: 5

   节点 87: kuvkpus is gibnpus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 88: gibnpus is duplpus
      ↻ 重复节点，计数: 5

   节点 89: duplpus is vojypus
      ↻ 重复节点，计数: 5

   节点 90: vojypus is qorbpus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 91: qorbpus is yotbpus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 92: qorbpus is cesrpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: qorbpus is yotbpus and cesrpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: qorbpus is yotbpus and cesrpus

   节点 93: yotbpus is doqwpus
      ↻ 重复节点，计数: 8

   节点 94: doqwpus is ricypus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 95: ricypus is ziyrpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 96: ricypus is sextpus
      ↻ 重复节点，计数: 4

   节点 97: sextpus is cipgpus
      ↻ 重复节点，计数: 4

   节点 98: cipgpus is bimfpus
      ↻ 重复节点，计数: 4

   节点 99: bimfpus is tirwpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: bimfpus is tirwpus and gavzpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: bimfpus is tirwpus and gavzpus

   节点 100: tirwpus is gavzpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 101: tirwpus is zozmpus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 102: tirwpus is zagqpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: tirwpus is zozmpus and zagqpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: tirwpus is zozmpus and zagqpus

   节点 103: zozmpus is ziqlpus
      ↻ 重复节点，计数: 4

   节点 104: ziqlpus is qurqpus
      ↻ 重复节点，计数: 4

   节点 105: qurqpus is babgpus and jekwpus
      ↻ 重复节点，计数: 4

   节点 106: x is wewrpus
      ↻ 重复节点，计数: 7

   节点 107: wewrpus is babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: wewrpus is hajbpus → hajbpus is babgpus
[后处理] 基于推理轨迹点亮节点，使用了 20 个前提条件:
  - 前提: wewrpus is hajbpus
  - 前提: hajbpus is vegppus
  - 前提: vegppus is romfpus
  - 前提: romfpus is jiclpus
  - 前提: jiclpus is kuvkpus
  - 前提: kuvkpus is gibnpus
  - 前提: gibnpus is duplpus
  - 前提: duplpus is vojypus
  - 前提: vojypus is qorbpus
  - 前提: qorbpus is yotbpus
  - 前提: yotbpus is doqwpus
  - 前提: doqwpus is ricypus
  - 前提: ricypus is sextpus
  - 前提: sextpus is cipgpus
  - 前提: cipgpus is bimfpus
  - 前提: bimfpus is tirwpus
  - 前提: tirwpus is zozmpus
  - 前提: zozmpus is ziqlpus
  - 前提: ziqlpus is qurqpus
  - 前提: qurqpus is babgpus

   节点 108: wewrpus is hajbpus
      ↻ 重复节点，计数: 6

   节点 109: hajbpus is vegppus
      ↻ 重复节点，计数: 6

   节点 110: vegppus is romfpus
      ↻ 重复节点，计数: 2

   节点 111: romfpus is babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: romfpus is jiclpus → jiclpus is babgpus
[后处理] 基于推理轨迹点亮节点，使用了 17 个前提条件:
  - 前提: romfpus is jiclpus
  - 前提: jiclpus is kuvkpus
  - 前提: kuvkpus is gibnpus
  - 前提: gibnpus is duplpus
  - 前提: duplpus is vojypus
  - 前提: vojypus is qorbpus
  - 前提: qorbpus is yotbpus
  - 前提: yotbpus is doqwpus
  - 前提: doqwpus is ricypus
  - 前提: ricypus is sextpus
  - 前提: sextpus is cipgpus
  - 前提: cipgpus is bimfpus
  - 前提: bimfpus is tirwpus
  - 前提: tirwpus is zozmpus
  - 前提: zozmpus is ziqlpus
  - 前提: ziqlpus is qurqpus
  - 前提: qurqpus is babgpus

   节点 112: qurqpus is babgpus
      ↻ 重复节点，计数: 2

   节点 113: x is babgpus
      ↻ 重复节点，计数: 4

   节点 114: x is babgpus
      ↻ 重复节点，计数: 5

   节点 115: x is babgpus
      ↻ 重复节点，计数: 6

   节点 116: x is babgpus
      ↻ 重复节点，计数: 7

   节点 117: x is babgpus or babrpus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 118: yotbpus is vuwgpus
      ↻ 重复节点，计数: 6

   节点 119: yotbpus is doqwpus
      ↻ 重复节点，计数: 9

   节点 120: yotbpus is doqwpus
      ↻ 重复节点，计数: 10

   节点 121: yotbpus is vuwgpus
      ↻ 重复节点，计数: 7

   节点 122: qorbpus is yotbpus and cesrpus
      ↻ 重复节点，计数: 7

   节点 123: kuvkpus is gibnpus and qifgpus
      ↻ 重复节点，计数: 5

   节点 124: x is babgpus
      ↻ 重复节点，计数: 8

   节点 125: x is babgpus or babrpus
      ↻ 重复节点，计数: 2

🔍 分析推理路径完整性...

============================================================
[后处理] 处理完成
============================================================
📈 处理统计:
   - 处理的actual节点: 125
   - 新增节点: 25
   - 更新已存在节点: 100
   - 点亮的LoG节点: 34

🎯 推理质量统计:
   - 完美推理: 15 (节点正确 + 路径正确)
   - 部分推理: 8 (节点正确 + 路径部分错误)
   - 无效推理: 2 (节点错误或路径完全错误)
[LoG分析] LoG图: 34节点, 23前提, 复杂度1-23

📊 === Statement列表分析 ===
📈 节点统计:
   - 总节点数: 48
   - 前提节点: 23
   - 推理节点: 16
   - 幻觉节点: 9
   - 点亮LoG节点: 34

❌ 幻觉节点详情:
   - vegwpus is ganfpus (出现1次)
   - lerwpus is babgpus and rayspus (出现1次)
   - x is relmpus and muqcpus (出现1次)
   - lerwpus is yexbpus (出现1次)
   - yexbpus is lerwpus and pazjpus (出现1次)
   - relmpus is babgpus (出现2次)
   - wewrpus is x (出现1次)
   - ricypus is ziyrpus (出现1次)
   - tirwpus is gavzpus (出现1次)

✅ 推理节点详情:
   🟢 yotbpus is vuwgpus and doqwpus (出现1次, 质量:perfect)
   🟡 x is relmpus (出现2次, 质量:partial)
      ⚠️  无效依赖: ['x is relmpus and muqcpus']
   🟡 x is babgpus (出现8次, 质量:partial)
      ⚠️  无效依赖: ['x is relmpus and muqcpus', 'relmpus is babgpus']
   🟡 qurqpus is babgpus (出现2次, 质量:partial)
      ⚠️  无效依赖: ['relmpus is babgpus']
   🟢 vegppus is romfpus (出现2次, 质量:perfect)
   🟢 kuvkpus is gibnpus (出现1次, 质量:perfect)
   🟢 vojypus is qorbpus (出现1次, 质量:perfect)
   🟢 qorbpus is yotbpus (出现1次, 质量:perfect)
   🟢 qorbpus is cesrpus (出现1次, 质量:perfect)
   🟢 doqwpus is ricypus (出现1次, 质量:perfect)
   🟢 bimfpus is tirwpus (出现1次, 质量:perfect)
   🟡 tirwpus is zozmpus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['tirwpus is gavzpus']
   🟡 tirwpus is zagqpus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['tirwpus is gavzpus']
   🟡 wewrpus is babgpus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['wewrpus is x', 'relmpus is babgpus']
   🟡 romfpus is babgpus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['relmpus is babgpus']
   🟡 x is babgpus or babrpus (出现2次, 质量:partial)
      ⚠️  无效依赖: ['x is relmpus and muqcpus']

🔥 点亮的LoG节点:
   - yotbpus is doqwpus and vuwgpus
   - cipgpus is tirwpus
   - x is romfpus
   - x is romfpus and jotqpus
   - qurqpus is babgpus
   - tirwpus is zozmpus
   - gibnpus is qorbpus
   - tirwpus is babgpus
   - kuvkpus is gibnpus
   - romfpus is qorbpus
   - qurqpus is babgpus and tulvpus
   - qurqpus is tulvpus
   - cipgpus is tirwpus and gavzpus
   - romfpus is kuvkpus
   - qorbpus is doqwpus
   - x is hajbpus
   - x is tirwpus
   - romfpus is gibnpus
   - hajbpus is romfpus and jotqpus
   - x is qorbpus
   - zozmpus is qurqpus
   - x is babgpus or babrpus
   - qorbpus is tirwpus
   - gibnpus is vojypus
   - doqwpus is tirwpus
   - doqwpus is cipgpus
   - vojypus is qorbpus
   - tirwpus is babgpus and tulvpus
   - qorbpus is yotbpus
   - doqwpus is ricypus
   - qorbpus is doqwpus and vuwgpus
   - tirwpus is babgpus or babrpus
   - ricypus is cipgpus
   - tirwpus is qurqpus

============================================================
📊 计算评估指标
============================================================

🎯 计算Coverage指标...
   深度Coverage: 6/6 = 100.00%
   最深点亮节点: x is babgpus or babrpus (第6层)
   节点Coverage: 34/34 = 100.00%
   前提条件Coverage: 23/23 = 100.00%
   各推理层点亮比例:
     第1层: 15/15 = 100.00%
     第2层: 8/8 = 100.00%
     第3层: 5/5 = 100.00%
     第4层: 3/3 = 100.00%
     第5层: 2/2 = 100.00%
     第6层: 1/1 = 100.00%

🎯 计算Precision指标...
   Error Rate: 9/25 = 36.00%
   可推导节点: 16/25
   Strict Error Rate: 17/25 = 68.00%
   严格有效节点: 8/25

   详细分析:
     完美推理: 15 (60.00%)
     部分推理: 8 (32.00%)
     无效推理: 2 (8.00%)

================================================================================
处理记录 46/50
================================================================================
记录索引: 45
问题状态: correct
📁 从缓存加载提取结果: evaluation_results.LoG_6.deepseek-reasoner_record_45.json
✅ 使用缓存结果:
   - 句子数: 139
   - 提取的语句数: 230
   - 初始条件数: 12

=== Statement提取完成 ===
总句子数: 139
成功提取: 139
失败提取: 0
总statements数: 230

=== 开始清洗Statement格式 ===
原始statements数: 230
清洗后statements数: 136
过滤掉的statements数: 94
清洗后的statements:
  1. [planning] x is babgpus
  2. [actual] x is posvpus
  3. [actual] x is nowmpus
  4. [planning] x is babgpus
  5. [actual] fedwpus is qozlpus
  6. [actual] cunhpus is bebbpus
  7. [actual] zicvpus is zabbpus and xoshpus and jirxpus
  8. [actual] vuhlpus is qoptpus
  9. [actual] qoptpus is cunhpus
  10. [actual] x is posvpus and nowmpus
  11. [actual] hutwpus is kugnpus
  12. [actual] qozlpus is babgpus and faqgpus and hatfpus
  13. [actual] bebbpus is fedwpus and siqmpus
  14. [actual] zabbpus is vuhlpus
  15. [actual] posvpus is hutwpus and lazppus and hajbpus
  16. [actual] kugnpus is zicvpus
  17. [actual] x is posvpus
  18. [planning] x is babgpus
  19. [actual] posvpus is hutwpus and lazppus and hajbpus
  20. [actual] x is posvpus
  21. [planning] x is posvpus
  22. [planning] x is hutwpus
  23. [actual] x is posvpus and nowmpus
  24. [actual] posvpus is hutwpus
  25. [planning] hutwpus is posvpus
  26. [planning] posvpus is hutwpus
  27. [planning] hutwpus is posvpus
  28. [planning] x is babgpus
  29. [planning] x is babgpus
  30. [actual] qozlpus is babgpus and faqgpus and hatfpus
  31. [planning] qozlpus is babgpus
  32. [planning] qozlpus is babgpus
  33. [actual] qozlpus is babgpus
  34. [actual] babgpus is a category that contains qozlpus
  35. [actual] fedwpus is qozlpus
  36. [actual] qozlpus is babgpus
  37. [planning] fedwpus is babgpus
  38. [planning] x is posvpus
  39. [planning] posvpus is hutwpus
  40. [planning] hutwpus is a subcategory of posvpus
  41. [planning] hutwpus is a member of posvpus
  42. [actual] fedwpus is qozlpus
  43. [actual] bebbpus is fedwpus and siqmpus
  44. [planning] bebbpus is fedwpus
  45. [planning] fedwpus is bebbpus
  46. [planning] bebbpus is fedwpus
  47. [actual] fedwpus is qozlpus
  48. [actual] cunhpus is bebbpus
  49. [actual] x is posvpus and nowmpus
  50. [actual] posvpus is x
  51. [actual] nowmpus is x
  52. [planning] x is posvpus
  53. [planning] x is nowmpus
  54. [planning] x is babgpus
  55. [planning] x is babgpus
  56. [planning] x is babgpus
  57. [actual] qozlpus is babgpus and faqgpus and hatfpus
  58. [actual] qozlpus is babgpus
  59. [planning] qozlpus is babgpus
  60. [actual] qozlpus is babgpus
  61. [actual] babgpus is the category
  62. [actual] qozlpus is a member of babgpus
  63. [actual] qozlpus is faqgpus
  64. [actual] bebbpus is fedwpus
  65. [actual] bebbpus is siqmpus
  66. [actual] bebbpus is fedwpus
  67. [actual] bebbpus is siqmpus
  68. [planning] fedwpus is bebbpus
  69. [planning] siqmpus is bebbpus
  70. [actual] bebbpus is a type of fedwpus
  71. [planning] fedwpus is the category containing bebbpus
  72. [actual] bebbpus is fedwpus
  73. [actual] fedwpus is qozlpus
  74. [actual] fedwpus is qozlpus
  75. [actual] bebbpus is fedwpus
  76. [actual] fedwpus is qozlpus
  77. [actual] bebbpus is qozlpus
  78. [actual] cunhpus is bebbpus
  79. [actual] cunhpus is bebbpus
  80. [actual] cunhpus is qozlpus
  81. [actual] x is posvpus
  82. [planning] posvpus is babgpus
  83. [actual] posvpus is hutwpus and lazppus and hajbpus
  84. [actual] posvpus is hutwpus and lazppus and hajbpus
  85. [planning] posvpus is hutwpus and lazppus and hajbpus
  86. [actual] posvpus is hutwpus
  87. [actual] posvpus is hutwpus and lazppus and hajbpus
  88. [actual] posvpus is hutwpus
  89. [planning] posvpus is hutwpus
  90. [planning] posvpus is hutwpus
  91. [actual] fedwpus is qozlpus
  92. [actual] cunhpus is bebbpus
  93. [actual] zicvpus is zabbpus and xoshpus and jirxpus
  94. [actual] posvpus is hutwpus and lazppus and hajbpus
  95. [planning] hutwpus is posvpus
  96. [planning] lazppus is posvpus
  97. [planning] hajbpus is posvpus
  98. [actual] posvpus is multiple categories
  99. [actual] x is posvpus
  100. [actual] posvpus is hutwpus
  101. [planning] x is hutwpus
  102. [planning] posvpus is a category that contains x
  103. [planning] posvpus is itself a member of hutwpus
  104. [planning] hutwpus is a category that contains all members of its members
  105. [planning] hutwpus is a set of sets
  106. [actual] fedwpus is qozlpus
  107. [actual] cunhpus is bebbpus
  108. [actual] x is posvpus
  109. [actual] posvpus is a set that contains x
  110. [actual] posvpus is hutwpus
  111. [actual] x is posvpus
  112. [planning] x is hutwpus
  113. [planning] hutwpus is another set
  114. [planning] x is that set
  115. [planning] x is babgpus
  116. [planning] x is babgpus
  117. [actual] x is posvpus
  118. [actual] posvpus is hutwpus
  119. [actual] posvpus is lazppus and hajbpus
  120. [actual] hutwpus is kugnpus
  121. [actual] x is hutwpus
  122. [actual] x is kugnpus
  123. [actual] kugnpus is zicvpus
  124. [actual] zicvpus is zabbpus and xoshpus and jirxpus
  125. [actual] zabbpus is vuhlpus
  126. [actual] vuhlpus is qoptpus
  127. [actual] qoptpus is cunhpus
  128. [actual] cunhpus is bebbpus
  129. [actual] bebbpus is fedwpus and siqmpus
  130. [planning] x is fedwpus
  131. [actual] fedwpus is qozlpus
  132. [actual] qozlpus is babgpus and faqgpus and hatfpus
  133. [actual] x is babgpus
  134. [actual] bebbpus is fedwpus
  135. [actual] bebbpus is a subset of fedwpus
  136. [actual] x is babgpus

=== 开始标准化和解析节点 ===
清洗后statements数: 136
标准化后节点数: 120
过滤掉的无效实体数: 16
标准化后的节点:
  1. [planning] x → babgpus (原始: x is babgpus)
  2. [actual] x → posvpus (原始: x is posvpus)
  3. [actual] x → nowmpus (原始: x is nowmpus)
  4. [planning] x → babgpus (原始: x is babgpus)
  5. [actual] fedwpus → qozlpus (原始: fedwpus is qozlpus)
  6. [actual] cunhpus → bebbpus (原始: cunhpus is bebbpus)
  7. [actual] zicvpus → zabbpus and xoshpus and jirxpus (原始: zicvpus is zabbpus and xoshpus and jirxpus)
  8. [actual] vuhlpus → qoptpus (原始: vuhlpus is qoptpus)
  9. [actual] qoptpus → cunhpus (原始: qoptpus is cunhpus)
  10. [actual] x → posvpus and nowmpus (原始: x is posvpus and nowmpus)
  11. [actual] hutwpus → kugnpus (原始: hutwpus is kugnpus)
  12. [actual] qozlpus → babgpus and faqgpus and hatfpus (原始: qozlpus is babgpus and faqgpus and hatfpus)
  13. [actual] bebbpus → fedwpus and siqmpus (原始: bebbpus is fedwpus and siqmpus)
  14. [actual] zabbpus → vuhlpus (原始: zabbpus is vuhlpus)
  15. [actual] posvpus → hutwpus and lazppus and hajbpus (原始: posvpus is hutwpus and lazppus and hajbpus)
  16. [actual] kugnpus → zicvpus (原始: kugnpus is zicvpus)
  17. [actual] x → posvpus (原始: x is posvpus)
  18. [planning] x → babgpus (原始: x is babgpus)
  19. [actual] posvpus → hutwpus and lazppus and hajbpus (原始: posvpus is hutwpus and lazppus and hajbpus)
  20. [actual] x → posvpus (原始: x is posvpus)
  21. [planning] x → posvpus (原始: x is posvpus)
  22. [planning] x → hutwpus (原始: x is hutwpus)
  23. [actual] x → posvpus and nowmpus (原始: x is posvpus and nowmpus)
  24. [actual] posvpus → hutwpus (原始: posvpus is hutwpus)
  25. [planning] hutwpus → posvpus (原始: hutwpus is posvpus)
  26. [planning] posvpus → hutwpus (原始: posvpus is hutwpus)
  27. [planning] hutwpus → posvpus (原始: hutwpus is posvpus)
  28. [planning] x → babgpus (原始: x is babgpus)
  29. [planning] x → babgpus (原始: x is babgpus)
  30. [actual] qozlpus → babgpus and faqgpus and hatfpus (原始: qozlpus is babgpus and faqgpus and hatfpus)
  31. [planning] qozlpus → babgpus (原始: qozlpus is babgpus)
  32. [planning] qozlpus → babgpus (原始: qozlpus is babgpus)
  33. [actual] qozlpus → babgpus (原始: qozlpus is babgpus)
  34. [actual] fedwpus → qozlpus (原始: fedwpus is qozlpus)
  35. [actual] qozlpus → babgpus (原始: qozlpus is babgpus)
  36. [planning] fedwpus → babgpus (原始: fedwpus is babgpus)
  37. [planning] x → posvpus (原始: x is posvpus)
  38. [planning] posvpus → hutwpus (原始: posvpus is hutwpus)
  39. [actual] fedwpus → qozlpus (原始: fedwpus is qozlpus)
  40. [actual] bebbpus → fedwpus and siqmpus (原始: bebbpus is fedwpus and siqmpus)
  41. [planning] bebbpus → fedwpus (原始: bebbpus is fedwpus)
  42. [planning] fedwpus → bebbpus (原始: fedwpus is bebbpus)
  43. [planning] bebbpus → fedwpus (原始: bebbpus is fedwpus)
  44. [actual] fedwpus → qozlpus (原始: fedwpus is qozlpus)
  45. [actual] cunhpus → bebbpus (原始: cunhpus is bebbpus)
  46. [actual] x → posvpus and nowmpus (原始: x is posvpus and nowmpus)
  47. [actual] posvpus → x (原始: posvpus is x)
  48. [actual] nowmpus → x (原始: nowmpus is x)
  49. [planning] x → posvpus (原始: x is posvpus)
  50. [planning] x → nowmpus (原始: x is nowmpus)
  51. [planning] x → babgpus (原始: x is babgpus)
  52. [planning] x → babgpus (原始: x is babgpus)
  53. [planning] x → babgpus (原始: x is babgpus)
  54. [actual] qozlpus → babgpus and faqgpus and hatfpus (原始: qozlpus is babgpus and faqgpus and hatfpus)
  55. [actual] qozlpus → babgpus (原始: qozlpus is babgpus)
  56. [planning] qozlpus → babgpus (原始: qozlpus is babgpus)
  57. [actual] qozlpus → babgpus (原始: qozlpus is babgpus)
  58. [actual] qozlpus → faqgpus (原始: qozlpus is faqgpus)
  59. [actual] bebbpus → fedwpus (原始: bebbpus is fedwpus)
  60. [actual] bebbpus → siqmpus (原始: bebbpus is siqmpus)
  61. [actual] bebbpus → fedwpus (原始: bebbpus is fedwpus)
  62. [actual] bebbpus → siqmpus (原始: bebbpus is siqmpus)
  63. [planning] fedwpus → bebbpus (原始: fedwpus is bebbpus)
  64. [planning] siqmpus → bebbpus (原始: siqmpus is bebbpus)
  65. [actual] bebbpus → fedwpus (原始: bebbpus is fedwpus)
  66. [actual] fedwpus → qozlpus (原始: fedwpus is qozlpus)
  67. [actual] fedwpus → qozlpus (原始: fedwpus is qozlpus)
  68. [actual] bebbpus → fedwpus (原始: bebbpus is fedwpus)
  69. [actual] fedwpus → qozlpus (原始: fedwpus is qozlpus)
  70. [actual] bebbpus → qozlpus (原始: bebbpus is qozlpus)
  71. [actual] cunhpus → bebbpus (原始: cunhpus is bebbpus)
  72. [actual] cunhpus → bebbpus (原始: cunhpus is bebbpus)
  73. [actual] cunhpus → qozlpus (原始: cunhpus is qozlpus)
  74. [actual] x → posvpus (原始: x is posvpus)
  75. [planning] posvpus → babgpus (原始: posvpus is babgpus)
  76. [actual] posvpus → hutwpus and lazppus and hajbpus (原始: posvpus is hutwpus and lazppus and hajbpus)
  77. [actual] posvpus → hutwpus and lazppus and hajbpus (原始: posvpus is hutwpus and lazppus and hajbpus)
  78. [planning] posvpus → hutwpus and lazppus and hajbpus (原始: posvpus is hutwpus and lazppus and hajbpus)
  79. [actual] posvpus → hutwpus (原始: posvpus is hutwpus)
  80. [actual] posvpus → hutwpus and lazppus and hajbpus (原始: posvpus is hutwpus and lazppus and hajbpus)
  81. [actual] posvpus → hutwpus (原始: posvpus is hutwpus)
  82. [planning] posvpus → hutwpus (原始: posvpus is hutwpus)
  83. [planning] posvpus → hutwpus (原始: posvpus is hutwpus)
  84. [actual] fedwpus → qozlpus (原始: fedwpus is qozlpus)
  85. [actual] cunhpus → bebbpus (原始: cunhpus is bebbpus)
  86. [actual] zicvpus → zabbpus and xoshpus and jirxpus (原始: zicvpus is zabbpus and xoshpus and jirxpus)
  87. [actual] posvpus → hutwpus and lazppus and hajbpus (原始: posvpus is hutwpus and lazppus and hajbpus)
  88. [planning] hutwpus → posvpus (原始: hutwpus is posvpus)
  89. [planning] lazppus → posvpus (原始: lazppus is posvpus)
  90. [planning] hajbpus → posvpus (原始: hajbpus is posvpus)
  91. [actual] x → posvpus (原始: x is posvpus)
  92. [actual] posvpus → hutwpus (原始: posvpus is hutwpus)
  93. [planning] x → hutwpus (原始: x is hutwpus)
  94. [actual] fedwpus → qozlpus (原始: fedwpus is qozlpus)
  95. [actual] cunhpus → bebbpus (原始: cunhpus is bebbpus)
  96. [actual] x → posvpus (原始: x is posvpus)
  97. [actual] posvpus → hutwpus (原始: posvpus is hutwpus)
  98. [actual] x → posvpus (原始: x is posvpus)
  99. [planning] x → hutwpus (原始: x is hutwpus)
  100. [planning] x → babgpus (原始: x is babgpus)
  101. [planning] x → babgpus (原始: x is babgpus)
  102. [actual] x → posvpus (原始: x is posvpus)
  103. [actual] posvpus → hutwpus (原始: posvpus is hutwpus)
  104. [actual] posvpus → lazppus and hajbpus (原始: posvpus is lazppus and hajbpus)
  105. [actual] hutwpus → kugnpus (原始: hutwpus is kugnpus)
  106. [actual] x → hutwpus (原始: x is hutwpus)
  107. [actual] x → kugnpus (原始: x is kugnpus)
  108. [actual] kugnpus → zicvpus (原始: kugnpus is zicvpus)
  109. [actual] zicvpus → zabbpus and xoshpus and jirxpus (原始: zicvpus is zabbpus and xoshpus and jirxpus)
  110. [actual] zabbpus → vuhlpus (原始: zabbpus is vuhlpus)
  111. [actual] vuhlpus → qoptpus (原始: vuhlpus is qoptpus)
  112. [actual] qoptpus → cunhpus (原始: qoptpus is cunhpus)
  113. [actual] cunhpus → bebbpus (原始: cunhpus is bebbpus)
  114. [actual] bebbpus → fedwpus and siqmpus (原始: bebbpus is fedwpus and siqmpus)
  115. [planning] x → fedwpus (原始: x is fedwpus)
  116. [actual] fedwpus → qozlpus (原始: fedwpus is qozlpus)
  117. [actual] qozlpus → babgpus and faqgpus and hatfpus (原始: qozlpus is babgpus and faqgpus and hatfpus)
  118. [actual] x → babgpus (原始: x is babgpus)
  119. [actual] bebbpus → fedwpus (原始: bebbpus is fedwpus)
  120. [actual] x → babgpus (原始: x is babgpus)

开始新的后处理...
[后处理] 从LoG数据文件中获取到图数据，节点数: 19
[后处理] 加载LoG图，包含 19 个节点
  LoG节点 0: x is babgpus (规则: CE, 深度: 1)
  LoG节点 1: x is babgpus and faqgpus (规则: MP, 深度: 2)
  LoG节点 2: x is zabbpus (规则: MP, 深度: 3)
  LoG节点 3: zabbpus is babgpus and faqgpus (规则: CE, 深度: 3)
  LoG节点 4: x is hutwpus (规则: CE, 深度: 4)
  LoG节点 5: hutwpus is zabbpus (规则: CE, 深度: 4)
  LoG节点 6: zabbpus is babgpus and faqgpus and hatfpus (规则: MP, 深度: 4)
  LoG节点 7: x is hutwpus and lazppus (规则: MP, 深度: 5)
  LoG节点 8: hutwpus is zabbpus and xoshpus (规则: MP, 深度: 5)
  LoG节点 9: zabbpus is bebbpus (规则: MP, 深度: 5)
  LoG节点 10: bebbpus is babgpus and faqgpus and hatfpus (规则: MP, 深度: 5)
  LoG节点 11: x is posvpus (规则: CE, 深度: 6)
  LoG节点 12: posvpus is hutwpus and lazppus (规则: CE, 深度: 6)
  LoG节点 13: hutwpus is zicvpus (规则: MP, 深度: 6)
  LoG节点 14: zicvpus is zabbpus and xoshpus (规则: CE, 深度: 6)
  LoG节点 15: zabbpus is qoptpus (规则: MP, 深度: 6)
  LoG节点 16: qoptpus is bebbpus (规则: MP, 深度: 6)
  LoG节点 17: bebbpus is fedwpus (规则: CE, 深度: 6)
  LoG节点 18: fedwpus is babgpus and faqgpus and hatfpus (规则: MP, 深度: 6)

============================================================
[后处理] 开始处理节点
============================================================
📊 初始状态:
   - 标准化节点数: 120
   - 初始条件数: 12
   - LoG图节点数: 19

📋 初始条件列表:
    1. fedwpus is qozlpus
    2. cunhpus is bebbpus
    3. zicvpus is zabbpus and xoshpus and jirxpus
    4. vuhlpus is qoptpus
    5. qoptpus is cunhpus
    6. x is posvpus and nowmpus
    7. hutwpus is kugnpus
    8. qozlpus is babgpus and faqgpus and hatfpus
    9. bebbpus is fedwpus and siqmpus
   10. zabbpus is vuhlpus
   11. posvpus is hutwpus and lazppus and hajbpus
   12. kugnpus is zicvpus

🔧 构建初始Statement列表...
✅ 初始Statement列表构建完成，包含 12 个前提节点

🔍 开始处理actual节点...

   节点 1: x is posvpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is posvpus
      ✅ 验证成功 + LoG匹配

   节点 2: x is nowmpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: x is posvpus and nowmpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: x is posvpus and nowmpus

   节点 3: fedwpus is qozlpus
      ↻ 重复节点，计数: 2

   节点 4: cunhpus is bebbpus
      ↻ 重复节点，计数: 2

   节点 5: zicvpus is zabbpus and xoshpus and jirxpus
      ↻ 重复节点，计数: 2

   节点 6: vuhlpus is qoptpus
      ↻ 重复节点，计数: 2

   节点 7: qoptpus is cunhpus
      ↻ 重复节点，计数: 2

   节点 8: x is posvpus and nowmpus
      ↻ 重复节点，计数: 2

   节点 9: hutwpus is kugnpus
      ↻ 重复节点，计数: 2

   节点 10: qozlpus is babgpus and faqgpus and hatfpus
      ↻ 重复节点，计数: 2

   节点 11: bebbpus is fedwpus and siqmpus
      ↻ 重复节点，计数: 2

   节点 12: zabbpus is vuhlpus
      ↻ 重复节点，计数: 2

   节点 13: posvpus is hutwpus and lazppus and hajbpus
      ↻ 重复节点，计数: 2

   节点 14: kugnpus is zicvpus
      ↻ 重复节点，计数: 2

   节点 15: x is posvpus
      ↻ 重复节点，计数: 2

   节点 16: posvpus is hutwpus and lazppus and hajbpus
      ↻ 重复节点，计数: 3

   节点 17: x is posvpus
      ↻ 重复节点，计数: 3

   节点 18: x is posvpus and nowmpus
      ↻ 重复节点，计数: 3

   节点 19: posvpus is hutwpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: posvpus is hutwpus and lazppus and hajbpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: posvpus is hutwpus and lazppus and hajbpus
  ✓ 点亮LoG节点: posvpus is hutwpus and lazppus
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 20: qozlpus is babgpus and faqgpus and hatfpus
      ↻ 重复节点，计数: 3

   节点 21: qozlpus is babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: qozlpus is babgpus and faqgpus and hatfpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: qozlpus is babgpus and faqgpus and hatfpus

   节点 22: fedwpus is qozlpus
      ↻ 重复节点，计数: 3

   节点 23: qozlpus is babgpus
      ↻ 重复节点，计数: 2

   节点 24: fedwpus is qozlpus
      ↻ 重复节点，计数: 4

   节点 25: bebbpus is fedwpus and siqmpus
      ↻ 重复节点，计数: 3

   节点 26: fedwpus is qozlpus
      ↻ 重复节点，计数: 5

   节点 27: cunhpus is bebbpus
      ↻ 重复节点，计数: 3

   节点 28: x is posvpus and nowmpus
      ↻ 重复节点，计数: 4

   节点 29: posvpus is x
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 30: nowmpus is x
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 31: qozlpus is babgpus and faqgpus and hatfpus
      ↻ 重复节点，计数: 4

   节点 32: qozlpus is babgpus
      ↻ 重复节点，计数: 3

   节点 33: qozlpus is babgpus
      ↻ 重复节点，计数: 4

   节点 34: qozlpus is faqgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: qozlpus is babgpus and faqgpus and hatfpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: qozlpus is babgpus and faqgpus and hatfpus

   节点 35: bebbpus is fedwpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: bebbpus is fedwpus
      ✅ 验证成功 + LoG匹配

   节点 36: bebbpus is siqmpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: bebbpus is fedwpus and siqmpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: bebbpus is fedwpus and siqmpus

   节点 37: bebbpus is fedwpus
      ↻ 重复节点，计数: 2

   节点 38: bebbpus is siqmpus
      ↻ 重复节点，计数: 2

   节点 39: bebbpus is fedwpus
      ↻ 重复节点，计数: 3

   节点 40: fedwpus is qozlpus
      ↻ 重复节点，计数: 6

   节点 41: fedwpus is qozlpus
      ↻ 重复节点，计数: 7

   节点 42: bebbpus is fedwpus
      ↻ 重复节点，计数: 4

   节点 43: fedwpus is qozlpus
      ↻ 重复节点，计数: 8

   节点 44: bebbpus is qozlpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: bebbpus is fedwpus → fedwpus is qozlpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: bebbpus is fedwpus
  - 前提: fedwpus is qozlpus

   节点 45: cunhpus is bebbpus
      ↻ 重复节点，计数: 4

   节点 46: cunhpus is bebbpus
      ↻ 重复节点，计数: 5

   节点 47: cunhpus is qozlpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: cunhpus is bebbpus → bebbpus is qozlpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: cunhpus is bebbpus
  - 前提: bebbpus is qozlpus

   节点 48: x is posvpus
      ↻ 重复节点，计数: 4

   节点 49: posvpus is hutwpus and lazppus and hajbpus
      ↻ 重复节点，计数: 4

   节点 50: posvpus is hutwpus and lazppus and hajbpus
      ↻ 重复节点，计数: 5

   节点 51: posvpus is hutwpus
      ↻ 重复节点，计数: 2

   节点 52: posvpus is hutwpus and lazppus and hajbpus
      ↻ 重复节点，计数: 6

   节点 53: posvpus is hutwpus
      ↻ 重复节点，计数: 3

   节点 54: fedwpus is qozlpus
      ↻ 重复节点，计数: 9

   节点 55: cunhpus is bebbpus
      ↻ 重复节点，计数: 6

   节点 56: zicvpus is zabbpus and xoshpus and jirxpus
      ↻ 重复节点，计数: 3

   节点 57: posvpus is hutwpus and lazppus and hajbpus
      ↻ 重复节点，计数: 7

   节点 58: x is posvpus
      ↻ 重复节点，计数: 5

   节点 59: posvpus is hutwpus
      ↻ 重复节点，计数: 4

   节点 60: fedwpus is qozlpus
      ↻ 重复节点，计数: 10

   节点 61: cunhpus is bebbpus
      ↻ 重复节点，计数: 7

   节点 62: x is posvpus
      ↻ 重复节点，计数: 6

   节点 63: posvpus is hutwpus
      ↻ 重复节点，计数: 5

   节点 64: x is posvpus
      ↻ 重复节点，计数: 7

   节点 65: x is posvpus
      ↻ 重复节点，计数: 8

   节点 66: posvpus is hutwpus
      ↻ 重复节点，计数: 6

   节点 67: posvpus is lazppus and hajbpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CI
      📋 推理路径: CI规则: posvpus is lazppus → posvpus is hajbpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: posvpus is hutwpus and lazppus and hajbpus

   节点 68: hutwpus is kugnpus
      ↻ 重复节点，计数: 3

   节点 69: x is hutwpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is hutwpus
[子树点亮]     └─ 点亮依赖节点: x is hutwpus and lazppus (深度5)
[后处理]   └─ 自动点亮依赖子树: 1 个节点
      ✅ 验证成功 + LoG匹配

   节点 70: x is kugnpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is posvpus → posvpus is kugnpus
[后处理] 基于推理轨迹点亮节点，使用了 3 个前提条件:
  - 前提: x is posvpus
  - 前提: posvpus is hutwpus
  - 前提: hutwpus is kugnpus

   节点 71: kugnpus is zicvpus
      ↻ 重复节点，计数: 3

   节点 72: zicvpus is zabbpus and xoshpus and jirxpus
      ↻ 重复节点，计数: 4

   节点 73: zabbpus is vuhlpus
      ↻ 重复节点，计数: 3

   节点 74: vuhlpus is qoptpus
      ↻ 重复节点，计数: 3

   节点 75: qoptpus is cunhpus
      ↻ 重复节点，计数: 3

   节点 76: cunhpus is bebbpus
      ↻ 重复节点，计数: 8

   节点 77: bebbpus is fedwpus and siqmpus
      ↻ 重复节点，计数: 4

   节点 78: fedwpus is qozlpus
      ↻ 重复节点，计数: 11

   节点 79: qozlpus is babgpus and faqgpus and hatfpus
      ↻ 重复节点，计数: 5

   节点 80: x is babgpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is babgpus
[子树点亮]     └─ 点亮依赖节点: x is babgpus and faqgpus (深度2)
[子树点亮]     └─ 点亮依赖节点: x is zabbpus (深度3)
[子树点亮]     └─ 点亮依赖节点: zabbpus is babgpus and faqgpus (深度3)
[子树点亮]     └─ 点亮依赖节点: hutwpus is zabbpus (深度4)
[子树点亮]     └─ 点亮依赖节点: zabbpus is babgpus and faqgpus and hatfpus (深度4)
[子树点亮]     └─ 点亮依赖节点: hutwpus is zabbpus and xoshpus (深度5)
[子树点亮]     └─ 点亮依赖节点: zabbpus is bebbpus (深度5)
[子树点亮]     └─ 点亮依赖节点: bebbpus is babgpus and faqgpus and hatfpus (深度5)
[子树点亮]     └─ 点亮依赖节点: hutwpus is zicvpus (深度6)
[子树点亮]     └─ 点亮依赖节点: zicvpus is zabbpus and xoshpus (深度6)
[子树点亮]     └─ 点亮依赖节点: zabbpus is qoptpus (深度6)
[子树点亮]     └─ 点亮依赖节点: qoptpus is bebbpus (深度6)
[子树点亮]     └─ 点亮依赖节点: fedwpus is babgpus and faqgpus and hatfpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 13 个节点
      ✅ 验证成功 + LoG匹配

   节点 81: bebbpus is fedwpus
      ↻ 重复节点，计数: 5

   节点 82: x is babgpus
      ↻ 重复节点，计数: 2

🔍 分析推理路径完整性...

============================================================
[后处理] 处理完成
============================================================
📈 处理统计:
   - 处理的actual节点: 82
   - 新增节点: 15
   - 更新已存在节点: 67
   - 点亮的LoG节点: 19

🎯 推理质量统计:
   - 完美推理: 11 (节点正确 + 路径正确)
   - 部分推理: 3 (节点正确 + 路径部分错误)
   - 无效推理: 1 (节点错误或路径完全错误)
[LoG分析] LoG图: 19节点, 12前提, 复杂度1-12

📊 === Statement列表分析 ===
📈 节点统计:
   - 总节点数: 27
   - 前提节点: 12
   - 推理节点: 13
   - 幻觉节点: 2
   - 点亮LoG节点: 19

❌ 幻觉节点详情:
   - posvpus is x (出现1次)
   - nowmpus is x (出现1次)

✅ 推理节点详情:
   🟢 x is posvpus (出现8次, 质量:perfect)
   🟢 x is nowmpus (出现1次, 质量:perfect)
   🟡 posvpus is hutwpus (出现6次, 质量:partial)
      ⚠️  无效依赖: ['posvpus is x']
   🟢 qozlpus is babgpus (出现4次, 质量:perfect)
   🟢 qozlpus is faqgpus (出现1次, 质量:perfect)
   🟢 bebbpus is fedwpus (出现5次, 质量:perfect)
   🟢 bebbpus is siqmpus (出现2次, 质量:perfect)
   🟢 bebbpus is qozlpus (出现1次, 质量:perfect)
   🟢 cunhpus is qozlpus (出现1次, 质量:perfect)
   🟡 posvpus is lazppus and hajbpus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['posvpus is x']
   🟢 x is hutwpus (出现1次, 质量:perfect)
   🟢 x is kugnpus (出现1次, 质量:perfect)
   🟢 x is babgpus (出现2次, 质量:perfect)

🔥 点亮的LoG节点:
   - bebbpus is babgpus and faqgpus and hatfpus
   - hutwpus is zabbpus
   - x is babgpus and faqgpus
   - x is hutwpus and lazppus
   - x is babgpus
   - zicvpus is zabbpus and xoshpus
   - x is posvpus
   - posvpus is hutwpus and lazppus
   - qoptpus is bebbpus
   - zabbpus is bebbpus
   - zabbpus is qoptpus
   - hutwpus is zicvpus
   - hutwpus is zabbpus and xoshpus
   - x is zabbpus
   - bebbpus is fedwpus
   - x is hutwpus
   - fedwpus is babgpus and faqgpus and hatfpus
   - zabbpus is babgpus and faqgpus
   - zabbpus is babgpus and faqgpus and hatfpus

============================================================
📊 计算评估指标
============================================================

🎯 计算Coverage指标...
   深度Coverage: 6/6 = 100.00%
   最深点亮节点: x is babgpus (第6层)
   节点Coverage: 19/19 = 100.00%
   前提条件Coverage: 12/12 = 100.00%
   各推理层点亮比例:
     第1层: 8/8 = 100.00%
     第2层: 4/4 = 100.00%
     第3层: 3/3 = 100.00%
     第4层: 2/2 = 100.00%
     第5层: 1/1 = 100.00%
     第6层: 1/1 = 100.00%

🎯 计算Precision指标...
   Error Rate: 2/15 = 13.33%
   可推导节点: 13/15
   Strict Error Rate: 4/15 = 26.67%
   严格有效节点: 11/15

   详细分析:
     完美推理: 11 (73.33%)
     部分推理: 3 (20.00%)
     无效推理: 1 (6.67%)

================================================================================
处理记录 47/50
================================================================================
记录索引: 46
问题状态: correct
📁 从缓存加载提取结果: evaluation_results.LoG_6.deepseek-reasoner_record_46.json
✅ 使用缓存结果:
   - 句子数: 97
   - 提取的语句数: 131
   - 初始条件数: 12

=== Statement提取完成 ===
总句子数: 97
成功提取: 97
失败提取: 0
总statements数: 131

=== 开始清洗Statement格式 ===
原始statements数: 131
清洗后statements数: 88
过滤掉的statements数: 43
清洗后的statements:
  1. [planning] x is babgpus
  2. [planning] x is babrpus
  3. [planning] x is babspus
  4. [actual] x is noxppus
  5. [actual] x is noxppus
  6. [actual] noxppus is xidppus and lodgpus
  7. [actual] noxppus is a subset of xidppus
  8. [actual] noxppus is a subset of lodgpus
  9. [actual] noxppus is xidppus
  10. [actual] noxppus is lodgpus
  11. [planning] noxppus is xidppus
  12. [planning] noxppus is lodgpus
  13. [planning] x is babgpus
  14. [actual] doqxpus is juwdpus
  15. [actual] doqxpus is babgpus and babrpus and babspus
  16. [actual] doqxpus is babgpus and babrpus and babspus
  17. [actual] x is noxppus
  18. [actual] xoqhpus is novlpus and nisvpus
  19. [actual] xarzpus is vuzcpus and wohfpus
  20. [actual] doqxpus is juwdpus
  21. [actual] novlpus is xarzpus and collpus
  22. [actual] hollpus is xoqhpus
  23. [actual] zuzwpus is doqxpus
  24. [actual] xidppus is zowqpus
  25. [actual] hollpus is zuzwpus
  26. [actual] hollpus is xoqhpus and zuzwpus
  27. [actual] zuzwpus is doqxpus
  28. [planning] hollpus is doqxpus
  29. [actual] noxppus is xidppus and lodgpus
  30. [actual] zowqpus is hollpus and tixzpus and qakypus
  31. [actual] x is noxppus
  32. [actual] doqxpus is babgpus and babrpus and babspus
  33. [actual] zuzwpus is doqxpus
  34. [actual] zuzwpus is doqxpus
  35. [actual] hollpus is zuzwpus
  36. [actual] hollpus is zuzwpus
  37. [actual] zuzwpus is doqxpus
  38. [planning] hollpus is zuzwpus
  39. [planning] hollpus is doqxpus
  40. [actual] hollpus is xoqhpus
  41. [planning] xoqhpus is hollpus
  42. [actual] hollpus is xoqhpus
  43. [actual] hollpus is xoqhpus
  44. [actual] xoqhpus is novlpus
  45. [actual] hollpus is xoqhpus
  46. [actual] hollpus is zuzwpus
  47. [actual] zuzwpus is doqxpus
  48. [actual] zowqpus is hollpus and tixzpus and qakypus
  49. [planning] zowqpus is hollpus
  50. [planning] zowqpus is tixzpus
  51. [planning] zowqpus is qakypus
  52. [actual] zowqpus is hollpus and tixzpus and qakypus
  53. [actual] zowqpus is hollpus
  54. [actual] zowqpus is hollpus and tixzpus and qakypus
  55. [actual] zowqpus is hollpus
  56. [actual] zowqpus is tixzpus
  57. [actual] zowqpus is qakypus
  58. [actual] xidppus is zowqpus
  59. [actual] noxppus is xidppus and lodgpus
  60. [actual] noxppus is xidppus
  61. [actual] xidppus is zowqpus
  62. [actual] zowqpus is hollpus
  63. [actual] noxppus is hollpus
  64. [actual] hollpus is doqxpus
  65. [actual] doqxpus is babgpus and babrpus and babspus
  66. [actual] x is noxppus
  67. [actual] noxppus is subset of babgpus
  68. [planning] x is babgpus
  69. [actual] x is babrpus
  70. [actual] x is babspus
  71. [actual] x is babgpus and babrpus and babspus
  72. [actual] x is noxppus
  73. [actual] hollpus is zuzwpus
  74. [actual] hollpus is zuzwpus
  75. [actual] zuzwpus is doqxpus
  76. [actual] hollpus is zuzwpus
  77. [actual] zuzwpus is doqxpus
  78. [actual] hollpus is doqxpus
  79. [actual] zowqpus is hollpus
  80. [actual] zowqpus is doqxpus
  81. [actual] noxppus is xidppus
  82. [actual] noxppus is doqxpus
  83. [actual] x is babgpus
  84. [actual] x is doqxpus
  85. [actual] doqxpus is babgpus
  86. [actual] doqxpus is babrpus
  87. [actual] doqxpus is babspus
  88. [actual] x is babgpus and babrpus and babspus

=== 开始标准化和解析节点 ===
清洗后statements数: 88
标准化后节点数: 85
过滤掉的无效实体数: 3
标准化后的节点:
  1. [planning] x → babgpus (原始: x is babgpus)
  2. [planning] x → babrpus (原始: x is babrpus)
  3. [planning] x → babspus (原始: x is babspus)
  4. [actual] x → noxppus (原始: x is noxppus)
  5. [actual] x → noxppus (原始: x is noxppus)
  6. [actual] noxppus → xidppus and lodgpus (原始: noxppus is xidppus and lodgpus)
  7. [actual] noxppus → xidppus (原始: noxppus is xidppus)
  8. [actual] noxppus → lodgpus (原始: noxppus is lodgpus)
  9. [planning] noxppus → xidppus (原始: noxppus is xidppus)
  10. [planning] noxppus → lodgpus (原始: noxppus is lodgpus)
  11. [planning] x → babgpus (原始: x is babgpus)
  12. [actual] doqxpus → juwdpus (原始: doqxpus is juwdpus)
  13. [actual] doqxpus → babgpus and babrpus and babspus (原始: doqxpus is babgpus and babrpus and babspus)
  14. [actual] doqxpus → babgpus and babrpus and babspus (原始: doqxpus is babgpus and babrpus and babspus)
  15. [actual] x → noxppus (原始: x is noxppus)
  16. [actual] xoqhpus → novlpus and nisvpus (原始: xoqhpus is novlpus and nisvpus)
  17. [actual] xarzpus → vuzcpus and wohfpus (原始: xarzpus is vuzcpus and wohfpus)
  18. [actual] doqxpus → juwdpus (原始: doqxpus is juwdpus)
  19. [actual] novlpus → xarzpus and collpus (原始: novlpus is xarzpus and collpus)
  20. [actual] hollpus → xoqhpus (原始: hollpus is xoqhpus)
  21. [actual] zuzwpus → doqxpus (原始: zuzwpus is doqxpus)
  22. [actual] xidppus → zowqpus (原始: xidppus is zowqpus)
  23. [actual] hollpus → zuzwpus (原始: hollpus is zuzwpus)
  24. [actual] hollpus → xoqhpus and zuzwpus (原始: hollpus is xoqhpus and zuzwpus)
  25. [actual] zuzwpus → doqxpus (原始: zuzwpus is doqxpus)
  26. [planning] hollpus → doqxpus (原始: hollpus is doqxpus)
  27. [actual] noxppus → xidppus and lodgpus (原始: noxppus is xidppus and lodgpus)
  28. [actual] zowqpus → hollpus and tixzpus and qakypus (原始: zowqpus is hollpus and tixzpus and qakypus)
  29. [actual] x → noxppus (原始: x is noxppus)
  30. [actual] doqxpus → babgpus and babrpus and babspus (原始: doqxpus is babgpus and babrpus and babspus)
  31. [actual] zuzwpus → doqxpus (原始: zuzwpus is doqxpus)
  32. [actual] zuzwpus → doqxpus (原始: zuzwpus is doqxpus)
  33. [actual] hollpus → zuzwpus (原始: hollpus is zuzwpus)
  34. [actual] hollpus → zuzwpus (原始: hollpus is zuzwpus)
  35. [actual] zuzwpus → doqxpus (原始: zuzwpus is doqxpus)
  36. [planning] hollpus → zuzwpus (原始: hollpus is zuzwpus)
  37. [planning] hollpus → doqxpus (原始: hollpus is doqxpus)
  38. [actual] hollpus → xoqhpus (原始: hollpus is xoqhpus)
  39. [planning] xoqhpus → hollpus (原始: xoqhpus is hollpus)
  40. [actual] hollpus → xoqhpus (原始: hollpus is xoqhpus)
  41. [actual] hollpus → xoqhpus (原始: hollpus is xoqhpus)
  42. [actual] xoqhpus → novlpus (原始: xoqhpus is novlpus)
  43. [actual] hollpus → xoqhpus (原始: hollpus is xoqhpus)
  44. [actual] hollpus → zuzwpus (原始: hollpus is zuzwpus)
  45. [actual] zuzwpus → doqxpus (原始: zuzwpus is doqxpus)
  46. [actual] zowqpus → hollpus and tixzpus and qakypus (原始: zowqpus is hollpus and tixzpus and qakypus)
  47. [planning] zowqpus → hollpus (原始: zowqpus is hollpus)
  48. [planning] zowqpus → tixzpus (原始: zowqpus is tixzpus)
  49. [planning] zowqpus → qakypus (原始: zowqpus is qakypus)
  50. [actual] zowqpus → hollpus and tixzpus and qakypus (原始: zowqpus is hollpus and tixzpus and qakypus)
  51. [actual] zowqpus → hollpus (原始: zowqpus is hollpus)
  52. [actual] zowqpus → hollpus and tixzpus and qakypus (原始: zowqpus is hollpus and tixzpus and qakypus)
  53. [actual] zowqpus → hollpus (原始: zowqpus is hollpus)
  54. [actual] zowqpus → tixzpus (原始: zowqpus is tixzpus)
  55. [actual] zowqpus → qakypus (原始: zowqpus is qakypus)
  56. [actual] xidppus → zowqpus (原始: xidppus is zowqpus)
  57. [actual] noxppus → xidppus and lodgpus (原始: noxppus is xidppus and lodgpus)
  58. [actual] noxppus → xidppus (原始: noxppus is xidppus)
  59. [actual] xidppus → zowqpus (原始: xidppus is zowqpus)
  60. [actual] zowqpus → hollpus (原始: zowqpus is hollpus)
  61. [actual] noxppus → hollpus (原始: noxppus is hollpus)
  62. [actual] hollpus → doqxpus (原始: hollpus is doqxpus)
  63. [actual] doqxpus → babgpus and babrpus and babspus (原始: doqxpus is babgpus and babrpus and babspus)
  64. [actual] x → noxppus (原始: x is noxppus)
  65. [planning] x → babgpus (原始: x is babgpus)
  66. [actual] x → babrpus (原始: x is babrpus)
  67. [actual] x → babspus (原始: x is babspus)
  68. [actual] x → babgpus and babrpus and babspus (原始: x is babgpus and babrpus and babspus)
  69. [actual] x → noxppus (原始: x is noxppus)
  70. [actual] hollpus → zuzwpus (原始: hollpus is zuzwpus)
  71. [actual] hollpus → zuzwpus (原始: hollpus is zuzwpus)
  72. [actual] zuzwpus → doqxpus (原始: zuzwpus is doqxpus)
  73. [actual] hollpus → zuzwpus (原始: hollpus is zuzwpus)
  74. [actual] zuzwpus → doqxpus (原始: zuzwpus is doqxpus)
  75. [actual] hollpus → doqxpus (原始: hollpus is doqxpus)
  76. [actual] zowqpus → hollpus (原始: zowqpus is hollpus)
  77. [actual] zowqpus → doqxpus (原始: zowqpus is doqxpus)
  78. [actual] noxppus → xidppus (原始: noxppus is xidppus)
  79. [actual] noxppus → doqxpus (原始: noxppus is doqxpus)
  80. [actual] x → babgpus (原始: x is babgpus)
  81. [actual] x → doqxpus (原始: x is doqxpus)
  82. [actual] doqxpus → babgpus (原始: doqxpus is babgpus)
  83. [actual] doqxpus → babrpus (原始: doqxpus is babrpus)
  84. [actual] doqxpus → babspus (原始: doqxpus is babspus)
  85. [actual] x → babgpus and babrpus and babspus (原始: x is babgpus and babrpus and babspus)

开始新的后处理...
[后处理] 从LoG数据文件中获取到图数据，节点数: 19
[后处理] 加载LoG图，包含 19 个节点
  LoG节点 0: x is babgpus and babrpus and babspus (规则: CE, 深度: 1)
  LoG节点 1: x is babgpus and babrpus and babspus and vuzcpus (规则: MP, 深度: 2)
  LoG节点 2: x is hollpus (规则: CE, 深度: 3)
  LoG节点 3: hollpus is babgpus and babrpus and babspus and vuzcpus (规则: CI, 深度: 3)
  LoG节点 4: x is hollpus and tixzpus (规则: MP, 深度: 4)
  LoG节点 5: hollpus is babgpus and babrpus and babspus (规则: CE, 深度: 4)
  LoG节点 6: hollpus is vuzcpus (规则: MP, 深度: 4)
  LoG节点 7: x is xidppus (规则: CE, 深度: 5)
  LoG节点 8: xidppus is hollpus and tixzpus (规则: CE, 深度: 5)
  LoG节点 9: hollpus is babgpus and babrpus and babspus and juwdpus (规则: MP, 深度: 5)
  LoG节点 10: hollpus is novlpus (规则: CE, 深度: 5)
  LoG节点 11: novlpus is vuzcpus (规则: MP, 深度: 5)
  LoG节点 12: x is xidppus and lodgpus (规则: MP, 深度: 6)
  LoG节点 13: xidppus is hollpus and tixzpus and qakypus (规则: MP, 深度: 6)
  LoG节点 14: hollpus is doqxpus (规则: MP, 深度: 6)
  LoG节点 15: doqxpus is babgpus and babrpus and babspus and juwdpus (规则: CI, 深度: 6)
  LoG节点 16: hollpus is novlpus and nisvpus (规则: MP, 深度: 6)
  LoG节点 17: novlpus is xarzpus (规则: CE, 深度: 6)
  LoG节点 18: xarzpus is vuzcpus (规则: CE, 深度: 6)

============================================================
[后处理] 开始处理节点
============================================================
📊 初始状态:
   - 标准化节点数: 85
   - 初始条件数: 12
   - LoG图节点数: 19

📋 初始条件列表:
    1. xoqhpus is novlpus and nisvpus
    2. xarzpus is vuzcpus and wohfpus
    3. doqxpus is juwdpus
    4. novlpus is xarzpus and collpus
    5. hollpus is xoqhpus
    6. zuzwpus is doqxpus
    7. xidppus is zowqpus
    8. hollpus is zuzwpus
    9. noxppus is xidppus and lodgpus
   10. zowqpus is hollpus and tixzpus and qakypus
   11. x is noxppus
   12. doqxpus is babgpus and babrpus and babspus

🔧 构建初始Statement列表...
✅ 初始Statement列表构建完成，包含 12 个前提节点

🔍 开始处理actual节点...

   节点 1: x is noxppus
      ↻ 重复节点，计数: 2

   节点 2: x is noxppus
      ↻ 重复节点，计数: 3

   节点 3: noxppus is xidppus and lodgpus
      ↻ 重复节点，计数: 2

   节点 4: noxppus is xidppus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: noxppus is xidppus and lodgpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: noxppus is xidppus and lodgpus

   节点 5: noxppus is lodgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: noxppus is xidppus and lodgpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: noxppus is xidppus and lodgpus

   节点 6: doqxpus is juwdpus
      ↻ 重复节点，计数: 2

   节点 7: doqxpus is babgpus and babrpus and babspus
      ↻ 重复节点，计数: 2

   节点 8: doqxpus is babgpus and babrpus and babspus
      ↻ 重复节点，计数: 3

   节点 9: x is noxppus
      ↻ 重复节点，计数: 4

   节点 10: xoqhpus is novlpus and nisvpus
      ↻ 重复节点，计数: 2

   节点 11: xarzpus is vuzcpus and wohfpus
      ↻ 重复节点，计数: 2

   节点 12: doqxpus is juwdpus
      ↻ 重复节点，计数: 3

   节点 13: novlpus is xarzpus and collpus
      ↻ 重复节点，计数: 2

   节点 14: hollpus is xoqhpus
      ↻ 重复节点，计数: 2

   节点 15: zuzwpus is doqxpus
      ↻ 重复节点，计数: 2

   节点 16: xidppus is zowqpus
      ↻ 重复节点，计数: 2

   节点 17: hollpus is zuzwpus
      ↻ 重复节点，计数: 2

   节点 18: hollpus is xoqhpus and zuzwpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CI
      📋 推理路径: CI规则: hollpus is xoqhpus → hollpus is zuzwpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: hollpus is xoqhpus
  - 前提: hollpus is zuzwpus

   节点 19: zuzwpus is doqxpus
      ↻ 重复节点，计数: 3

   节点 20: noxppus is xidppus and lodgpus
      ↻ 重复节点，计数: 3

   节点 21: zowqpus is hollpus and tixzpus and qakypus
      ↻ 重复节点，计数: 2

   节点 22: x is noxppus
      ↻ 重复节点，计数: 5

   节点 23: doqxpus is babgpus and babrpus and babspus
      ↻ 重复节点，计数: 4

   节点 24: zuzwpus is doqxpus
      ↻ 重复节点，计数: 4

   节点 25: zuzwpus is doqxpus
      ↻ 重复节点，计数: 5

   节点 26: hollpus is zuzwpus
      ↻ 重复节点，计数: 3

   节点 27: hollpus is zuzwpus
      ↻ 重复节点，计数: 4

   节点 28: zuzwpus is doqxpus
      ↻ 重复节点，计数: 6

   节点 29: hollpus is xoqhpus
      ↻ 重复节点，计数: 3

   节点 30: hollpus is xoqhpus
      ↻ 重复节点，计数: 4

   节点 31: hollpus is xoqhpus
      ↻ 重复节点，计数: 5

   节点 32: xoqhpus is novlpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: xoqhpus is novlpus and nisvpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: xoqhpus is novlpus and nisvpus

   节点 33: hollpus is xoqhpus
      ↻ 重复节点，计数: 6

   节点 34: hollpus is zuzwpus
      ↻ 重复节点，计数: 5

   节点 35: zuzwpus is doqxpus
      ↻ 重复节点，计数: 7

   节点 36: zowqpus is hollpus and tixzpus and qakypus
      ↻ 重复节点，计数: 3

   节点 37: zowqpus is hollpus and tixzpus and qakypus
      ↻ 重复节点，计数: 4

   节点 38: zowqpus is hollpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: zowqpus is hollpus and tixzpus and qakypus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: zowqpus is hollpus and tixzpus and qakypus

   节点 39: zowqpus is hollpus and tixzpus and qakypus
      ↻ 重复节点，计数: 5

   节点 40: zowqpus is hollpus
      ↻ 重复节点，计数: 2

   节点 41: zowqpus is tixzpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: zowqpus is hollpus and tixzpus and qakypus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: zowqpus is hollpus and tixzpus and qakypus

   节点 42: zowqpus is qakypus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: zowqpus is hollpus and tixzpus and qakypus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: zowqpus is hollpus and tixzpus and qakypus

   节点 43: xidppus is zowqpus
      ↻ 重复节点，计数: 3

   节点 44: noxppus is xidppus and lodgpus
      ↻ 重复节点，计数: 4

   节点 45: noxppus is xidppus
      ↻ 重复节点，计数: 2

   节点 46: xidppus is zowqpus
      ↻ 重复节点，计数: 4

   节点 47: zowqpus is hollpus
      ↻ 重复节点，计数: 3

   节点 48: noxppus is hollpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: noxppus is xidppus → xidppus is hollpus
[后处理] 基于推理轨迹点亮节点，使用了 3 个前提条件:
  - 前提: noxppus is xidppus
  - 前提: xidppus is zowqpus
  - 前提: zowqpus is hollpus

   节点 49: hollpus is doqxpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: hollpus is doqxpus
      ✅ 验证成功 + LoG匹配

   节点 50: doqxpus is babgpus and babrpus and babspus
      ↻ 重复节点，计数: 5

   节点 51: x is noxppus
      ↻ 重复节点，计数: 6

   节点 52: x is babrpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is noxppus → noxppus is babrpus
[后处理] 基于推理轨迹点亮节点，使用了 7 个前提条件:
  - 前提: x is noxppus
  - 前提: noxppus is xidppus
  - 前提: xidppus is zowqpus
  - 前提: zowqpus is hollpus
  - 前提: hollpus is zuzwpus
  - 前提: zuzwpus is doqxpus
  - 前提: doqxpus is babgpus and babrpus and babspus
  ✓ 点亮LoG节点: x is babgpus and babrpus and babspus
[子树点亮]     └─ 点亮依赖节点: x is babgpus and babrpus and babspus and vuzcpus (深度2)
[子树点亮]     └─ 点亮依赖节点: x is hollpus (深度3)
[子树点亮]     └─ 点亮依赖节点: hollpus is babgpus and babrpus and babspus and vuzcpus (深度3)
[子树点亮]     └─ 点亮依赖节点: x is hollpus and tixzpus (深度4)
[子树点亮]     └─ 点亮依赖节点: hollpus is babgpus and babrpus and babspus (深度4)
[子树点亮]     └─ 点亮依赖节点: hollpus is vuzcpus (深度4)
[子树点亮]     └─ 点亮依赖节点: x is xidppus (深度5)
[子树点亮]     └─ 点亮依赖节点: xidppus is hollpus and tixzpus (深度5)
[子树点亮]     └─ 点亮依赖节点: hollpus is babgpus and babrpus and babspus and juwdpus (深度5)
[子树点亮]     └─ 点亮依赖节点: hollpus is novlpus (深度5)
[子树点亮]     └─ 点亮依赖节点: novlpus is vuzcpus (深度5)
[子树点亮]     └─ 点亮依赖节点: x is xidppus and lodgpus (深度6)
[子树点亮]     └─ 点亮依赖节点: xidppus is hollpus and tixzpus and qakypus (深度6)
[子树点亮]     └─ 点亮依赖节点: doqxpus is babgpus and babrpus and babspus and juwdpus (深度6)
[子树点亮]     └─ 点亮依赖节点: hollpus is novlpus and nisvpus (深度6)
[子树点亮]     └─ 点亮依赖节点: novlpus is xarzpus (深度6)
[子树点亮]     └─ 点亮依赖节点: xarzpus is vuzcpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 17 个节点
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 53: x is babspus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is noxppus → noxppus is babspus
[后处理] 基于推理轨迹点亮节点，使用了 7 个前提条件:
  - 前提: x is noxppus
  - 前提: noxppus is xidppus
  - 前提: xidppus is zowqpus
  - 前提: zowqpus is hollpus
  - 前提: hollpus is zuzwpus
  - 前提: zuzwpus is doqxpus
  - 前提: doqxpus is babgpus and babrpus and babspus

   节点 54: x is babgpus and babrpus and babspus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 55: x is noxppus
      ↻ 重复节点，计数: 7

   节点 56: hollpus is zuzwpus
      ↻ 重复节点，计数: 6

   节点 57: hollpus is zuzwpus
      ↻ 重复节点，计数: 7

   节点 58: zuzwpus is doqxpus
      ↻ 重复节点，计数: 8

   节点 59: hollpus is zuzwpus
      ↻ 重复节点，计数: 8

   节点 60: zuzwpus is doqxpus
      ↻ 重复节点，计数: 9

   节点 61: hollpus is doqxpus
      ↻ 重复节点，计数: 2

   节点 62: zowqpus is hollpus
      ↻ 重复节点，计数: 4

   节点 63: zowqpus is doqxpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: zowqpus is hollpus → hollpus is doqxpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: zowqpus is hollpus
  - 前提: hollpus is doqxpus

   节点 64: noxppus is xidppus
      ↻ 重复节点，计数: 3

   节点 65: noxppus is doqxpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: noxppus is xidppus → xidppus is doqxpus
[后处理] 基于推理轨迹点亮节点，使用了 3 个前提条件:
  - 前提: noxppus is xidppus
  - 前提: xidppus is zowqpus
  - 前提: zowqpus is doqxpus

   节点 66: x is babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: x is babgpus and babrpus and babspus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: x is babgpus and babrpus and babspus

   节点 67: x is doqxpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is noxppus → noxppus is doqxpus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: x is noxppus
  - 前提: noxppus is doqxpus

   节点 68: doqxpus is babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: doqxpus is babgpus and babrpus and babspus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: doqxpus is babgpus and babrpus and babspus

   节点 69: doqxpus is babrpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: doqxpus is babgpus and babrpus and babspus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: doqxpus is babgpus and babrpus and babspus

   节点 70: doqxpus is babspus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: doqxpus is babgpus and babrpus and babspus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: doqxpus is babgpus and babrpus and babspus

   节点 71: x is babgpus and babrpus and babspus
      ↻ 重复节点，计数: 2

🔍 分析推理路径完整性...

============================================================
[后处理] 处理完成
============================================================
📈 处理统计:
   - 处理的actual节点: 71
   - 新增节点: 19
   - 更新已存在节点: 52
   - 点亮的LoG节点: 19

🎯 推理质量统计:
   - 完美推理: 19 (节点正确 + 路径正确)
   - 部分推理: 0 (节点正确 + 路径部分错误)
   - 无效推理: 0 (节点错误或路径完全错误)
[LoG分析] LoG图: 19节点, 12前提, 复杂度1-12

📊 === Statement列表分析 ===
📈 节点统计:
   - 总节点数: 31
   - 前提节点: 12
   - 推理节点: 19
   - 幻觉节点: 0
   - 点亮LoG节点: 19

✅ 推理节点详情:
   🟢 noxppus is xidppus (出现3次, 质量:perfect)
   🟢 noxppus is lodgpus (出现1次, 质量:perfect)
   🟢 hollpus is xoqhpus and zuzwpus (出现1次, 质量:perfect)
   🟢 xoqhpus is novlpus (出现1次, 质量:perfect)
   🟢 zowqpus is hollpus (出现4次, 质量:perfect)
   🟢 zowqpus is tixzpus (出现1次, 质量:perfect)
   🟢 zowqpus is qakypus (出现1次, 质量:perfect)
   🟢 noxppus is hollpus (出现1次, 质量:perfect)
   🟢 hollpus is doqxpus (出现2次, 质量:perfect)
   🟢 x is babrpus (出现1次, 质量:perfect)
   🟢 x is babspus (出现1次, 质量:perfect)
   🟢 x is babgpus and babrpus and babspus (出现2次, 质量:perfect)
   🟢 zowqpus is doqxpus (出现1次, 质量:perfect)
   🟢 noxppus is doqxpus (出现1次, 质量:perfect)
   🟢 x is babgpus (出现1次, 质量:perfect)
   🟢 x is doqxpus (出现1次, 质量:perfect)
   🟢 doqxpus is babgpus (出现1次, 质量:perfect)
   🟢 doqxpus is babrpus (出现1次, 质量:perfect)
   🟢 doqxpus is babspus (出现1次, 质量:perfect)

🔥 点亮的LoG节点:
   - hollpus is doqxpus
   - x is hollpus
   - hollpus is novlpus
   - hollpus is babgpus and babrpus and babspus
   - x is babgpus and babrpus and babspus and vuzcpus
   - novlpus is xarzpus
   - xidppus is hollpus and tixzpus and qakypus
   - xidppus is hollpus and tixzpus
   - x is xidppus and lodgpus
   - x is babgpus and babrpus and babspus
   - novlpus is vuzcpus
   - x is hollpus and tixzpus
   - x is xidppus
   - doqxpus is babgpus and babrpus and babspus and juwdpus
   - hollpus is babgpus and babrpus and babspus and vuzcpus
   - hollpus is babgpus and babrpus and babspus and juwdpus
   - hollpus is novlpus and nisvpus
   - xarzpus is vuzcpus
   - hollpus is vuzcpus

============================================================
📊 计算评估指标
============================================================

🎯 计算Coverage指标...
   深度Coverage: 6/6 = 100.00%
   最深点亮节点: x is babgpus and babrpus and babspus (第6层)
   节点Coverage: 19/19 = 100.00%
   前提条件Coverage: 12/12 = 100.00%
   各推理层点亮比例:
     第1层: 7/7 = 100.00%
     第2层: 5/5 = 100.00%
     第3层: 3/3 = 100.00%
     第4层: 2/2 = 100.00%
     第5层: 1/1 = 100.00%
     第6层: 1/1 = 100.00%

🎯 计算Precision指标...
   Error Rate: 0/19 = 0.00%
   可推导节点: 19/19
   Strict Error Rate: 0/19 = 0.00%
   严格有效节点: 19/19

   详细分析:
     完美推理: 19 (100.00%)
     部分推理: 0 (0.00%)
     无效推理: 0 (0.00%)

================================================================================
处理记录 48/50
================================================================================
记录索引: 47
问题状态: correct
📁 从缓存加载提取结果: evaluation_results.LoG_6.deepseek-reasoner_record_47.json
✅ 使用缓存结果:
   - 句子数: 157
   - 提取的语句数: 348
   - 初始条件数: 26

=== Statement提取完成 ===
总句子数: 157
成功提取: 157
失败提取: 0
总statements数: 348

=== 开始清洗Statement格式 ===
原始statements数: 348
清洗后statements数: 165
过滤掉的statements数: 183
清洗后的statements:
  1. [planning] x is babgpus and babrpus and babspus
  2. [actual] x is rusmpus
  3. [actual] x is rusmpus
  4. [actual] rusmpus is wijmpus
  5. [actual] rusmpus is wijmpus
  6. [actual] wijmpus is wifjpus and mohmpus
  7. [actual] wijmpus is wifjpus and mohmpus
  8. [actual] rusmpus is wijmpus
  9. [planning] x is babgpus
  10. [actual] kalypus is babgpus
  11. [actual] kalypus is babrpus
  12. [actual] kalypus is babspus
  13. [actual] kalypus is sirhpus
  14. [actual] kalypus is babgpus
  15. [actual] kalypus is babrpus
  16. [actual] kalypus is babspus
  17. [actual] kalypus is sirhpus
  18. [planning] x is kalypus
  19. [planning] x is kalypus
  20. [actual] x is rusmpus
  21. [actual] rusmpus is wijmpus
  22. [actual] wijmpus is wifjpus and mohmpus
  23. [planning] wifjpus is kalypus
  24. [planning] mohmpus is kalypus
  25. [actual] x is rusmpus
  26. [actual] rusmpus is wijmpus
  27. [actual] wijmpus is wifjpus and mohmpus
  28. [actual] wijmpus is wifjpus and mohmpus
  29. [actual] rusmpus is wijmpus
  30. [actual] rusmpus is a subset of wijmpus
  31. [planning] rusmpus is wifjpus
  32. [planning] rusmpus is mohmpus
  33. [actual] wijmpus is wifjpus and mohmpus
  34. [actual] wijmpus is wifjpus and mohmpus
  35. [planning] wijmpus is wifjpus and mohmpus
  36. [planning] wijmpus is wifjpus or mohmpus
  37. [actual] kalypus is babgpus and babrpus and babspus and sirhpus
  38. [actual] lodvpus is qerspus and quqwpus
  39. [planning] lodvpus is qerspus and quqwpus
  40. [actual] lodvpus is qerspus and quqwpus
  41. [planning] qerspus is quqwpus
  42. [actual] wijmpus is wifjpus and mohmpus
  43. [planning] wifjpus is broader category
  44. [planning] mohmpus is broader category
  45. [actual] kalypus is babgpus and babrpus and babspus and sirhpus
  46. [planning] kalypus is subset of babgpus
  47. [planning] kalypus is subset of babrpus
  48. [actual] kalypus is a type of babgpus
  49. [actual] babgpus is a category
  50. [actual] kalypus is a subcategory of babgpus
  51. [actual] lodvpus is qerspus and quqwpus
  52. [actual] lodvpus is a type of qerspus
  53. [actual] lodvpus is a type of quqwpus
  54. [planning] x is babgpus
  55. [planning] x is a category that is babgpus
  56. [planning] x is directly contained
  57. [actual] babgpus is kalypus
  58. [actual] kalypus is babgpus and babrpus and babspus and sirhpus
  59. [actual] kalypus is babgpus
  60. [planning] kalypus is babgpus
  61. [planning] x is kalypus
  62. [planning] x is babgpus
  63. [planning] x is kalypus
  64. [planning] x is also contained in babgpus
  65. [planning] kalypus is subset of babgpus
  66. [actual] kalypus is babgpus
  67. [planning] x is kalypus
  68. [planning] x is babgpus
  69. [planning] x is babgpus
  70. [planning] x is babrpus
  71. [planning] x is babspus
  72. [actual] kalypus is babrpus and babspus
  73. [planning] x is kalypus
  74. [planning] x is babrpus
  75. [planning] x is babspus
  76. [planning] x is all three
  77. [planning] x is kalypus
  78. [planning] x is kalypus
  79. [actual] x is rusmpus
  80. [actual] rusmpus is wijmpus
  81. [actual] wijmpus is wifjpus and mohmpus
  82. [actual] rusmpus is wijmpus
  83. [planning] wifjpus is kalypus
  84. [planning] mohmpus is kalypus
  85. [actual] wifjpus is voyppus and datvpus
  86. [actual] voyppus is huwdpus and yiwgpus
  87. [actual] huwdpus is wusvpus and yanvpus
  88. [actual] wusvpus is mebdpus
  89. [actual] mebdpus is sokppus and tumypus
  90. [actual] sokppus is gezgpus
  91. [actual] gezgpus is jekypus
  92. [actual] jekypus is zujrpus
  93. [actual] zujrpus is nuxypus and xoswpus
  94. [actual] nuxypus is qodbpus
  95. [actual] qodbpus is tiktpus and pimhpus
  96. [actual] tiktpus is lodvpus
  97. [actual] lodvpus is qerspus and quqwpus
  98. [actual] qerspus is zoslpus
  99. [actual] zoslpus is kozrpus and vamnpus
  100. [actual] kozrpus is hafzpus and tarxpus
  101. [actual] hafzpus is dusppus
  102. [actual] dusppus is lerlpus and pandpus
  103. [actual] lerlpus is titypus
  104. [actual] titypus is xihypus and vodnpus
  105. [actual] xihypus is wudtpus and doqppus
  106. [actual] wudtpus is kalypus
  107. [actual] wudtpus is kalypus
  108. [actual] titypus is xihypus
  109. [actual] titypus is kalypus
  110. [actual] rusmpus is wijmpus
  111. [actual] rusmpus is kalypus
  112. [actual] x is rusmpus
  113. [planning] x is rusmpus
  114. [actual] x is rusmpus
  115. [planning] x is an instance
  116. [planning] x is rusmpus
  117. [actual] x is rusmpus
  118. [actual] x is rusmpus
  119. [actual] x is kalypus
  120. [actual] kalypus is babgpus and babrpus and babspus
  121. [planning] x is babgpus and babrpus and babspus
  122. [actual] x is babgpus and babrpus and babspus
  123. [actual] wijmpus is wifjpus
  124. [actual] wijmpus is wifjpus
  125. [actual] wifjpus is kalypus
  126. [actual] wijmpus is kalypus
  127. [planning] rusmpus is kalypus
  128. [actual] x is kalypus
  129. [actual] kalypus is babgpus
  130. [actual] wudtpus is kalypus
  131. [actual] xihypus is wudtpus and doqppus
  132. [actual] titypus is xihypus and vodnpus
  133. [actual] lerlpus is titypus
  134. [actual] dusppus is lerlpus and pandpus
  135. [actual] hafzpus is dusppus
  136. [actual] kozrpus is hafzpus and tarxpus
  137. [actual] zoslpus is kozrpus and vamnpus
  138. [actual] qerspus is zoslpus
  139. [actual] lodvpus is qerspus and quqwpus
  140. [actual] tiktpus is lodvpus
  141. [actual] qodbpus is tiktpus and pimhpus
  142. [actual] nuxypus is qodbpus
  143. [planning] nuxypus is qodbpus
  144. [planning] nuxypus is kalypus
  145. [actual] zujrpus is nuxypus and xoswpus
  146. [actual] jekypus is zujrpus
  147. [actual] gezgpus is jekypus
  148. [actual] sokppus is gezgpus
  149. [actual] mebdpus is sokppus and tumypus
  150. [planning] mebdpus is kalypus
  151. [actual] wusvpus is mebdpus
  152. [actual] huwdpus is wusvpus and yanvpus
  153. [actual] voyppus is huwdpus and yiwgpus
  154. [actual] wifjpus is voyppus and datvpus
  155. [actual] wijmpus is wifjpus and mohmpus
  156. [actual] rusmpus is wijmpus
  157. [actual] x is rusmpus
  158. [actual] x is kalypus
  159. [actual] kalypus is babgpus
  160. [actual] kalypus is babrpus
  161. [actual] kalypus is babspus
  162. [planning] x is babgpus
  163. [planning] x is babrpus
  164. [planning] x is babspus
  165. [actual] x is babgpus and babrpus and babspus

=== 开始标准化和解析节点 ===
清洗后statements数: 165
标准化后节点数: 149
过滤掉的无效实体数: 16
标准化后的节点:
  1. [planning] x → babgpus and babrpus and babspus (原始: x is babgpus and babrpus and babspus)
  2. [actual] x → rusmpus (原始: x is rusmpus)
  3. [actual] x → rusmpus (原始: x is rusmpus)
  4. [actual] rusmpus → wijmpus (原始: rusmpus is wijmpus)
  5. [actual] rusmpus → wijmpus (原始: rusmpus is wijmpus)
  6. [actual] wijmpus → wifjpus and mohmpus (原始: wijmpus is wifjpus and mohmpus)
  7. [actual] wijmpus → wifjpus and mohmpus (原始: wijmpus is wifjpus and mohmpus)
  8. [actual] rusmpus → wijmpus (原始: rusmpus is wijmpus)
  9. [planning] x → babgpus (原始: x is babgpus)
  10. [actual] kalypus → babgpus (原始: kalypus is babgpus)
  11. [actual] kalypus → babrpus (原始: kalypus is babrpus)
  12. [actual] kalypus → babspus (原始: kalypus is babspus)
  13. [actual] kalypus → sirhpus (原始: kalypus is sirhpus)
  14. [actual] kalypus → babgpus (原始: kalypus is babgpus)
  15. [actual] kalypus → babrpus (原始: kalypus is babrpus)
  16. [actual] kalypus → babspus (原始: kalypus is babspus)
  17. [actual] kalypus → sirhpus (原始: kalypus is sirhpus)
  18. [planning] x → kalypus (原始: x is kalypus)
  19. [planning] x → kalypus (原始: x is kalypus)
  20. [actual] x → rusmpus (原始: x is rusmpus)
  21. [actual] rusmpus → wijmpus (原始: rusmpus is wijmpus)
  22. [actual] wijmpus → wifjpus and mohmpus (原始: wijmpus is wifjpus and mohmpus)
  23. [planning] wifjpus → kalypus (原始: wifjpus is kalypus)
  24. [planning] mohmpus → kalypus (原始: mohmpus is kalypus)
  25. [actual] x → rusmpus (原始: x is rusmpus)
  26. [actual] rusmpus → wijmpus (原始: rusmpus is wijmpus)
  27. [actual] wijmpus → wifjpus and mohmpus (原始: wijmpus is wifjpus and mohmpus)
  28. [actual] wijmpus → wifjpus and mohmpus (原始: wijmpus is wifjpus and mohmpus)
  29. [actual] rusmpus → wijmpus (原始: rusmpus is wijmpus)
  30. [planning] rusmpus → wifjpus (原始: rusmpus is wifjpus)
  31. [planning] rusmpus → mohmpus (原始: rusmpus is mohmpus)
  32. [actual] wijmpus → wifjpus and mohmpus (原始: wijmpus is wifjpus and mohmpus)
  33. [actual] wijmpus → wifjpus and mohmpus (原始: wijmpus is wifjpus and mohmpus)
  34. [planning] wijmpus → wifjpus and mohmpus (原始: wijmpus is wifjpus and mohmpus)
  35. [planning] wijmpus → wifjpus or mohmpus (原始: wijmpus is wifjpus or mohmpus)
  36. [actual] kalypus → babgpus and babrpus and babspus and sirhpus (原始: kalypus is babgpus and babrpus and babspus and sirhpus)
  37. [actual] lodvpus → qerspus and quqwpus (原始: lodvpus is qerspus and quqwpus)
  38. [planning] lodvpus → qerspus and quqwpus (原始: lodvpus is qerspus and quqwpus)
  39. [actual] lodvpus → qerspus and quqwpus (原始: lodvpus is qerspus and quqwpus)
  40. [planning] qerspus → quqwpus (原始: qerspus is quqwpus)
  41. [actual] wijmpus → wifjpus and mohmpus (原始: wijmpus is wifjpus and mohmpus)
  42. [actual] kalypus → babgpus and babrpus and babspus and sirhpus (原始: kalypus is babgpus and babrpus and babspus and sirhpus)
  43. [actual] lodvpus → qerspus and quqwpus (原始: lodvpus is qerspus and quqwpus)
  44. [planning] x → babgpus (原始: x is babgpus)
  45. [actual] babgpus → kalypus (原始: babgpus is kalypus)
  46. [actual] kalypus → babgpus and babrpus and babspus and sirhpus (原始: kalypus is babgpus and babrpus and babspus and sirhpus)
  47. [actual] kalypus → babgpus (原始: kalypus is babgpus)
  48. [planning] kalypus → babgpus (原始: kalypus is babgpus)
  49. [planning] x → kalypus (原始: x is kalypus)
  50. [planning] x → babgpus (原始: x is babgpus)
  51. [planning] x → kalypus (原始: x is kalypus)
  52. [actual] kalypus → babgpus (原始: kalypus is babgpus)
  53. [planning] x → kalypus (原始: x is kalypus)
  54. [planning] x → babgpus (原始: x is babgpus)
  55. [planning] x → babgpus (原始: x is babgpus)
  56. [planning] x → babrpus (原始: x is babrpus)
  57. [planning] x → babspus (原始: x is babspus)
  58. [actual] kalypus → babrpus and babspus (原始: kalypus is babrpus and babspus)
  59. [planning] x → kalypus (原始: x is kalypus)
  60. [planning] x → babrpus (原始: x is babrpus)
  61. [planning] x → babspus (原始: x is babspus)
  62. [planning] x → kalypus (原始: x is kalypus)
  63. [planning] x → kalypus (原始: x is kalypus)
  64. [actual] x → rusmpus (原始: x is rusmpus)
  65. [actual] rusmpus → wijmpus (原始: rusmpus is wijmpus)
  66. [actual] wijmpus → wifjpus and mohmpus (原始: wijmpus is wifjpus and mohmpus)
  67. [actual] rusmpus → wijmpus (原始: rusmpus is wijmpus)
  68. [planning] wifjpus → kalypus (原始: wifjpus is kalypus)
  69. [planning] mohmpus → kalypus (原始: mohmpus is kalypus)
  70. [actual] wifjpus → voyppus and datvpus (原始: wifjpus is voyppus and datvpus)
  71. [actual] voyppus → huwdpus and yiwgpus (原始: voyppus is huwdpus and yiwgpus)
  72. [actual] huwdpus → wusvpus and yanvpus (原始: huwdpus is wusvpus and yanvpus)
  73. [actual] wusvpus → mebdpus (原始: wusvpus is mebdpus)
  74. [actual] mebdpus → sokppus and tumypus (原始: mebdpus is sokppus and tumypus)
  75. [actual] sokppus → gezgpus (原始: sokppus is gezgpus)
  76. [actual] gezgpus → jekypus (原始: gezgpus is jekypus)
  77. [actual] jekypus → zujrpus (原始: jekypus is zujrpus)
  78. [actual] zujrpus → nuxypus and xoswpus (原始: zujrpus is nuxypus and xoswpus)
  79. [actual] nuxypus → qodbpus (原始: nuxypus is qodbpus)
  80. [actual] qodbpus → tiktpus and pimhpus (原始: qodbpus is tiktpus and pimhpus)
  81. [actual] tiktpus → lodvpus (原始: tiktpus is lodvpus)
  82. [actual] lodvpus → qerspus and quqwpus (原始: lodvpus is qerspus and quqwpus)
  83. [actual] qerspus → zoslpus (原始: qerspus is zoslpus)
  84. [actual] zoslpus → kozrpus and vamnpus (原始: zoslpus is kozrpus and vamnpus)
  85. [actual] kozrpus → hafzpus and tarxpus (原始: kozrpus is hafzpus and tarxpus)
  86. [actual] hafzpus → dusppus (原始: hafzpus is dusppus)
  87. [actual] dusppus → lerlpus and pandpus (原始: dusppus is lerlpus and pandpus)
  88. [actual] lerlpus → titypus (原始: lerlpus is titypus)
  89. [actual] titypus → xihypus and vodnpus (原始: titypus is xihypus and vodnpus)
  90. [actual] xihypus → wudtpus and doqppus (原始: xihypus is wudtpus and doqppus)
  91. [actual] wudtpus → kalypus (原始: wudtpus is kalypus)
  92. [actual] wudtpus → kalypus (原始: wudtpus is kalypus)
  93. [actual] titypus → xihypus (原始: titypus is xihypus)
  94. [actual] titypus → kalypus (原始: titypus is kalypus)
  95. [actual] rusmpus → wijmpus (原始: rusmpus is wijmpus)
  96. [actual] rusmpus → kalypus (原始: rusmpus is kalypus)
  97. [actual] x → rusmpus (原始: x is rusmpus)
  98. [planning] x → rusmpus (原始: x is rusmpus)
  99. [actual] x → rusmpus (原始: x is rusmpus)
  100. [planning] x → rusmpus (原始: x is rusmpus)
  101. [actual] x → rusmpus (原始: x is rusmpus)
  102. [actual] x → rusmpus (原始: x is rusmpus)
  103. [actual] x → kalypus (原始: x is kalypus)
  104. [actual] kalypus → babgpus and babrpus and babspus (原始: kalypus is babgpus and babrpus and babspus)
  105. [planning] x → babgpus and babrpus and babspus (原始: x is babgpus and babrpus and babspus)
  106. [actual] x → babgpus and babrpus and babspus (原始: x is babgpus and babrpus and babspus)
  107. [actual] wijmpus → wifjpus (原始: wijmpus is wifjpus)
  108. [actual] wijmpus → wifjpus (原始: wijmpus is wifjpus)
  109. [actual] wifjpus → kalypus (原始: wifjpus is kalypus)
  110. [actual] wijmpus → kalypus (原始: wijmpus is kalypus)
  111. [planning] rusmpus → kalypus (原始: rusmpus is kalypus)
  112. [actual] x → kalypus (原始: x is kalypus)
  113. [actual] kalypus → babgpus (原始: kalypus is babgpus)
  114. [actual] wudtpus → kalypus (原始: wudtpus is kalypus)
  115. [actual] xihypus → wudtpus and doqppus (原始: xihypus is wudtpus and doqppus)
  116. [actual] titypus → xihypus and vodnpus (原始: titypus is xihypus and vodnpus)
  117. [actual] lerlpus → titypus (原始: lerlpus is titypus)
  118. [actual] dusppus → lerlpus and pandpus (原始: dusppus is lerlpus and pandpus)
  119. [actual] hafzpus → dusppus (原始: hafzpus is dusppus)
  120. [actual] kozrpus → hafzpus and tarxpus (原始: kozrpus is hafzpus and tarxpus)
  121. [actual] zoslpus → kozrpus and vamnpus (原始: zoslpus is kozrpus and vamnpus)
  122. [actual] qerspus → zoslpus (原始: qerspus is zoslpus)
  123. [actual] lodvpus → qerspus and quqwpus (原始: lodvpus is qerspus and quqwpus)
  124. [actual] tiktpus → lodvpus (原始: tiktpus is lodvpus)
  125. [actual] qodbpus → tiktpus and pimhpus (原始: qodbpus is tiktpus and pimhpus)
  126. [actual] nuxypus → qodbpus (原始: nuxypus is qodbpus)
  127. [planning] nuxypus → qodbpus (原始: nuxypus is qodbpus)
  128. [planning] nuxypus → kalypus (原始: nuxypus is kalypus)
  129. [actual] zujrpus → nuxypus and xoswpus (原始: zujrpus is nuxypus and xoswpus)
  130. [actual] jekypus → zujrpus (原始: jekypus is zujrpus)
  131. [actual] gezgpus → jekypus (原始: gezgpus is jekypus)
  132. [actual] sokppus → gezgpus (原始: sokppus is gezgpus)
  133. [actual] mebdpus → sokppus and tumypus (原始: mebdpus is sokppus and tumypus)
  134. [planning] mebdpus → kalypus (原始: mebdpus is kalypus)
  135. [actual] wusvpus → mebdpus (原始: wusvpus is mebdpus)
  136. [actual] huwdpus → wusvpus and yanvpus (原始: huwdpus is wusvpus and yanvpus)
  137. [actual] voyppus → huwdpus and yiwgpus (原始: voyppus is huwdpus and yiwgpus)
  138. [actual] wifjpus → voyppus and datvpus (原始: wifjpus is voyppus and datvpus)
  139. [actual] wijmpus → wifjpus and mohmpus (原始: wijmpus is wifjpus and mohmpus)
  140. [actual] rusmpus → wijmpus (原始: rusmpus is wijmpus)
  141. [actual] x → rusmpus (原始: x is rusmpus)
  142. [actual] x → kalypus (原始: x is kalypus)
  143. [actual] kalypus → babgpus (原始: kalypus is babgpus)
  144. [actual] kalypus → babrpus (原始: kalypus is babrpus)
  145. [actual] kalypus → babspus (原始: kalypus is babspus)
  146. [planning] x → babgpus (原始: x is babgpus)
  147. [planning] x → babrpus (原始: x is babrpus)
  148. [planning] x → babspus (原始: x is babspus)
  149. [actual] x → babgpus and babrpus and babspus (原始: x is babgpus and babrpus and babspus)

开始新的后处理...
[后处理] 从LoG数据文件中获取到图数据，节点数: 39
[后处理] 加载LoG图，包含 39 个节点
  LoG节点 0: x is babgpus and babrpus and babspus (规则: MP, 深度: 1)
  LoG节点 1: x is qerspus (规则: MP, 深度: 2)
  LoG节点 2: qerspus is babgpus and babrpus and babspus (规则: MP, 深度: 2)
  LoG节点 3: x is sokppus (规则: MP, 深度: 3)
  LoG节点 4: sokppus is qerspus (规则: MP, 深度: 3)
  LoG节点 5: qerspus is lerlpus (规则: CE, 深度: 3)
  LoG节点 6: lerlpus is babgpus and babrpus and babspus (规则: CE, 深度: 3)
  LoG节点 7: x is huwdpus (规则: MP, 深度: 4)
  LoG节点 8: huwdpus is sokppus (规则: CE, 深度: 4)
  LoG节点 9: sokppus is nuxypus (规则: CE, 深度: 4)
  LoG节点 10: nuxypus is qerspus (规则: MP, 深度: 4)
  LoG节点 11: qerspus is lerlpus and pandpus (规则: MP, 深度: 4)
  LoG节点 12: lerlpus is babgpus and babrpus and babspus and sirhpus (规则: MP, 深度: 4)
  LoG节点 13: x is wifjpus (规则: MP, 深度: 5)
  LoG节点 14: wifjpus is huwdpus (规则: MP, 深度: 5)
  LoG节点 15: huwdpus is sokppus and tumypus (规则: MP, 深度: 5)
  LoG节点 16: sokppus is nuxypus and xoswpus (规则: MP, 深度: 5)
  LoG节点 17: nuxypus is tiktpus (规则: CE, 深度: 5)
  LoG节点 18: tiktpus is qerspus (规则: CE, 深度: 5)
  LoG节点 19: qerspus is kozrpus (规则: CE, 深度: 5)
  LoG节点 20: kozrpus is lerlpus and pandpus (规则: MP, 深度: 5)
  LoG节点 21: lerlpus is xihypus (规则: CE, 深度: 5)
  LoG节点 22: xihypus is babgpus and babrpus and babspus and sirhpus (规则: MP, 深度: 5)
  LoG节点 23: x is wijmpus (规则: MP, 深度: 6)
  LoG节点 24: wijmpus is wifjpus (规则: CE, 深度: 6)
  LoG节点 25: wifjpus is voyppus (规则: CE, 深度: 6)
  LoG节点 26: voyppus is huwdpus (规则: CE, 深度: 6)
  LoG节点 27: huwdpus is wusvpus (规则: CE, 深度: 6)
  LoG节点 28: wusvpus is sokppus and tumypus (规则: MP, 深度: 6)
  LoG节点 29: sokppus is jekypus (规则: MP, 深度: 6)
  LoG节点 30: jekypus is nuxypus and xoswpus (规则: MP, 深度: 6)
  LoG节点 31: nuxypus is tiktpus and pimhpus (规则: MP, 深度: 6)
  LoG节点 32: tiktpus is qerspus and quqwpus (规则: MP, 深度: 6)
  LoG节点 33: qerspus is kozrpus and vamnpus (规则: MP, 深度: 6)
  LoG节点 34: kozrpus is hafzpus (规则: CE, 深度: 6)
  LoG节点 35: hafzpus is lerlpus and pandpus (规则: MP, 深度: 6)
  LoG节点 36: lerlpus is xihypus and vodnpus (规则: MP, 深度: 6)
  LoG节点 37: xihypus is wudtpus (规则: CE, 深度: 6)
  LoG节点 38: wudtpus is babgpus and babrpus and babspus and sirhpus (规则: MP, 深度: 6)

============================================================
[后处理] 开始处理节点
============================================================
📊 初始状态:
   - 标准化节点数: 149
   - 初始条件数: 26
   - LoG图节点数: 39

📋 初始条件列表:
    1. lerlpus is titypus
    2. sokppus is gezgpus
    3. qodbpus is tiktpus and pimhpus
    4. wudtpus is kalypus
    5. tiktpus is lodvpus
    6. qerspus is zoslpus
    7. lodvpus is qerspus and quqwpus
    8. x is rusmpus
    9. dusppus is lerlpus and pandpus
   10. wusvpus is mebdpus
   11. xihypus is wudtpus and doqppus
   12. kalypus is babgpus and babrpus and babspus and sirhpus
   13. voyppus is huwdpus and yiwgpus
   14. wifjpus is voyppus and datvpus
   15. jekypus is zujrpus
   16. gezgpus is jekypus
   17. kozrpus is hafzpus and tarxpus
   18. huwdpus is wusvpus and yanvpus
   19. hafzpus is dusppus
   20. zujrpus is nuxypus and xoswpus
   21. titypus is xihypus and vodnpus
   22. rusmpus is wijmpus
   23. mebdpus is sokppus and tumypus
   24. zoslpus is kozrpus and vamnpus
   25. wijmpus is wifjpus and mohmpus
   26. nuxypus is qodbpus

🔧 构建初始Statement列表...
✅ 初始Statement列表构建完成，包含 26 个前提节点

🔍 开始处理actual节点...

   节点 1: x is rusmpus
      ↻ 重复节点，计数: 2

   节点 2: x is rusmpus
      ↻ 重复节点，计数: 3

   节点 3: rusmpus is wijmpus
      ↻ 重复节点，计数: 2

   节点 4: rusmpus is wijmpus
      ↻ 重复节点，计数: 3

   节点 5: wijmpus is wifjpus and mohmpus
      ↻ 重复节点，计数: 2

   节点 6: wijmpus is wifjpus and mohmpus
      ↻ 重复节点，计数: 3

   节点 7: rusmpus is wijmpus
      ↻ 重复节点，计数: 4

   节点 8: kalypus is babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: kalypus is babgpus and babrpus and babspus and sirhpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: kalypus is babgpus and babrpus and babspus and sirhpus

   节点 9: kalypus is babrpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: kalypus is babgpus and babrpus and babspus and sirhpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: kalypus is babgpus and babrpus and babspus and sirhpus

   节点 10: kalypus is babspus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: kalypus is babgpus and babrpus and babspus and sirhpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: kalypus is babgpus and babrpus and babspus and sirhpus

   节点 11: kalypus is sirhpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: kalypus is babgpus and babrpus and babspus and sirhpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: kalypus is babgpus and babrpus and babspus and sirhpus

   节点 12: kalypus is babgpus
      ↻ 重复节点，计数: 2

   节点 13: kalypus is babrpus
      ↻ 重复节点，计数: 2

   节点 14: kalypus is babspus
      ↻ 重复节点，计数: 2

   节点 15: kalypus is sirhpus
      ↻ 重复节点，计数: 2

   节点 16: x is rusmpus
      ↻ 重复节点，计数: 4

   节点 17: rusmpus is wijmpus
      ↻ 重复节点，计数: 5

   节点 18: wijmpus is wifjpus and mohmpus
      ↻ 重复节点，计数: 4

   节点 19: x is rusmpus
      ↻ 重复节点，计数: 5

   节点 20: rusmpus is wijmpus
      ↻ 重复节点，计数: 6

   节点 21: wijmpus is wifjpus and mohmpus
      ↻ 重复节点，计数: 5

   节点 22: wijmpus is wifjpus and mohmpus
      ↻ 重复节点，计数: 6

   节点 23: rusmpus is wijmpus
      ↻ 重复节点，计数: 7

   节点 24: wijmpus is wifjpus and mohmpus
      ↻ 重复节点，计数: 7

   节点 25: wijmpus is wifjpus and mohmpus
      ↻ 重复节点，计数: 8

   节点 26: kalypus is babgpus and babrpus and babspus and sirhpus
      ↻ 重复节点，计数: 2

   节点 27: lodvpus is qerspus and quqwpus
      ↻ 重复节点，计数: 2

   节点 28: lodvpus is qerspus and quqwpus
      ↻ 重复节点，计数: 3

   节点 29: wijmpus is wifjpus and mohmpus
      ↻ 重复节点，计数: 9

   节点 30: kalypus is babgpus and babrpus and babspus and sirhpus
      ↻ 重复节点，计数: 3

   节点 31: lodvpus is qerspus and quqwpus
      ↻ 重复节点，计数: 4

   节点 32: babgpus is kalypus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 33: kalypus is babgpus and babrpus and babspus and sirhpus
      ↻ 重复节点，计数: 4

   节点 34: kalypus is babgpus
      ↻ 重复节点，计数: 3

   节点 35: kalypus is babgpus
      ↻ 重复节点，计数: 4

   节点 36: kalypus is babrpus and babspus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CI
      📋 推理路径: CI规则: kalypus is babrpus → kalypus is babspus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: kalypus is babrpus
  - 前提: kalypus is babspus

   节点 37: x is rusmpus
      ↻ 重复节点，计数: 6

   节点 38: rusmpus is wijmpus
      ↻ 重复节点，计数: 8

   节点 39: wijmpus is wifjpus and mohmpus
      ↻ 重复节点，计数: 10

   节点 40: rusmpus is wijmpus
      ↻ 重复节点，计数: 9

   节点 41: wifjpus is voyppus and datvpus
      ↻ 重复节点，计数: 2

   节点 42: voyppus is huwdpus and yiwgpus
      ↻ 重复节点，计数: 2

   节点 43: huwdpus is wusvpus and yanvpus
      ↻ 重复节点，计数: 2

   节点 44: wusvpus is mebdpus
      ↻ 重复节点，计数: 2

   节点 45: mebdpus is sokppus and tumypus
      ↻ 重复节点，计数: 2

   节点 46: sokppus is gezgpus
      ↻ 重复节点，计数: 2

   节点 47: gezgpus is jekypus
      ↻ 重复节点，计数: 2

   节点 48: jekypus is zujrpus
      ↻ 重复节点，计数: 2

   节点 49: zujrpus is nuxypus and xoswpus
      ↻ 重复节点，计数: 2

   节点 50: nuxypus is qodbpus
      ↻ 重复节点，计数: 2

   节点 51: qodbpus is tiktpus and pimhpus
      ↻ 重复节点，计数: 2

   节点 52: tiktpus is lodvpus
      ↻ 重复节点，计数: 2

   节点 53: lodvpus is qerspus and quqwpus
      ↻ 重复节点，计数: 5

   节点 54: qerspus is zoslpus
      ↻ 重复节点，计数: 2

   节点 55: zoslpus is kozrpus and vamnpus
      ↻ 重复节点，计数: 2

   节点 56: kozrpus is hafzpus and tarxpus
      ↻ 重复节点，计数: 2

   节点 57: hafzpus is dusppus
      ↻ 重复节点，计数: 2

   节点 58: dusppus is lerlpus and pandpus
      ↻ 重复节点，计数: 2

   节点 59: lerlpus is titypus
      ↻ 重复节点，计数: 2

   节点 60: titypus is xihypus and vodnpus
      ↻ 重复节点，计数: 2

   节点 61: xihypus is wudtpus and doqppus
      ↻ 重复节点，计数: 2

   节点 62: wudtpus is kalypus
      ↻ 重复节点，计数: 2

   节点 63: wudtpus is kalypus
      ↻ 重复节点，计数: 3

   节点 64: titypus is xihypus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: titypus is xihypus and vodnpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: titypus is xihypus and vodnpus

   节点 65: titypus is kalypus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: titypus is xihypus → xihypus is kalypus
[后处理] 基于推理轨迹点亮节点，使用了 3 个前提条件:
  - 前提: titypus is xihypus
  - 前提: xihypus is wudtpus and doqppus
  - 前提: wudtpus is kalypus
  ✓ 点亮LoG节点: xihypus is wudtpus
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 66: rusmpus is wijmpus
      ↻ 重复节点，计数: 10

   节点 67: rusmpus is kalypus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: rusmpus is wijmpus → wijmpus is kalypus
[后处理] 基于推理轨迹点亮节点，使用了 22 个前提条件:
  - 前提: rusmpus is wijmpus
  - 前提: wijmpus is wifjpus and mohmpus
  - 前提: wifjpus is voyppus and datvpus
  - 前提: voyppus is huwdpus and yiwgpus
  - 前提: huwdpus is wusvpus and yanvpus
  - 前提: wusvpus is mebdpus
  - 前提: mebdpus is sokppus and tumypus
  - 前提: sokppus is gezgpus
  - 前提: gezgpus is jekypus
  - 前提: jekypus is zujrpus
  - 前提: zujrpus is nuxypus and xoswpus
  - 前提: nuxypus is qodbpus
  - 前提: qodbpus is tiktpus and pimhpus
  - 前提: tiktpus is lodvpus
  - 前提: lodvpus is qerspus and quqwpus
  - 前提: qerspus is zoslpus
  - 前提: zoslpus is kozrpus and vamnpus
  - 前提: kozrpus is hafzpus and tarxpus
  - 前提: hafzpus is dusppus
  - 前提: dusppus is lerlpus and pandpus
  - 前提: lerlpus is titypus
  - 前提: titypus is kalypus
  ✓ 点亮LoG节点: sokppus is qerspus
[子树点亮]     └─ 点亮依赖节点: sokppus is nuxypus (深度4)
[子树点亮]     └─ 点亮依赖节点: nuxypus is qerspus (深度4)
[子树点亮]     └─ 点亮依赖节点: sokppus is nuxypus and xoswpus (深度5)
[子树点亮]     └─ 点亮依赖节点: nuxypus is tiktpus (深度5)
[子树点亮]     └─ 点亮依赖节点: tiktpus is qerspus (深度5)
[子树点亮]     └─ 点亮依赖节点: sokppus is jekypus (深度6)
[子树点亮]     └─ 点亮依赖节点: jekypus is nuxypus and xoswpus (深度6)
[子树点亮]     └─ 点亮依赖节点: nuxypus is tiktpus and pimhpus (深度6)
[子树点亮]     └─ 点亮依赖节点: tiktpus is qerspus and quqwpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 9 个节点
  ✓ 点亮LoG节点: qerspus is lerlpus
[子树点亮]     └─ 点亮依赖节点: qerspus is lerlpus and pandpus (深度4)
[子树点亮]     └─ 点亮依赖节点: qerspus is kozrpus (深度5)
[子树点亮]     └─ 点亮依赖节点: kozrpus is lerlpus and pandpus (深度5)
[子树点亮]     └─ 点亮依赖节点: qerspus is kozrpus and vamnpus (深度6)
[子树点亮]     └─ 点亮依赖节点: kozrpus is hafzpus (深度6)
[子树点亮]     └─ 点亮依赖节点: hafzpus is lerlpus and pandpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 6 个节点
  ✓ 点亮LoG节点: huwdpus is sokppus
[子树点亮]     └─ 点亮依赖节点: huwdpus is sokppus and tumypus (深度5)
[子树点亮]     └─ 点亮依赖节点: huwdpus is wusvpus (深度6)
[子树点亮]     └─ 点亮依赖节点: wusvpus is sokppus and tumypus (深度6)
[后处理]   └─ 自动点亮依赖子树: 3 个节点
  ✓ 点亮LoG节点: wifjpus is huwdpus
[子树点亮]     └─ 点亮依赖节点: wifjpus is voyppus (深度6)
[子树点亮]     └─ 点亮依赖节点: voyppus is huwdpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 2 个节点
  ✓ 点亮LoG节点: wijmpus is wifjpus
[后处理] 通过推理轨迹额外点亮了 5 个LoG节点

   节点 68: x is rusmpus
      ↻ 重复节点，计数: 7

   节点 69: x is rusmpus
      ↻ 重复节点，计数: 8

   节点 70: x is rusmpus
      ↻ 重复节点，计数: 9

   节点 71: x is rusmpus
      ↻ 重复节点，计数: 10

   节点 72: x is kalypus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is rusmpus → rusmpus is kalypus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: x is rusmpus
  - 前提: rusmpus is kalypus

   节点 73: kalypus is babgpus and babrpus and babspus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CI
      📋 推理路径: CI规则: kalypus is babgpus → kalypus is babrpus → kalypus is babspus
[后处理] 基于推理轨迹点亮节点，使用了 3 个前提条件:
  - 前提: kalypus is babgpus
  - 前提: kalypus is babrpus
  - 前提: kalypus is babspus

   节点 74: x is babgpus and babrpus and babspus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is babgpus and babrpus and babspus
[子树点亮]     └─ 点亮依赖节点: x is qerspus (深度2)
[子树点亮]     └─ 点亮依赖节点: qerspus is babgpus and babrpus and babspus (深度2)
[子树点亮]     └─ 点亮依赖节点: x is sokppus (深度3)
[子树点亮]     └─ 点亮依赖节点: lerlpus is babgpus and babrpus and babspus (深度3)
[子树点亮]     └─ 点亮依赖节点: x is huwdpus (深度4)
[子树点亮]     └─ 点亮依赖节点: lerlpus is babgpus and babrpus and babspus and sirhpus (深度4)
[子树点亮]     └─ 点亮依赖节点: x is wifjpus (深度5)
[子树点亮]     └─ 点亮依赖节点: lerlpus is xihypus (深度5)
[子树点亮]     └─ 点亮依赖节点: xihypus is babgpus and babrpus and babspus and sirhpus (深度5)
[子树点亮]     └─ 点亮依赖节点: x is wijmpus (深度6)
[子树点亮]     └─ 点亮依赖节点: lerlpus is xihypus and vodnpus (深度6)
[子树点亮]     └─ 点亮依赖节点: wudtpus is babgpus and babrpus and babspus and sirhpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 12 个节点
      ✅ 验证成功 + LoG匹配

   节点 75: wijmpus is wifjpus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 76: wijmpus is wifjpus
      ↻ 重复节点，计数: 2

   节点 77: wifjpus is kalypus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP+CE
      📋 推理路径: MP+CE规则: wifjpus is voyppus → voyppus is kalypus
[后处理] 基于推理轨迹点亮节点，使用了 20 个前提条件:
  - 前提: wifjpus is voyppus and datvpus
  - 前提: voyppus is huwdpus and yiwgpus
  - 前提: huwdpus is wusvpus and yanvpus
  - 前提: wusvpus is mebdpus
  - 前提: mebdpus is sokppus and tumypus
  - 前提: sokppus is gezgpus
  - 前提: gezgpus is jekypus
  - 前提: jekypus is zujrpus
  - 前提: zujrpus is nuxypus and xoswpus
  - 前提: nuxypus is qodbpus
  - 前提: qodbpus is tiktpus and pimhpus
  - 前提: tiktpus is lodvpus
  - 前提: lodvpus is qerspus and quqwpus
  - 前提: qerspus is zoslpus
  - 前提: zoslpus is kozrpus and vamnpus
  - 前提: kozrpus is hafzpus and tarxpus
  - 前提: hafzpus is dusppus
  - 前提: dusppus is lerlpus and pandpus
  - 前提: lerlpus is titypus
  - 前提: titypus is kalypus

   节点 78: wijmpus is kalypus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: wijmpus is wifjpus → wifjpus is kalypus
[后处理] 基于推理轨迹点亮节点，使用了 2 个前提条件:
  - 前提: wijmpus is wifjpus
  - 前提: wifjpus is kalypus

   节点 79: x is kalypus
      ↻ 重复节点，计数: 2

   节点 80: kalypus is babgpus
      ↻ 重复节点，计数: 5

   节点 81: wudtpus is kalypus
      ↻ 重复节点，计数: 4

   节点 82: xihypus is wudtpus and doqppus
      ↻ 重复节点，计数: 3

   节点 83: titypus is xihypus and vodnpus
      ↻ 重复节点，计数: 3

   节点 84: lerlpus is titypus
      ↻ 重复节点，计数: 3

   节点 85: dusppus is lerlpus and pandpus
      ↻ 重复节点，计数: 3

   节点 86: hafzpus is dusppus
      ↻ 重复节点，计数: 3

   节点 87: kozrpus is hafzpus and tarxpus
      ↻ 重复节点，计数: 3

   节点 88: zoslpus is kozrpus and vamnpus
      ↻ 重复节点，计数: 3

   节点 89: qerspus is zoslpus
      ↻ 重复节点，计数: 3

   节点 90: lodvpus is qerspus and quqwpus
      ↻ 重复节点，计数: 6

   节点 91: tiktpus is lodvpus
      ↻ 重复节点，计数: 3

   节点 92: qodbpus is tiktpus and pimhpus
      ↻ 重复节点，计数: 3

   节点 93: nuxypus is qodbpus
      ↻ 重复节点，计数: 3

   节点 94: zujrpus is nuxypus and xoswpus
      ↻ 重复节点，计数: 3

   节点 95: jekypus is zujrpus
      ↻ 重复节点，计数: 3

   节点 96: gezgpus is jekypus
      ↻ 重复节点，计数: 3

   节点 97: sokppus is gezgpus
      ↻ 重复节点，计数: 3

   节点 98: mebdpus is sokppus and tumypus
      ↻ 重复节点，计数: 3

   节点 99: wusvpus is mebdpus
      ↻ 重复节点，计数: 3

   节点 100: huwdpus is wusvpus and yanvpus
      ↻ 重复节点，计数: 3

   节点 101: voyppus is huwdpus and yiwgpus
      ↻ 重复节点，计数: 3

   节点 102: wifjpus is voyppus and datvpus
      ↻ 重复节点，计数: 3

   节点 103: wijmpus is wifjpus and mohmpus
      ↻ 重复节点，计数: 11

   节点 104: rusmpus is wijmpus
      ↻ 重复节点，计数: 11

   节点 105: x is rusmpus
      ↻ 重复节点，计数: 11

   节点 106: x is kalypus
      ↻ 重复节点，计数: 3

   节点 107: kalypus is babgpus
      ↻ 重复节点，计数: 6

   节点 108: kalypus is babrpus
      ↻ 重复节点，计数: 3

   节点 109: kalypus is babspus
      ↻ 重复节点，计数: 3

   节点 110: x is babgpus and babrpus and babspus
      ↻ 重复节点，计数: 2

🔍 分析推理路径完整性...

============================================================
[后处理] 处理完成
============================================================
📈 处理统计:
   - 处理的actual节点: 110
   - 新增节点: 15
   - 更新已存在节点: 95
   - 点亮的LoG节点: 39

🎯 推理质量统计:
   - 完美推理: 10 (节点正确 + 路径正确)
   - 部分推理: 5 (节点正确 + 路径部分错误)
   - 无效推理: 0 (节点错误或路径完全错误)
[LoG分析] LoG图: 39节点, 26前提, 复杂度1-26

📊 === Statement列表分析 ===
📈 节点统计:
   - 总节点数: 41
   - 前提节点: 26
   - 推理节点: 14
   - 幻觉节点: 1
   - 点亮LoG节点: 39

❌ 幻觉节点详情:
   - babgpus is kalypus (出现1次)

✅ 推理节点详情:
   🟢 kalypus is babgpus (出现6次, 质量:perfect)
   🟢 kalypus is babrpus (出现3次, 质量:perfect)
   🟢 kalypus is babspus (出现3次, 质量:perfect)
   🟢 kalypus is sirhpus (出现2次, 质量:perfect)
   🟢 kalypus is babrpus and babspus (出现1次, 质量:perfect)
   🟢 titypus is xihypus (出现1次, 质量:perfect)
   🟡 titypus is kalypus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['babgpus is kalypus']
   🟡 rusmpus is kalypus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['babgpus is kalypus']
   🟡 x is kalypus (出现3次, 质量:partial)
      ⚠️  无效依赖: ['babgpus is kalypus']
   🟢 kalypus is babgpus and babrpus and babspus (出现1次, 质量:perfect)
   🟢 x is babgpus and babrpus and babspus (出现2次, 质量:perfect)
   🟢 wijmpus is wifjpus (出现2次, 质量:perfect)
   🟡 wifjpus is kalypus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['babgpus is kalypus']
   🟡 wijmpus is kalypus (出现1次, 质量:partial)
      ⚠️  无效依赖: ['babgpus is kalypus']

🔥 点亮的LoG节点:
   - x is wijmpus
   - qerspus is lerlpus
   - nuxypus is tiktpus
   - sokppus is qerspus
   - lerlpus is xihypus
   - jekypus is nuxypus and xoswpus
   - nuxypus is tiktpus and pimhpus
   - hafzpus is lerlpus and pandpus
   - wudtpus is babgpus and babrpus and babspus and sirhpus
   - huwdpus is sokppus
   - huwdpus is sokppus and tumypus
   - x is qerspus
   - lerlpus is babgpus and babrpus and babspus and sirhpus
   - lerlpus is babgpus and babrpus and babspus
   - qerspus is babgpus and babrpus and babspus
   - tiktpus is qerspus
   - voyppus is huwdpus
   - qerspus is kozrpus and vamnpus
   - tiktpus is qerspus and quqwpus
   - x is wifjpus
   - wijmpus is wifjpus
   - wifjpus is huwdpus
   - x is babgpus and babrpus and babspus
   - wusvpus is sokppus and tumypus
   - lerlpus is xihypus and vodnpus
   - kozrpus is lerlpus and pandpus
   - sokppus is jekypus
   - wifjpus is voyppus
   - nuxypus is qerspus
   - xihypus is babgpus and babrpus and babspus and sirhpus
   - sokppus is nuxypus and xoswpus
   - sokppus is nuxypus
   - qerspus is kozrpus
   - xihypus is wudtpus
   - huwdpus is wusvpus
   - qerspus is lerlpus and pandpus
   - x is sokppus
   - kozrpus is hafzpus
   - x is huwdpus

============================================================
📊 计算评估指标
============================================================

🎯 计算Coverage指标...
   深度Coverage: 6/6 = 100.00%
   最深点亮节点: x is babgpus and babrpus and babspus (第6层)
   节点Coverage: 39/39 = 100.00%
   前提条件Coverage: 26/26 = 100.00%
   各推理层点亮比例:
     第1层: 16/16 = 100.00%
     第2层: 10/10 = 100.00%
     第3层: 6/6 = 100.00%
     第4层: 4/4 = 100.00%
     第5层: 2/2 = 100.00%
     第6层: 1/1 = 100.00%

🎯 计算Precision指标...
   Error Rate: 1/15 = 6.67%
   可推导节点: 14/15
   Strict Error Rate: 6/15 = 40.00%
   严格有效节点: 9/15

   详细分析:
     完美推理: 10 (66.67%)
     部分推理: 5 (33.33%)
     无效推理: 0 (0.00%)

================================================================================
处理记录 49/50
================================================================================
记录索引: 48
问题状态: correct
📁 从缓存加载提取结果: evaluation_results.LoG_6.deepseek-reasoner_record_48.json
✅ 使用缓存结果:
   - 句子数: 210
   - 提取的语句数: 285
   - 初始条件数: 20

=== Statement提取完成 ===
总句子数: 210
成功提取: 210
失败提取: 0
总statements数: 285

=== 开始清洗Statement格式 ===
原始statements数: 285
清洗后statements数: 187
过滤掉的statements数: 98
清洗后的statements:
  1. [planning] x is babgpus
  2. [actual] x is nudwpus
  3. [planning] nudwpus is babgpus
  4. [actual] wuxfpus is foplpus
  5. [actual] bosxpus is zeqmpus
  6. [actual] rowjpus is yeltpus and cipvpus
  7. [actual] laztpus is wuxfpus
  8. [actual] zucppus is mawcpus
  9. [actual] lolhpus is bosxpus and gavbpus
  10. [actual] rumqpus is rowjpus
  11. [actual] qadspus is wanmpus
  12. [actual] yeltpus is zucppus
  13. [actual] lovbpus is babgpus
  14. [actual] zeqmpus is rumqpus and lictpus
  15. [actual] mawcpus is lubnpus
  16. [actual] yayppus is qadspus
  17. [actual] wanmpus is lovbpus
  18. [actual] yepppus is lolhpus
  19. [actual] x is nudwpus
  20. [actual] mawcpus is warxpus
  21. [actual] nudwpus is yepppus and cuzrpus
  22. [actual] yeltpus is laztpus
  23. [actual] foplpus is yayppus
  24. [planning] x is babgpus
  25. [actual] x is nudwpus
  26. [planning] nudwpus is babgpus
  27. [actual] nudwpus is yepppus and cuzrpus
  28. [actual] nudwpus is yepppus and cuzrpus
  29. [planning] nudwpus is babgpus
  30. [actual] lovbpus is babgpus
  31. [planning] x is babgpus
  32. [actual] wanmpus is lovbpus
  33. [actual] qadspus is wanmpus
  34. [actual] yayppus is qadspus
  35. [actual] foplpus is yayppus
  36. [actual] wuxfpus is foplpus
  37. [actual] laztpus is wuxfpus
  38. [planning] yeltpus is laztpus
  39. [planning] yeltpus is laztpus
  40. [planning] yeltpus is laztpus
  41. [actual] yeltpus is laztpus
  42. [actual] rowjpus is yeltpus and cipvpus
  43. [actual] yeltpus is zucppus
  44. [actual] nudwpus is yepppus
  45. [planning] yepppus is babgpus
  46. [planning] nudwpus is babgpus
  47. [actual] yepppus is lolhpus
  48. [actual] yepppus is lolhpus
  49. [actual] lolhpus is bosxpus and gavbpus
  50. [actual] yepppus is lolhpus
  51. [actual] yepppus is the category lolhpus
  52. [actual] lolhpus is bosxpus
  53. [planning] lolhpus is bosxpus
  54. [actual] lolhpus is a subset of bosxpus
  55. [planning] lolhpus is bosxpus
  56. [planning] lolhpus is bosxpus
  57. [actual] x is babgpus
  58. [actual] yexbpus is lerwpus and pazjpus
  59. [actual] lerwpus is yexbpus
  60. [actual] wuxfpus is foplpus
  61. [actual] bosxpus is zeqmpus
  62. [actual] rowjpus is yeltpus and cipvpus
  63. [planning] yeltpus is cipvpus
  64. [planning] yeltpus is categories
  65. [planning] cipvpus is categories
  66. [planning] rowjpus is yeltpus
  67. [planning] rowjpus is cipvpus
  68. [planning] rowjpus is yeltpus and cipvpus
  69. [actual] lolhpus is bosxpus and gavbpus
  70. [planning] lolhpus is bosxpus and gavbpus
  71. [actual] lolhpus is two categories
  72. [actual] lovbpus is babgpus
  73. [planning] lovbpus is babgpus
  74. [actual] lovbpus is babgpus
  75. [actual] babgpus is a category
  76. [actual] lovbpus is a member of babgpus
  77. [planning] x is babgpus
  78. [planning] x is babgpus
  79. [actual] x is nudwpus
  80. [planning] nudwpus is babgpus
  81. [planning] babgpus is members
  82. [actual] lovbpus is babgpus
  83. [actual] lovbpus is a member of babgpus
  84. [actual] babgpus is a category that contains lovbpus
  85. [planning] nudwpus is a category that is eventually contained in babgpus
  86. [planning] nudwpus is directly contained in babgpus
  87. [actual] wuxfpus is foplpus
  88. [actual] lovbpus is babgpus
  89. [planning] x is babgpus
  90. [actual] x is nudwpus
  91. [planning] nudwpus is babgpus
  92. [planning] nudwpus is babgpus
  93. [actual] x is nudwpus
  94. [planning] x is nudwpus
  95. [actual] x is nudwpus
  96. [planning] x is nudwpus
  97. [planning] x is an instance of nudwpus
  98. [planning] x is equal to nudwpus
  99. [planning] x is nudwpus
  100. [planning] x is a member of nudwpus
  101. [actual] x is babgpus
  102. [actual] x is nudwpus
  103. [planning] nudwpus is a subset of babgpus
  104. [planning] x is babgpus
  105. [planning] nudwpus is babgpus
  106. [actual] rowjpus is yeltpus and cipvpus
  107. [actual] wuxfpus is foplpus
  108. [actual] bosxpus is zeqmpus
  109. [actual] rowjpus is yeltpus
  110. [actual] rowjpus is cipvpus
  111. [actual] laztpus is wuxfpus
  112. [actual] zucppus is mawcpus
  113. [actual] lolhpus is bosxpus
  114. [actual] lolhpus is gavbpus
  115. [actual] rumqpus is rowjpus
  116. [actual] yeltpus is zucppus
  117. [actual] lovbpus is babgpus
  118. [actual] zeqmpus is rumqpus and lictpus
  119. [actual] mawcpus is lubnpus
  120. [actual] yayppus is qadspus
  121. [actual] wanmpus is lovbpus
  122. [actual] yepppus is lolhpus
  123. [actual] x is nudwpus
  124. [planning] x is nudwpus
  125. [planning] x is an instance
  126. [planning] x is nudwpus
  127. [planning] x is a category
  128. [planning] x is babgpus
  129. [actual] x is nudwpus
  130. [planning] nudwpus is a subset of babgpus
  131. [planning] x is nudwpus
  132. [planning] x is babgpus
  133. [actual] nudwpus is a category
  134. [planning] nudwpus is babgpus
  135. [actual] nudwpus is yepppus and cuzrpus
  136. [planning] nudwpus is babgpus
  137. [planning] yepppus is babgpus
  138. [planning] cuzrpus is babgpus
  139. [planning] yepppus is babgpus
  140. [actual] yepppus is lolhpus
  141. [actual] lolhpus is bosxpus
  142. [actual] lolhpus is gavbpus
  143. [actual] babgpus is lovbpus ⊆ babgpus
  144. [planning] foplpus is yayppus
  145. [actual] foplpus is yayppus
  146. [actual] wuxfpus is foplpus
  147. [actual] foplpus is yayppus
  148. [actual] yayppus is babgpus
  149. [planning] yeltpus is laztpus
  150. [actual] yeltpus is laztpus
  151. [planning] yeltpus is laztpus
  152. [actual] yeltpus is laztpus
  153. [actual] yeltpus is laztpus
  154. [actual] yeltpus is zucppus
  155. [planning] nudwpus is babgpus
  156. [planning] laztpus is babgpus
  157. [planning] laztpus is wuxfpus
  158. [planning] laztpus is foplpus
  159. [planning] laztpus is yayppus
  160. [actual] nudwpus is yepppus
  161. [actual] yepppus is lolhpus
  162. [actual] lolhpus is bosxpus
  163. [actual] bosxpus is zeqmpus
  164. [actual] zeqmpus is rumqpus
  165. [actual] rumqpus is rowjpus
  166. [actual] rowjpus is yeltpus
  167. [actual] yeltpus is laztpus
  168. [actual] laztpus is babgpus
  169. [planning] nudwpus is babgpus
  170. [actual] yeltpus is laztpus
  171. [actual] laztpus is babgpus
  172. [actual] nudwpus is babgpus
  173. [actual] x is nudwpus
  174. [actual] nudwpus is babgpus
  175. [actual] x is babgpus
  176. [planning] x is babgpus and babkpus and babmpus?
  177. [actual] yeltpus is zucppus
  178. [planning] lubnpus is babgpus
  179. [actual] nudwpus is a subset of babgpus
  180. [actual] x is nudwpus
  181. [actual] x is babgpus
  182. [actual] x is babgpus
  183. [planning] yeltpus is laztpus
  184. [actual] yeltpus is laztpus
  185. [actual] yeltpus is laztpus
  186. [actual] mawcpus is warxpus
  187. [actual] nudwpus is yepppus and cuzrpus

=== 开始标准化和解析节点 ===
清洗后statements数: 187
标准化后节点数: 164
过滤掉的无效实体数: 23
标准化后的节点:
  1. [planning] x → babgpus (原始: x is babgpus)
  2. [actual] x → nudwpus (原始: x is nudwpus)
  3. [planning] nudwpus → babgpus (原始: nudwpus is babgpus)
  4. [actual] wuxfpus → foplpus (原始: wuxfpus is foplpus)
  5. [actual] bosxpus → zeqmpus (原始: bosxpus is zeqmpus)
  6. [actual] rowjpus → yeltpus and cipvpus (原始: rowjpus is yeltpus and cipvpus)
  7. [actual] laztpus → wuxfpus (原始: laztpus is wuxfpus)
  8. [actual] zucppus → mawcpus (原始: zucppus is mawcpus)
  9. [actual] lolhpus → bosxpus and gavbpus (原始: lolhpus is bosxpus and gavbpus)
  10. [actual] rumqpus → rowjpus (原始: rumqpus is rowjpus)
  11. [actual] qadspus → wanmpus (原始: qadspus is wanmpus)
  12. [actual] yeltpus → zucppus (原始: yeltpus is zucppus)
  13. [actual] lovbpus → babgpus (原始: lovbpus is babgpus)
  14. [actual] zeqmpus → rumqpus and lictpus (原始: zeqmpus is rumqpus and lictpus)
  15. [actual] mawcpus → lubnpus (原始: mawcpus is lubnpus)
  16. [actual] yayppus → qadspus (原始: yayppus is qadspus)
  17. [actual] wanmpus → lovbpus (原始: wanmpus is lovbpus)
  18. [actual] yepppus → lolhpus (原始: yepppus is lolhpus)
  19. [actual] x → nudwpus (原始: x is nudwpus)
  20. [actual] mawcpus → warxpus (原始: mawcpus is warxpus)
  21. [actual] nudwpus → yepppus and cuzrpus (原始: nudwpus is yepppus and cuzrpus)
  22. [actual] yeltpus → laztpus (原始: yeltpus is laztpus)
  23. [actual] foplpus → yayppus (原始: foplpus is yayppus)
  24. [planning] x → babgpus (原始: x is babgpus)
  25. [actual] x → nudwpus (原始: x is nudwpus)
  26. [planning] nudwpus → babgpus (原始: nudwpus is babgpus)
  27. [actual] nudwpus → yepppus and cuzrpus (原始: nudwpus is yepppus and cuzrpus)
  28. [actual] nudwpus → yepppus and cuzrpus (原始: nudwpus is yepppus and cuzrpus)
  29. [planning] nudwpus → babgpus (原始: nudwpus is babgpus)
  30. [actual] lovbpus → babgpus (原始: lovbpus is babgpus)
  31. [planning] x → babgpus (原始: x is babgpus)
  32. [actual] wanmpus → lovbpus (原始: wanmpus is lovbpus)
  33. [actual] qadspus → wanmpus (原始: qadspus is wanmpus)
  34. [actual] yayppus → qadspus (原始: yayppus is qadspus)
  35. [actual] foplpus → yayppus (原始: foplpus is yayppus)
  36. [actual] wuxfpus → foplpus (原始: wuxfpus is foplpus)
  37. [actual] laztpus → wuxfpus (原始: laztpus is wuxfpus)
  38. [planning] yeltpus → laztpus (原始: yeltpus is laztpus)
  39. [planning] yeltpus → laztpus (原始: yeltpus is laztpus)
  40. [planning] yeltpus → laztpus (原始: yeltpus is laztpus)
  41. [actual] yeltpus → laztpus (原始: yeltpus is laztpus)
  42. [actual] rowjpus → yeltpus and cipvpus (原始: rowjpus is yeltpus and cipvpus)
  43. [actual] yeltpus → zucppus (原始: yeltpus is zucppus)
  44. [actual] nudwpus → yepppus (原始: nudwpus is yepppus)
  45. [planning] yepppus → babgpus (原始: yepppus is babgpus)
  46. [planning] nudwpus → babgpus (原始: nudwpus is babgpus)
  47. [actual] yepppus → lolhpus (原始: yepppus is lolhpus)
  48. [actual] yepppus → lolhpus (原始: yepppus is lolhpus)
  49. [actual] lolhpus → bosxpus and gavbpus (原始: lolhpus is bosxpus and gavbpus)
  50. [actual] yepppus → lolhpus (原始: yepppus is lolhpus)
  51. [actual] lolhpus → bosxpus (原始: lolhpus is bosxpus)
  52. [planning] lolhpus → bosxpus (原始: lolhpus is bosxpus)
  53. [planning] lolhpus → bosxpus (原始: lolhpus is bosxpus)
  54. [planning] lolhpus → bosxpus (原始: lolhpus is bosxpus)
  55. [actual] x → babgpus (原始: x is babgpus)
  56. [actual] yexbpus → lerwpus and pazjpus (原始: yexbpus is lerwpus and pazjpus)
  57. [actual] lerwpus → yexbpus (原始: lerwpus is yexbpus)
  58. [actual] wuxfpus → foplpus (原始: wuxfpus is foplpus)
  59. [actual] bosxpus → zeqmpus (原始: bosxpus is zeqmpus)
  60. [actual] rowjpus → yeltpus and cipvpus (原始: rowjpus is yeltpus and cipvpus)
  61. [planning] yeltpus → cipvpus (原始: yeltpus is cipvpus)
  62. [planning] rowjpus → yeltpus (原始: rowjpus is yeltpus)
  63. [planning] rowjpus → cipvpus (原始: rowjpus is cipvpus)
  64. [planning] rowjpus → yeltpus and cipvpus (原始: rowjpus is yeltpus and cipvpus)
  65. [actual] lolhpus → bosxpus and gavbpus (原始: lolhpus is bosxpus and gavbpus)
  66. [planning] lolhpus → bosxpus and gavbpus (原始: lolhpus is bosxpus and gavbpus)
  67. [actual] lovbpus → babgpus (原始: lovbpus is babgpus)
  68. [planning] lovbpus → babgpus (原始: lovbpus is babgpus)
  69. [actual] lovbpus → babgpus (原始: lovbpus is babgpus)
  70. [planning] x → babgpus (原始: x is babgpus)
  71. [planning] x → babgpus (原始: x is babgpus)
  72. [actual] x → nudwpus (原始: x is nudwpus)
  73. [planning] nudwpus → babgpus (原始: nudwpus is babgpus)
  74. [actual] lovbpus → babgpus (原始: lovbpus is babgpus)
  75. [actual] wuxfpus → foplpus (原始: wuxfpus is foplpus)
  76. [actual] lovbpus → babgpus (原始: lovbpus is babgpus)
  77. [planning] x → babgpus (原始: x is babgpus)
  78. [actual] x → nudwpus (原始: x is nudwpus)
  79. [planning] nudwpus → babgpus (原始: nudwpus is babgpus)
  80. [planning] nudwpus → babgpus (原始: nudwpus is babgpus)
  81. [actual] x → nudwpus (原始: x is nudwpus)
  82. [planning] x → nudwpus (原始: x is nudwpus)
  83. [actual] x → nudwpus (原始: x is nudwpus)
  84. [planning] x → nudwpus (原始: x is nudwpus)
  85. [planning] x → nudwpus (原始: x is nudwpus)
  86. [actual] x → babgpus (原始: x is babgpus)
  87. [actual] x → nudwpus (原始: x is nudwpus)
  88. [planning] x → babgpus (原始: x is babgpus)
  89. [planning] nudwpus → babgpus (原始: nudwpus is babgpus)
  90. [actual] rowjpus → yeltpus and cipvpus (原始: rowjpus is yeltpus and cipvpus)
  91. [actual] wuxfpus → foplpus (原始: wuxfpus is foplpus)
  92. [actual] bosxpus → zeqmpus (原始: bosxpus is zeqmpus)
  93. [actual] rowjpus → yeltpus (原始: rowjpus is yeltpus)
  94. [actual] rowjpus → cipvpus (原始: rowjpus is cipvpus)
  95. [actual] laztpus → wuxfpus (原始: laztpus is wuxfpus)
  96. [actual] zucppus → mawcpus (原始: zucppus is mawcpus)
  97. [actual] lolhpus → bosxpus (原始: lolhpus is bosxpus)
  98. [actual] lolhpus → gavbpus (原始: lolhpus is gavbpus)
  99. [actual] rumqpus → rowjpus (原始: rumqpus is rowjpus)
  100. [actual] yeltpus → zucppus (原始: yeltpus is zucppus)
  101. [actual] lovbpus → babgpus (原始: lovbpus is babgpus)
  102. [actual] zeqmpus → rumqpus and lictpus (原始: zeqmpus is rumqpus and lictpus)
  103. [actual] mawcpus → lubnpus (原始: mawcpus is lubnpus)
  104. [actual] yayppus → qadspus (原始: yayppus is qadspus)
  105. [actual] wanmpus → lovbpus (原始: wanmpus is lovbpus)
  106. [actual] yepppus → lolhpus (原始: yepppus is lolhpus)
  107. [actual] x → nudwpus (原始: x is nudwpus)
  108. [planning] x → nudwpus (原始: x is nudwpus)
  109. [planning] x → nudwpus (原始: x is nudwpus)
  110. [planning] x → babgpus (原始: x is babgpus)
  111. [actual] x → nudwpus (原始: x is nudwpus)
  112. [planning] x → nudwpus (原始: x is nudwpus)
  113. [planning] x → babgpus (原始: x is babgpus)
  114. [planning] nudwpus → babgpus (原始: nudwpus is babgpus)
  115. [actual] nudwpus → yepppus and cuzrpus (原始: nudwpus is yepppus and cuzrpus)
  116. [planning] nudwpus → babgpus (原始: nudwpus is babgpus)
  117. [planning] yepppus → babgpus (原始: yepppus is babgpus)
  118. [planning] cuzrpus → babgpus (原始: cuzrpus is babgpus)
  119. [planning] yepppus → babgpus (原始: yepppus is babgpus)
  120. [actual] yepppus → lolhpus (原始: yepppus is lolhpus)
  121. [actual] lolhpus → bosxpus (原始: lolhpus is bosxpus)
  122. [actual] lolhpus → gavbpus (原始: lolhpus is gavbpus)
  123. [planning] foplpus → yayppus (原始: foplpus is yayppus)
  124. [actual] foplpus → yayppus (原始: foplpus is yayppus)
  125. [actual] wuxfpus → foplpus (原始: wuxfpus is foplpus)
  126. [actual] foplpus → yayppus (原始: foplpus is yayppus)
  127. [actual] yayppus → babgpus (原始: yayppus is babgpus)
  128. [planning] yeltpus → laztpus (原始: yeltpus is laztpus)
  129. [actual] yeltpus → laztpus (原始: yeltpus is laztpus)
  130. [planning] yeltpus → laztpus (原始: yeltpus is laztpus)
  131. [actual] yeltpus → laztpus (原始: yeltpus is laztpus)
  132. [actual] yeltpus → laztpus (原始: yeltpus is laztpus)
  133. [actual] yeltpus → zucppus (原始: yeltpus is zucppus)
  134. [planning] nudwpus → babgpus (原始: nudwpus is babgpus)
  135. [planning] laztpus → babgpus (原始: laztpus is babgpus)
  136. [planning] laztpus → wuxfpus (原始: laztpus is wuxfpus)
  137. [planning] laztpus → foplpus (原始: laztpus is foplpus)
  138. [planning] laztpus → yayppus (原始: laztpus is yayppus)
  139. [actual] nudwpus → yepppus (原始: nudwpus is yepppus)
  140. [actual] yepppus → lolhpus (原始: yepppus is lolhpus)
  141. [actual] lolhpus → bosxpus (原始: lolhpus is bosxpus)
  142. [actual] bosxpus → zeqmpus (原始: bosxpus is zeqmpus)
  143. [actual] zeqmpus → rumqpus (原始: zeqmpus is rumqpus)
  144. [actual] rumqpus → rowjpus (原始: rumqpus is rowjpus)
  145. [actual] rowjpus → yeltpus (原始: rowjpus is yeltpus)
  146. [actual] yeltpus → laztpus (原始: yeltpus is laztpus)
  147. [actual] laztpus → babgpus (原始: laztpus is babgpus)
  148. [planning] nudwpus → babgpus (原始: nudwpus is babgpus)
  149. [actual] yeltpus → laztpus (原始: yeltpus is laztpus)
  150. [actual] laztpus → babgpus (原始: laztpus is babgpus)
  151. [actual] nudwpus → babgpus (原始: nudwpus is babgpus)
  152. [actual] x → nudwpus (原始: x is nudwpus)
  153. [actual] nudwpus → babgpus (原始: nudwpus is babgpus)
  154. [actual] x → babgpus (原始: x is babgpus)
  155. [actual] yeltpus → zucppus (原始: yeltpus is zucppus)
  156. [planning] lubnpus → babgpus (原始: lubnpus is babgpus)
  157. [actual] x → nudwpus (原始: x is nudwpus)
  158. [actual] x → babgpus (原始: x is babgpus)
  159. [actual] x → babgpus (原始: x is babgpus)
  160. [planning] yeltpus → laztpus (原始: yeltpus is laztpus)
  161. [actual] yeltpus → laztpus (原始: yeltpus is laztpus)
  162. [actual] yeltpus → laztpus (原始: yeltpus is laztpus)
  163. [actual] mawcpus → warxpus (原始: mawcpus is warxpus)
  164. [actual] nudwpus → yepppus and cuzrpus (原始: nudwpus is yepppus and cuzrpus)

开始新的后处理...
[后处理] 从LoG数据文件中获取到图数据，节点数: 25
[后处理] 加载LoG图，包含 25 个节点
  LoG节点 0: x is babgpus (规则: CE, 深度: 1)
  LoG节点 1: x is babgpus and warxpus (规则: MP, 深度: 2)
  LoG节点 2: x is yeltpus (规则: MP, 深度: 3)
  LoG节点 3: yeltpus is babgpus and warxpus (规则: CI, 深度: 3)
  LoG节点 4: x is bosxpus (规则: MP, 深度: 4)
  LoG节点 5: bosxpus is yeltpus (规则: MP, 深度: 4)
  LoG节点 6: yeltpus is babgpus (规则: MP, 深度: 4)
  LoG节点 7: yeltpus is warxpus (规则: CE, 深度: 4)
  LoG节点 8: x is yepppus (规则: CE, 深度: 5)
  LoG节点 9: yepppus is bosxpus (规则: CE, 深度: 5)
  LoG节点 10: bosxpus is rumqpus (规则: CE, 深度: 5)
  LoG节点 11: rumqpus is yeltpus (规则: CE, 深度: 5)
  LoG节点 12: yeltpus is yayppus (规则: MP, 深度: 5)
  LoG节点 13: yayppus is babgpus (规则: MP, 深度: 5)
  LoG节点 14: yeltpus is warxpus and lubnpus (规则: MP, 深度: 5)
  LoG节点 15: x is yepppus and cuzrpus (规则: MP, 深度: 6)
  LoG节点 16: yepppus is bosxpus and gavbpus (规则: MP, 深度: 6)
  LoG节点 17: bosxpus is rumqpus and lictpus (规则: MP, 深度: 6)
  LoG节点 18: rumqpus is yeltpus and cipvpus (规则: MP, 深度: 6)
  LoG节点 19: yeltpus is wuxfpus (规则: MP, 深度: 6)
  LoG节点 20: wuxfpus is yayppus (规则: MP, 深度: 6)
  LoG节点 21: yayppus is wanmpus (规则: MP, 深度: 6)
  LoG节点 22: wanmpus is babgpus (规则: MP, 深度: 6)
  LoG节点 23: yeltpus is mawcpus (规则: MP, 深度: 6)
  LoG节点 24: mawcpus is warxpus and lubnpus (规则: CI, 深度: 6)

============================================================
[后处理] 开始处理节点
============================================================
📊 初始状态:
   - 标准化节点数: 164
   - 初始条件数: 20
   - LoG图节点数: 25

📋 初始条件列表:
    1. wuxfpus is foplpus
    2. bosxpus is zeqmpus
    3. rowjpus is yeltpus and cipvpus
    4. laztpus is wuxfpus
    5. zucppus is mawcpus
    6. lolhpus is bosxpus and gavbpus
    7. rumqpus is rowjpus
    8. qadspus is wanmpus
    9. yeltpus is zucppus
   10. lovbpus is babgpus
   11. zeqmpus is rumqpus and lictpus
   12. mawcpus is lubnpus
   13. yayppus is qadspus
   14. wanmpus is lovbpus
   15. yepppus is lolhpus
   16. x is nudwpus
   17. mawcpus is warxpus
   18. nudwpus is yepppus and cuzrpus
   19. yeltpus is laztpus
   20. foplpus is yayppus

🔧 构建初始Statement列表...
✅ 初始Statement列表构建完成，包含 20 个前提节点

🔍 开始处理actual节点...

   节点 1: x is nudwpus
      ↻ 重复节点，计数: 2

   节点 2: wuxfpus is foplpus
      ↻ 重复节点，计数: 2

   节点 3: bosxpus is zeqmpus
      ↻ 重复节点，计数: 2

   节点 4: rowjpus is yeltpus and cipvpus
      ↻ 重复节点，计数: 2

   节点 5: laztpus is wuxfpus
      ↻ 重复节点，计数: 2

   节点 6: zucppus is mawcpus
      ↻ 重复节点，计数: 2

   节点 7: lolhpus is bosxpus and gavbpus
      ↻ 重复节点，计数: 2

   节点 8: rumqpus is rowjpus
      ↻ 重复节点，计数: 2

   节点 9: qadspus is wanmpus
      ↻ 重复节点，计数: 2

   节点 10: yeltpus is zucppus
      ↻ 重复节点，计数: 2

   节点 11: lovbpus is babgpus
      ↻ 重复节点，计数: 2

   节点 12: zeqmpus is rumqpus and lictpus
      ↻ 重复节点，计数: 2

   节点 13: mawcpus is lubnpus
      ↻ 重复节点，计数: 2

   节点 14: yayppus is qadspus
      ↻ 重复节点，计数: 2

   节点 15: wanmpus is lovbpus
      ↻ 重复节点，计数: 2

   节点 16: yepppus is lolhpus
      ↻ 重复节点，计数: 2

   节点 17: x is nudwpus
      ↻ 重复节点，计数: 3

   节点 18: mawcpus is warxpus
      ↻ 重复节点，计数: 2

   节点 19: nudwpus is yepppus and cuzrpus
      ↻ 重复节点，计数: 2

   节点 20: yeltpus is laztpus
      ↻ 重复节点，计数: 2

   节点 21: foplpus is yayppus
      ↻ 重复节点，计数: 2

   节点 22: x is nudwpus
      ↻ 重复节点，计数: 4

   节点 23: nudwpus is yepppus and cuzrpus
      ↻ 重复节点，计数: 3

   节点 24: nudwpus is yepppus and cuzrpus
      ↻ 重复节点，计数: 4

   节点 25: lovbpus is babgpus
      ↻ 重复节点，计数: 3

   节点 26: wanmpus is lovbpus
      ↻ 重复节点，计数: 3

   节点 27: qadspus is wanmpus
      ↻ 重复节点，计数: 3

   节点 28: yayppus is qadspus
      ↻ 重复节点，计数: 3

   节点 29: foplpus is yayppus
      ↻ 重复节点，计数: 3

   节点 30: wuxfpus is foplpus
      ↻ 重复节点，计数: 3

   节点 31: laztpus is wuxfpus
      ↻ 重复节点，计数: 3

   节点 32: yeltpus is laztpus
      ↻ 重复节点，计数: 3

   节点 33: rowjpus is yeltpus and cipvpus
      ↻ 重复节点，计数: 3

   节点 34: yeltpus is zucppus
      ↻ 重复节点，计数: 3

   节点 35: nudwpus is yepppus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: nudwpus is yepppus and cuzrpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: nudwpus is yepppus and cuzrpus

   节点 36: yepppus is lolhpus
      ↻ 重复节点，计数: 3

   节点 37: yepppus is lolhpus
      ↻ 重复节点，计数: 4

   节点 38: lolhpus is bosxpus and gavbpus
      ↻ 重复节点，计数: 3

   节点 39: yepppus is lolhpus
      ↻ 重复节点，计数: 5

   节点 40: lolhpus is bosxpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: lolhpus is bosxpus and gavbpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: lolhpus is bosxpus and gavbpus

   节点 41: x is babgpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is babgpus
[子树点亮]     └─ 点亮依赖节点: x is babgpus and warxpus (深度2)
[子树点亮]     └─ 点亮依赖节点: x is yeltpus (深度3)
[子树点亮]     └─ 点亮依赖节点: yeltpus is babgpus and warxpus (深度3)
[子树点亮]     └─ 点亮依赖节点: x is bosxpus (深度4)
[子树点亮]     └─ 点亮依赖节点: bosxpus is yeltpus (深度4)
[子树点亮]     └─ 点亮依赖节点: yeltpus is babgpus (深度4)
[子树点亮]     └─ 点亮依赖节点: yeltpus is warxpus (深度4)
[子树点亮]     └─ 点亮依赖节点: x is yepppus (深度5)
[子树点亮]     └─ 点亮依赖节点: yepppus is bosxpus (深度5)
[子树点亮]     └─ 点亮依赖节点: bosxpus is rumqpus (深度5)
[子树点亮]     └─ 点亮依赖节点: rumqpus is yeltpus (深度5)
[子树点亮]     └─ 点亮依赖节点: yeltpus is yayppus (深度5)
[子树点亮]     └─ 点亮依赖节点: yayppus is babgpus (深度5)
[子树点亮]     └─ 点亮依赖节点: yeltpus is warxpus and lubnpus (深度5)
[子树点亮]     └─ 点亮依赖节点: x is yepppus and cuzrpus (深度6)
[子树点亮]     └─ 点亮依赖节点: yepppus is bosxpus and gavbpus (深度6)
[子树点亮]     └─ 点亮依赖节点: bosxpus is rumqpus and lictpus (深度6)
[子树点亮]     └─ 点亮依赖节点: rumqpus is yeltpus and cipvpus (深度6)
[子树点亮]     └─ 点亮依赖节点: yeltpus is wuxfpus (深度6)
[子树点亮]     └─ 点亮依赖节点: wuxfpus is yayppus (深度6)
[子树点亮]     └─ 点亮依赖节点: yayppus is wanmpus (深度6)
[子树点亮]     └─ 点亮依赖节点: wanmpus is babgpus (深度6)
[子树点亮]     └─ 点亮依赖节点: yeltpus is mawcpus (深度6)
[子树点亮]     └─ 点亮依赖节点: mawcpus is warxpus and lubnpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 24 个节点
      ✅ 验证成功 + LoG匹配

   节点 42: yexbpus is lerwpus and pazjpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 43: lerwpus is yexbpus
      🔍 验证新节点...
      ❌ 验证失败 - 幻觉节点

   节点 44: wuxfpus is foplpus
      ↻ 重复节点，计数: 4

   节点 45: bosxpus is zeqmpus
      ↻ 重复节点，计数: 3

   节点 46: rowjpus is yeltpus and cipvpus
      ↻ 重复节点，计数: 4

   节点 47: lolhpus is bosxpus and gavbpus
      ↻ 重复节点，计数: 4

   节点 48: lovbpus is babgpus
      ↻ 重复节点，计数: 4

   节点 49: lovbpus is babgpus
      ↻ 重复节点，计数: 5

   节点 50: x is nudwpus
      ↻ 重复节点，计数: 5

   节点 51: lovbpus is babgpus
      ↻ 重复节点，计数: 6

   节点 52: wuxfpus is foplpus
      ↻ 重复节点，计数: 5

   节点 53: lovbpus is babgpus
      ↻ 重复节点，计数: 7

   节点 54: x is nudwpus
      ↻ 重复节点，计数: 6

   节点 55: x is nudwpus
      ↻ 重复节点，计数: 7

   节点 56: x is nudwpus
      ↻ 重复节点，计数: 8

   节点 57: x is babgpus
      ↻ 重复节点，计数: 2

   节点 58: x is nudwpus
      ↻ 重复节点，计数: 9

   节点 59: rowjpus is yeltpus and cipvpus
      ↻ 重复节点，计数: 5

   节点 60: wuxfpus is foplpus
      ↻ 重复节点，计数: 6

   节点 61: bosxpus is zeqmpus
      ↻ 重复节点，计数: 4

   节点 62: rowjpus is yeltpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: rowjpus is yeltpus and cipvpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: rowjpus is yeltpus and cipvpus

   节点 63: rowjpus is cipvpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: rowjpus is yeltpus and cipvpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: rowjpus is yeltpus and cipvpus

   节点 64: laztpus is wuxfpus
      ↻ 重复节点，计数: 4

   节点 65: zucppus is mawcpus
      ↻ 重复节点，计数: 3

   节点 66: lolhpus is bosxpus
      ↻ 重复节点，计数: 2

   节点 67: lolhpus is gavbpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: lolhpus is bosxpus and gavbpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: lolhpus is bosxpus and gavbpus

   节点 68: rumqpus is rowjpus
      ↻ 重复节点，计数: 3

   节点 69: yeltpus is zucppus
      ↻ 重复节点，计数: 4

   节点 70: lovbpus is babgpus
      ↻ 重复节点，计数: 8

   节点 71: zeqmpus is rumqpus and lictpus
      ↻ 重复节点，计数: 3

   节点 72: mawcpus is lubnpus
      ↻ 重复节点，计数: 3

   节点 73: yayppus is qadspus
      ↻ 重复节点，计数: 4

   节点 74: wanmpus is lovbpus
      ↻ 重复节点，计数: 4

   节点 75: yepppus is lolhpus
      ↻ 重复节点，计数: 6

   节点 76: x is nudwpus
      ↻ 重复节点，计数: 10

   节点 77: x is nudwpus
      ↻ 重复节点，计数: 11

   节点 78: nudwpus is yepppus and cuzrpus
      ↻ 重复节点，计数: 5

   节点 79: yepppus is lolhpus
      ↻ 重复节点，计数: 7

   节点 80: lolhpus is bosxpus
      ↻ 重复节点，计数: 3

   节点 81: lolhpus is gavbpus
      ↻ 重复节点，计数: 2

   节点 82: foplpus is yayppus
      ↻ 重复节点，计数: 4

   节点 83: wuxfpus is foplpus
      ↻ 重复节点，计数: 7

   节点 84: foplpus is yayppus
      ↻ 重复节点，计数: 5

   节点 85: yayppus is babgpus
      🔍 验证新节点...
      ✅ 验证成功 + LoG匹配

   节点 86: yeltpus is laztpus
      ↻ 重复节点，计数: 4

   节点 87: yeltpus is laztpus
      ↻ 重复节点，计数: 5

   节点 88: yeltpus is laztpus
      ↻ 重复节点，计数: 6

   节点 89: yeltpus is zucppus
      ↻ 重复节点，计数: 5

   节点 90: nudwpus is yepppus
      ↻ 重复节点，计数: 2

   节点 91: yepppus is lolhpus
      ↻ 重复节点，计数: 8

   节点 92: lolhpus is bosxpus
      ↻ 重复节点，计数: 4

   节点 93: bosxpus is zeqmpus
      ↻ 重复节点，计数: 5

   节点 94: zeqmpus is rumqpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: zeqmpus is rumqpus and lictpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: zeqmpus is rumqpus and lictpus

   节点 95: rumqpus is rowjpus
      ↻ 重复节点，计数: 4

   节点 96: rowjpus is yeltpus
      ↻ 重复节点，计数: 2

   节点 97: yeltpus is laztpus
      ↻ 重复节点，计数: 7

   节点 98: laztpus is babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: laztpus is wuxfpus → wuxfpus is babgpus
[后处理] 基于推理轨迹点亮节点，使用了 4 个前提条件:
  - 前提: laztpus is wuxfpus
  - 前提: wuxfpus is foplpus
  - 前提: foplpus is yayppus
  - 前提: yayppus is babgpus

   节点 99: yeltpus is laztpus
      ↻ 重复节点，计数: 8

   节点 100: laztpus is babgpus
      ↻ 重复节点，计数: 2

   节点 101: nudwpus is babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: nudwpus is yepppus → yepppus is babgpus
[后处理] 基于推理轨迹点亮节点，使用了 9 个前提条件:
  - 前提: nudwpus is yepppus
  - 前提: yepppus is lolhpus
  - 前提: lolhpus is bosxpus
  - 前提: bosxpus is zeqmpus
  - 前提: zeqmpus is rumqpus
  - 前提: rumqpus is rowjpus
  - 前提: rowjpus is yeltpus
  - 前提: yeltpus is laztpus
  - 前提: laztpus is babgpus

   节点 102: x is nudwpus
      ↻ 重复节点，计数: 12

   节点 103: nudwpus is babgpus
      ↻ 重复节点，计数: 2

   节点 104: x is babgpus
      ↻ 重复节点，计数: 3

   节点 105: yeltpus is zucppus
      ↻ 重复节点，计数: 6

   节点 106: x is nudwpus
      ↻ 重复节点，计数: 13

   节点 107: x is babgpus
      ↻ 重复节点，计数: 4

   节点 108: x is babgpus
      ↻ 重复节点，计数: 5

   节点 109: yeltpus is laztpus
      ↻ 重复节点，计数: 9

   节点 110: yeltpus is laztpus
      ↻ 重复节点，计数: 10

   节点 111: mawcpus is warxpus
      ↻ 重复节点，计数: 3

   节点 112: nudwpus is yepppus and cuzrpus
      ↻ 重复节点，计数: 6

🔍 分析推理路径完整性...

============================================================
[后处理] 处理完成
============================================================
📈 处理统计:
   - 处理的actual节点: 112
   - 新增节点: 12
   - 更新已存在节点: 100
   - 点亮的LoG节点: 25

🎯 推理质量统计:
   - 完美推理: 12 (节点正确 + 路径正确)
   - 部分推理: 0 (节点正确 + 路径部分错误)
   - 无效推理: 0 (节点错误或路径完全错误)
[LoG分析] LoG图: 25节点, 20前提, 复杂度1-20

📊 === Statement列表分析 ===
📈 节点统计:
   - 总节点数: 32
   - 前提节点: 20
   - 推理节点: 10
   - 幻觉节点: 2
   - 点亮LoG节点: 25

❌ 幻觉节点详情:
   - yexbpus is lerwpus and pazjpus (出现1次)
   - lerwpus is yexbpus (出现1次)

✅ 推理节点详情:
   🟢 nudwpus is yepppus (出现2次, 质量:perfect)
   🟢 lolhpus is bosxpus (出现4次, 质量:perfect)
   🟢 x is babgpus (出现5次, 质量:perfect)
   🟢 rowjpus is yeltpus (出现2次, 质量:perfect)
   🟢 rowjpus is cipvpus (出现1次, 质量:perfect)
   🟢 lolhpus is gavbpus (出现2次, 质量:perfect)
   🟢 yayppus is babgpus (出现1次, 质量:perfect)
   🟢 zeqmpus is rumqpus (出现1次, 质量:perfect)
   🟢 laztpus is babgpus (出现2次, 质量:perfect)
   🟢 nudwpus is babgpus (出现2次, 质量:perfect)

🔥 点亮的LoG节点:
   - yayppus is wanmpus
   - x is yepppus
   - yeltpus is warxpus
   - yepppus is bosxpus
   - wuxfpus is yayppus
   - yeltpus is babgpus
   - bosxpus is yeltpus
   - x is yeltpus
   - x is bosxpus
   - wanmpus is babgpus
   - x is babgpus
   - yeltpus is yayppus
   - bosxpus is rumqpus
   - rumqpus is yeltpus and cipvpus
   - rumqpus is yeltpus
   - mawcpus is warxpus and lubnpus
   - bosxpus is rumqpus and lictpus
   - yepppus is bosxpus and gavbpus
   - yeltpus is babgpus and warxpus
   - yeltpus is wuxfpus
   - x is babgpus and warxpus
   - yeltpus is warxpus and lubnpus
   - x is yepppus and cuzrpus
   - yayppus is babgpus
   - yeltpus is mawcpus

============================================================
📊 计算评估指标
============================================================

🎯 计算Coverage指标...
   深度Coverage: 6/6 = 100.00%
   最深点亮节点: x is babgpus (第6层)
   节点Coverage: 25/25 = 100.00%
   前提条件Coverage: 20/20 = 100.00%
   各推理层点亮比例:
     第1层: 10/10 = 100.00%
     第2层: 7/7 = 100.00%
     第3层: 4/4 = 100.00%
     第4层: 2/2 = 100.00%
     第5层: 1/1 = 100.00%
     第6层: 1/1 = 100.00%

🎯 计算Precision指标...
   Error Rate: 2/12 = 16.67%
   可推导节点: 10/12
   Strict Error Rate: 2/12 = 16.67%
   严格有效节点: 10/12

   详细分析:
     完美推理: 12 (100.00%)
     部分推理: 0 (0.00%)
     无效推理: 0 (0.00%)

================================================================================
处理记录 50/50
================================================================================
记录索引: 49
问题状态: correct
📁 从缓存加载提取结果: evaluation_results.LoG_6.deepseek-reasoner_record_49.json
✅ 使用缓存结果:
   - 句子数: 52
   - 提取的语句数: 66
   - 初始条件数: 15

=== Statement提取完成 ===
总句子数: 52
成功提取: 52
失败提取: 0
总statements数: 66

=== 开始清洗Statement格式 ===
原始statements数: 66
清洗后statements数: 63
过滤掉的statements数: 3
清洗后的statements:
  1. [planning] x is babgpus
  2. [actual] x is jaqtpus
  3. [actual] x is jaqtpus
  4. [actual] jaqtpus is titypus
  5. [actual] x is titypus
  6. [actual] titypus is gextpus
  7. [actual] x is gextpus
  8. [actual] gextpus is nuwppus
  9. [actual] x is nuwppus
  10. [actual] nuwppus is bubxpus
  11. [actual] x is bubxpus
  12. [actual] bubxpus is marhpus and jazgpus
  13. [actual] x is marhpus
  14. [actual] x is jazgpus
  15. [planning] x is marhpus and jazgpus
  16. [actual] bubxpus is marhpus and jazgpus
  17. [actual] x is bubxpus
  18. [planning] x is babgpus
  19. [actual] jetdpus is babgpus and dicxpus and zogkpus and jucbpus
  20. [actual] mezwpus is jetdpus
  21. [actual] x is bubxpus
  22. [actual] bubxpus is marhpus and jazgpus
  23. [actual] marhpus is begjpus
  24. [actual] begjpus is xafcpus and voqgpus
  25. [actual] xafcpus is fukppus
  26. [actual] fukppus is zayjpus and nidzpus
  27. [actual] zayjpus is cabkpus and tadcpus
  28. [actual] cabkpus is rojqpus
  29. [actual] rojqpus is mezwpus
  30. [actual] mezwpus is jetdpus
  31. [actual] jetdpus is babgpus
  32. [planning] x is babgpus
  33. [actual] x is bubxpus
  34. [actual] bubxpus is marhpus
  35. [actual] marhpus is begjpus
  36. [actual] begjpus is xafcpus and voqgpus
  37. [actual] x is xafcpus
  38. [planning] x is xafcpus
  39. [actual] x is bubxpus
  40. [actual] bubxpus is marhpus
  41. [actual] marhpus is begjpus
  42. [actual] x is begjpus
  43. [actual] begjpus is xafcpus
  44. [actual] x is xafcpus
  45. [actual] xafcpus is fukppus
  46. [actual] x is fukppus
  47. [actual] fukppus is zayjpus and nidzpus
  48. [actual] x is zayjpus
  49. [actual] zayjpus is cabkpus and tadcpus
  50. [actual] x is cabkpus
  51. [actual] cabkpus is rojqpus
  52. [planning] x is rojqpus
  53. [actual] rojqpus is mezwpus
  54. [planning] x is mezwpus
  55. [actual] mezwpus is jetdpus
  56. [planning] x is jetdpus
  57. [actual] jetdpus is babgpus and dicxpus and zogkpus and jucbpus
  58. [actual] jetdpus is babgpus
  59. [actual] x is jetdpus
  60. [actual] x is babgpus
  61. [actual] x is babgpus
  62. [planning] x is babgpus
  63. [actual] x is babgpus

=== 开始标准化和解析节点 ===
清洗后statements数: 63
标准化后节点数: 63
过滤掉的无效实体数: 0
标准化后的节点:
  1. [planning] x → babgpus (原始: x is babgpus)
  2. [actual] x → jaqtpus (原始: x is jaqtpus)
  3. [actual] x → jaqtpus (原始: x is jaqtpus)
  4. [actual] jaqtpus → titypus (原始: jaqtpus is titypus)
  5. [actual] x → titypus (原始: x is titypus)
  6. [actual] titypus → gextpus (原始: titypus is gextpus)
  7. [actual] x → gextpus (原始: x is gextpus)
  8. [actual] gextpus → nuwppus (原始: gextpus is nuwppus)
  9. [actual] x → nuwppus (原始: x is nuwppus)
  10. [actual] nuwppus → bubxpus (原始: nuwppus is bubxpus)
  11. [actual] x → bubxpus (原始: x is bubxpus)
  12. [actual] bubxpus → marhpus and jazgpus (原始: bubxpus is marhpus and jazgpus)
  13. [actual] x → marhpus (原始: x is marhpus)
  14. [actual] x → jazgpus (原始: x is jazgpus)
  15. [planning] x → marhpus and jazgpus (原始: x is marhpus and jazgpus)
  16. [actual] bubxpus → marhpus and jazgpus (原始: bubxpus is marhpus and jazgpus)
  17. [actual] x → bubxpus (原始: x is bubxpus)
  18. [planning] x → babgpus (原始: x is babgpus)
  19. [actual] jetdpus → babgpus and dicxpus and zogkpus and jucbpus (原始: jetdpus is babgpus and dicxpus and zogkpus and jucbpus)
  20. [actual] mezwpus → jetdpus (原始: mezwpus is jetdpus)
  21. [actual] x → bubxpus (原始: x is bubxpus)
  22. [actual] bubxpus → marhpus and jazgpus (原始: bubxpus is marhpus and jazgpus)
  23. [actual] marhpus → begjpus (原始: marhpus is begjpus)
  24. [actual] begjpus → xafcpus and voqgpus (原始: begjpus is xafcpus and voqgpus)
  25. [actual] xafcpus → fukppus (原始: xafcpus is fukppus)
  26. [actual] fukppus → zayjpus and nidzpus (原始: fukppus is zayjpus and nidzpus)
  27. [actual] zayjpus → cabkpus and tadcpus (原始: zayjpus is cabkpus and tadcpus)
  28. [actual] cabkpus → rojqpus (原始: cabkpus is rojqpus)
  29. [actual] rojqpus → mezwpus (原始: rojqpus is mezwpus)
  30. [actual] mezwpus → jetdpus (原始: mezwpus is jetdpus)
  31. [actual] jetdpus → babgpus (原始: jetdpus is babgpus)
  32. [planning] x → babgpus (原始: x is babgpus)
  33. [actual] x → bubxpus (原始: x is bubxpus)
  34. [actual] bubxpus → marhpus (原始: bubxpus is marhpus)
  35. [actual] marhpus → begjpus (原始: marhpus is begjpus)
  36. [actual] begjpus → xafcpus and voqgpus (原始: begjpus is xafcpus and voqgpus)
  37. [actual] x → xafcpus (原始: x is xafcpus)
  38. [planning] x → xafcpus (原始: x is xafcpus)
  39. [actual] x → bubxpus (原始: x is bubxpus)
  40. [actual] bubxpus → marhpus (原始: bubxpus is marhpus)
  41. [actual] marhpus → begjpus (原始: marhpus is begjpus)
  42. [actual] x → begjpus (原始: x is begjpus)
  43. [actual] begjpus → xafcpus (原始: begjpus is xafcpus)
  44. [actual] x → xafcpus (原始: x is xafcpus)
  45. [actual] xafcpus → fukppus (原始: xafcpus is fukppus)
  46. [actual] x → fukppus (原始: x is fukppus)
  47. [actual] fukppus → zayjpus and nidzpus (原始: fukppus is zayjpus and nidzpus)
  48. [actual] x → zayjpus (原始: x is zayjpus)
  49. [actual] zayjpus → cabkpus and tadcpus (原始: zayjpus is cabkpus and tadcpus)
  50. [actual] x → cabkpus (原始: x is cabkpus)
  51. [actual] cabkpus → rojqpus (原始: cabkpus is rojqpus)
  52. [planning] x → rojqpus (原始: x is rojqpus)
  53. [actual] rojqpus → mezwpus (原始: rojqpus is mezwpus)
  54. [planning] x → mezwpus (原始: x is mezwpus)
  55. [actual] mezwpus → jetdpus (原始: mezwpus is jetdpus)
  56. [planning] x → jetdpus (原始: x is jetdpus)
  57. [actual] jetdpus → babgpus and dicxpus and zogkpus and jucbpus (原始: jetdpus is babgpus and dicxpus and zogkpus and jucbpus)
  58. [actual] jetdpus → babgpus (原始: jetdpus is babgpus)
  59. [actual] x → jetdpus (原始: x is jetdpus)
  60. [actual] x → babgpus (原始: x is babgpus)
  61. [actual] x → babgpus (原始: x is babgpus)
  62. [planning] x → babgpus (原始: x is babgpus)
  63. [actual] x → babgpus (原始: x is babgpus)

开始新的后处理...
[后处理] 从LoG数据文件中获取到图数据，节点数: 21
[后处理] 加载LoG图，包含 21 个节点
  LoG节点 0: x is babgpus (规则: CE, 深度: 1)
  LoG节点 1: x is babgpus and dicxpus (规则: MP, 深度: 2)
  LoG节点 2: x is zayjpus (规则: MP, 深度: 3)
  LoG节点 3: zayjpus is babgpus and dicxpus (规则: CE, 深度: 3)
  LoG节点 4: x is marhpus (规则: MP, 深度: 4)
  LoG节点 5: marhpus is zayjpus (规则: MP, 深度: 4)
  LoG节点 6: zayjpus is babgpus and dicxpus and zogkpus (规则: MP, 深度: 4)
  LoG节点 7: x is nuwppus (规则: MP, 深度: 5)
  LoG节点 8: nuwppus is marhpus (规则: CE, 深度: 5)
  LoG节点 9: marhpus is xafcpus (规则: CE, 深度: 5)
  LoG节点 10: xafcpus is zayjpus (规则: CE, 深度: 5)
  LoG节点 11: zayjpus is mezwpus (规则: MP, 深度: 5)
  LoG节点 12: mezwpus is babgpus and dicxpus and zogkpus (规则: CE, 深度: 5)
  LoG节点 13: x is titypus (规则: MP, 深度: 6)
  LoG节点 14: titypus is nuwppus (规则: MP, 深度: 6)
  LoG节点 15: nuwppus is marhpus and jazgpus (规则: MP, 深度: 6)
  LoG节点 16: marhpus is xafcpus and voqgpus (规则: MP, 深度: 6)
  LoG节点 17: xafcpus is zayjpus and nidzpus (规则: MP, 深度: 6)
  LoG节点 18: zayjpus is cabkpus (规则: CE, 深度: 6)
  LoG节点 19: cabkpus is mezwpus (规则: MP, 深度: 6)
  LoG节点 20: mezwpus is babgpus and dicxpus and zogkpus and jucbpus (规则: MP, 深度: 6)

============================================================
[后处理] 开始处理节点
============================================================
📊 初始状态:
   - 标准化节点数: 63
   - 初始条件数: 15
   - LoG图节点数: 21

📋 初始条件列表:
    1. jetdpus is babgpus and dicxpus and zogkpus and jucbpus
    2. jaqtpus is titypus
    3. xafcpus is fukppus
    4. zayjpus is cabkpus and tadcpus
    5. marhpus is begjpus
    6. mezwpus is jetdpus
    7. bubxpus is marhpus and jazgpus
    8. gextpus is nuwppus
    9. titypus is gextpus
   10. cabkpus is rojqpus
   11. nuwppus is bubxpus
   12. x is jaqtpus
   13. begjpus is xafcpus and voqgpus
   14. fukppus is zayjpus and nidzpus
   15. rojqpus is mezwpus

🔧 构建初始Statement列表...
✅ 初始Statement列表构建完成，包含 15 个前提节点

🔍 开始处理actual节点...

   节点 1: x is jaqtpus
      ↻ 重复节点，计数: 2

   节点 2: x is jaqtpus
      ↻ 重复节点，计数: 3

   节点 3: jaqtpus is titypus
      ↻ 重复节点，计数: 2

   节点 4: x is titypus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is titypus
      ✅ 验证成功 + LoG匹配

   节点 5: titypus is gextpus
      ↻ 重复节点，计数: 2

   节点 6: x is gextpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is jaqtpus → jaqtpus is gextpus
[后处理] 基于推理轨迹点亮节点，使用了 3 个前提条件:
  - 前提: x is jaqtpus
  - 前提: jaqtpus is titypus
  - 前提: titypus is gextpus

   节点 7: gextpus is nuwppus
      ↻ 重复节点，计数: 2

   节点 8: x is nuwppus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is nuwppus
[子树点亮]     └─ 点亮依赖节点: titypus is nuwppus (深度6)
[后处理]   └─ 自动点亮依赖子树: 1 个节点
      ✅ 验证成功 + LoG匹配

   节点 9: nuwppus is bubxpus
      ↻ 重复节点，计数: 2

   节点 10: x is bubxpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is jaqtpus → jaqtpus is bubxpus
[后处理] 基于推理轨迹点亮节点，使用了 5 个前提条件:
  - 前提: x is jaqtpus
  - 前提: jaqtpus is titypus
  - 前提: titypus is gextpus
  - 前提: gextpus is nuwppus
  - 前提: nuwppus is bubxpus

   节点 11: bubxpus is marhpus and jazgpus
      ↻ 重复节点，计数: 2

   节点 12: x is marhpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is marhpus
[子树点亮]     └─ 点亮依赖节点: nuwppus is marhpus (深度5)
[子树点亮]     └─ 点亮依赖节点: nuwppus is marhpus and jazgpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 2 个节点
      ✅ 验证成功 + LoG匹配

   节点 13: x is jazgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is jaqtpus → jaqtpus is jazgpus
[后处理] 基于推理轨迹点亮节点，使用了 6 个前提条件:
  - 前提: x is jaqtpus
  - 前提: jaqtpus is titypus
  - 前提: titypus is gextpus
  - 前提: gextpus is nuwppus
  - 前提: nuwppus is bubxpus
  - 前提: bubxpus is marhpus and jazgpus

   节点 14: bubxpus is marhpus and jazgpus
      ↻ 重复节点，计数: 3

   节点 15: x is bubxpus
      ↻ 重复节点，计数: 2

   节点 16: jetdpus is babgpus and dicxpus and zogkpus and jucbpus
      ↻ 重复节点，计数: 2

   节点 17: mezwpus is jetdpus
      ↻ 重复节点，计数: 2

   节点 18: x is bubxpus
      ↻ 重复节点，计数: 3

   节点 19: bubxpus is marhpus and jazgpus
      ↻ 重复节点，计数: 4

   节点 20: marhpus is begjpus
      ↻ 重复节点，计数: 2

   节点 21: begjpus is xafcpus and voqgpus
      ↻ 重复节点，计数: 2

   节点 22: xafcpus is fukppus
      ↻ 重复节点，计数: 2

   节点 23: fukppus is zayjpus and nidzpus
      ↻ 重复节点，计数: 2

   节点 24: zayjpus is cabkpus and tadcpus
      ↻ 重复节点，计数: 2

   节点 25: cabkpus is rojqpus
      ↻ 重复节点，计数: 2

   节点 26: rojqpus is mezwpus
      ↻ 重复节点，计数: 2

   节点 27: mezwpus is jetdpus
      ↻ 重复节点，计数: 3

   节点 28: jetdpus is babgpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: jetdpus is babgpus and dicxpus and zogkpus and jucbpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: jetdpus is babgpus and dicxpus and zogkpus and jucbpus

   节点 29: x is bubxpus
      ↻ 重复节点，计数: 4

   节点 30: bubxpus is marhpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: bubxpus is marhpus and jazgpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: bubxpus is marhpus and jazgpus

   节点 31: marhpus is begjpus
      ↻ 重复节点，计数: 3

   节点 32: begjpus is xafcpus and voqgpus
      ↻ 重复节点，计数: 3

   节点 33: x is xafcpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is jaqtpus → jaqtpus is xafcpus
[后处理] 基于推理轨迹点亮节点，使用了 8 个前提条件:
  - 前提: x is jaqtpus
  - 前提: jaqtpus is titypus
  - 前提: titypus is gextpus
  - 前提: gextpus is nuwppus
  - 前提: nuwppus is bubxpus
  - 前提: bubxpus is marhpus
  - 前提: marhpus is begjpus
  - 前提: begjpus is xafcpus and voqgpus
  ✓ 点亮LoG节点: marhpus is xafcpus
[子树点亮]     └─ 点亮依赖节点: marhpus is xafcpus and voqgpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 1 个节点
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 34: x is bubxpus
      ↻ 重复节点，计数: 5

   节点 35: bubxpus is marhpus
      ↻ 重复节点，计数: 2

   节点 36: marhpus is begjpus
      ↻ 重复节点，计数: 4

   节点 37: x is begjpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is jaqtpus → jaqtpus is begjpus
[后处理] 基于推理轨迹点亮节点，使用了 7 个前提条件:
  - 前提: x is jaqtpus
  - 前提: jaqtpus is titypus
  - 前提: titypus is gextpus
  - 前提: gextpus is nuwppus
  - 前提: nuwppus is bubxpus
  - 前提: bubxpus is marhpus
  - 前提: marhpus is begjpus

   节点 38: begjpus is xafcpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: CE
      📋 推理路径: CE规则: begjpus is xafcpus and voqgpus
[后处理] 基于推理轨迹点亮节点，使用了 1 个前提条件:
  - 前提: begjpus is xafcpus and voqgpus

   节点 39: x is xafcpus
      ↻ 重复节点，计数: 2

   节点 40: xafcpus is fukppus
      ↻ 重复节点，计数: 3

   节点 41: x is fukppus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is jaqtpus → jaqtpus is fukppus
[后处理] 基于推理轨迹点亮节点，使用了 9 个前提条件:
  - 前提: x is jaqtpus
  - 前提: jaqtpus is titypus
  - 前提: titypus is gextpus
  - 前提: gextpus is nuwppus
  - 前提: nuwppus is bubxpus
  - 前提: bubxpus is marhpus
  - 前提: marhpus is begjpus
  - 前提: begjpus is xafcpus
  - 前提: xafcpus is fukppus

   节点 42: fukppus is zayjpus and nidzpus
      ↻ 重复节点，计数: 3

   节点 43: x is zayjpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is zayjpus
[子树点亮]     └─ 点亮依赖节点: marhpus is zayjpus (深度4)
[子树点亮]     └─ 点亮依赖节点: xafcpus is zayjpus (深度5)
[子树点亮]     └─ 点亮依赖节点: xafcpus is zayjpus and nidzpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 3 个节点
      ✅ 验证成功 + LoG匹配

   节点 44: zayjpus is cabkpus and tadcpus
      ↻ 重复节点，计数: 3

   节点 45: x is cabkpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is jaqtpus → jaqtpus is cabkpus
[后处理] 基于推理轨迹点亮节点，使用了 11 个前提条件:
  - 前提: x is jaqtpus
  - 前提: jaqtpus is titypus
  - 前提: titypus is gextpus
  - 前提: gextpus is nuwppus
  - 前提: nuwppus is bubxpus
  - 前提: bubxpus is marhpus
  - 前提: marhpus is begjpus
  - 前提: begjpus is xafcpus
  - 前提: xafcpus is fukppus
  - 前提: fukppus is zayjpus and nidzpus
  - 前提: zayjpus is cabkpus and tadcpus
  ✓ 点亮LoG节点: zayjpus is cabkpus
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 46: cabkpus is rojqpus
      ↻ 重复节点，计数: 3

   节点 47: rojqpus is mezwpus
      ↻ 重复节点，计数: 3

   节点 48: mezwpus is jetdpus
      ↻ 重复节点，计数: 4

   节点 49: jetdpus is babgpus and dicxpus and zogkpus and jucbpus
      ↻ 重复节点，计数: 3

   节点 50: jetdpus is babgpus
      ↻ 重复节点，计数: 2

   节点 51: x is jetdpus
      🔍 验证新节点...
      ✅ 验证成功 (LoG中无对应节点)
      🔍 获取推理轨迹以点亮隐式节点...
      📋 推理方法: MP
      📋 推理路径: MP规则: x is jaqtpus → jaqtpus is jetdpus
[后处理] 基于推理轨迹点亮节点，使用了 14 个前提条件:
  - 前提: x is jaqtpus
  - 前提: jaqtpus is titypus
  - 前提: titypus is gextpus
  - 前提: gextpus is nuwppus
  - 前提: nuwppus is bubxpus
  - 前提: bubxpus is marhpus
  - 前提: marhpus is begjpus
  - 前提: begjpus is xafcpus
  - 前提: xafcpus is fukppus
  - 前提: fukppus is zayjpus and nidzpus
  - 前提: zayjpus is cabkpus and tadcpus
  - 前提: cabkpus is rojqpus
  - 前提: rojqpus is mezwpus
  - 前提: mezwpus is jetdpus
  ✓ 点亮LoG节点: zayjpus is mezwpus
[子树点亮]     └─ 点亮依赖节点: cabkpus is mezwpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 1 个节点
[后处理] 通过推理轨迹额外点亮了 1 个LoG节点

   节点 52: x is babgpus
      🔍 验证新节点...
[后处理] 点亮LoG节点: x is babgpus
[子树点亮]     └─ 点亮依赖节点: x is babgpus and dicxpus (深度2)
[子树点亮]     └─ 点亮依赖节点: zayjpus is babgpus and dicxpus (深度3)
[子树点亮]     └─ 点亮依赖节点: zayjpus is babgpus and dicxpus and zogkpus (深度4)
[子树点亮]     └─ 点亮依赖节点: mezwpus is babgpus and dicxpus and zogkpus (深度5)
[子树点亮]     └─ 点亮依赖节点: mezwpus is babgpus and dicxpus and zogkpus and jucbpus (深度6)
[后处理]   └─ 自动点亮依赖子树: 5 个节点
      ✅ 验证成功 + LoG匹配

   节点 53: x is babgpus
      ↻ 重复节点，计数: 2

   节点 54: x is babgpus
      ↻ 重复节点，计数: 3

🔍 分析推理路径完整性...

============================================================
[后处理] 处理完成
============================================================
📈 处理统计:
   - 处理的actual节点: 54
   - 新增节点: 16
   - 更新已存在节点: 38
   - 点亮的LoG节点: 21

🎯 推理质量统计:
   - 完美推理: 16 (节点正确 + 路径正确)
   - 部分推理: 0 (节点正确 + 路径部分错误)
   - 无效推理: 0 (节点错误或路径完全错误)
[LoG分析] LoG图: 21节点, 15前提, 复杂度1-15

📊 === Statement列表分析 ===
📈 节点统计:
   - 总节点数: 31
   - 前提节点: 15
   - 推理节点: 16
   - 幻觉节点: 0
   - 点亮LoG节点: 21

✅ 推理节点详情:
   🟢 x is titypus (出现1次, 质量:perfect)
   🟢 x is gextpus (出现1次, 质量:perfect)
   🟢 x is nuwppus (出现1次, 质量:perfect)
   🟢 x is bubxpus (出现5次, 质量:perfect)
   🟢 x is marhpus (出现1次, 质量:perfect)
   🟢 x is jazgpus (出现1次, 质量:perfect)
   🟢 jetdpus is babgpus (出现2次, 质量:perfect)
   🟢 bubxpus is marhpus (出现2次, 质量:perfect)
   🟢 x is xafcpus (出现2次, 质量:perfect)
   🟢 x is begjpus (出现1次, 质量:perfect)
   🟢 begjpus is xafcpus (出现1次, 质量:perfect)
   🟢 x is fukppus (出现1次, 质量:perfect)
   🟢 x is zayjpus (出现1次, 质量:perfect)
   🟢 x is cabkpus (出现1次, 质量:perfect)
   🟢 x is jetdpus (出现1次, 质量:perfect)
   🟢 x is babgpus (出现3次, 质量:perfect)

🔥 点亮的LoG节点:
   - nuwppus is marhpus
   - titypus is nuwppus
   - xafcpus is zayjpus
   - zayjpus is cabkpus
   - marhpus is xafcpus and voqgpus
   - zayjpus is babgpus and dicxpus and zogkpus
   - x is babgpus
   - x is titypus
   - zayjpus is babgpus and dicxpus
   - marhpus is xafcpus
   - marhpus is zayjpus
   - cabkpus is mezwpus
   - zayjpus is mezwpus
   - x is marhpus
   - nuwppus is marhpus and jazgpus
   - mezwpus is babgpus and dicxpus and zogkpus and jucbpus
   - x is nuwppus
   - mezwpus is babgpus and dicxpus and zogkpus
   - xafcpus is zayjpus and nidzpus
   - x is babgpus and dicxpus
   - x is zayjpus

============================================================
📊 计算评估指标
============================================================

🎯 计算Coverage指标...
   深度Coverage: 6/6 = 100.00%
   最深点亮节点: x is babgpus (第6层)
   节点Coverage: 21/21 = 100.00%
   前提条件Coverage: 15/15 = 100.00%
   各推理层点亮比例:
     第1层: 8/8 = 100.00%
     第2层: 6/6 = 100.00%
     第3层: 3/3 = 100.00%
     第4层: 2/2 = 100.00%
     第5层: 1/1 = 100.00%
     第6层: 1/1 = 100.00%

🎯 计算Precision指标...
   Error Rate: 0/16 = 0.00%
   可推导节点: 16/16
   Strict Error Rate: 0/16 = 0.00%
   严格有效节点: 16/16

   详细分析:
     完美推理: 16 (100.00%)
     部分推理: 0 (0.00%)
     无效推理: 0 (0.00%)

================================================================================
📊 平均指标摘要 (基于 50 条记录)
================================================================================

🎯 Coverage指标 (召回率):
   深度Coverage: 100.00% (平均最深层级: 6.0)
   节点Coverage: 100.00% (总体: 100.00%)
     - 总点亮节点: 1447
     - 总LoG节点: 1447
   前提Coverage: 98.61%
   各推理层平均点亮比例:
     第1层: 平均100.00%, 总体589/589=100.00% (50条记录)
     第2层: 平均100.00%, 总体361/361=100.00% (50条记录)
     第3层: 平均100.00%, 总体224/224=100.00% (50条记录)
     第4层: 平均100.00%, 总体138/138=100.00% (50条记录)
     第5层: 平均100.00%, 总体85/85=100.00% (50条记录)
     第6层: 平均100.00%, 总体50/50=100.00% (50条记录)

🎯 Precision指标 (精确率):
   Error Rate: 9.24% (总体: 9.53%)
     - 可推导节点: 835
     - 总推理节点: 923
   Strict Error Rate: 21.40%
   推理质量分布:
     - 完美推理: 784 (84.94%)
     - 部分推理: 132 (14.30%)
     - 无效推理: 7 (0.76%)

📈 数据统计:
   总statements: 1888 (平均: 37.8/记录)
   前提statements: 965
   推理statements: 923 (平均: 18.5/记录)
结果已保存到: step_by_step_evaluation_2_evaluation_results.LoG_6.deepseek-reasoner.json

评估成功完成！
